{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,muZ,6DCAA,oR,6DCAA,25D,6DCAA,igC,6DCAA,upE,6DCAA,81B,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,8uB,6DCAA,soH,6DCAA,w9E,6DCAA,k6B,2DCAA,o2B,6DCAA,6vK,6DCAA,22jB,6DCAA,+rB,6DCAA,6gB,6DCAA,0sC,6DCAA,m7lB,6DCAA,4mG,4DCAA,qjC,6DCAA,wkC,6DCAA,kmB,6DCAA,8jI,6DCAA,ooE,6DCAA,k7B,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,s9E,6DCAA,0pE,4DCAA,w9B,6DCAA,ue,6DCAA,4a,6DCAA,o2E,6DCAA,we,6DCAA,quC,6DCAA,o7pD,6DCAA,yyI,6DCAA,uS,6DCAA,qpO,6DCAA,k6C,4DCAA,6hD,6DCAA,8H,6DCAA,orO,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,24B,6DCAA,ijM,4DCAA,2+B,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,28E,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,wkE,6DCAA,6e,6DCAA,0J,6DCAA,8yF,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,0yG,6DCAA,ghE,6DCAA,2hB,6DCAA,8H,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,8U,6DCAA,iR,6DCAA,ujI,6DCAA,6xO,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,o/V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,07R,6DCAA,q4F,6DCAA,qoG,6DCAA,0tK,6DCAA,+wD,6DCAA,qxE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,qkB,6DCAA,8iB,6DCAA,q1I,6DCAA,0jO,4DCAA,+sF,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,i9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,kT,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,gsD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,slB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,g7B,6DCAA,ggC,6DCAA,ogC,6DCAA,88B,6DCAA,g3B,6DCAA,soC,6DCAA,0pC,6DCAA,k8B,6DCAA,qpC,6DCAA,qnD,6DCAA,m9B,4DCAA,s6B,6DCAA,koC,6DCAA,ioC,6DCAA,o3B,6DCAA,2iB,6DCAA,opB,6DCAA,yjB,6DCAA,gvC,6DCAA,o3B,6DCAA,klB,6DCAA,k+B,6DCAA,6lC,6DCAA,01B,6DCAA,2uB,6DCAA,gqB,6DCAA,q/B,4DCAA,ktB,6DCAA,0pB,6DCAA,8/B,6DCAA,84B,6DCAA,ovB,6DCAA,woB,6DCAA,iqB,4DCAA,ynB,6DCAA,4sB,4DCAA,wwC,6DCAA,22B,6DCAA,gwB,6DCAA,ixB,6DCAA,knB,6DCAA,wiC,6DCAA,igC,6DCAA,kiD,6DCAA,+xB,6DCAA,64E,6DCAA,0hC,6DCAA,+3B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,+8B,6DCAA,kqB,4DCAA,krD,6DCAA,s2B,6DCAA,8uB,6DCAA,+oC,6DCAA,y5B,6DCAA,i2B,6DCAA,mgC,6DCAA,k4B,4DCAA,i4C,4DCAA,8rB,6DCAA,svB,6DCAA,ogB,6DCAA,yoB,6DCAA,61C,6DCAA,6hB,6DCAA,qvB,6DCAA,07B,6DCAA,gvB,6DCAA,i8B,4DCAA,k6B,6DCAA,2f,6DCAA,+4B,6DCAA,ikC,6DCAA,qpB,6DCAA,wuB,6DCAA,gmB,6DCA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,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IACtkF,mBAAsB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAA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EC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACpqD,QAAW,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,IAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAA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MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,KACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,oBAAqB,CACpB,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,KACA,MAED,4BAA6B,CAC5B,OAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,OAGF,SAAS4wH,EAAoB9kG,GAC5B,IAAI2kG,EAAoBC,EAAE1wH,EAAK8rB,GAC9B,OAAOtoC,QAAQ5N,UAAUuT,MAAK,KAC7B,IAAI1I,EAAI,IAAIquI,MAAM,uBAAyBhjG,EAAM,KAEjD,MADArrC,EAAE1S,KAAO,mBACH0S,CAAC,IAIT,IAAIsf,EAAMC,EAAI8rB,GAAM10C,EAAK2oB,EAAI,GAC7B,OAAOvc,QAAQ3T,IAAIkwB,EAAInvB,MAAM,GAAGovB,IAAIywH,EAAoBhwI,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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/settings_left.html","webpack://xabber.web/./templates/accounts/settings_right.html","webpack://xabber.web/./templates/accounts/token_item.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/api_service/add_xabber_account.html","webpack://xabber.web/./templates/api_service/linked_email_item.html","webpack://xabber.web/./templates/api_service/sync_settings.html","webpack://xabber.web/./templates/api_service/sync_settings_account_item.html","webpack://xabber.web/./templates/api_service/xabber_account.html","webpack://xabber.web/./templates/api_service/xabber_login.html","webpack://xabber.web/./templates/api_service/xabber_login_by_email.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_devices_item.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/fingerprints_devices.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_content_placeholder.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/chats/unread_marker.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/device-cellphone.html","webpack://xabber.web/./templates/svg/device-console.html","webpack://xabber.web/./templates/svg/device-desktop.html","webpack://xabber.web/./templates/svg/device-tablet.html","webpack://xabber.web/./templates/svg/device-web.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/information.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/./templates/ sync ^\\.\\/.*\\.json$","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"client one-line\\\">{{client}}</div>\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n    </div>\\n    <div class=\\\"last-auth text-color-700\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    <div class=\\\"device-encryption one-line {[if (is_omemo) {]} active is-own text-color-green-500{[}]}\\\">\\n        <i class=\\\"mdi mdi-lock mdi-14px{[if (!is_omemo) {]} hidden{[}]}\\\"></i>\\n        <span>\\n            {[if (is_omemo) {]}\\n                {[print(xabber.getString(\\\"settings_account__omemo_enabled\\\"))]}\\n            {[} else {]}\\n                {[print(xabber.getString(\\\"settings_account__omemo_not_enabled\\\"))]}\\n            {[}]}\\n        </span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"move-account-to-this droppable\\\"></div>\\n<div class=\\\"account-info-wrap\\\">\\n    <i class=\\\"drag-item drag-handle mdi mdi-28px mdi-drag-vertical\\\"></i>\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid text-color-700 one-line\\\"></div>\\n        </div>\\n        <div class=\\\"conn-status one-line\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"sync-marker-wrap hidden\\\">\\n    <i class=\\\"sync-marker mdi mdi-20px mdi-cloud-check\\\"></i>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n        <div class=\\\"storage-usages\\\">\\n            <div class=\\\"storage-category-usage storage-usage-images\\\">\\n                {[print(xabber.getString(\\\"images\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-videos\\\">\\n                {[print(xabber.getString(\\\"videos\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-voices\\\">\\n                {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-files\\\">\\n                {[print(xabber.getString(\\\"files\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <ul class=\\\"tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"file\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        <li data-value=\\\"avatars\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"list-managment-wrap\\\">\\n        <button class=\\\"btn-sorting dropdown-button btn-flat btn-main text-color-700 hover-ground-color-300\\\" data-activates=\\\"storage-file-sorting\\\">\\n            {[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}\\n        </button>\\n    </div>\\n    <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n        </div>\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n        </div>\\n    </ul>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'; this.onerror = null;\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{file.created_at}}</span>\\n        </div>\\n        {[if (duration && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"    <div class=\\\"left-column ground-color-900 noselect\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                        <img/>\\n                        <input type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name\\\"></div>\\n            </div>\\n            <div class=\\\"status-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">\\n                <i class=\\\"mdi mdi-24px mdi-settings\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_connection_settings\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"vcard_edit\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-box\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"color-scheme\\\">\\n                <i class=\\\"mdi mdi-24px mdi-palette\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"color\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                <i class=\\\"mdi mdi-24px mdi-chart-arc\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"blocklist-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"blocked_contacts\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"groups-info\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"server-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-information\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_server_info\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab omemo-info\\\" data-block-name=\\\"tokens\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_devices_and_encryption\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap ground-color-900\\\">\\n            <div class=\\\"settings-tab delete-account\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <div class=\\\"buttons-wrap\\\">\\n            <button class=\\\"btn-block btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"settings_account__blocklist__button_block\\\"))]}</button>\\n            <button class=\\\"btn-deselect-blocked btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n        </div>\\n        <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-manage-devices\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-purge-keys\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files-variants\\\" data-activates=\\\"storage-delete-files\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_delete_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <ul id=\\\"storage-delete-files\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_15_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"30\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_30_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"60\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_60_days\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_connection_settings\\\"))]}' class=\\\"settings-block-wrap connection\\\">\\n                <div class=\\\"connection-wrap\\\">\\n                    <div class=\\\"readonly-setting\\\">\\n                        <i class=\\\"details-icon mdi mdi-24px mdi-account\\\"></i>\\n                        <div class=\\\"setting-wrap account-name\\\">\\n                            <div class=\\\"value one-line\\\"></div>\\n                            <div class=\\\"label conn-status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"change-password-container\\\">\\n                        <div class=\\\"change-password-fields\\\">\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <button class=\\\"btn-change btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n                            <button class=\\\"btn-change-password btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</button>\\n                            <button class=\\\"btn-reconnect btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"settings_account__button_reconnect\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap vcard\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_server_info_description\\\"))]}' class=\\\"settings-block-wrap server-info\\\">\\n                <div class=\\\"capabilities-wrap\\\">\\n                    <div class=\\\"capabilities\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"blocked_contacts\\\"))]}' class=\\\"settings-block-wrap blocklist-info\\\">\\n                <div class=\\\"blocklist-wrap\\\">\\n                    <div class=\\\"blocked-items\\\">\\n                        <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                        <div class=\\\"blocklist-tabs-wrap\\\">\\n                            <ul class=\\\"tabs\\\">\\n                                <li class=\\\"blocked-item contacts-item hidden\\\" data-tab-name=\\\"blocked-contacts-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__contacts\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item domains-item hidden\\\" data-tab-name=\\\"blocked-domains-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__domains\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item invitations-item hidden\\\" data-tab-name=\\\"blocked-invitations-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__invitations\\\"))]}</a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-contacts-wrap hidden\\\" data-tab-name=\\\"contacts-item\\\">\\n                            <div class=\\\"blocked-contacts blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-domains-wrap hidden\\\" data-tab-name=\\\"domains-item\\\">\\n                            <div class=\\\"blocked-domains blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-invitations-wrap hidden\\\" data-tab-name=\\\"invitations-item\\\">\\n                            <div class=\\\"blocked-invitations blocked-list\\\"/>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap groups-info\\\">\\n                <div class=\\\"groups-wrap\\\">\\n                    <div class=\\\"groups\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_devices_and_encryption\\\"))]}' class=\\\"settings-block-wrap tokens\\\">\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <!--<div class=\\\"setting-wrap manage-devices\\\">-->\\n                            <!--<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</button>-->\\n                        <!--</div>-->\\n                        <!--<div class=\\\"setting-wrap purge-keys\\\">-->\\n                            <!--<button class=\\\"btn-purge-keys btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</button>-->\\n                        <!--</div>-->\\n                    </div>\\n                </div>\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <p class=\\\"btn-revoke-all-tokens hover-text-color-500 text-color-700\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints hidden\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"client one-line\\\">{{client}}</div>\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n    </div>\\n    <div class=\\\"last-auth\\\">{[ if (resource_obj) {]}{[print(xabber.getString(\\\"account_state_connected\\\"))]}{[} else {]}{{last_auth}}{[}]}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    <div class=\\\"device-encryption one-line\\\">\\n        <i class=\\\"mdi mdi-lock mdi-14px hidden\\\"></i>\\n        <span>\\n            {[print(xabber.getString(\\\"settings_account__omemo_not_enabled\\\"))]}\\n        </span>\\n    </div>\\n    <i class=\\\"btn-revoke-token mdi mdi-24px mdi-close\\\"></i>\\n</div>\";","export default \"<div class=\\\"border ground-color-500\\\"/>\\n<div class=\\\"account-item-avatar-wrap\\\">\\n    <div class=\\\"circle-avatar-wrap\\\">\\n        <div class=\\\"dropdown-button circle-avatar border-color noselect\\\"/>\\n    </div>\\n</div>\\n<div class=\\\"status\\\"/>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"show-account-settings\\\">\\n        <i class=\\\"mdi mdi-settings mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal main-modal add-xabber-account-modal\\\">\\n    <div class=\\\"modal-content-wrap\\\">\\n        <div class=\\\"modal-header\\\">\\n            <span>{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</span>\\n        </div>\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"row account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            {[if (constants.USE_SOCIAL_AUTH){]}\\n            <div class=\\\"row social-auth-wrap\\\">\\n                <div class=\\\"social-header\\\">\\n                    <div class=\\\"divider\\\"></div>\\n                    <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"social_sign_in\\\"))]}</div>\\n                </div>\\n                <div class=\\\"social-buttons\\\">\\n                    <div class=\\\"btn-social google-color\\\" data-provider=\\\"google\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-google-plus\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social facebook-color\\\" data-provider=\\\"facebook\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-facebook\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social twitter-color\\\" data-provider=\\\"twitter\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social xabber-color\\\" data-provider=\\\"email\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-at\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n            {[}]}\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-footer\\\">\\n    <div class=\\\"registration-footer\\\">\\n        <div class=\\\"registration-tip-wrap\\\">\\n            <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__text_no_account\\\"))]}</span>\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n        </div>\\n    </div>\\n    <div class=\\\"footer-text clearfix\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n</div>\\n\";","export default \"<div data-id=\\\"{{email_id}}\\\" data-email=\\\"{{email}}\\\" class=\\\"{[if (!verified){]}not-linked {[}]}social-linked-item-wrap email-linked\\\"><div style=\\\"background-color:{{color}}\\\" class=\\\"social-icon\\\">{[if (verified){]}<svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#FFF\\\" d=\\\"M21,13.34C20.37,13.12 19.7,13 19,13A6,6 0 0,0 13,19C13,19.34 13.03,19.67 13.08,20H3A2,2 0 0,1 1,18V6C1,4.89 1.89,4 3,4H19A2,2 0 0,1 21,6V13.34M23.5,17L18.5,22L15,18.5L16.5,17L18.5,19L22,15.5L23.5,17M3,6V8L11,13L19,8V6L11,11L3,6Z\\\" />\\n</svg>{[} else {]}<i class=\\\"mdi mdi-24px mdi-email\\\"></i>{[}]}</div><div class=\\\"synced-info\\\"><div class=\\\"name one-line\\\">{{email}}</div><div class=\\\"verified-status one-line\\\">{[if (verified){print(xabber.getString(\\\"title_verified_email\\\"));}else{print(xabber.getString(\\\"title_unverified_email\\\"));}]}</div></div>{[if (!verified){]}<div class=\\\"btn-main btn-flat btn-verify-email\\\">{[print(xabber.getString(\\\"button_confirm\\\"))]}</div>{[}]}<div class=\\\"btn-main btn-flat btn-link btn-unlink\\\">{[print(xabber.getString(\\\"action_disconnect\\\"))]}</div></div>\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"xabber_account__dialog_sync__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"setting sync-all-wrap field-wrap\\\">\\n                <div class=\\\"field clickable-field switch normal\\\">\\n                    <span class=\\\"field-name\\\">{[print(xabber.getString(\\\"sync_all\\\"))]}</span>\\n                    <label class=\\\"field-value\\\">\\n                       <input type=\\\"checkbox\\\" class=\\\"sync-all\\\">\\n                       <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"accounts-wrap\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-sync\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <i class=\\\"sync-icon mdi mdi-24px\\\" data-mdiclass=\\\"\\\"></i>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name text-color-grey-900 one-line\\\">{{jid}}</div>\\n            <div class=\\\"sync-tip text-color-grey-500 one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-field checkbox-field sync-one-wrap no-padding\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in sync-one\\\" id=\\\"{{view.cid}}_sync_{{jid}}\\\"/>\\n        <label for=\\\"{{view.cid}}_sync_{{jid}}\\\"></label>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"xabber-account-content-wrap\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name text-color-red-700 one-line\\\"></div>\\n            </div>\\n            <div class=\\\"last-sync-info\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"sync-wrap\\\">\\n        <div class=\\\"btn-sync\\\">\\n            <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-flat btn-main btn-login\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"account-action-more\\\">\\n            <i class=\\\"mdi mdi-20px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"account-action-more\\\" class=\\\"xabber-account-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-sync btn-sync-settings\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-password\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-logout\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n<div class=\\\"xabber-account-tip\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n<div class=\\\"linked-social-accounts-and-emails\\\">\\n    <div class=\\\"social-linked-header\\\"><div class=\\\"chevron-icon\\\"><i class=\\\"arrow mdi mdi-20px\\\"></i></div><div class=\\\"social-linked-header-text\\\">{[print(xabber.getString(\\\"title_linked_accounts\\\"))]}</div></div>\\n    <div class=\\\"social-linked-wrap\\\">\\n        <div id='google' class=\\\"not-linked social-account social-linked-item-wrap google-linked\\\"><div class=\\\"google-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-google-plus\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='facebook' class=\\\"not-linked social-account social-linked-item-wrap facebook-linked\\\"><div class=\\\"facebook-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-facebook\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='twitter' class=\\\"not-linked social-account social-linked-item-wrap twitter-linked\\\"><div class=\\\"twitter-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-twitter\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='email' class=\\\"not-linked social-linked-item-wrap\\\"><div class=\\\"email-color social-icon\\\"><svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path fill=\\\"#FFF\\\" d=\\\"M3,4C1.89,4 1,4.89 1,6V18A2,2 0 0,0 3,20H14.09C14.03,19.67 14,19.34 14,19A6,6 0 0,1 20,13C20.34,13 20.67,13.03 21,13.09V6C21,4.89 20.1,4 19,4H3M3,6L11,11L19,6V8L11,13L3,8V6M19,15V18H16V20H19V23H21V20H24V18H21V15H19Z\\\" />\\n        </svg></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_add_email\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n    </div>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"login-panel\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n    </div>\\n    <div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</div>\\n        <div class=\\\"input-field email-name\\\">\\n            <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n            <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field\\\">\\n            <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n            <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field buttons-wrap\\\">\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/forgot-password/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-forgot-password\\\">{[print(xabber.getString(\\\"forgot_pass\\\"))]}</a>\\n            <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        </div>\\n        <div class=\\\"social-auth-wrap\\\"><div class=\\\"social-header\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"xabber_login__new_account\\\"))]}</div>\\n        </div></div>\\n        <div class=\\\"registration-footer\\\">\\n            <div class=\\\"registration-tip-wrap\\\">\\n                <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"xabber_account__login__text_no_xmpp_acc\\\"))]}</span>\\n                <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/?source=Xabber Web\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n            </div>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_email\\\"))]}</div>\\n    <div class=\\\"input-field email-name\\\">\\n        <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n        <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n        <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"login-panel-footer buttons-wrap\\\"><button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button><button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"fingerprint-content\\\">\\n    {[if (svg_icon){]}\\n        <div class=\\\"fingerprint-device-icon\\\">\\n            <svg class=\\\"mdi mdi-72px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        </div>\\n    {[}]}\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"fingerprint-label\\\">\\n            <div class=\\\"value\\\">{{label}}</div>\\n        </div>\\n    </div>\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"device-id\\\">\\n            <div class=\\\"value\\\">{{id}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint device-fingerprints-part\\\">\\n            <div class=\\\"label\\\">\\n                {[if (!edit_setting) {]}\\n                    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__other_fingerprint_label\\\"))]}\\n                {[} else {]}\\n                <span class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</span> {[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}\\n                {[}]}:</div>\\n            <div class=\\\"value\\\">{{fingerprint}}</div>\\n        </div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n</div>\\n<div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n    {[if (trust !== null && !error) {]}\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n        <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n            <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_verify_device`))]}</div>\\n        </div>\\n    </div>\\n    <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content bootstrap-dropdown noselect fingerprint-dropdown\\\">\\n        <div data-value=\\\"ignore\\\" class=\\\"property-variant btn-ignore\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n        <div data-value=\\\"trust\\\" class=\\\"property-variant btn-trust\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__device_verification_label\\\"))]}\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n    <div class=\\\"other-device-content\\\">\\n\\n    </div>\\n    <div class=\\\"this-device-content\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"fingerprints-help-text\\\">\\n        {[print(xabber.getString(\\\"omemo__dialog_fingerprints__bottom_help_text\\\"))]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"/>\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"/>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"/>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <div class=\\\"name one-line\\\"/>\\n    </div>\\n</div>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"/>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"/>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"/>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"/>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting idling field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"toolbar-top\\\">\\n    <div class=\\\"toolbar-item toolbar-logo\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-middle\\\">\\n    <div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n        <span class=\\\"all-msg-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item jingle-calls\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__jingle_calls\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"bell\\\"></svg>\\n        <span class=\\\"mentions-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n    </div>\\n\\n    <div class=\\\"toolbar-item geolocation-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__geolocation_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-compass\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item saved-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__saved_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-bookmark\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n    <div class=\\\"toolbar-item settings\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n    </div>\\n\\n    <div class=\\\"add-something-wrap\\\">\\n        <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n            <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n        </div>\\n\\n        <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n            <div class=\\\"add-variant contact\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant public-groupchat\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant incognito-groupchat\\\">\\n                <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n                </svg>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant account\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    <div class=\\\"accounts-wrap\\\">\\n        <div class=\\\"accounts\\\">\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                    <div class=\\\"uploading-emoticons\\\">\\n                    <div class=\\\"preloader-wrapper preloader-20px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"/>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-unread hidden mdi-chevron-down\\\"><div class=\\\"back-to-unread-counter\\\"></div></i>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-body-content-placeholder-text no-select\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"/>\\n<div class=\\\"contact-status hide-offline\\\"/>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"/>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <!--<li class=\\\"btn-contact-details\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>-->\\n            <!--</li>-->\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-export-history\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"export_chat\\\"))]}</span>\\n            </li>-->\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-delete-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-block-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_block\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-unblock-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_unblock_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"contact-list forward-chats-list\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590 || image_height && image_height < 80) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        {[ if (not_encrypted) { ]}\\n            <div class=\\\"not-decrypted-icon mdi-14px\\\" title=\\\"{[print(xabber.getString('omemo__not_decrypted_message_title'))]}\\\" data-activates=\\\"not-decrypted-tooltip-{{msgid}}\\\">\\n                <svg class=\\\"mdi mdi-14px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n            </div>\\n            <div id=\\\"not-decrypted-tooltip-{{msgid}}\\\" class=\\\"dropdown-content not-decrypted-tooltip noselect\\\">\\n                <span class=\\\"not-decrypted-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_decrypted_message_tooltip\\\"))]}</span>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"/>\\n</div>\";","export default \"<div class=\\\"unread-marker\\\">\\n    <div class=\\\"unread-marker-content no-select\\\">\\n        {{text}}\\n    </div>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <div class=\\\"audio-control-time\\\">\\n        <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n        <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    </div>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"status hide-offline\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"btn-more  dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-auth-request\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_request_authorization\\\"))]}</span></li>\\n            <li class=\\\"btn-add\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</span></li>\\n            <li class=\\\"btn-delete\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"remove_contact\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-phone btn-voice-call\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper btn-block\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"left-column\\\">\\n            <div class=\\\"block-wrap subscription-block-wrap\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_subscription_settings\\\"))]}</span>\\n                </div>\\n                <div class=\\\"subscription-info-wrap\\\">\\n                    <div class=\\\"incoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"incoming-subscription\\\"/>\\n                            <label for=\\\"incoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"outcoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"outcoming-subscription\\\"/>\\n                            <label for=\\\"outcoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap vcard\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"right-column\\\">\\n            <div class=\\\"block-wrap resources-block-wrap hidden\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_info_connected_clients_header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap fixed-scroll hidden\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more-fixed\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more-fixed\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"group-edit-preloader\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap fixed-scroll hidden\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more-fixed\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more-fixed\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs not-edit\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <ul class=\\\"tabs participant-tabs\\\">\\n            <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n            <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n            <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n            <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        </ul>\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"/></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files && !is_encrypted))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.500000, 12.000000) scale(-1, 1) translate(-11.500000, -12.000000) \\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-cellphone\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,19 L7,19 L7,5 L17,5 M17,1 L7,1 C5.89,1 5,1.89 5,3 L5,21 C5,22.1045695 5.8954305,23 7,23 L17,23 C18.1045695,23 19,22.1045695 19,21 L19,3 C19,1.8954305 18.1045695,1 17,1 Z\\\" id=\\\"mdi:cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-console\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M18,12 L18,14 L13,14 L13,12 L18,12 Z M8.4,6 L11.7,9.3 C12.09,9.69 12.09,10.33 11.7,10.72 L8.42,14 L5.59,14 L9.58,10 L5.57,6 L8.4,6 Z\\\" id=\\\"xabber.monitor-console\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-desktop\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,16 L3,16 L3,4 L21,4 M21,2 L3,2 C1.89,2 1,2.89 1,4 L1,16 C1,17.1045695 1.8954305,18 3,18 L10,18 L10,20 L8,20 L8,22 L16,22 L16,20 L14,20 L14,18 L21,18 C22.1045695,18 23,17.1045695 23,16 L23,4 C23,2.8954305 22.1045695,2 21,2 Z\\\" id=\\\"mdi:monitor\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-tablet\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,18 L5,18 L5,6 L19,6 M21,4 L3,4 C1.89,4 1,4.89 1,6 L1,18 C1,19.1045695 1.8954305,20 3,20 L21,20 C22.1045695,20 23,19.1045695 23,18 L23,6 C23,4.8954305 22.1045695,4 21,4 Z\\\" id=\\\"mdi:tablet\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M9.59,6.41 L10.5,7.5 L8,10 L10.5,12.5 L9.59,13.5 L6,10 L9.59,6.41 Z M14.5,6.50152764 L18,10 L14.5,13.5 L13.5,12.5 L16,10 L13.5,7.5 L14.5,6.50152764 Z\\\" id=\\\"xabber.monitor-tag\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L11,9 L11,7 L13,7 M13,17 L11,17 L11,11 L13,11 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 Z\\\" id=\\\"mdi:information\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <defs>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </defs>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <use xlink:href=\\\"#path-1\\\"></use>\\n        </mask>\\n        <use id=\\\"mdi:search\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" xlink:href=\\\"#path-1\\\"></use>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 17.765357,5.9248618 c 0.009,0.1518861 -0.206601,0.1119764 -0.206601,0.2652514 0,4.4595198 -5.17314,11.2012628 -10.3933633,12.5152538 v 0.136731 C 14.101125,18.204712 21.825325,11.114777 22,4.2839629 l -4.233831,1.6413619 z\\\"\\n     id=\\\"path4-5\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 15.907561,6.3610856 c 0.009,0.1518861 0.014,0.3045804 0.014,0.4578554 0,4.459522 -3.55133,10.468554 -8.7715528,11.783009 v 0.189367 C 13.982554,18.349079 19.389945,11.500913 19.389945,6.1592263 c 0,-0.2747361 -0.01446,-0.5470438 -0.04292,-0.8162264 l -3.439122,1.017508 z\\\"\\n     id=\\\"path6\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 6.2332547,5.9248618 c -0.00886,0.1518861 0.2067174,0.1119764 0.2067174,0.2652514 0,4.4595198 5.3857609,11.2631498 10.6063279,12.5777208 V 18.95743 C 10.11103,18.318886 2.1746761,11.11443 2,4.2836157 l 4.2337177,1.6413618 z\\\"\\n     id=\\\"path8\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"M 8.3307389,6.473525 C 8.3219828,6.6254111 8.31686,6.7777591 8.31686,6.9312646 c 0,4.4595214 3.551213,10.4685544 8.771549,11.7830104 v 0.189596 C 10.258286,18.581129 4.8484667,11.613351 4.8484667,6.2717814 c 0,-0.2747361 0.014805,-0.5470427 0.042915,-0.8162284 l 3.4391228,1.0177415 z\\\"\\n     id=\\\"path10\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 4.8583007,5.3920472 0.8811221,0.3148763 c -0.00473,0.111283 -0.00765,0.2607395 -0.00765,0.3730642 0,4.7681513 4.3114542,11.3600893 10.0954942,12.3914783 0.375377,0.125857 0.871982,0.240263 1.264595,0.339052 V 19 C 9.5433961,18.356828 4.2400023,10.686651 4.857725,5.3915852 z\\\"\\n     id=\\\"path12\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 19.390639,5.2968432 -0.906108,0.3036565 c 0.0047,0.1113977 0.02208,0.2548387 0.02208,0.3670476 0,4.7681497 -4.311569,11.3602047 -10.0957226,12.3914777 -0.3751445,0.125972 -0.8719856,0.240267 -1.2643666,0.33917 v 0.189596 C 15.052467,17.886018 20.00767,10.591448 19.389946,5.2967275 z\\\"\\n     id=\\\"path14\\\" />\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"vcard_edit__header\\\"))]}</span>\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-vcard-back btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_cancel\\\"))]}</button>\\n                <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content details-panel\\\">\\n\\n                <div class=\\\"settings-block-wrap vcard\\\">\\n                    <div class=\\\"vcard-edit-wrap\\\">\\n                        <div class=\\\"info-wrap personal-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-card-details\\\"></i>\\n                            <div class=\\\"input-field first-name\\\">\\n                                <input id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field middle-name\\\">\\n                                <input id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field last-name\\\">\\n                                <input id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field fullname\\\">\\n                                <input id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap nickname-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                            <div class=\\\"input-field nickname\\\">\\n                                <input id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap birthday-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-cake-variant\\\"></i>\\n                            <div class=\\\"input-field birthday\\\">\\n                                <input id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap job-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-briefcase\\\"></i>\\n                            <div class=\\\"input-field org-name\\\">\\n                                <input id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field job-title\\\">\\n                                <input id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n                            </div>\\n                            <div class=\\\"input-field org-unit\\\">\\n                                <input id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n                            </div>\\n                            <div class=\\\"input-field role\\\">\\n                                <input id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap site-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                            <div class=\\\"input-field url\\\">\\n                                <input id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap description-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n                            <div class=\\\"input-field description\\\">\\n                                <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea\\\" name=\\\"description\\\"></textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap phone-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n                            <div class=\\\"input-field phone-work\\\">\\n                                <input id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-home\\\">\\n                                <input id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-mobile\\\">\\n                                <input id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap email-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n                            <div class=\\\"input-field email-work\\\">\\n                                <input id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field email-home\\\">\\n                                <input id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap address-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n                            <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","var constants = {\n\n    ASSETS_URL_PREFIX: './',\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_DEFAULT_GREY: \"assets/images/favicon-grey.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n    DOWNTIME_RECONNECTION_TIMEOUT: 15,\n    PING_SENDING_INTERVAL: 10,\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 900000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            url: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n    SOUNDS: {\n        beep_up: 'assets/sounds/beep_up.ogg',\n        tiny_noize: 'assets/sounds/tiny_noize.ogg',\n        retro_game: 'assets/sounds/retro_game.ogg',\n        pixel_beep: 'assets/sounds/pixel_beep.ogg',\n        beep_positive: 'assets/sounds/beep_positive.ogg',\n        good_chime: 'assets/sounds/good_chime.ogg',\n        cellular_click: 'assets/sounds/cellular_click.ogg',\n        bleep: 'assets/sounds/bleep.ogg',\n        mono_u: 'assets/sounds/mono_u.ogg',\n        plop: 'assets/sounds/plop.ogg',\n        ether: 'assets/sounds/ether.ogg',\n        pop: 'assets/sounds/pop.ogg',\n        computer_chime: 'assets/sounds/computer_chime.ogg',\n        beep_a: 'assets/sounds/beep_a.ogg',\n        call: 'assets/sounds/marching-band-dave-girtsman.mp3',\n        connecting: 'assets/sounds/alien-bomb-timer.wav',\n        busy: 'assets/sounds/phone_busy.wav',\n        attention: 'assets/sounds/attention.wav'\n    },\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, ',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, 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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"\": \"Montenegrin (Latin)\", // ????????\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    API_SERVICE_URL: 'https://api.xabber.com/api/v2',\n    USE_SOCIAL_AUTH: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    BACKGROUND_IMAGES_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-images.xml',\n    BACKGROUND_PATTERNS_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-patterns.xml',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE'\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport Recorder from 'opus-recorder';\nimport encoderPath from 'opus-recorder/dist/encoderWorker.min.js';\nimport VanillaQR from \"VanillaQR\";\nimport idleJs from \"idle-js\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    idleJs: idleJs,\n    opusRecorder: Recorder,\n    opusRecorderEncoderPath: encoderPath,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    VanillaQR: VanillaQR,\n    magnificPopup: magnificPopup,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = require('~/templates/'+path.join('/')+'.json'),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = tpl;\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprints_devices');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.fingerprint_devices_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('api_service.xabber_login');\n    addTemplate('api_service.xabber_login_by_email');\n    addTemplate('api_service.add_xabber_account');\n    addTemplate('api_service.xabber_account');\n    addTemplate('api_service.linked_email_item');\n    addTemplate('api_service.sync_settings');\n    addTemplate('api_service.sync_settings_account_item');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.settings_left');\n    addTemplate('accounts.settings_right');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item');\n    addTemplate('accounts.current_token_item');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_edit');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_placeholder');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.unread_marker');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.device-cellphone');\n    addSvgTemplate('svg.device-console');\n    addSvgTemplate('svg.device-desktop');\n    addSvgTemplate('svg.device-tablet');\n    addSvgTemplate('svg.device-web');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.information');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","import _ from \"underscore\";\nimport $ from \"jquery\";\nimport constants from \"xabber-constants\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    var sprite = options.sprite,\n        tag_name = sprite ? (options.tag_name || 'span') : 'img',\n        emoji_size = options.emoji_size || 20,\n        href = options.href ? ` href=\"#${options.href}\" ` :\"\",\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        let data = emoji_data[emoji],\n            emoji_code = data && Number(data.code).toString(16);\n        if (data) {\n            (emoji_code.length < 4) && (emoji_code = \"0\".repeat(4 - emoji_code.length) + emoji_code);\n            let img_src = tag_name === 'img' ? (sprite ? ' src=\"'+ constants.ASSETS_URL_PREFIX + 'assets/images/emoji/blank.gif\"' : '  src=\"' + constants.ASSETS_URL_PREFIX + 'assets/images/emoji/svg32/emoji_u' + emoji_code + '.svg\"') : '';\n            return '<' + tag_name + img_src + href + title + ' class=\"emoji emoji-w' + emoji_size +\n                (sprite ? (' sprite-' + sprite + '\" style=\"background-position: ' + '-' + (emoji_size * data.x) + 'px ' + '-' + (emoji_size * data.y) + 'px;\" ') : '\" ') +\n                'alt=\"' + emoji + '\" ' +\n                'data-emoji=\"' + emoji + '\"/>';\n        }\n        else\n            return emoji;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.28) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (max_size){\n        if (size.width > size.height) {\n            if (size.width > max_size) {\n                size.height *= max_size / size.width;\n                size.width = max_size;\n            }\n        } else {\n            if (size.height > max_size) {\n                size.width *= max_size / size.height;\n                size.height = max_size;\n            }\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml' || file.type.includes('image/gif') || (width < MAX_IMG_SIZE && height < MAX_IMG_SIZE)) {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                buttons || (buttons = {});\n                dialog_options || (dialog_options = []);\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: dialog_options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.no_dialog_options) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n            }\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options, header) {\n            return this.common(header || getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: true, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\n$.fn.isVisibleInViewport = function() {\n    let elementTop = $(this).offset().top,\n        elementBottom = elementTop + $(this).outerHeight();\n\n    let viewportTop = $(window).scrollTop(),\n        viewportBottom = viewportTop + $(window).height();\n\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n};\n\n$.fn.isVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        (eleTop >= containerTop && eleBottom <= containerBottom) ||\n        // Some part of the element is visible in the container\n        (eleTop < containerTop && containerTop < eleBottom) ||\n        (eleTop < containerBottom && containerBottom < eleBottom)\n    );\n};\n\n$.fn.isFullyVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleTop >= containerTop && eleBottom <= containerBottom\n    );\n};\n\n$.fn.isBottomVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleBottom <= containerBottom\n    );\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {}\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                        if (options.decode_uri)\n                            x = x.replace(list[i], decodeURI(list[i]));\n                        else\n                            x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    tryReadingFile: function(file) {\n        return new Promise((resolve, reject) => {\n            let r = new FileReader();\n            r.onload = (e) => {\n                resolve();\n            };\n            r.onerror = (e) => {\n                console.log(r.error);\n                reject(r.error);\n            };\n            r.readAsDataURL(file)\n        });\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils,\n    bc = new BroadcastChannel(\"xabber-web\");\n\nbc.onmessage = (event) => {\n    if (event.data === `1` && !bc.disabled_client) {\n        bc.postMessage(`2`);\n    }\n    if (event.data === `2`) {\n        bc.disabled_client = true\n    }\n};\n\nbc.postMessage(`1`);\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        client_name: 'Xabber for Web'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this.check_config = new $.Deferred();\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.extendFunction();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n\n        window.ononline = () => {\n            this.disconnectWhenConnecting();\n        };\n        // setInterval(function() {\n        //     console.log(new Date());\n        // }, 5000)\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_gray', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT_GREY).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            idling: true,\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            sound_on_call: 'call',\n            sound_on_dialtone: 'call',\n            sound_on_connection: 'connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: 'beep_a',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.cacheFavicons();\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'ASSETS_URL_PREFIX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'API_SERVICE_URL',\n                'USE_SOCIAL_AUTH',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.ASSETS_URL_PREFIX) {\n                constants.ASSETS_URL_PREFIX = config.ASSETS_URL_PREFIX;\n            }\n            if (config.BACKGROUND_IMAGES_XML_URL)\n                constants.BACKGROUND_IMAGES_XML_URL = config.BACKGROUND_IMAGES_XML_URL;\n            if (config.BACKGROUND_PATTERNS_XML_URL)\n                constants.BACKGROUND_PATTERNS_XML_URL = config.BACKGROUND_PATTERNS_XML_URL;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.DOWNTIME_RECONNECTION_TIMEOUT)\n                constants.DOWNTIME_RECONNECTION_TIMEOUT = config.DOWNTIME_RECONNECTION_TIMEOUT;\n            if (config.PING_SENDING_INTERVAL)\n                constants.PING_SENDING_INTERVAL = config.PING_SENDING_INTERVAL;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            constants.FAVICON_DEFAULT = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT;\n            constants.FAVICON_DEFAULT_GREY = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT_GREY;\n            constants.FAVICON_MESSAGE = constants.ASSETS_URL_PREFIX + constants.FAVICON_MESSAGE;\n            constants.BACKGROUND_IMAGE = constants.ASSETS_URL_PREFIX + constants.BACKGROUND_IMAGE;\n\n            constants.SOUNDS = {\n                beep_up: constants.ASSETS_URL_PREFIX + constants.SOUNDS.beep_up,\n                tiny_noize: constants.ASSETS_URL_PREFIX + constants.SOUNDS.tiny_noize,\n                retro_game: constants.ASSETS_URL_PREFIX + constants.SOUNDS.retro_game,\n                pixel_beep: constants.ASSETS_URL_PREFIX + constants.SOUNDS.pixel_beep,\n                beep_positive: constants.ASSETS_URL_PREFIX + constants.SOUNDS.beep_positive,\n                good_chime: constants.ASSETS_URL_PREFIX + constants.SOUNDS.good_chime,\n                cellular_click: constants.ASSETS_URL_PREFIX + constants.SOUNDS.cellular_click,\n                bleep: constants.ASSETS_URL_PREFIX + constants.SOUNDS.bleep,\n                mono_u: constants.ASSETS_URL_PREFIX + constants.SOUNDS.mono_u,\n                plop: constants.ASSETS_URL_PREFIX + constants.SOUNDS.plop,\n                ether: constants.ASSETS_URL_PREFIX + constants.SOUNDS.ether,\n                pop: constants.ASSETS_URL_PREFIX + constants.SOUNDS.pop,\n                computer_chime: constants.ASSETS_URL_PREFIX + constants.SOUNDS.computer_chime,\n                beep_a: constants.ASSETS_URL_PREFIX + constants.SOUNDS.beep_a,\n                call: constants.ASSETS_URL_PREFIX + constants.SOUNDS.call,\n                connecting: constants.ASSETS_URL_PREFIX + constants.SOUNDS.connecting,\n                busy: constants.ASSETS_URL_PREFIX + constants.SOUNDS.busy,\n                attention: constants.ASSETS_URL_PREFIX + constants.SOUNDS.attention,\n            };\n\n            constants.CLIENT_LOGO = constants.ASSETS_URL_PREFIX + constants.CLIENT_LOGO;\n            constants.TOOLBAR_LOGO = constants.ASSETS_URL_PREFIX + constants.TOOLBAR_LOGO;\n\n            if (utils.isMobile.any()) {\n                let ios_msg = this.getString(\"warning__client_not_support_ios_browser\", [constants.CLIENT_NAME]),\n                    android_msg = this.getString(\"warning__client_not_support_android_browser\"),\n                    any_mobile_msg = this.getString(\"warning__client_not_support_mobile\", [constants.CLIENT_NAME]),\n                    msg;\n                if (utils.isMobile.iOS()) {\n                    msg = ios_msg;\n                } else if (utils.isMobile.Android()) {\n                    msg = any_mobile_msg + android_msg;\n                } else {\n                    msg = any_mobile_msg;\n                }\n                utils.dialogs.error(msg);\n                this.check_config.resolve(false);\n                return;\n            }\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            if (bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                self._cache.save('notifications', granted);\n                self._cache.save('endpoint_key', undefined);\n                self.check_config.resolve(true);\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    updateFaviconConnected: function () {\n        let is_disconnected = false;\n        this.accounts.each((account) => {\n            if (account.get('enabled') && (!account.isConnected() || (account.session && account.session.get('auth_failed')))){\n                is_disconnected = true;\n                return;\n            }\n        });\n        this.updateAllMessageCounterOnDisconnect(is_disconnected);\n    },\n\n    disconnectWhenConnecting: function (is_fast) {\n        this.accounts.each((account) => {\n            if (account.session && account.connection && account.get('enabled') && !account.session.get('reconnecting') && !account.session.get('connected')){\n                account.activate();\n            }\n        });\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\nimport { transliterate as query_transliterate } from 'transliteration';\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight === scrollTop + offsetHeight;\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        _.each(this.children, function (view) {\n            view.hide();\n        });\n        this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        if (_.isNull(path)){\n            this.$el.addClass('hidden');\n            return;\n        } else {\n            this.$el.removeClass('hidden');\n        }\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          let query_transliterated = query_transliterate(query);\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                      || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1\n                      || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                          || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1) {\n                          let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if (!attrs || !attrs.show_placeholder) {\n            new_attrs.show_placeholder = null;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || (name === 'settings' || name ==='account_settings') || options.right_force_close)\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        new_attrs = _.extend(new_attrs, attrs);\n        let chat_item_view;\n        if (_.isUndefined(new_attrs.chat_item)){\n            chat_item_view = this.screen.get('chat_item');\n            if (chat_item_view && chat_item_view.content)\n                chat_item_view.content._prev_scrolltop = chat_item_view.content.getScrollTop() || chat_item_view.content._scrolltop;\n        }\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    template: templates.toolbar,\n\n    events: {\n        \"click .toolbar-logo\":             \"clickAllChats\",\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .saved-chats\":           \"showSavedChats\",\n        \"click .mentions\":              \"showNotifications\",\n        \"click .settings\":              \"showSettings\",\n        \"click .jingle-calls\":              \"showPlaceholder\",\n        \"click .geolocation-chats\":              \"showPlaceholder\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n    },\n\n    onUpdatedScreen: function (name) {\n        if (name === 'account_settings'){\n            this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n            this.$('.toolbar-item:not(.toolbar-logo).settings').addClass('active');\n            return;\n        }\n        if ((name === 'all-chats') &&\n            (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active') ||\n                this.$('.toolbar-item:not(.toolbar-logo).chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active'))) {\n            return;\n        }\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'search', 'jingle-calls', 'geolocation-chats', 'about'], name)) {\n            this.$('.toolbar-item:not(.toolbar-logo).'+name).addClass('active');\n        }\n    },\n\n    clickAllChats: function (ev) {\n        this.$('.all-chats').click();\n    },\n\n    showAllChats: function (ev, no_unread) {\n        let $el;\n        if (ev && ev.target)\n            $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        else\n            $el = this.$('.all-chats');\n        let is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        let options = {}\n        no_unread && (options.no_unread = no_unread);\n        xabber.body.setScreen('all-chats', options);\n        xabber.trigger('show_all_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showArchive: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showSavedChats: function (ev, no_unread) {\n        if (xabber.accounts.enabled.length === 1){\n            let saved_chat = xabber.accounts.enabled[0].chats.getSavedChat();\n            saved_chat.item_view && saved_chat.item_view.open({right_contact_save: true, clear_search: false, scroll_to_chat: true});\n            this.$('.active').removeClass('active');\n            this.$('.saved-chats').addClass('active');\n            saved_chat.once(\"change:active\", () => {\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).'+xabber.body.screen.get('name')).addClass('active');\n            });\n        } else {\n            this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n                .filter('.saved-chats').addClass('active');\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_saved_chats', no_unread);\n            xabber.trigger('update_placeholder');\n        }\n    },\n\n    showNotifications: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.mentions').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_notification_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showChatsByAccount: function (account) {\n        if (this.data.get('account_filtering') === account.get('jid'))\n            this.data.set('account_filtering', null);\n        else\n            this.data.set('account_filtering', account.get('jid'));\n        if (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active')) {\n            this.showAllChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active')) {\n            this.showArchive(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')) {\n            this.showSavedChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')) {\n            this.showNotifications(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).jingle-calls').hasClass('active') ||\n            this.$('.toolbar-item:not(.toolbar-logo).geolocation-chats').hasClass('active')){\n            this.showAllChats(null, true);\n            return;\n        }\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings');\n        xabber.trigger('update_placeholder');\n    },\n\n    showPlaceholder: function (ev) {\n        if (xabber.chats_view && xabber.chats_view.active_chat){\n            xabber.chats_view.active_chat.model.trigger('hide_chat');\n            xabber.chats_view.active_chat = null;\n        }\n        let screen_name = this.$('.toolbar-item:not(.toolbar-logo).settings').hasClass('active') ? 'all-chats' : xabber.body.screen.get('name');\n        xabber.body.setScreen(screen_name, {chat_item: null});\n        let $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        $el.addClass('active');\n        xabber.trigger('update_placeholder');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        if (c >= 100)\n            c = '99+';\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        let video = this.$el.find('.webrtc-remote-video')[0],\n            local_video = this.$el.find('.webrtc-local-video')[0],\n            buttons = this.$el.find('.buttons-panel')[0];\n        if (!video)\n            return;\n        if (video.requestFullScreen) {\n            video.requestFullScreen();\n            local_video.requestFullScreen();\n            buttons.requestFullScreen();\n        }\n        else if (video.webkitRequestFullScreen) {\n            video.webkitRequestFullScreen();\n            local_video.webkitRequestFullScreen();\n            buttons.webkitRequestFullScreen();\n        }\n        else if (video.mozRequestFullScreen) {\n            video.mozRequestFullScreen();\n            local_video.mozRequestFullScreen();\n            buttons.mozRequestFullScreen();\n        }\n        else if (video.msRequestFullScreen) {\n            video.msRequestFullScreen();\n            local_video.msRequestFullScreen();\n            buttons.msRequestFullScreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function () {\n        this.updateStatusText(xabber.getString(this.model.get('status') == 'device_busy' ? \"dialog_jingle_message__status_device_busy\" : this.model.get('status') == 'busy' ? \"dialog_jingle_message__status_busy\" : \"dialog_jingle_message__status_disconnected\"));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n\n                        let xPercent = (((this.$el.offset().left - this.pos1)/window.innerWidth) * 100),\n                            yPercent = (((this.$el.offset().top - this.pos2)/window.innerHeight) * 100);\n\n\n                        // set the element's new position:\n                        this.$el.css('left', xPercent + '%');\n                        this.$el.css('top', yPercent + '%');\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.video_file && options.player.video_file.key) {\n            options.player.key = options.player.video_file.key;\n            options.player.video_file.type && (options.player.type = options.player.video_file.type);\n        }\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src && !options.player.video_decrypted){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                options.player.video_decrypted = true;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsView = xabber.BasicView.extend({\n    className: 'settings-panel',\n    template: templates.settings,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.idling label\": \"setIdling\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        \"click .setting.private-notifications label\": \"setPrivateNotifications\",\n        \"click .setting.group-notifications label\": \"setGroupNotifications\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .setting.call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .current-main-color-wrap\": \"openMainColorPicker\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n    },\n\n    render: function () {\n        let settings = this.model.attributes,\n            lang = settings.language;\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private});\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group});\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.idling input[type=checkbox]')\n            .prop({checked: settings.idling});\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        return this;\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n        this.$('.toolbar-main-color-setting .color-name').text(xabber.getString(`account_color_name_${this.model.get('main_color').replace(/-/g, \"_\")}`).replace(/-/g, \" \"));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        this.$('#blur')[0].value = blur_switched ? appearance.blur : constants.BLUR_VALUE;\n\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        this.$('#vignetting')[0].value = vignetting_switched ? appearance.vignetting : constants.VIGNETTING_VALUE;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.data('block-name'));\n        this.$('.btn-add-account').hideIf($tab.data('block-name') != 'xmpp-accounts')\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        this.scrollToChild($elem);\n    },\n\n    setIdling: function (ev) {\n        let value = !this.model.get('idling');\n        this.model.save('idling', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.idling').find('input').prop('checked', value);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications'),\n            $target = $(ev.target);\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    $target.closest('.setting.notifications').find('input').prop('checked', value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                $target.closest('.setting.notifications').find('input').prop('checked', value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.group-notifications').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    openMainColorPicker: function () {\n        if (!this.mainColorPicker)\n            this.mainColorPicker = new xabber.mainColorPicker({model: this.model});\n        this.mainColorPicker.render();\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.VIGNETTING_VALUE : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#vignetting')[0].value = constants.VIGNETTING_VALUE;\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.BLUR_VALUE : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#blur')[0].value = constants.BLUR_VALUE;\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value;\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"), xabber.getString(\"settings__dialog_change_language__confirm\"), null, { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_full_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_no_translation_platform\",\n                        [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__section_interface_language__text_description_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`, constants.EMAIL_FOR_JOIN_TRANSLATION]);\n            }\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    }\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        let request = {\n            type: \"GET\",\n            contentType: \"application/xml\",\n            dataType: 'xml',\n            success: (data) => {\n                if (this.type == 'repeating-pattern') {\n                    this.onGetPatternsCallback(data);\n                } else {\n                    this.onGetImagesCallback(data);\n                }\n                callback && callback();\n            }\n        };\n        if (this.type == 'repeating-pattern') {\n            request.url = constants.BACKGROUND_PATTERNS_XML_URL;\n        } else {\n            request.url = constants.BACKGROUND_IMAGES_XML_URL;\n        }\n        $.ajax(request);\n    },\n\n    onGetPatternsCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            images.push({thumbnail: $(img).text()});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            let $img = $(img),\n                thumbnail = $img.children('thumbnail').text(),\n                fs_img = $img.children('fullscreen-image').text();\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev && ev.target && ev.target.closest ? ev.target.closest('.drag-handle') : $(ev.target).closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 50,\n            out_duration: 100,\n            opacity: 0.4\n        },\n        close: {out_duration: 100}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval && is_disconnected === undefined)\n            return;\n        clearInterval(this._blink_interval);\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1 || $icon.attr('href').indexOf(this.cache.favicon_gray) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT_GREY) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval || is_disconnected !== undefined) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    updateAllMessageCounterOnDisconnect: function (is_disconnected) {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon(is_disconnected);\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon(is_disconnected);\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_msg += incoming_subscriptions;\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        this.set('all_msg_counter', this.setAllMessageCounter());\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = constants.SOUNDS[name];\n        if (filename) {\n            let audio = new window.Audio(filename);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        let idle = new idleJs({\n            idle: 30000, // idle time in ms\n            events: ['mousemove', 'keydown', 'mousedown', 'touchstart', 'focus', 'blur'], // events that will trigger the idle resetter\n            onIdle: () => {\n                if (self._settings.get('idling'))\n                    self.set('idle', true);\n                else\n                    self.set('idle', false);\n            } , // callback function to be executed after idle time\n            onActive:() => {\n                self.set('idle', false);\n            }  , // callback function to be executed after back form idleness\n            keepTracking: true, // set it to false if you want to be notified only on the first idleness change\n            startAtIdle: false // set it to true if you want to start in the idle state\n        })\n        idle.start();\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_view = this.wide_panel.addChild(\n        'settings', this.SettingsView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.api_service,\n    utils = env.utils,\n    $ = env.$,\n    _ = env._;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n\n    create_from_server: function (settings_item) {\n        let settings = this.create(_.extend({\n            jid: settings_item.jid,\n            timestamp: settings_item.timestamp,\n            to_sync: true,\n            synced: true\n        }, settings_item.settings));\n        this.trigger('add_settings', settings);\n        return settings;\n    }\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.APIAccount = Backbone.ModelWithStorage.extend({\n    defaults: {\n        token: null,\n        sync_all: true\n    },\n\n    _initialize: function (_attrs, options) {\n        this.list = options.settings_list;\n        this.save({connected: false, sync_request: 'silent'});\n        this.on(\"change:connected\", function () {\n            if (this.get('connected')) {\n                this.fcm_subscribe();\n            } else {\n                this.fcm_unsubscribe();\n            }\n        }, this);\n        this.on(\"change:token\", function () {\n            if (this.get('token') !== null) {\n                this.save({sync_all: true,\n                           sync_request: this.list.length ? 'window' : 'silent'});\n            }\n        }, this);\n        this.list.on(\"change:to_sync\", function (item) {\n            if (this.get('sync_all') && !item.get('to_sync')) {\n                this.save('sync_all', false);\n            }\n        }, this);\n        xabber.on(\"push_message\", function (message) {\n            if (this.get('connected') &&\n                    message.username === this.get('username') &&\n                    message.from_token !== this.get('token') &&\n                    message.action === 'settings_updated') {\n                this.synchronize_main_settings();\n                this.synchronize_order_settings();\n            }\n            if (this.get('connected') &&\n                message.username === this.get('username') &&\n                message.from_token !== this.get('token') &&\n                message.action === 'account_updated') {\n                this.get_settings();\n            }\n        }, this);\n\n        this.ready = new $.Deferred();\n        if (xabber.url_params.social_auth) {\n            let social_auth = xabber.url_params.social_auth;\n            delete xabber.url_params.social_auth;\n            try {\n                let data = JSON.parse(atob(social_auth));\n                this.save('token', null);\n                this.social_login(data);\n                return;\n            } catch (e) {}\n        }\n        if (xabber.url_params.token) {\n            this.save('token', xabber.url_params.token);\n            delete xabber.url_params.token;\n        }\n        if (this.get('token')) {\n            this.login_by_token();\n        } else {\n            this.ready.resolve();\n        }\n    },\n\n    _call_method: function (method, url, data, callback, errback) {\n        let request = {\n            type: method,\n            url: constants.API_SERVICE_URL + url,\n            headers: {\"Authorization\": \"Token \" + this.get('token')},\n            context: this,\n            contentType: \"application/json\",\n            dataType: 'json',\n            success: (data, textStatus, jqXHR) => {\n                callback && callback(data);\n            },\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (data) {\n            request.data = JSON.stringify(data);\n        }\n        $.ajax(request);\n    },\n\n    add_source: function (data) {\n        return _.extend({\n            source: `${constants.CLIENT_NAME} ${xabber.get('version_number')}`\n        }, data);\n    },\n\n    get_settings: function () {\n        if (this.get('token') !== null) {\n            this._call_method('GET', '/accounts/current/', null,\n                (data) => {\n                    if (data.account_status === 'registered') {\n                        this.onUserData(data);\n                        this._call_method('GET', '/accounts/current/client-settings/', null,\n                            this.onSettings.bind(this),\n                            this.onSettingsFailed.bind(this)\n                        );\n                    } else {\n                        utils.dialogs.error(xabber.getString(\"xabber_account__sync__error_no_permission_to_sync\"));\n                        this.save({token: null, connected: false});\n                        this.trigger('settings_result', null);\n                    }\n                },\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    delete_settings: function (jid) {\n        if (this.get('connected')) {\n            this._call_method('DELETE', '/accounts/current/client-settings/', {jid: jid},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_main_settings: function () {\n        if (this.get('connected')) {\n            let data = _.map(this.list.where({to_sync: true}), function (settings) {\n                return settings.request_data();\n            });\n            if (data.length) {\n                this._call_method('PATCH', '/accounts/current/client-settings/',\n                    {settings_data: data},\n                    this.onSettings.bind(this),\n                    this.onSettingsFailed.bind(this)\n                );\n            } else {\n                this.get_settings();\n            }\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_order_settings: function () {\n        if (this.get('connected') && this.get('sync_all')) {\n            let timestamp = this.list.order_timestamp.get('timestamp');\n            let data = this.list.map(function (settings) {\n                return {jid: settings.get('jid'), order: settings.get('order')};\n            });\n            this._call_method('PATCH', '/accounts/current/client-settings/',\n                {order_data: {settings: data, timestamp: timestamp}},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    fetch_from_server: function (data) {\n        let deleted_list = data.deleted,\n            settings_list = data.settings_data,\n            order_timestamp = data.order_data.timestamp,\n            order_list = data.order_data.settings,\n            list = this.list,\n            sync_all = this.get('sync_all');\n        _.each(deleted_list, (item) => {\n            let settings = list.get(item.jid);\n            if (settings && settings.get('to_sync') &&\n                    settings.get('timestamp') <= item.timestamp) {\n                settings.trigger('delete_account', true);\n            }\n        });\n        _.each(settings_list, function (settings_item) {\n            let settings = list.get(settings_item.jid);\n            if (settings) {\n                if (settings.get('to_sync')) {\n                    settings.save(_.extend({\n                        timestamp: settings_item.timestamp,\n                        deleted: false,\n                        synced: true\n                    }, settings_item.settings));\n                } else {\n                    settings.save('synced', settings_item.timestamp >= settings.get('timestamp'));\n                }\n            }\n            if (!settings && sync_all) {\n                settings = list.create_from_server(settings_item);\n            }\n        });\n        if (sync_all) {\n            let order_map = {}, max_order = 1;\n            _.each(order_list, function (order_item) {\n                order_map[order_item.jid] = order_item.order;\n                if (order_item.order > max_order) {\n                    max_order = order_item.order;\n                }\n            });\n            list.order_timestamp.save('timestamp', order_timestamp);\n            list.each((settings) => {\n                let jid = settings.get('jid'),\n                    order = order_map[jid];\n                if (!order) {\n                    max_order += 1;\n                    order = max_order;\n                }\n                settings.save('order', order);\n            });\n        }\n        this.trigger('settings_result', data);\n        this.save('last_sync', utils.now());\n    },\n\n    onAPIError: function (jqXHR, errback) {\n        let status = jqXHR.status,\n            response = jqXHR.responseJSON;\n        if (status === 403) {\n            this.save({connected: false, token: null});\n            if (response.detail === 'Invalid token') {\n                if (response.reason === 'not_found') {\n                    // TODO remove only Xabber-related XMPP accounts\n                } else if (response.reason === 'revoked') {\n                    _.each(this.list.where({to_sync: true}), function (settings) {\n                        settings.trigger('delete_account', true);\n                    });\n                } else if (response.reason === 'expired'){\n                    utils.dialogs.common(xabber.getString(\"xabber_account__login__dialog_error__header\"), xabber.getString(\"xabber_account__login__dialog_error__text\"),\n                        {ok_button: {text: xabber.getString(\"yes\")}, cancel_button: {text: xabber.getString(\"dialog_version_update__option_not_now\")}}\n                    ).done((result) => {\n                        result && this.trigger('relogin');\n                    });\n                }\n            }\n        }\n        errback && errback(response, status);\n    },\n\n    _login: function (credentials, callback, errback) {\n        let request = {\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/login/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source()),\n            success: callback,\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (credentials.token) {\n            request.headers = {\"Authorization\": \"Token \" + credentials.token};\n        } else {\n            let username = credentials.username,\n                password = credentials.password;\n            request.headers = {\"Authorization\": \"Basic \" + utils.utoa(username+':'+password)};\n        }\n        $.ajax(request);\n    },\n\n    login: function (username, password) {\n        this._login({username: username, password: password}, this.onLogin.bind(this),\n                this.onLoginFailed.bind(this));\n    },\n\n    login_by_token: function () {\n        this._login({token: this.get('token')}, this.onLoginByToken.bind(this),\n                this.onLoginByTokenFailed.bind(this));\n    },\n\n    social_login: function (credentials) {\n        $.ajax({\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/social_auth/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source(credentials)),\n            success: this.onSocialLogin.bind(this),\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, this.onSocialLoginFailed.bind(this));\n            }\n        });\n    },\n\n    revoke_token: function () {\n        let token = this.get('token');\n        if (token !== null) {\n            this._call_method('delete', '/accounts/current/tokens/', {token: token});\n        }\n        this.save({connected: false, token: null});\n        this.storage.clear();\n    },\n\n    onLoginByToken: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true, sync_request: 'silent'});\n        this.get_settings();\n        this.ready.resolve();\n    },\n\n    onLoginByTokenFailed: function (response, status) {\n        this.save('connected', false);\n        this.ready.resolve();\n    },\n\n    onLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        this.get_settings();\n    },\n\n    onLoginFailed: function (response, status) {\n        this.save('connected', false);\n        this.trigger('login_failed', response);\n    },\n\n    onSocialLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        xabber.body.setScreen('settings');\n        this.ready.resolve();\n    },\n\n    onSocialLoginFailed: function (response, status) {\n        this.save('connected', false);\n        xabber.body.setScreen('settings');\n        utils.dialogs.error(xabber.getString(\"xabber_account__login__error_auth_failed\"));\n        this.ready.resolve();\n    },\n\n    onUserData: function (data) {\n        let name, xmpp_binding_jid;\n        if (data.first_name && data.last_name) {\n            name = data.first_name + ' ' + data.last_name;\n        } else {\n            name = data.username;\n        }\n        if (data.xmpp_binding) {\n            xmpp_binding_jid = data.xmpp_binding.jid;\n        }\n        this.save({username: data.full_id, name: name, linked_email_list: data.email_list, linked_social: data.social_bindings, xmpp_binding: xmpp_binding_jid });\n    },\n\n    onSettings: function (data) {\n        let sync_request = this.get('sync_request');\n        this.save('sync_request', undefined);\n        if (sync_request === 'window') {\n            if (!xabber.sync_settings_view)\n                xabber.sync_settings_view = new xabber.SyncSettingsView({model: this});\n            this.trigger('open_sync_window', data);\n        } else {\n            this.fetch_from_server(data);\n        }\n    },\n\n    onSettingsFailed: function (response, status) {\n        this.trigger('settings_result', null);\n    },\n\n    logout: function () {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"logout_summary\"),\n                          [{name: 'delete_accounts', checked: true,\n                            text: xabber.getString(\"xabber_account__dialog_logout__option_delete_accounts\")}], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (res) {\n                if (xabber.accounts.connected.length > 0)\n                    _.each(xabber.accounts.connected, (account) => {\n                        account.set('auto_login_xa', false);\n                        account.save('auto_login_xa', false);\n                    });\n                this.revoke_token();\n                if (res.delete_accounts) {\n                    _.each(this.list.where({to_sync: true}), (settings) => {\n                        settings.trigger('delete_account', true);\n                    });\n                }\n            }\n        });\n    },\n\n    start: function () {\n        if (!this.get('connected')) {\n            this.fcm_unsubscribe();\n        }\n        this.get_settings();\n    },\n\n    fcm_subscribe: function () {\n        this._call_method('post', '/fcm/subscription/', {endpoint_key: xabber.cache.endpoint_key});\n    },\n\n    fcm_unsubscribe: function () {\n        $.ajax({\n            type: 'DELETE',\n            url: constants.API_SERVICE_URL + '/fcm/subscription/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify({endpoint_key: xabber.cache.endpoint_key})\n        });\n    }\n});\n\nxabber.APIAccountAuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$username_input = this.$('input[name=username]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.onChangeAuthenticationState, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$username_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let username = this.$username_input.val(),\n            password = this.$password_input.val();\n        if (!username) {\n            return this.errorFeedback({username: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        username = username.trim();\n        if (!password)  {\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n        this.model.login(username, password);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n    },\n\n    authFeedback: function (options) {\n        this.$username_input.switchClass('invalid', options.username)\n            .siblings('span.errors').text(options.username || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').switchClass('disabled', authentication);\n    },\n\n    onChangeAuthenticationState: function () {\n        this.updateButtons();\n        if (this.data.get('authentication')) {\n            this.model.on(\"change:connected\", this.onChangeConnected, this);\n            this.model.on(\"login_failed\", this.onLoginFailed, this);\n        } else {\n            this.model.off(\"change:connected\", this.onChangeConnected, this);\n            this.model.off(\"login_failed\", this.onLoginFailed, this);\n        }\n    },\n\n    onChangeConnected: function () {\n        if (this.model.get('connected')) {\n            this.successFeedback();\n        }\n    },\n\n    onLoginFailed: function (response) {\n        this.errorFeedback({password: (response && response.detail) || xabber.getString(\"connection__error__text_authentication_failed_short\")});\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email') {\n            this.closeModal();\n            xabber.email_auth_view.show();\n            // return;\n        }\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\n  xabber.XabberLoginByEmailPanel = xabber.APIAccountAuthView.extend({\n      className: 'login-panel add-xabber-account-panel',\n      template: templates.xabber_login_by_email,\n\n      events: {\n          \"click .btn-cancel\": \"close\",\n          \"click .btn-log-in\": \"submit\",\n          \"keyup input[name=password]\": \"keyUp\"\n      },\n\n      render: function () {\n          this.$el.openModal({\n              opacity: 0.9,\n              ready: this.onRender.bind(this),\n              complete: this.close.bind(this)\n          });\n      },\n\n      successFeedback: function () {\n          this.authFeedback({});\n          this.data.set('authentication', false);\n          this.close();\n      },\n\n      onRender: function () {\n          Materialize.updateTextFields();\n          this.$username_input.val('').focus();\n          this.$password_input.val('');\n      },\n\n      close: function (auth) {\n          this.$el.closeModal({ complete: this.hide.bind(this) });\n      }\n  });\n\nxabber.XabberLoginPanel = xabber.APIAccountAuthView.extend({\n    className: 'login-panel',\n    template: templates.xabber_login,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"submit\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-escape\": \"openXmppLoginPanel\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats');\n    },\n\n    changeLoginType: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    },\n\n    openXmppLoginPanel: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    }\n});\n\nxabber.AddAPIAccountView = xabber.APIAccountAuthView.extend({\n    className: 'login-panel add-xabber-account-panel',\n    template: templates.add_xabber_account,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-add\": \"loginXabberAccount\",\n        \"keyup input[name=password]\": \"keyUp\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-cancel\": \"closeModal\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            opacity: 0.9,\n            ready: () => {\n                this.onRender.bind(this);\n                this.$('.account-field .dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left',\n                });\n            },\n            complete: this.closeModal.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(env.templates.contacts.add_contact_account_item({jid: account.get('jid')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n        this.loginXabberAccount(account);\n    },\n\n    loginXabberAccount: function (account) {\n        account.set('auto_login_xa', true);\n        account.authXabberAccount();\n        this.closeModal();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SyncSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal sync-settings-modal noselect',\n    template: templates.sync_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .btn-sync\": \"syncSettings\",\n        \"click .btn-cancel\": \"close\",\n        \"change .sync-all\": \"changeSyncAll\",\n        \"change .sync-one\": \"changeSyncOne\",\n        \"click .sync-icon\": \"changeSyncWay\"\n    },\n\n    _initialize: function () {\n        this.settings = null;\n        this.to_sync_map = null;\n        this.model.on(\"open_sync_window\", this.render, this);\n    },\n\n    render: function (data, options) {\n        this.settings = data;\n        this.sync_all = this.model.get('sync_all');\n        this.accounts = [];\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.$('.accounts-wrap').empty();\n        let list = this.model.list,\n            accounts_map = {},\n            deleted_map = {},\n            settings_map = {},\n            order_map = {};\n        _.each(this.settings.settings_data, function (settings_item) {\n            settings_map[settings_item.jid] = settings_item;\n        });\n        this.settings_map = settings_map;\n        _.each(this.settings.order_data.settings, function (order_item) {\n            order_map[order_item.jid] = order_item.order;\n        });\n        _.each(this.settings.deleted, function (deleted_item) {\n            deleted_map[deleted_item.jid] = deleted_item.timestamp;\n        });\n\n        // Make synchronization list\n        _.each(settings_map, (obj, jid) => {\n            // pick accounts that are present on server only\n            if (!list.get(jid)) {\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: this.sync_all,\n                    sync_way: 'from_server'\n                }, obj);\n            }\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid'),\n                obj = settings_map[jid],\n                sync_way;\n            if (_.has(deleted_map, jid)) {\n                // pick local but deleted from server accounts\n                sync_way = deleted_map[jid] >= settings.get('timestamp') ? 'delete' : 'to_server';\n                accounts_map[jid] = _.extend({\n                    sync_way: sync_way,\n                    sync_choose: ['delete', 'to_server']\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            } else if (obj) {\n                // pick accounts that are present on both server and client\n                if (obj.timestamp > settings.get('timestamp')) {\n                    sync_way = 'from_server';\n                } else if (obj.timestamp < settings.get('timestamp')) {\n                    sync_way = 'to_server';\n                } else {\n                    sync_way = 'no';\n                }\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: settings.get('to_sync'),\n                    sync_way: sync_way,\n                    sync_choose: sync_way !== 'no' ? ['from_server', 'to_server'] : false\n                }, obj.settings);\n                settings.save('synced', sync_way === 'no');\n            } else {\n                // pick local accounts\n                accounts_map[jid] = _.extend({\n                    sync_way: 'to_server'\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            }\n        });\n\n        // fetch server order of accounts and merge it with local order\n        let max_order = _.max(order_map) || 0;\n        _.each(order_map, (order, jid) => {\n            accounts_map[jid].order = order;\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid');\n            if (!accounts_map[jid].order) {\n                accounts_map[jid].order = (++max_order);\n            }\n        });\n\n        this.accounts_map = accounts_map;\n        this.accounts = _.map(accounts_map, function (value, key) { return value; });\n        // sort merged list by new order value\n        this.accounts.sort(function (acc1, acc2) {\n            return acc1.order - acc2.order;\n        });\n        _.each(this.accounts, this.addAccountHtml.bind(this));\n        this.updateSyncOptions();\n    },\n\n    addAccountHtml: function (settings) {\n        let jid = settings.jid;\n        let $account_el = $(templates.sync_settings_account_item({\n            jid: jid,\n            view: this\n        }));\n        this.$('.accounts-wrap').append($account_el);\n    },\n\n    updateAccountHtml: function (account_wrap) {\n        let $account_wrap = $(account_wrap),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        this.sync_all && (account_item.to_sync = true);\n        $account_wrap.switchClass('sync', account_item.to_sync);\n        $account_wrap.find('.sync-one').prop('checked', account_item.to_sync);\n        let sync_way;\n        if (account_item.to_sync) {\n            sync_way = account_item.sync_way;\n        } else if (this.model.list.get(jid)) {\n            sync_way = 'off_local';\n        } else {\n            sync_way = 'off_remote';\n        }\n        let mdiclass = constants.SYNC_WAY_DATA[sync_way].icon,\n            $sync_icon = $account_wrap.find('.sync-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n        $account_wrap.find('.sync-tip').text(xabber.getString(constants.SYNC_WAY_DATA[sync_way].tip));\n    },\n\n    updateSyncOptions: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all,\n            accounts_map = this.accounts_map;\n        this.$('.sync-all').prop('checked', sync_all ? 'checked' : '');\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        this.$('.account-wrap').each((idx, el) => {\n            this.updateAccountHtml(el);\n        });\n    },\n\n    changeSyncAll: function (ev) {\n        let $target = $(ev.target),\n            sync_all = $target.prop('checked');\n        this.sync_all = sync_all;\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        if (sync_all) {\n            _.each(this.accounts, (account_item) => {\n                account_item.to_sync = true;\n            });\n            this.$('.account-wrap').each((idx, el) => {\n                this.updateAccountHtml(el);\n            });\n        }\n    },\n\n    changeSyncOne: function (ev) {\n        let $target = $(ev.target),\n            value = $target.prop('checked'),\n            $account_wrap = $target.closest('.account-wrap'),\n            jid = $account_wrap.data('jid');\n        this.accounts_map[jid].to_sync = value;\n        this.updateAccountHtml($account_wrap);\n    },\n\n    changeSyncWay: function (ev) {\n        let $account_wrap = $(ev.target).closest('.account-wrap'),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        if (!account_item.to_sync || !account_item.sync_choose) {\n            return;\n        }\n        let sync_choose = account_item.sync_choose,\n            idx = sync_choose.indexOf(account_item.sync_way) + 1;\n        if (idx === sync_choose.length) {\n            idx = 0;\n        }\n        account_item.sync_way = sync_choose[idx];\n        this.updateAccountHtml($account_wrap);\n    },\n\n    syncSettings: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all;\n        this.model.save('sync_all', this.sync_all);\n        _.each(this.accounts, function (account_item) {\n            let jid = account_item.jid,\n                settings = list.get(jid);\n            if (settings) {\n                settings.save('to_sync', account_item.to_sync);\n                if (sync_all) {\n                    settings.save('order', account_item.order);\n                }\n                let sync_way = account_item.sync_way;\n                if (sync_way === 'to_server') {\n                    settings.update_timestamp();\n                } else if (sync_way === 'from_server' || sync_way === 'delete') {\n                    settings.save('timestamp', 0);\n                }\n            }\n            if (!settings && account_item.to_sync) {\n                settings = list.create_from_server(\n                    _.omit(account_item, ['sync_way', 'sync_choose']));\n            }\n        });\n        this.model.synchronize_main_settings();\n        this.do_sync = true;\n        this.close();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (xabber.body.isScreen('blank')) {\n            xabber.body.setScreen('all-chats');\n        }\n    },\n\n    close: function () {\n        if (!this.do_sync) {\n            this.model.trigger('settings_result', null);\n        }\n        this.do_sync = null;\n        this.settings = null;\n        this.settings_map = null;\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.APIAccountView = xabber.BasicView.extend({\n    className: 'setting xabber-account',\n    template: templates.xabber_account,\n    avatar_size: constants.AVATAR_SIZES.XABBER_ACCOUNT,\n\n    events: {\n        \"click .account-info-wrap\": \"openAccount\",\n        \"click .btn-login\": \"login\",\n        \"click .btn-logout\": \"logout\",\n        \"click .btn-set-password\": \"setPassword\",\n        \"click .btn-sync-settings\": \"synchronize\",\n        \"click .social-linked-header\": \"changeExpanded\",\n        \"click .btn-unlink\": \"unlinkSocial\",\n        \"click .btn-link\": \"linkSocial\",\n        \"click .btn-verify-email\": \"verifyEmail\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-block-wrap.xabber-account'));\n        this.$tab = this.parent.$('.xabber-account-tab');\n        this.updateForConnectedStatus();\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n        this.model.on(\"change:username\", this.updateName, this);\n        this.model.on(\"change:name\", this.updateAvatar, this);\n        this.model.on(\"change:connected\", this.updateForConnectedStatus, this);\n        this.model.on(\"change:last_sync\", this.updateLastSyncInfo, this);\n        this.model.on(\"change:linked_email_list\", this.updateSocialBindings, this);\n        this.model.on(\"change:linked_social\", this.updateSocialBindings, this);\n        this.model.on(\"relogin\", this.login, this);\n        this.data.on(\"change:sync\", this.updateSyncButton, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', false);\n    },\n\n    render: function () {\n        this.data.set('sync', false);\n        this.$('span.errors ').html(\"\");\n        this.updateLastSyncInfo();\n        this.updateSocialBindings();\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n    },\n\n    changeExpanded: function () {\n        this.data.set('expanded', (this.data.get('expanded')) ? false : true);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.social-linked-wrap').showIf(expanded);\n    },\n\n    updateSocialBindings: function () {\n        let linked_emails = this.model.get('linked_email_list'),\n            linked_social = this.model.get('linked_social');\n        this.$('.email-linked').remove();\n        this.$('.social-account').each(function (idx, item) {\n            let $social_item = $(item);\n            $social_item.addClass('not-linked');\n            $social_item.find('.synced-info').text(xabber.getString(\"title_not_linked_account\"));\n            $social_item.find('.btn-link').text(xabber.getString(\"action_connect\")).removeClass('btn-unlink');\n        });\n        _.each(linked_emails, (email) => {\n            let email_id = email.id,\n                email_address = email.email,\n                is_verified = email.verified,\n                email_item_html = $(templates.linked_email_item({email_id: email_id, email: email_address, verified: is_verified, color: this.default_color}));\n            email_item_html.insertBefore(this.$('#email.not-linked'));\n        });\n        _.each(linked_social, (social) => {\n            let social_provider = social.provider,\n                social_name = social.first_name + \" \" + social.last_name;\n            this.$('.'+ social_provider + '-linked').removeClass('not-linked');\n            this.$('.' + social_provider + '-linked .btn-link').text(xabber.getString(\"action_disconnect\")).addClass('btn-unlink');\n            this.$('.'+ social_provider + '-linked .synced-info').html($(`<div class=\"name one-line\">${social_name}</div><div class=\"verified-status one-line\">${xabber.getString(\"title_linked_account\", [social_provider])}</div>`));\n        });\n    },\n\n    linkSocial: function (ev) {\n        if ((this.model.get('token'))&&(!$(ev.target).hasClass('btn-unlink'))) {\n            let social_elem = $(ev.target).closest('.social-linked-item-wrap'),\n                provider = social_elem.attr('id');\n            if (provider === 'email') {\n                utils.dialogs.ask_enter_value(xabber.getString(\"xabber_account__dialog_add_email__header\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_add_email__hint_enter_email\")}, { ok_button_text: xabber.getString(\"action_connect\")}).done((mail) => {\n                    if (mail) {\n                        this.model._call_method('POST', '/accounts/current/email_list/', {email: mail},\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list');\n                                email_list.push(mail_data);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            },\n                            (jqXHR, textStatus, errorThrown) => {\n                                this.$('span.errors ').text(jqXHR.email[0]);\n                            });\n                    }\n                });\n            }\n            else {\n                this.openAccount();\n            }\n        }\n    },\n\n    verifyEmail: function (ev) {\n        let $target = $(ev.target),\n            $email_html = $target.closest('.social-linked-item-wrap'),\n            email_address = $email_html.data('email');\n        utils.dialogs.ask_enter_value(xabber.getString(\"title_email_confirm\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_confirm_email__hint_enter_code\")}, { ok_button_text: xabber.getString(\"button_confirm\"), resend_button_text: xabber.getString(\"button_resend_link\"), resend_to: email_address}).done((code) => {\n            if (code) {\n                if (code === email_address) {\n                    this.model._call_method('POST', '/accounts/current/email_list/', {email: code});\n                }\n                else {\n                    this.model._call_method('POST', '/accounts/email_confirmation/', {code: code},\n                        (mail_data) => {\n                            let email_list = mail_data.email_list;\n                            this.model.set('linked_email_list', email_list);\n                            this.updateSocialBindings();\n                        }, (jqXHR, textStatus, errorThrown) => {\n                            this.$('span.errors').text(jqXHR.code[0]);\n                        });\n                }\n            }\n        });\n    },\n\n    unlinkSocial: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.hasClass('btn-verify-email')) {\n            let $social_html = $target.closest('.social-linked-item-wrap');\n            let provider = $social_html.attr('id'),\n                is_email = $social_html.data('email');\n            if (is_email) {\n                let email_address = $social_html.data('email');\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_email__header\"), xabber.getString(\"title_delete_email\"), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('DELETE', '/accounts/current/email_list/' + $social_html.data('id') + '/', null,\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list'),\n                                    deleted_mail_index = email_list.indexOf(email_list.find(email => email.id === $social_html.data('id')));\n                                email_list.splice(deleted_mail_index, 1);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n            else if (provider !== 'email') {\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_social__header\"), xabber.getString(\"title_delete_social\", [provider]), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('POST', '/accounts/current/social_unbind/', {provider: provider},\n                            () => {\n                                let social_list = this.model.get('linked_social'),\n                                    deleted_social_index = social_list.indexOf(social_list.find(social => social.provider === provider));\n                                social_list.splice(deleted_social_index, 1);\n                                this.model.set('linked_social', social_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n        }\n    },\n\n    updateName: function () {\n        this.$('.account-info-wrap .name').text(this.model.get('username'));\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n    },\n\n    updateAvatar: function () {\n        let name = this.model.get('name'),\n            image = this.model.get('image') || utils.images.getDefaultAvatar(name);\n        this.$('.circle-avatar').setAvatar(utils.images.getCachedImage(image), this.avatar_size);\n    },\n\n    updateForConnectedStatus: function () {\n        let connected = this.model.get('connected');\n        this.$tab.switchClass('online', connected)\n                 .switchClass('offline', !connected);\n        this.$('.linked-social-accounts-and-emails').showIf(connected);\n        this.$('.account-info-wrap').showIf(connected);\n        this.$('.sync-wrap').showIf(connected);\n        if (connected) {\n            this.updateName();\n            this.updateAvatar();\n            this.updateSyncButton();\n            this.updateLastSyncInfo();\n        }\n        this.$('.btn-login').hideIf(connected);\n        this.$('.btn-more').showIf(connected);\n    },\n\n    updateSyncButton: function () {\n        let sync = this.data.get('sync');\n        this.$('.btn-sync .button').hideIf(sync);\n        this.$('.btn-sync .preloader-wrapper').showIf(sync);\n    },\n\n    updateLastSyncInfo: function () {\n        let last_sync = this.model.get('last_sync');\n        if (last_sync) {\n            let time_delta = utils.now() - last_sync;\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__text\", [env.moment(env.moment.now() - 1000*time_delta).fromNow()]));\n        } else {\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__not_synced\"));\n        }\n    },\n\n    synchronize: function () {\n        if (!this.data.get('sync')) {\n            this.data.set('sync', true);\n            this.model.once(\"settings_result\", function () {\n                this.data.set('sync', false);\n            }, this);\n            this.model.save('sync_request', 'window');\n            this.model.get_settings();\n        }\n    },\n\n    login: function () {\n        if (xabber.add_api_account_view && xabber.accounts.connected.length > 1)\n            xabber.add_api_account_view.show();\n        else {\n            let account = xabber.accounts.connected[0];\n            if (account) {\n                account.set('auto_login_xa', true);\n                account.authXabberAccount();\n            }\n        }\n    },\n\n    logout: function () {\n        this.model.logout();\n    },\n\n    onPasswordResetFailed: function () {\n        utils.dialogs.error(xabber.getString(\"password_reset_need_email\"));\n    },\n\n    setPassword: function () {\n        let email_list = this.model.get('linked_email_list');\n        if (email_list) {\n            let verified_email = email_list.find(mail => mail.verified === true);\n            if (email_list.indexOf(verified_email) != -1) {\n                $.ajax({\n                    type: 'POST',\n                    url: constants.API_SERVICE_URL + '/accounts/password_reset_request/',\n                    contentType: \"application/json\",\n                    dataType: 'json',\n                    data: JSON.stringify({email: verified_email.email}),\n                    success: () => {\n                        utils.dialogs.notify(xabber.getString(\"button_reset_pass\"), xabber.getString(\"password_reset_success\", [verified_email.email]));\n                    },\n                    error: this.onPasswordResetFailed.bind(this)\n                });\n            }\n            else\n                this.onPasswordResetFailed();\n        }\n        else\n            this.onPasswordResetFailed();\n    },\n\n    openAccount: function () {\n        utils.openWindow(constants.XABBER_ACCOUNT_URL + '/?token=' + this.model.get('token'));\n    }\n});\n\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.api_account = new this.APIAccount({id: 'api-account'},\n            {\n                storage_name: this.getStorageName(), fetch: 'before',\n                settings_list: this.account_settings_list\n            });\n    }\n\n        this.xabber_login_panel = xabber.login_page.addChild(\n            'xabber_login', this.XabberLoginPanel, {model: this.api_account});\n\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.settings_view.addChild('api-account', this.APIAccountView,\n            {model: this.api_account});\n\n        this.add_api_account_view = new this.AddAPIAccountView({model: this.api_account});\n        this.email_auth_view = new xabber.XabberLoginByEmailPanel({\n            parent: this.add_api_account_view,\n            model: this.api_account\n        });\n    }\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n    if (msg && msg.includes && msg.includes('policy-violation') && log_level === Strophe.LogLevel.ERROR)\n        utils.dialogs.error(msg);\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('XABBER_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('EXPLICIT_MESSAGE_ENCRYPTION', 'urn:xmpp:eme:0');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-wrap',\n    template: templates.vcard_edit,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n        \"click .btn-vcard-back\": \"render\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function () {\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-back').addClass('hidden');\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')},\n    pretty_datetime_date = (timestamp) => { return utils.pretty_datetime(timestamp, 'MMM DD, YYYY')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                    auto_login_xa: this.get('auto_login_xa'),\n                    to_sync: xabber.api_account && xabber.api_account.get('sync_all')\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.vcard_edit = new xabber.VCardEditView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            if (xabber.api_account)\n                xabber.api_account.on(\"settings_result\", function (result) {\n                    if (result && this.settings.get('token')) {\n                        this.save({auth_type: 'token'});\n                    }\n                    this.trigger('start');\n                }, this);\n            else\n                xabber.on(\"bind_xmpp_accounts\", () => {\n                    if (this.settings.get('token'))\n                        this.save({auth_type: 'token'});\n                    this.trigger('start');\n                }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isReconnecting: function () {\n            return this.session && this.session.get('reconnecting');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails && res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        verifyXabberAccount: function (code, callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_auth/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ code: code, jid: this.connection.jid}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data.token);\n                }\n            };\n            $.ajax(request);\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/xabber-web-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            }\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        connectXabberAccount: function () {\n            let iq_private_storage = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE}).c('storage', {xmlns:'xabber:options'});\n            this.sendIQFast(iq_private_storage, (iq) => {\n                if (($(iq).find('option').attr('type') == 'bind') && ($(iq).find('option').text() == 1)) {\n                    this.authXabberAccount();\n                }\n            });\n        },\n\n        authXabberAccount: function (callback) {\n            this.requestPassword((data) => {\n                this.xabber_auth = { api_jid: data.api_jid, request_id: data.request_id };\n                if (this.code_requests.length > 0) {\n                    let verifying_code = this.code_requests.find(verifying_mess => (verifying_mess.jid === this.xabber_auth.api_jid && verifying_mess.id === this.xabber_auth.request_id));\n                    if (verifying_code) {\n                        let idx_verifying_code = this.code_requests.indexOf(verifying_code);\n                        (idx_verifying_code > -1) && this.code_requests.splice(idx_verifying_code, 1);\n                        this.verifyXabberAccount(verifying_code.code, (data) => {\n                            this._waiting_code = false;\n                            let iq_send_auth_mark = $iq({type: 'set'})\n                                .c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE})\n                                .c('storage', {xmlns:'xabber:options'})\n                                .c('option', {type: 'bind'}).t(1);\n                            if (xabber.api_account) {\n                                xabber.api_account.save('token', data);\n                                xabber.api_account.login_by_token();\n                            }\n                            this.sendIQFast(iq_send_auth_mark);\n                            callback && callback();\n                        });\n                    }\n                    if (this.code_requests.length) {\n                        let msg_attrs = {\n                            from_jid: this.code_requests[0].jid,\n                            message: xabber.getString(\"xmpp_confirm__text_message__verification_code_is\", [Number(this.code_requests[0].code)]),\n                            is_archived: false\n                        };\n                        this.createMessageFromIQ(msg_attrs);\n                    }\n                }\n            });\n        },\n\n        requestPassword: function(callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_code_request/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ jid: this.connection.jid, type: 'iq'}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data);\n                }\n            };\n            this._waiting_code = true;\n            $.ajax(request);\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({connected: true, reconnected: true,\n                    reconnecting: false, conn_retries: 0});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.settings_right && this.settings_right.children && this.settings_right.children.account_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.settings_right.children.account_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.settings_right.children.account_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.settings_right.children.account_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.settings_right.children.account_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function () {\n            if (!this.auth_view){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function (callback) {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('public-label').text(),\n                        omemo_id = $token.find('omemo-id').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address, omemo_id: omemo_id});\n                });\n                this.x_tokens_list = tokens_list;\n                callback && callback();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid')) {\n                xabber.trigger('quit_accounts');\n                return;\n            }\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                if (this._fast_interval_worker)\n                    this._fast_interval_worker.terminate();\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n                if (this.connection && !this.connection.disconnecting\n                    && this.connection.authenticated && this.connection.connected){\n                    this.getVCard();\n                    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n                        this.trigger('ready_to_get_roster');\n                }\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: this.retraction_version};\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQ(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            let has_settings_right = !_.isUndefined(this.settings_right);\n            if (!this.settings_left)\n                this.settings_left = new xabber.AccountSettingsLeftView({model: this});\n            if (!has_settings_right)\n                this.settings_right = new xabber.AccountSettingsRightView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings', {\n                account: this, right: right, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_settings_right) {\n                this.trigger('render_settings');\n                this.settings_right.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_right.$('.blocklist-info')[0]\n                });\n                this.settings_right.addChild('account_password_view', xabber.ChangeAccountPasswordView, {\n                    model: this,\n                    el: this.settings_right.$('.change-password-container')[0]\n                });\n            }\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_left && this.settings_left.$el.attr('data-color', color);\n            if (this.settings_right) {\n                this.settings_right.$el.attr('data-color', color);\n            }\n            this.vcard_edit.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings) {\n            this.show_settings_after_delete = show_settings;\n            xabber.body.setScreen('all_chats', {right_contact: ''});\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid'))\n                xabber.trigger('quit_accounts');\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.omemo){\n                this.omemo.destroy();\n                this.omemo = undefined;\n            }\n            this.groups_settings\n            if (this.groups_settings){\n                this.groups_settings.clearStorage();\n            }\n            if (this.groupchat_settings){\n                this.groupchat_settings.destroy();\n                this.groupchat_settings = undefined;\n            }\n            if (this.chat_settings){\n                this.chat_settings.destroy();\n                this.chat_settings = undefined;\n            }\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations && this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster && this.cached_roster.deleteDataBase();\n            this.cached_server_features && this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'))\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        testGalleryFileSlot: function(file, callback) {\n            if (this.get('gallery_token') && this.get('gallery_url')){\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: {size: file.size, name: file.name, hash: sha1(bytes)},\n                        success: (response) => {\n                            console.log(response);\n                            callback && callback(response);\n                        },\n                        error: (response) => {\n                            console.log(response);\n                            callback && callback(response.responseJSON);\n                        }\n                    });\n                }\n                reader.onerror = (e) => {\n                    console.log(reader.error);\n                    callback && callback(false)\n                };\n                reader.readAsDataURL(file);\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_auth', true)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response) {\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'))\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                }\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    if (file.duration)\n                        formData.append('duration', file.duration);\n                    if (file.size)\n                        formData.append('duration', file.size);\n                    if (file.voice)\n                        formData.append('media_type', file.type + '+voice');\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/avatar/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id)\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({id: file_id}),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n        xabber.api_account && xabber.api_account.on(\"settings_result\", function (result) {\n            result && this.trigger('update_order');\n        }, this);\n    },\n\n    onQuit: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount();\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    onQuitAccounts: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length || xabber.api_account && xabber.api_account.get('connected'));\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings');\n            } else {\n                xabber.body.setScreen('all-chats');\n                xabber.chats_view.showAllChats();\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            this.settings_list.order_timestamp.save('timestamp', utils.now());\n            xabber.api_account.synchronize_order_settings();\n        }\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .account-item-avatar-wrap': 'filterChats',\n        'click .show-account-settings': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n        xabber.updateFaviconConnected();\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        xabber.updateFaviconConnected();\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    filterChats: function (ev) {\n        ev.stopPropagation();\n        let is_single = $(ev.target).closest('.single-item').length;\n        if (is_single){\n            this.model.showSettings();\n        }\n        xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        if (xabber.toolbar_view.data.get('account_filtering') != this.model.get('jid'))\n            this.$el.addClass('active');\n        xabber.toolbar_view.showChatsByAccount(this.model);\n    },\n\n    showSettings: function () {\n        this.model.showSettings();\n    },\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        this.$el.find('.single-item').removeClass('single-item');\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n            if (this.model.enabled.length === 1)\n                this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        });\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.$el.find('.single-item').removeClass('single-item');\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function () {\n        this.model.showSettings('vcard_edit');\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .tabs .tab\": \"onTabClick\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .gallery-file\": \"onClickFile\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            this.getFiles(this.current_options)\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            if (!after_avatar_update){\n                this.$('.tabs .list-variant[data-value=\"image\"]').hideIf(!(response.images && response.images.used))\n                if (response.images && response.images.used)\n                    this.$('.tabs .list-variant[data-value=\"image\"]').addClass('tab')\n                else\n                    this.$('.tabs .list-variant[data-value=\"image\"]').removeClass('tab')\n            }\n            this.$('.storage-label-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.tabs .list-variant[data-value=\"video\"]').hideIf(!(response.videos && response.videos.used))\n            if (response.videos && response.videos.used)\n                this.$('.tabs .list-variant[data-value=\"video\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"video\"]').removeClass('tab')\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.tabs .list-variant[data-value=\"voice\"]').hideIf(!(response.voices && response.voices.used))\n            if (response.voices && response.voices.used)\n                this.$('.tabs .list-variant[data-value=\"voice\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"voice\"]').removeClass('tab')\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.tabs .list-variant[data-value=\"files\"]').hideIf(!(response.files && response.files.used))\n            if (response.files && response.files.used)\n                this.$('.tabs .list-variant[data-value=\"files\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"files\"]').removeClass('tab')\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            this.$('.tabs .indicator').remove();\n            this.$('.tabs').tabs();\n            this.$('.indicator').addClass('ground-color-500');\n            if (after_deletion){\n                if (!this.$('.tabs .list-variant.tab').length) {\n                    return;\n                }\n                !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('grid')\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        }\n        this.$('.tabs .list-variant a').removeClass('active');\n        this.$('.tabs .list-variant[data-value=\"' + file_type + '\"] a').addClass('active');\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.tab'),\n            file_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.tab .active').closest('.tab').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.tab .active').closest('.tab').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.tab .active').closest('.tab').attr('data-value'))\n            return;\n        if (!response.total_objects && response.type != 'avatars'){\n            if (response.type){\n                let tab = this.$('.tabs .list-variant[data-value=' + response.type + ']');\n                tab.removeClass('tab');\n                tab.addClass('hidden');\n                this.$('.tabs .indicator').remove();\n                this.$('.tabs').tabs();\n                this.$('.indicator').addClass('ground-color-500');\n            }\n        }\n        if (!response.items || !response.items.length){\n            !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            return;\n        }\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove()\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let $gallery_file = $(templates.media_gallery_account_file({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(xabber.getString(\"no_files\"))\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            this.updateStorage(true);\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({id: file_id}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    deleteFilesFiltered: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.property-variant'),\n                days = $target.attr('data-date'),\n                date = new Date();\n            days && date.setDate(date.getDate() - days)\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && date && date.toISOString().split('T') && date.toISOString().split('T')[0])\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({date_lte: date.toISOString().split('T')[0]}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.AccountSettingsLeftView = xabber.BasicView.extend({\n    className: 'account-settings-left-wrap',\n    template: templates.settings_left,\n    ps_selector: '.settings-tabs-wrap',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-back\": \"showSettings\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .main-info-wrap .status\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\"\n    },\n\n    _initialize: function () {\n        this.status_field = new xabber.StatusMessageWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.$el.switchClass('vcard-edit', options.right == 'vcard_edit');\n        this.$('.settings-tab[data-block-name=\"tokens\"]').hideIf(this.model.get('auth_type') !== 'x-token');\n        this.$('.settings-tab').removeClass('active');\n        this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`).addClass('active');\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n\n        this.updateCSS();\n        return this;\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.updateNameCSS();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info-wrap .status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        // this.$('.settings-tab[data-block-name=\"xmpp-resources\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"server-info\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"blocklist\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"groups-info\"]').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings');\n        xabber.trigger('update_placeholder');\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    }, () => {\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            block_name = $tab.data('block-name');\n        if (block_name === 'vcard_edit'){\n            this.model.showSettings(block_name, 'vcard');\n            this.$('.settings-tab').removeClass('active');\n            $tab.addClass('active');\n        }\n        else if (block_name === 'media-gallery'){\n            this.model.showSettings(null, block_name);\n            this.model.settings_right.gallery_view.$('.tabs .list-variant:not(.hidden)').first().click();\n        }\n        else\n            this.model.showSettings(null, block_name);\n    },\n\n    deleteAccount: function () {\n        let dialog_options = [];\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            dialog_options = [{name: 'delete_settings',\n                checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"dialog_delete_account__label_delete_synced_settings\")}];\n        }\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            dialog_options, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            if (res.delete_settings && xabber.api_account) {\n                if (xabber.api_account.get('xmpp_binding') === this.model.get('jid'))\n                    xabber.api_account._call_method('DELETE', '/accounts/current/client-settings/', {jid: this.model.get('jid')});\n                else\n                    xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n            this.model.deleteAccount();\n        });\n    }\n});\n\nxabber.AccountSettingsRightView = xabber.BasicView.extend({\n    className: 'account-settings-right-wrap',\n    template: templates.settings_right,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"change .color-scheme input[type=radio][name=account_color]\": \"changeColor\",\n        \"click .token-wrap .btn-revoke-token\": \"revokeXToken\",\n        \"click .tokens .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-delete-files\": \"deleteFilesFiltered\",\n        \"click .all-sessions .device-encryption.active\": \"openFingerprint\",\n        \"click .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function () {\n        // this.resources_view = this.addChild('resources', xabber.AccountResourcesView,\n        //     {model: this.model.resources, el: this.$('.xmpp-resources')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSynchronizationBlock, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateXTokens, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        if (options.block_name){\n            this.$('.settings-block-wrap').addClass('hidden');\n            this.$('.settings-block-wrap.'+options.block_name).removeClass('hidden');\n            this.$('.settings-panel-head span.settings-panel-head-title').text(this.$('.settings-block-wrap.'+options.block_name).attr('data-header'));\n            this.$('.btn-block').switchClass('hidden2', options.block_name != 'blocklist-info');\n            this.$('.media-gallery-button.btn-more').hideIf(options.block_name != 'media-gallery');\n            this.$('.device-more-button.btn-more').hideIf(options.block_name != 'tokens' || !this.model.settings.get('omemo'));\n            let dropdown_settings = {\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'right'\n            };\n            this.$('.dropdown-button').dropdown(dropdown_settings);\n            if (options.block_name === 'media-gallery') {\n                this.$('.btn-delete-files-variants').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    hover: true,\n                    belowOrigin: true,\n                });\n            }\n        }\n        this.scrollToChild(this.$('.settings-block-wrap.'+options.block_name));\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        return this;\n    },\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status'),\n            status_message = account.getStatusMessage();\n        this.$('.main-resource .status').attr('data-status', status);\n        this.$('.main-resource .status-message').text(status_message);\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.btn-manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.btn-manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.btn-manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.$('.xabber-account-features-wrap').showIf(xabber.api_account && xabber.api_account.get('connected'));\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n        this.$('.panel-content-wrap .tokens .orphaned-fingerprints-wrap').html(\"\");\n        $(_.sortBy(this.model.x_tokens_list, '-last_auth')).each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime_date(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    pretty_token.is_omemo = this.model.omemo ? true : false\n                    let $cur_token_html = $(templates.current_token_item(pretty_token));\n                    this.$('.panel-content-wrap .tokens .current-session').append($cur_token_html);\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item(pretty_token));\n            this.$('.panel-content-wrap .tokens .all-sessions').append($token_html);\n            if (this.model.omemo) {\n                !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n                let omemo_device_id = token.omemo_id ? token.omemo_id : Number(pretty_token.token_uid.slice(0,8));\n                this.omemo_own_devices.updateTrustDevice(Number(omemo_device_id), $token_html);\n            } else {\n                if (token.omemo_id){\n                    $token_html.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n                    $token_html.find('.device-encryption .mdi-lock').removeClass('hidden');\n                }\n            }\n        });\n        if (this.$('.panel-content-wrap .tokens .all-sessions').children().length)\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').removeClass('hidden');\n        else\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').addClass('hidden');\n    },\n\n    openFingerprint: function (ev) {\n        if (this.model.omemo){\n            let $target = $(ev.target).closest('.device-encryption'),\n                is_own = $target.hasClass('is-own');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.closest('.token-wrap').attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.closest('.token-wrap').attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), is_own);\n        }\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.panel-content-wrap .tokens').addClass('hidden');\n            this.$('.panel-content-wrap .tokens .sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.model.getAllXTokens(() => {\n            this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n            if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                this.renderAllXTokens();\n            }\n        });\n    },\n\n    revokeXToken: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            token_uid = $target.data('token-uid');\n        this.model.revokeXToken([token_uid], () => {\n            if (this.model.get('x_token')){\n                if (this.model.get('x_token').token_uid === token_uid) {\n                    this.model.deleteAccount();\n                    return;\n                }\n                this.model.getAllXTokens(() => {\n                    this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n                    if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                        this.renderAllXTokens();\n                    }\n                });\n            }\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens(() => {\n                        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.device-more-button').switchClass('hidden', !enabled);\n        if (!this.model.omemo){\n            this.$('.btn-manage-devices').addClass('hidden2');\n        }\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n            this.updateXTokens();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n        this.updateXTokens();\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n            xabber.api_account && xabber.api_account.synchronize_main_settings();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n                xabber.api_account && xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = ev.target.value;\n        this.model.settings.update_settings({color: value});\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.unblockSelected();\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.deleteFilesFiltered(ev);\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateEnabled();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$el.find('.sync-marker').showIf(this.model.settings.get('to_sync'));\n    },\n\n    showSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.SettingsAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSyncState, this);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.accounts-head-wrap').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n        this.$('.accounts-head-wrap').showIf(this.model.length);\n        this.parent.$('.settings-tab[data-block-name=\"xmpp-accounts\"] .settings-block-name')\n            .text(this.model.length === 1 ? xabber.getString(\"account\") : xabber.getString(\"settings__menu_item__xmpp_account\") );\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-head').showIf(connected);\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$('.sync-head').hideIf(!connected);\n        this.$('.sync-marker-wrap').hideIf(!connected);\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatar\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    saveAvatar: function (ev) {\n        if (this.registration && this.registration_view){\n            let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.generated = true;\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            }\n        } else {\n            let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176)),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = templates.emojis;\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"render\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    _initialize: function () {\n        this.account = this.model\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        return this;\n    },\n\n    render: function (options) {\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm)\n            .siblings('span.errors').text(options.password_confirm || '');\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.render();\n    },\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                        this.endAuth();\n                    } else {\n                        this.stepped_auth_complete = true\n                        if (this.first_features_received)\n                            this.successFeedback();\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings = xabber.wide_panel.addChild('account_settings',\n        this.NodeView, {classlist: 'settings-panel account-settings-panel'});\n    this.acc_settings_left = xabber.account_settings.addChild('left',\n        this.Container, {classlist: 'account-settings-left-container'});\n    this.acc_settings_right = xabber.account_settings.addChild('right',\n        this.Container, {classlist: 'account-settings-right-container'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_view.addChild('accounts', this.SettingsAccountsBlockView,\n        {model: this.accounts, el: this.settings_view.$('.xmpp-accounts')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-name one-line\"/>')\n                .append('<div class=\"supports\"/>');\n    },\n\n    _initialize: function () {\n        this.render();\n        this.$el.appendTo(this.model.collection.account.settings_right.$('.capabilities'));\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.supports').text(supports ? xabber.getString(\"account_settings__server_info__status_available\") : xabber.getString(\"account_settings__server_info__status_unavailable\"))\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            xabber.get('client_name'),\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.GEOLOC, 'XEP-0080: User Location');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    }\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        });\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._main_interval_worker)\n        this._main_interval_worker.terminate();\n\n    this._main_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._main_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime main to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            this._main_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime main to ping: ' + downtime);\n            this.connection && this.connection.ping.ping(this.get('domain'));\n        }\n    };\n\n    this._main_interval_worker.postMessage({});\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._fast_interval_worker)\n        this._fast_interval_worker.terminate();\n\n    this._fast_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._fast_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_fast_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime fast to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            this._fast_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime fast to ping: ' + downtime);\n            this.fast_connection && this.fast_connection.ping.ping(this.get('domain'));\n        }\n    };\n    this._fast_interval_worker.postMessage({});\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    VanillaQR = env.VanillaQR,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:name\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            cached_info = cached_info || {};\n            let roster_info = {\n                jid: this.get('jid'),\n                in_roster: !_.isUndefined(this.get('in_roster')) ? this.get('in_roster') : cached_info.in_roster,\n                groups: this.get('groups'),\n                subscription: !_.isUndefined(this.get('subscription')) ? this.get('subscription') : cached_info.subscription,\n                roster_name: !_.isUndefined(this.get('roster_name')) ? this.get('roster_name') : cached_info.roster_name,\n                subscription_request_out: this.get('subscription_request_out'),\n                subscription_request_in: this.get('subscription_request_in'),\n                name: this.get('name'),\n                vcard_updated: this.get('vcard_updated')\n            }, full_jid = this.get('full_jid');\n            if (this.get('photo_hash') || this.get('image'))\n                _.extend(roster_info, {\n                    photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                    avatar_priority: this.get('avatar_priority'),\n                    avatar: this.get('image')\n                });\n            if (full_jid)\n                roster_info.resource = Strophe.getResourceFromJid(full_jid);\n            this.account.cached_roster.putInRoster(roster_info);\n        });\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat') && this.get('removed')) {\n            xabber.error(\"removed contact became groupchat\")\n        }\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    onDestroy: function () {\n        if (this.account && this.account.groupchat_settings && this.participants) {\n            this.participants.reset();\n            this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item, {my_info: true});\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let avatar_hash = sha1(image.base64),\n            iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                .c('item', {id: avatar_hash})\n                .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(image.base64),\n            iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                .c('item', {id: avatar_hash})\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n        this.account.sendIQFast(iq_pub_data, () => {\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }, (data_error) => {\n                errback && errback(data_error);\n            });\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n            if (this.get('group_chat')){\n                this.set('group_chat', false);\n                this.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n            }\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        let chat = this.account.chats.getChat(this);\n                        this.removeFromRoster();\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    let chat = this.account.chats.getChat(this);\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    setActiveStateSendInterval: function () {\n        let stanza = $msg({to: this.get('jid'), type: 'chat'}).c('active', {xmlns: Strophe.NS.CHATSTATES});\n        clearTimeout(this._sending_active_chatstate_timeout);\n        clearInterval(this._sending_active_chatstate_interval);\n        this._sending_active_chatstate_timeout = setTimeout(() => {\n            this._sending_active_chatstate_interval = setInterval(() => {\n                this.account.sendMsg(stanza);\n            }, constants.PRESENT_INTERVAL);\n        }, constants.PRESENT_INTERVAL)\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            if (this.details_view && !this.details_view.child('participants')) {\n                this.details_view = new xabber.GroupChatDetailsView({model: this});\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            if (this.details_view && this.details_view.isVisible() && group_chat_info.online_members_num != prev_group_info.online_members_num)\n                this.trigger('update_participants');\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                let chat = this.account.chats.getChat(this),\n                    sync_deleted = this.get('sync_deleted');\n                this.removeFromRoster();\n                if (!sync_deleted){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n    getMessageByStanzaId: function (stanza_id, callback, options) {\n        options = options || {};\n        let queryid = uuid(),\n            account = this.account,\n            is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            receiver = this.get('group_chat') ? this.get('full_jid') || this.get('jid') : this.account.get('jid'),\n            iq = $iq({type: 'set', to: receiver})\n                .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up()\n                .c('field', {'var': 'ids'})\n                .c('value').t(stanza_id).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        let handler = conn.addHandler((message) => {\n            let $msg = $(message);\n            if ($msg.find('result').attr('queryid') === queryid)\n                callback && callback($msg);\n            return true;\n        }, Strophe.NS.MAM);\n        this.account.sendIQFast(iq, () => {\n                conn.deleteHandler(handler);\n            }, () => {\n                conn.deleteHandler(handler);\n            }\n        );\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n            iq.c('field', {'var': `with-tags`});\n            if (options.filter_image)\n                iq.c('value').t('image').up();\n            if (options.filter_video)\n                iq.c('value').t('video').up();\n            if (options.filter_voice)\n                iq.c('value').t('voice').up();\n            if (options.filter_files)\n                iq.c('value').t('document').up();\n            iq.up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = options && options.cached_message? $message.find('content') : $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [], cached_stanza_id;\n        options && options.cached_stanza_id && (cached_stanza_id = options.cached_stanza_id);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id') || cached_stanza_id ,\n                        id: $file.children('gallery-id').text(),\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let user_info = message.get('user_info') || {},\n                participant_info = this.participants.get(user_info.id),\n                chat_content = this.account.chats.get(this.hash_id).item_view.content,\n                is_scrolled = chat_content.isScrolledToBottom(),\n                msg_author = participant_info.get('nickname') || user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            if (is_scrolled)\n                chat_content.scrollToBottom();\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsView = xabber.BasicView.extend({\n    className: 'details-panel contact-details-panel',\n    template: templates.contact_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n        \"change .subscription-info-wrap input\": \"onChangedSubscription\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.resources_view = this.addChild('resources',\n            xabber.ContactResourcesView, {model: this.model.resources,\n                el: this.$('.resources-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.model.on(\"change\", this.update, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.setButtonsWidth();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-delete').showIf(in_roster);\n        this.$('.btn-block-wrap i').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap)').switchClass('non-active', is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    onChangedSubscription: function (ev) {\n        let contact = this.model,\n            $target = $(ev.target),\n            is_checked = $target.prop('checked');\n        if (is_checked) {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.askRequest();\n            else {\n                contact.set('subscription_preapproved', true);\n                contact.acceptRequest();\n            }\n        }\n        else {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.declineSubscription();\n            else\n                contact.declineSubscribe();\n        }\n    },\n\n    openChat: function (ev) {\n        if (ev && ($(ev.target).closest('.button-wrap').hasClass('non-active') || $(ev.target).closest('.button-wrap').length && this.model.get('blocked')))\n            return;\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        this.openChat();\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.ContactDetailsViewRight = xabber.ContactDetailsView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.main-info').removeClass('fixed-scroll');\n        this.$('.main-info .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block:not(.edit-bottom-block) .tabs').removeClass('fixed-scroll');\n        this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.buttons-wrap.fixed-scroll').removeClass('hidden2');\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.main-info .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        if (!this.$('.bottom-block:not(.edit-bottom-block)').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 160\n            || this.$('.bottom-block:not(.edit-bottom-block)').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 110) {\n            this.$('.bottom-block:not(.edit-bottom-block)').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.main-info .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.main-info .block-name.second-text').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block)').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-70},\n            200,\n            () => {\n                this.onScroll();\n                this.ps_container.animate(\n                    {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-70},\n                    0,\n                );\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsView = xabber.BasicView.extend({\n    className: 'details-panel groupchat-details-panel',\n    template: templates.group_chats.group_chat_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"editDefaultRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.participants = this.addChild('participants', xabber.ParticipantsView, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesView, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusView, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit = new xabber.DefaultRestrictionsView({model: this.model});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateList('participants');\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n        this.setButtonsWidth();\n        return this;\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    editDefaultRestrictions: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active'))\n            this.default_restrictions_edit.open();\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    },\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.buttons-wrap.fixed-scroll').removeClass('hidden2');\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 160\n            || this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 110) {\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.main-info').removeClass('fixed-scroll');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').removeClass('fixed-scroll');\n        this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n        this.$('.main-info .buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.main-info .header-buttons .block-name.second-text').text($target.text())\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 70},\n                400,\n                () => {\n                    this.onScroll();\n                    this.ps_container.animate(\n                        {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 70},\n                        0,\n                    );\n                });\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({}, () => {\n                this.$el.html(\"<div class='gallery-files'></div>\");\n                this.updateMedia();\n            });\n        }\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 350;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    getMediaFromDecryptedMessages: function () {\n\n        let dfd = new $.Deferred();\n\n        dfd.done(() => {\n            if (this.filter_type === 'filter_image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            else if (this.filter_type === 'filter_video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            else if (this.filter_type === 'filter_voice')\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n            else if (this.filter_type === 'filter_files')\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n            else\n                this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        }).fail(() => {\n            this.temporary_items = [];\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia()\n        });\n\n        if (this.account.omemo && this.account.omemo.cached_messages){\n\n            let cached_messages = this.account.omemo.cached_messages.getMessages(this.contact);\n\n            for (let [key, value] of Object.entries(cached_messages)) {\n                let msg_items = this.contact.getFilesFromStanza($(value), {cached_message: true, cached_stanza_id: key});\n                if (msg_items.length)\n                    this.temporary_items = this.temporary_items.concat(msg_items);\n            }\n\n            if (this.temporary_items.length){\n\n                let filtered_items = [],\n                    items_count = 0;\n\n                this.temporary_items.forEach((item, idx) => {\n                    if (this.filter_type === 'filter_image' && constants.MIME_TYPES.image.includes(item.media_type) ||\n                        this.filter_type === 'filter_video' && constants.MIME_TYPES.video.includes(item.media_type) ||\n                        this.filter_type === 'filter_voice' && constants.MIME_TYPES.audio.includes(item.media_type) ||\n                        this.filter_type === 'filter_files' &&\n                        !(\n                            constants.MIME_TYPES.image.includes(item.media_type) ||\n                            constants.MIME_TYPES.video.includes(item.media_type) ||\n                            constants.MIME_TYPES.audio.includes(item.media_type)\n                        )){\n                        if (this.filter_type === 'filter_image' && item.sources && item.sources[0]){\n                            this.chat.messages.decryptFile(item.sources[0], item.key).then((result) => {\n                                item.sources[0] = result;\n                                item.thumbnail = null;\n                                filtered_items = filtered_items.concat([item]);\n                                items_count++;\n                                if (items_count === this.temporary_items.length){\n                                    this.temporary_items = filtered_items;\n                                    dfd.resolve();\n                                }\n                            });\n\n                        } else {\n                            filtered_items = filtered_items.concat([item]);\n                            items_count++;\n                        }\n                    } else\n                        items_count++;\n                    if (items_count === this.temporary_items.length){\n                        this.temporary_items = filtered_items;\n                        dfd.resolve();\n                    }\n                });\n            } else {\n                dfd.reject();\n            }\n        } else {\n            dfd.reject();\n        }\n\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, is_encrypted: this.encrypted, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        if (this.filter_type === 'filter_image')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_images\")}`);\n        else if (this.filter_type === 'filter_video')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_videos\")}`);\n        else if (this.filter_type === 'filter_voice')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_voice_messages\")}`);\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                if (messages.length)\n                    $(templates.preloader()).appendTo(this.$('.gallery-files'));\n                else {\n                    this.loading_messages = false;\n                    callback && callback();\n                    return;\n                }\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length || $elem.closest('.audio-control-time').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').length && $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => item.voice)\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 70},\n            400,\n            () => {\n                this.onScroll();\n                this.ps_container.animate(\n                    {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 70},\n                    0,\n                );\n            });\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name.second-text').addClass('fade-out');\n        this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        this.$('.btn-back').removeClass('btn-top');\n        this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.bottom-block').removeClass('fixed-scroll');\n        this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (!this.$('.bottom-block').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 160\n            || this.$('.bottom-block').hasClass('fixed-scroll') && bottom_block_scroll && bottom_block_scroll < 110) {\n            this.$('.bottom-block').addClass('fixed-scroll');\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block').removeClass('fixed-scroll');\n            this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                            this.close();\n                            this.parent.participants._render();\n                        },\n                        (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                        this.parent.participants._render();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.attr('id');\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.contact.get('jid'), id);\n                    this.trigger(\"participants_updated\");\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item, options) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n        (this.contact.get('incognito_chat') && options && options.my_info === true) && (attrs.jid = this.account.get('jid'));\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false, 'is_accepted': undefined});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.pres('subscribed');\n        contact.set('known', true);\n        contact.set('removed', false);\n        setTimeout(() => {\n            contact.pres('subscribe');\n        }, 500);\n        this.blockInvitation();\n        contact.getMyInfo();\n        this.openChat();\n        contact.trigger('remove_invite', contact);\n        let chat = this.account.chats.getChat(this.model);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n        contact.trigger('remove_invite', contact);\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field label': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add)\n            this.$('.groups-wrap').hideIf(false)\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').addClass('visible');\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n            this.$('.new-group-name input').addClass('visible');\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.new-group-name input').removeClass('visible');\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field && this.group_name_field.updateValue(true);\n        this.group_description_field && this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n        });\n        this.model.getBlockedParticipants((response) => {\n            this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n            });\n            this.model.getBlockedParticipants((response) => {\n                this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        this.settings_view.show();\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            if (attrs.group_chat && attrs.is_deleted) {\n                delete attrs.group_chat;\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION},\n            cached_conversations_exclude = options.cached_conversations_exclude || [];\n        if (options.stamp)\n            request_attrs.stamp = options.stamp;\n        delete(options.stamp);\n        delete(options.cached_conversations_exclude);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync, cached_conversations_exclude).then(() => {\n            });\n        });\n    },\n\n    syncCachedConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(cached_conversations).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync, cached_conversations);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync, cached_conversations) {\n        if (!$(item).length){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (cached_conversations){\n            $(cached_conversations).each((idx, conv) => {\n                if (!(conv.account_conversation_type && conv.account_conversation_type.split))\n                    return;\n                let cached_conv_type_jid = conv.account_conversation_type.split('/')[0];\n                if ((cached_conv_type_jid === jid) && (conv.account_conversation_type !== ($(item).attr('jid') +  '/' + $(item).attr('type')))){\n                    if ($item.attr('type') === Strophe.NS.GROUP_CHAT || conv.account_conversation_type.includes(Strophe.NS.GROUP_CHAT)){\n                        this.account.cached_sync_conversations.removeFromCachedConversations(conv.account_conversation_type);\n                    }\n                };\n            });\n        }\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,},\n            current_chat_timestamp = chat.get('last_sync_timestamp');\n        if (current_chat_timestamp && current_chat_timestamp > chat_timestamp){\n            console.log('old_sync_conv');\n            console.log(item);\n            return;\n        }\n        chat.set('last_sync_timestamp', chat_timestamp);\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        chat.set('sync_type', type);\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            if (!(chat.last_message && chat.last_message.get('message')))\n                chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            } else {\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            contact && contact.details_view && contact.details_view.isVisible() && xabber.body.setScreen(xabber.body.screen.get('name'), {right: undefined});\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n                contact.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(contact.get('jid'));\n            }\n        }\n        else\n            contact && contact.set('sync_deleted', false);\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.trigger('update_last_read_msg', {sync_update: true});\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (request_with_stamp && chat.retraction_version !== 0 && chat.retraction_version < msg_retraction_version)\n            chat.trigger(\"get_retractions_list\");\n        msg_retraction_version && (chat.retraction_version = msg_retraction_version);\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (!(encrypted && !this.account.omemo)){\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && !(msg.get('type') === 'system') && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))//TODO: change to timestamp checking\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                    msg.get('stanza_id') && chat.set('synced_msg', msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: async function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync, cached_conversations_exclude) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        xabber.chats_view.hideChatsFeedback();\n        if (!request_with_stamp)\n            this.account.chats.getSavedChat();\n        if (is_first_sync)\n            this.account.set('first_sync', sync_timestamp);\n        if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                if (!is_last_sync){\n                    cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                        return $(this).attr('jid') +  '/' + $(this).attr('type');\n                    }).toArray());\n                    res = res.filter(item => !cached_conversations_exclude.includes(item.account_conversation_type));\n                    this.syncCachedConversations(null, request_with_stamp, is_first_sync, res);\n                }\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                this.account.cached_sync_conversations.putInCachedConversations({\n                    account_conversation_type: 'last_sync_timestamp',\n                    timestamp: sync_timestamp,\n                });\n                if (!is_last_sync){\n                    this.account.sendPresence();\n                    let saved_chat = this.account.chats.getSavedChat();\n                    saved_chat.set('opened', true);\n                    saved_chat.item_view.updateLastMessage();\n                    this.account.getAllMessageRetractions((result) => {\n                        let retract_version = $(result).find(`query[xmlns=\"${Strophe.NS.REWRITE}\"]`).attr('version');\n                        if (retract_version > this.account.retraction_version)\n                            this.account.retraction_version = retract_version;\n                    })\n                    this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n                }\n            });\n        }\n        else if ($(iq).find('conversation').length) {\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray());\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                let sync_options = {max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after};\n                if (request_with_stamp)\n                    sync_options.stamp = request_with_stamp;\n                if (is_last_sync)\n                    sync_options.last_version_sync = true;\n                if (cached_conversations_exclude && cached_conversations_exclude.length)\n                    sync_options.cached_conversations_exclude = cached_conversations_exclude;\n                this.syncFromServer(sync_options);\n            });\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n            this.account.dfd_presence.resolve();\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item) {\n        let jid = item.getAttribute('jid');\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n        }\n        if (subscription === 'from')\n            attrs.subscription_request_in = false;\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        if (!this.roster)\n            this.roster = this.account.roster;\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .blocked-item\": \"onTabClick\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n        this.hideTabs();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n        this.updateIndicator();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.parent.$('.btn-unblock-selected').hideIf(!has_changes)\n        this.parent.$('.btn-deselect-blocked').hideIf(!has_changes)\n        this.parent.$('.btn-block').hideIf(has_changes)\n    },\n\n    unblockSelected: function (ev) {\n        let selected = this.$('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    onTabClick: function (ev) {\n        let tab = $(ev.target).closest('.blocked-item'),\n            tab_name = $(ev.target).closest('.blocked-item').attr('data-tab-name');\n        this.$('.blocked-item a').removeClass('active');\n        tab.find('a').addClass('active');\n        this.$('.blocked-items-container').addClass('hidden');\n        this.$('.' + tab_name).removeClass('hidden');\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    hideTabs: function () {\n        this.$('.tabs').hideIf(this.$('.blocked-item:not(.hidden)').length === 1)\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let tab_name = $(item).closest('.blocked-items-container').addClass('hidden').attr('data-tab-name');\n            this.$('.' + tab_name).addClass('hidden').removeClass('tab');\n        });\n        if (this.$('.blocked-item.hidden .active').length){\n            this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n\n        }\n        this.hideTabs();\n        this.updateUnblockButton();\n        this.updateIndicator();\n    },\n\n    onContactAdded: function (attrs) {\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.invitations-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-invitations-wrap').find('.blocked-invitations').append(tmp);\n        }\n        else if (attrs.domain) {\n            this.$('.domains-item').removeClass('hidden').addClass('tab');\n            let $domain_wrap = this.$('.blocked-domains-wrap'),\n                $desc = $domain_wrap.find('.blocked-item-description');\n            $domain_wrap.find('.blocked-domains').append(tmp);\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        else {\n            this.$('.contacts-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-contacts-wrap').find('.blocked-contacts').append(tmp);\n            let $desc = this.$('.blocked-contacts-wrap .blocked-item-description');\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        this.$('.placeholder').addClass('hidden');\n        this.hideTabs();\n        this.updateIndicator();\n        if (this.$('.blocked-items-container.hidden').length === 3)\n            this.$('.blocked-list:not(:empty)').closest('.blocked-items-container').removeClass('hidden');\n        this.isVisible() && this.parent.updateScrollBar();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        let blocked_list = $elem.closest('.blocked-list'),\n            reg = new RegExp(('\\\\,\\\\s' + jid + '|' + jid + '\\\\,\\\\s' + '|' + jid)),\n            blocked_contacts_desc = $elem.closest('.blocked-contacts-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description'),\n            blocked_domains_desc = $elem.closest('.blocked-domains-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description');\n        $elem.closest('.blocked-invitations-wrap').showIf(blocked_list.children().length > 1);\n        blocked_contacts_desc.text(blocked_contacts_desc.text().replace(reg, \"\"));\n        blocked_domains_desc.text(blocked_domains_desc.text().replace(reg, \"\"));\n        $elem.detach();\n        this.$('.placeholder').hideIf(this.account.blocklist.length());\n        this.parent.updateScrollBar();\n        this.hideEmptyContainers();\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            let contact = this.getContactForItem(selection);\n            contact && contact.showDetails();\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el = this.model.account.settings_right.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"contact_list__placeholder\"));\n        }\n    },\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            contact.trigger('presence', contact, 'subscribe_from');\n            contact.trigger(\"open_chat\", contact, {right_force_close: true});\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-v108-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_open_failed\", () => {\n        this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: 0}));\n        this.trigger('roster_created');\n    });\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n            this.trigger('roster_created');\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            this.resources.reset();\n            this.contacts.each(function (contact) {\n                contact.resources.reset();\n                contact.resetStatus();\n            });\n            this.cached_roster.getAllFromRoster((roster_items) => {\n                $(roster_items).each((idx, roster_item) => {\n                    if (roster_item.jid === 'roster_version'){\n                        return;\n                    }\n                    this.contacts.mergeContact(roster_item);\n                });\n                if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                    let options = {};\n                    this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                        let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                        !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                        last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                        this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                        this.roster.getRoster();\n                    });\n                }\n                else {\n                    this.roster.getRoster();\n                }\n                this.blocklist.getFromServer();\n            });\n        });\n        console.log(this.roster);\n        if (this.roster) {\n            dfd.resolve();\n        } else {\n            this.once('roster_created', () => {\n                dfd.resolve();\n            });\n        }\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    if (this.roster) {\n        this.roster.registerHandler();\n    } else {\n        this.once('roster_created', () => {\n            this.roster.registerHandler();\n        });\n    }\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.roster_settings_view = xabber.settings_view.addChild(\n        'roster_settings', this.RosterSettingsView, {model: this._roster_settings});\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id change:stanza_id change:archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id',  this.get('stanza_id') || this.get('archived_id') || this.get('origin_id') || this.get('msgid'));\n    },\n\n    destroyOnEcho: function () {\n        this.set('state', constants.MSG_DELIVERED);\n        if (this.collection && this.collection.chat && this.collection.chat.item_view && this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content.removeMessage(this);\n        else\n            this.destroy();\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection && this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    }\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n        if (!message){\n            message = this.findWhere({'origin_id': origin_id});\n        }\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.is_unread_archived && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched)\n            return message;\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived,\n                is_unread_archived: options.is_unread_archived,\n                is_between_anchors: options.is_between_anchors,\n                not_encrypted: options.not_encrypted || null,\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        id: $file.children('gallery-id').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.is_unread_archived && (attrs.type !== 'system')){\n            let last_read_msg = this.find(m => this.chat.get('last_read_msg') && (m.get('stanza_id') === this.chat.get('last_read_msg') || m.get('contact_stanza_id') === this.chat.get('last_read_msg')));\n            if (last_read_msg){\n                if (Number(moment(attrs.time)) > last_read_msg.get('timestamp'))\n                    attrs.is_unread = true\n            } else {\n                attrs.is_unread = true\n            }\n        }\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (options.carbon_copied && options.encrypted && this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if (options.echo_msg && message) {\n            message.destroyOnEcho();\n        }\n        if ((options.replaced || options.encrypted && options.is_unread_archived) && message) {\n            message.set(attrs);\n            return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.xabber.org:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n          });\n      },\n\n      createVideoStream: function () {\n          navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n        this.on(\"update_last_read_msg\", this.onChangedLastReadMsg, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n    onChangedLastReadMsg: function (options) {\n        if (this.get('prev_last_read_msg') && this.get('last_read_msg') && this.get('prev_last_read_msg') !== this.get('last_read_msg')){\n            if (this.item_view && !this.item_view.content){\n                this.item_view.content = new xabber.ChatContentView({chat_item: this.item_view});\n            }\n            this.item_view.content._no_scrolling_event = true;\n            let query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                is_first: true,\n                sync_update: options && options.sync_update ? true : false,\n                var: [\n                    {var: 'after-id', value: this.get('prev_last_read_msg')},\n                    {var: 'before-id', value: this.get('last_read_msg')},\n                ]\n            };\n            this.requestHistoryBetweenAnchors(query);\n\n        }\n        this.set('prev_last_read_msg', this.get('last_read_msg'));\n    },\n\n    requestHistoryBetweenAnchors: function (query) {\n        this.item_view.content.MAMRequest(query, (success, messages, rsm) => {\n            if (rsm.complete)\n                this.set('last_sync_unread_id', this.get('last_read_msg'));\n            if (query.is_first && !query.sync_update) {\n                let read_count = Number(rsm.count) + 1;\n                read_count = this.get('const_unread') - read_count;\n                (read_count < 0) && (read_count = 0);\n                this.set('const_unread', read_count);\n            }\n            if (!rsm.complete && (rsm.count > messages.length)){\n                query.after = rsm.last;\n                query.is_first = false;\n                this.requestHistoryBetweenAnchors(query);\n            }\n            _.each(messages, (message) => {\n                let message_item = this.account.chats.receiveChatMessage(message,\n                        {\n                            is_archived: true,\n                            is_between_anchors: true,\n                        }\n                    );\n                message_item && message_item.set('is_unread', false)\n            });\n            if (rsm.complete){\n                let last_read_msg = this.messages.find(m => this.get('last_read_msg') && (m.get('stanza_id') === this.get('last_read_msg') || m.get('contact_stanza_id') === this.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    last_read_msg && last_read_msg.set('is_unread', false);\n                    if (this.item_view.content.isVisible()){\n                        this.item_view.content._long_reading_timeout = true;\n                        this.item_view.content.scrollToUnread();\n                    } else {\n                        this.set('show_new_unread', true);\n                    }\n                    this.item_view.content._no_scrolling_event = false;\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve()\n                    });\n                } else {\n                    deferred.resolve()\n                }\n            }\n        }, (err) => {\n            console.log('error');\n        });\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        if (this.item_view && this.item_view.content && stanza_id)\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${unique_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        message.set('stanza_id', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio')) {\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"jingle__system_message__no_devices_to_answer\")\n            });\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy();\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQ(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall();\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio('busy');\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else{\n            return this.messages.createFromStanza($message, options);\n        }\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && !options.encrypted && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id),\n            dfd = new $.Deferred;\n\n        dfd.done(() => {\n            if (message) {\n                if (options.searched_messages)\n                    message.set('searched_message', false);\n                let stanza_id = message.get('stanza_id');\n                this.messages_view = new xabber.MessageContextView({\n                    contact: this.contact,\n                    mention_context: options.mention,\n                    model: this,\n                    stanza_id_context: stanza_id,\n                    encrypted: options.encrypted\n                });\n                this.account.context_messages.add(message);\n                this.messages_view.messagesRequest({after: stanza_id}, () => {\n                    let screen = 'all-chats';\n                    if (options.mention)\n                        screen = 'mentions';\n                    else if (options.message)\n                        screen = xabber.body.screen.get('name');\n                    xabber.body.setScreen(screen, {\n                        right: 'message_context',\n                        model: this,\n                    }, {\n                        right_contact_save: true\n                    });\n                });\n            }\n\n        })\n        if (!message) {\n            message = messages.models.find(item => {\n                return item.get('origin_id') === unique_id;\n            })\n            if (!message) {\n                this.contact.getMessageByStanzaId(unique_id, ($message) => {\n                    if (options.encrypted && this.account.omemo) {\n                        let omemo_dfd = new $.Deferred;\n                        omemo_dfd.done(($msg, msg_options) => {\n                            msg_options = msg_options || {};\n                            msg_options.searched_message = true;\n                            message = this.account.chats.receiveChatMessage($msg[0], msg_options);\n                            dfd.resolve();\n                        }).fail(() => {\n                            dfd.resolve();\n                        });\n                        message = this.account.omemo.receiveChatMessage($message, {\n                            searched_message: true,\n                            gallery: true,\n                        }, omemo_dfd);\n\n                    } else {\n                        message = this.account.chats.receiveChatMessage($message, {\n                            searched_message: true,\n                        });\n                        dfd.resolve();\n                    }\n                }, {encrypted: options.encrypted});\n\n            } else {\n                dfd.resolve()\n            }\n        } else {\n            dfd.resolve()\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DISPLAYED));\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg){\n                enc_chat.receiveCarbonsMarker($marker);\n                return;\n            }\n        }\n        if (this.get('const_unread') && this.get('last_read_msg')){\n            let last_read_msg_id = this.get('last_read_msg'),\n                last_read_msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === last_read_msg_id || m.get('contact_stanza_id') === last_read_msg_id)),\n                deferred = new $.Deferred(),\n                second_deferred = new $.Deferred(),\n                new_last_read_msg = msg;\n            second_deferred.done(() => {\n                if (last_read_msg.get('timestamp') < new_last_read_msg.get('timestamp')){\n                    this.set('last_read_msg', new_last_read_msg.get('stanza_id'))\n                    this.trigger('update_last_read_msg');\n                }\n            });\n            deferred.done(() => {\n                if (!new_last_read_msg){\n                    this.contact.getMessageByStanzaId(stanza_id, ($message) => {\n                        new_last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        second_deferred.resolve()\n                    });\n                } else {\n                    second_deferred.resolve()\n                }\n            });\n            if (!last_read_msg){\n                this.contact.getMessageByStanzaId(last_read_msg_id, ($message) => {\n                    last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                    deferred.resolve()\n                });\n            } else {\n                deferred.resolve()\n            }\n        }\n        if (msg_idx > -1) {\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {\n                        id: (this.get('group_chat') && contact_stanza_id || stanza_id),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: symmetric,\n                        type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {\n                id: user_id,\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: true\n            });\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: symmetric\n        };\n        retract_attrs.conversation = this.get('jid');\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.content_placeholder = new xabber.ChatContentPlaceholderView();\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    render: function () {\n        if (this.model.get('saved') && (this.$('.chat-title').text() !== xabber.getString(\"saved_messages__header\"))) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n        }\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 && !(!msg.get('synced_from_server') && msg.get('encrypted') && this.model.get('encrypted'))){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n        this.updateLastMessage();\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        msg || (msg = this.model.last_message);\n        if (!this.model.get('active') && this.model.item_view && this.model.item_view.content && this.model.item_view.content.bottom && this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea().trim()){\n            let draft_message = this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea();\n            this.$('.last-msg').html(draft_message).prepend($(`<span class=\"text-color-700\">${xabber.getString(\"draft\")}: </span>`));\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            msg && this.model.set({timestamp: msg.get('timestamp')});\n            return;\n        }\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=text-color-700/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        type: Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT,\n                        symmetric: false,\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0], msg);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          this.account.context_messages.on(\"change:is_unread\", this.onChangedReadState, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n\n          clearTimeout(this._onscroll_read_messages_timeout);\n          this._onscroll_read_messages_timeout = setTimeout(() => {\n              this.chat_content.readVisibleMessages(true);\n          }, 100)\n      },\n\n      onChangedReadState: function (message) {\n          let is_unread = message.get('is_unread'),\n              $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n          if (is_unread) {\n              $msg.addClass('unread-message');\n              $msg.addClass('unread-message-background');\n          } else {\n              $msg.removeClass('unread-message');\n              setTimeout(() => {\n                  $msg.removeClass('unread-message-background');\n              }, 1000);\n          }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n\n          let msg_item = this.model.messages.find(msg => msg.get('stanza_id') == message.get('stanza_id') || msg.get('contact_stanza_id') == message.get('stanza_id'));\n          if (msg_item) {\n              msg_item.get('is_unread') && message.set('is_unread', msg_item.get('is_unread'));\n              msg_item.get('is_unread_archived') && message.set('is_unread_archived', msg_item.get('is_unread_archived'));\n          }\n\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max){\n                      if (this.parent &&  this.parent.data && !this.parent.data.get('visible') || this.parent.model.get('search_hidden'))\n                          return;\n                      else\n                          this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  }\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.emptyChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\nxabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .back-to-unread:not(.back-to-bottom)\": \"scrollToUnreadWithButton\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if ((this.model.sync_created && this.model.last_message) || options.new_message && !options.new_message.get('synced_from_server') && options.new_message.get('encrypted') && this.model.get('encrypted')){\n            this.model.last_message && this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        this._is_scrolled_bottom = true;\n        this._long_reading_timeout = false;\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n    render: function () {\n        this.cancelSearch();\n        if (this._prev_scrolltop)\n            this.scrollTo(this._prev_scrolltop);\n        else\n            this.scrollToBottom();\n        this.onScroll();\n        this.updateCounter();\n        this.updateContactStatus();\n        this.updateWaveforms();\n        this.onUpdatePlyr();\n        if (this.contact) {\n            this.contact.get('group_chat') && this.updatePinnedMessage();\n            this.subscription_buttons.render();\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n    onTrustedChanged: function (message) {\n        let trusted = message.get('trusted'),\n            $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n        (trusted === null) && (trusted = 'none');\n        $message.attr('data-trust', trusted);\n    },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both' && this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n            this.model.get('active') && this.onChangedActiveStatus();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active){\n                this.contact.setActiveStateSendInterval();\n            }\n            else{\n                clearTimeout(this.contact._sending_active_chatstate_timeout);\n                clearInterval(this.contact._sending_active_chatstate_interval);\n            }\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readVisibleMessages: function (is_context) {\n        let self = is_context ? this.model.messages_view : this;\n        if (!self.isVisible())\n            return;\n        if (self.$('.chat-message.unread-message').length && xabber.get('focused') && !xabber.get('idle')){\n            let last_visible_unread_msg;\n            self.$('.chat-message.unread-message').each((idx, msg) => {\n                if ($(msg).isVisibleInContainer(self.$('.chat-content'))) {\n                    last_visible_unread_msg = msg;\n                }\n            });\n            if (last_visible_unread_msg){\n                this.readMessage(this.model.messages.get($(last_visible_unread_msg).data('uniqueid')), $(last_visible_unread_msg), is_context);\n            }\n        }\n    },\n\n    hideMessagesAfterSkipping: function () {\n        if (this.model.get('last_sync_unread_id')){\n            let synced_message = this.model.get('synced_msg'),\n                $synced_message = this.$(`.chat-message[data-uniqueid=\"${synced_message.get('unique_id')}\"]`);\n            $synced_message.addClass('after-skip-message');\n            $synced_message.prevAll('.chat-message.after-skip-message').removeClass('after-skip-message');\n            $synced_message.nextAll('.chat-message:not(.after-skip-message)').addClass('after-skip-message');\n        } else {\n            this.$('.chat-message.after-skip-message').removeClass('after-skip-message');\n        }\n    },\n\n    readMessage: function (last_visible_msg, $last_visible_msg, is_context) {\n        clearTimeout(this._read_last_message_timeout);\n        this._read_last_message_timeout = setTimeout(() => {\n            this.model.sendMarker(last_visible_msg.get('msgid'), 'displayed', last_visible_msg.get('stanza_id'), last_visible_msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', last_visible_msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', last_visible_msg.get('stanza_id'));\n\n            if (is_context){\n                let unread_context_messages = _.clone(this.account.context_messages.models).filter(item => Boolean(item.get('is_unread')) || Boolean(item.get('is_unread_archived')));\n                _.each(unread_context_messages, (msg) => {\n                    let msg_item = this.model.messages.find(message => message.get('stanza_id') == msg.get('stanza_id') || message.get('contact_stanza_id') == msg.get('stanza_id'));\n                    if (msg_item) {\n                        msg.set('is_unread', msg_item.get('is_unread'));\n                        msg.set('is_unread_archived', msg_item.get('is_unread_archived'));\n                    }\n                });\n                setTimeout(() => {\n                    $last_visible_msg.removeClass('unread-message-background');\n                }, 1000);\n            }\n\n            xabber.toolbar_view.recountAllMessageCounter();\n        }, 1000)\n\n        if (last_visible_msg.get('is_unread_archived') || this.model.last_message && (last_visible_msg.get('unique_id') === this.model.last_message.get('unique_id')) || this.model.get('const_unread')){\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread'))),\n                read_count = 0;\n\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                    read_count++;\n                }\n            });\n            read_count = this.model.get('const_unread') - read_count;\n            (read_count < 0) && (read_count = 0);\n            this.model.set('const_unread', read_count);\n        } else {\n            let unread_messages = _.clone(this.model.messages_unread.models);\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                }\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n\n        if (!is_context){\n            setTimeout(() => {\n                $last_visible_msg.removeClass('unread-message-background');\n            }, 1000);\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        this.model.set('show_new_unread', false);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            msg.set('is_unread', false);\n            msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n            msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                msg.set('is_unread', false);\n                msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n                msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n            }\n        }\n        if (!unread_messages.length) {\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread')));\n            _.each(unread_messages, (msg) => {\n                msg.set('is_unread', false);\n            });\n        }\n    },\n\n    showUnreadMarker: function () {\n        this.$('.unread-marker').remove();\n        if (this.$(`.chat-message.unread-message`).length){\n            let text = xabber.getQuantityString(\"new_chat_messages_no_number\", this.model.get('const_unread') + this.model.get('unread')),\n                $template = $(templates.unread_marker({text: text}));\n            $template.insertBefore(this.$(`.chat-message.unread-message:first`));\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    scrollToUnread: function () {\n        let $last_read_msg = this.$(`.chat-message.unread-message:first`);\n        $last_read_msg.length && (this.scrollTo(this.getScrollTop()\n            - (this.$el.height() * 0.2) + $last_read_msg.offset().top));\n        if (this.model.get('last_sync_unread_id')) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    scrollToUnreadWithButton: function () {\n        this.scrollToUnread();\n        this.$('.back-to-unread').addClass('back-to-bottom');\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.back-to-unread-counter').text(unread || '');\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n    },\n\n    onScrollY: function () {\n        this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n        this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n        this._is_scrolled_bottom = this.isScrolledToBottom();\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    onScroll: function (ev, is_focused) {\n        if (!this.isVisible() || this._no_scrolling_event)\n            return;\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        if (this.$('.unread-marker').length) {\n            let marker = this.$('.unread-marker');\n            if (marker[0].offsetTop < this._scrolltop)\n                marker.remove();\n        }\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        let scroll_read_timer = this._long_reading_timeout || is_focused ? 100 : 100;\n        clearTimeout(this._onscroll_read_messages_timeout);\n        this._onscroll_read_messages_timeout = setTimeout(() => {\n            this.readVisibleMessages();\n        }, scroll_read_timer)\n        this._long_reading_timeout = false;\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n        this.hideMessagesAfterSkipping();\n        if (this._scrolltop > this._prev_scrolltop && this.model.get('last_sync_unread_id') && this.getPercentScrolled() > 0.2) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    backToBottom: function () {\n        this.model.set('last_sync_unread_id', undefined);\n        this.hideMessagesAfterSkipping();\n        this._no_scrolling_event = true;\n        this.removeAllMessagesExceptLast();\n        this.readMessages();\n        this.model.resetUnread();\n        this.model.set('history_loaded', false);\n        this.loadPreviousHistory();\n        this._long_reading_timeout = false;\n        this._no_scrolling_event = false;\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq, _interval, handler;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE)) {\n            iq.c('field', {'var': `conversation-type`});\n            if (this.model.get('encrypted')){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let sendMAMRequest = function(func_conn) {\n                handler = func_conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let _delete_handler_timeout = setTimeout(() => {\n                    console.log('handler deleted');\n                    func_conn.deleteHandler(handler);\n                }, 14000);\n                let callb = function (res) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        account.chats.onCompletedMAMRequest(deferred);\n                        let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                        if ($fin.length && $fin.attr('queryid') === queryid) {\n                            let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                            rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                            callback && callback(success, messages, rsm);\n                        }\n                    },\n                    errb = function (err) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        xabber.error(\"MAM error\");\n                        xabber.error(err);\n                        account.chats.onCompletedMAMRequest(deferred);\n                        errback && errback(err);\n                    };\n                console.log('trying to send')\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            };\n            let is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection;\n\n            if (conn.connected){\n                sendMAMRequest(conn);\n            }\n            let send_counter = 0;\n            _interval = setInterval(() => {\n                is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                    && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline';\n                conn = is_fast ? account.fast_connection : account.connection;\n                conn && console.log(conn.connected);\n                if (!conn || send_counter >= 1){\n                    clearInterval(_interval);\n                    errback && errback('No connection or too many attempts');\n                    return;\n                }\n                if (conn.connected && send_counter < 1){\n                    send_counter++;\n                    sendMAMRequest(conn);\n                }\n            }, 15000);\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history || options.unread_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n        this.MAMRequest(query, (success, messages, rsm) => {\n            clearTimeout(this._load_history_timeout);\n            this._loading_history = false;\n            this.hideHistoryFeedback();\n            if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                this.getMessageArchive({after: rsm.last}, {missed_history: true});\n            if (options.unread_history){\n                if (messages.length)\n                    this.model.set('last_sync_unread_id', $(messages[messages.length - 1]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id'));\n                else {\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n            }\n            if (options.unread_history_first && messages.length){\n                let first_unread_msg_stanza_id = $(messages[0]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id')\n                this.model.set('first_unread_msg_stanza_id', first_unread_msg_stanza_id);\n                if (messages.length < query.max){\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n                this.getMessageArchive({\n                    fast: true,\n                    max: xabber.settings.mam_messages_limit,\n                    before : first_unread_msg_stanza_id\n                }, {unread_history_before: true});\n            }\n            if (this.model.get('group_chat')) {\n                if (this.contact && !this.contact.my_info)\n                    this.contact.getMyInfo();\n            }\n            else {\n                if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                    this.contact.getLastSeen();\n            }\n            if (options.previous_history && (messages.length < query.max) && success) {\n                this.model.set('history_loaded', true);\n            }\n            if (options.previous_history || options.unread_history_before || !this.model.get('first_archive_id')) {\n                rsm.first && this.model.set('first_archive_id', rsm.first);\n            }\n            if (options.last_history || !this.model.get('last_archive_id')) {\n                rsm.last && this.model.set('last_archive_id', rsm.last);\n            }\n            _.each(messages, function (message) {\n                let loaded_message = account.chats.receiveChatMessage(message,\n                    _.extend({\n                        is_archived: true,\n                        is_unread_archived: options.unread_history ? true : undefined,\n                    }, options)\n                );\n                if (loaded_message) counter++;\n            });\n            if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                this.getMessageArchive(_.extend(query, {\n                    max: xabber.settings.mam_messages_limit,\n                    before: this.model.get('first_archive_id') || ''\n                }), {previous_history: true});\n            }\n            if (options.unread_history_before){\n                if (this.model.get('encrypted')){\n                    //TODO: make async func to start opening chat after all messages been handled in enc chat\n                    setTimeout(() => {\n                        this.model._wait_load_unread_history.resolve();\n                    }, 1000);\n                } else\n                    this.model._wait_load_unread_history.resolve();\n            }\n        }, (err) => {\n            if (options.previous_history) {\n                this._loading_history = false;\n                this.showHistoryFeedback(true);\n            }\n            if (options.unread_history_before || options.unread_history_first){\n                this.model._wait_load_unread_history.resolve();\n            }\n        });\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    loadUnreadHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.model.set('loading_unread_history', true)\n        this.getMessageArchive({\n            fast: true,\n            max: xabber.settings.mam_messages_limit,\n            after: this.model.get('last_read_msg'),\n        }, {\n            unread_history_first: true,\n            unread_history: true,\n        });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                participant_info = {};\n            pinned_message.get('user_info') && this.contact.participants && (participant_info = this.contact.participants.get(pinned_message.get('user_info').id));\n            participant_info.attributes && pinned_message.set('user_info', participant_info.attributes);\n\n            let msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message, pinned: true});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg, pinned_message);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && !message.get('is_unread_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (!(message.get('synced_from_server') || (message.get('is_archived') && !message.get('missed_msg')))) {\n            if (message.get('missed_msg')){\n                let last_read_msg = this.model.messages.find(m => this.model.get('last_read_msg') && (m.get('stanza_id') === this.model.get('last_read_msg') || m.get('contact_stanza_id') === this.model.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    if (last_read_msg && message.get('timestamp') > last_read_msg.get('timestamp')){\n                        message.set('is_unread', true);\n                        if (!xabber.get('focused')) {\n                            if (this.model.get('saved') || this.model.isMuted())\n                                message.set('muted', true);\n                        }\n                        this.model.setMessagesDisplayed(message.get('timestamp'));\n                    }\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.model.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve();\n                    });\n                } else {\n                    deferred.resolve();\n                }\n            } else {\n                if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                    message.set('is_unread', true);\n                    if (message.get('is_unread') && xabber.get('focused') && !xabber.get('idle') && this.isVisible()){\n                        this.readVisibleMessages();\n                    }\n                    if (!xabber.get('focused')) {\n                        if (this.model.get('saved') || this.model.isMuted())\n                            message.set('muted', true);\n                        else if (!message.get('synced_invitation_from_server'))\n                            this.notifyMessage(message);\n                    }\n                    this.model.setMessagesDisplayed(message.get('timestamp'));\n                }\n            }\n            if (this.contact && this.model.get('archived')){\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (this.isVisible() && (!message.get('is_unread') || is_scrolled_to_bottom) && !message.get('is_between_anchors')) {\n            let is_scrolling_needed;\n            if (is_scrolled_to_bottom){\n                if (this.$(`.chat-message.unread-message`).length){\n                    if (this.$(`.chat-message.unread-message`)[0].offsetTop > (this._scrolltop + 140)) {\n                        is_scrolling_needed = true;\n                    }\n                } else\n                    is_scrolling_needed = true;\n            }\n            if ((is_scrolled_to_bottom && is_scrolling_needed) || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else if (!is_scrolled_to_bottom) {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (message.get('synced_from_server') && message.get('is_unread')) {\n            this.onChangedReadState(message);\n        }\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n\n        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context' && this.model.messages_view.last_history_loaded)\n            this.account.context_messages.add(message);\n\n    },\n\n\n    decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom();\n        if (this.model.get('encrypted') || message.get('encrypted') || force) {\n            let images = message.get('images') || [];\n            if (images.length) {\n                images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = [];\n                        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                            $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        else\n                            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            }\n            let fwd_msgs = message.get('forwarded_message') || [];\n            fwd_msgs.forEach((fwd_msg) => {\n                let fwd_images = fwd_msg.get('images') || [];\n                fwd_images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] .fwd-message[data-uniqueid=\"${fwd_msg.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            });\n        }\n    },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_message = this.$(`.chat-message[data-uniqueid=\"${this.model.messages.models[index - 1].get('unique_id')}\"]`);\n            if (!$prev_message.length) {\n                $prev_message = this.addMessage(this.model.messages.models[index - 1]);\n            }\n            $message.insertAfter($prev_message);\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0], message);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0], item);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeAllMessagesExceptLast: function () {\n        let messages_to_save = [];\n        if (!this.model.messages)\n            return;\n        this.model.messages.forEach((message, idx) => {\n            if (idx === (this.model.messages.length - 1)){\n                messages_to_save.push(message);\n                this.model.set('first_archive_id', message.get('stanza_id'));\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message');\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message-background');\n                return;\n            }\n            let $message, $message_in_chat;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`));\n            $message.prev('.chat-day-indicator').remove();\n            $message.remove();\n        });\n        this.model.messages.reset(messages_to_save);\n        this.updateScrollBar();\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n        attrs.not_encrypted = attrs.not_encrypted || null;\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.is_unread && 'unread-message',\n            attrs.is_unread && 'unread-message-background',\n            attrs.not_encrypted && 'not-decrypted',\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('encrypted')){\n            if (attrs.hasOwnProperty('submitted_here')){\n                $message.attr('data-trust', true);\n            } else if (attrs.hasOwnProperty('is_trusted')){\n                $message.attr('data-trust', attrs.is_trusted);\n            } else {\n                $message.attr('data-trust', this.$el.attr('data-trust'));\n            }\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        return $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    video_file && (player.video_file = video_file);\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem, msg) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg, msg);\n        }\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n\n        ($msg.find('.not-decrypted-icon').length) && $msg.find('.not-decrypted-icon').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        });\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n    attentionMessage: function () {\n        let notification = xabber.popupNotification({\n            title: this.contact.get('name'),\n            text: xabber.getString(\"chats_attention\"),\n            icon: this.contact.cached_image.url\n        });\n        notification.onclick = () => {\n            window.focus();\n            this.model.trigger('open');\n        };\n        let sound = xabber.settings.sound_on_attention;\n        xabber.playAudio(sound);\n    },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n    msgCallback: function (msg_sending_timestamp, message) {\n        this.bottom.click_counter = 0;\n        this.bottom.setDefaultPlaceholder();\n        if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n            setTimeout(() => {\n                if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                    message.set('state', constants.MSG_SENT);\n                } else {\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {\n                        (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                    });\n                    setTimeout(() => {\n                        if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                            message.set('state', constants.MSG_ERROR);\n                    }, 5000);\n                }\n            }, 1000);\n        }\n        else {\n            let _pending_time = 5, was_reconnecting;\n            if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                was_reconnecting = true;\n            if (this.account.session.get('reconnecting'))\n                was_reconnecting = true;\n            this.account.session.once('change:reconnecting', () => {\n                console.log('change reconnecting');\n                console.log(this.account.session.get('reconnecting'));\n                was_reconnecting = true;\n            })\n            let _interval = setInterval(() => {\n                console.log(was_reconnecting);\n                if (was_reconnecting)\n                    clearInterval(_interval);\n                if (_pending_time >= 8 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                    console.log('ping on message pending');\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                        let downtime = (moment.now() - this.account.last_stanza_timestamp) / 1000;\n                        if (downtime >= 2){\n                            console.log('message initiated reconnection');\n                            console.log(message);\n                            this.account.connection.disconnect();\n                        } else {\n                            console.log('ping was sent and got no result after 2 seconds, but didnt reconnect because last stanza time was: ' + downtime + ' sec')\n                        }\n                    }, 2000);\n                }\n                if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 3;\n            }, 3000);\n        }\n    },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData();\n            formData.append('file', file, file.name);\n            if (file.duration)\n                formData.append('duration', file.duration);\n            if (file.size)\n                formData.append('size', file.size);\n            if (file.width)\n                formData.append('width', file.width);\n            if (file.height)\n                formData.append('height', file.height);\n            if (file.voice)\n                formData.append('media_type', file.type + '+voice');\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.oncancel = xhr.onload = xhr.onerror = xhr.onabort = function () {\n                let xhr_status = this.fakeStatus || this.status;\n                if (xhr_status >= 200 && xhr_status < 300) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = this.response ? JSON.parse(this.response) : this.fakeResponse;\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                if (!is_error) {\n                                    if (slot_response && slot_response.quota){\n                                        if (slot_response.file && slot_response.hash){\n                                            xhr_requests[files_count].fakeStatus = 200;\n                                            xhr_requests[files_count].fakeResponse = {\n                                                file: slot_response.file,\n                                                id: slot_response.id,\n                                                name: slot_response.name,\n                                                thumbnail: slot_response.thumbnail,\n                                                created_at: slot_response.created_at,\n                                            };\n                                            xhr_requests[files_count].oncancel();\n                                        } else {\n                                            xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                            xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                            xhr_requests[files_count].is_uploading = true;\n                                            xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                        }\n                                    } else {\n                                        xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                        xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                        xhr_requests[files_count].oncancel();\n                                    }\n                                }\n                            });\n                        });\n                    }\n                } else {\n                    if (xhr_status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && xhr_status === 0){\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        let response_text, error_status;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (xhr_status === 500)\n                            response_text = this.fakeResponse || this.statusText;\n                        else if (xhr_status === 400 || this.fakeStatus){\n                            response_text = this.fakeResponse || JSON.parse(this.response).error;\n                            error_status = this.fakeStatus || JSON.parse(this.response).status;\n                            if (error_status && error_status == 429){\n                                setTimeout(() => {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                            if (!is_error) {\n                                                if (slot_response && slot_response.quota){\n                                                    if (slot_response.file && slot_response.hash){\n                                                        xhr_requests[files_count].fakeStatus = 200;\n                                                        xhr_requests[files_count].fakeResponse = {\n                                                            file: slot_response.file,\n                                                            id: slot_response.id,\n                                                            name: slot_response.name,\n                                                            thumbnail: slot_response.thumbnail,\n                                                            created_at: slot_response.created_at,\n                                                        };\n                                                        xhr_requests[files_count].oncancel();\n                                                    } else {\n                                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                        xhr_requests[files_count].is_uploading = true;\n                                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                    }\n                                                } else {\n                                                    xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                    xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                    xhr_requests[files_count].oncancel();\n                                                }\n                                            }\n                                        });\n                                    });\n                                }, 1000);\n                                return;\n                            }\n                        }\n                        else if (xhr_status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (xhr_status === 0) && (message.get('files')[idx] = null);\n                        if (!message.get('files').filter((element) => { return element != null}).length && !message.get('message')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                            self.removeMessage($message);\n                            return;\n                        }\n                        files_count++;\n                        if (xhr_status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                        if (!is_error) {\n                                            if (slot_response && slot_response.quota){\n                                                if (slot_response.file && slot_response.hash){\n                                                    xhr_requests[files_count].fakeStatus = 200;\n                                                    xhr_requests[files_count].fakeResponse = {\n                                                        file: slot_response.file,\n                                                        id: slot_response.id,\n                                                        name: slot_response.name,\n                                                        thumbnail: slot_response.thumbnail,\n                                                        created_at: slot_response.created_at,\n                                                    };\n                                                    xhr_requests[files_count].oncancel();\n                                                } else {\n                                                    xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                    xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                    xhr_requests[files_count].is_uploading = true;\n                                                    xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                }\n                                            } else {\n                                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                xhr_requests[files_count].oncancel();\n                                            }\n                                        }\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    this.account.testGalleryFileSlot(xhr_requests[0].formData.get('file'), (slot_response) => {\n                        if (!is_error) {\n                            if (slot_response && slot_response.quota){\n                                if (slot_response.file && slot_response.hash){\n                                    xhr_requests[0].fakeStatus = 200;\n                                    xhr_requests[0].fakeResponse = {\n                                        file: slot_response.file,\n                                        id: slot_response.id,\n                                        name: slot_response.name,\n                                        thumbnail: slot_response.thumbnail,\n                                        created_at: slot_response.created_at,\n                                    };\n                                    xhr_requests[0].oncancel();\n                                } else {\n                                    xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                                    xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'));\n                                    xhr_requests[0].is_uploading = true;\n                                    xhr_requests[0].send(xhr_requests[0].formData);\n                                }\n                            } else {\n                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                xhr_requests[0].oncancel();\n                            }\n                        }\n                    });\n                });\n            }\n        }\n\n    },\n\n    encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n    },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        message.set('videos', videos);\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                this.bottom.setEditedMessageAttachments(message, true);\n                this.bottom.setRedactedUploadMessage(message);\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server'),\n            is_unread_archived = message.get('is_unread_archived'),\n            is_missed_msg = message.get('missed_msg'),\n            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n        if (is_unread) {\n            if (!is_unread_archived && !is_synced && !is_missed_msg)\n                this.model.messages_unread.add(message);\n            $msg.addClass('unread-message');\n            $msg.addClass('unread-message-background');\n            this.model.recountUnread();\n        } else {\n            if ((!is_unread_archived && !is_synced && !is_missed_msg) || this.model.messages_unread.indexOf(message) > -1)\n                this.model.messages_unread.remove(message);\n            $msg.removeClass('unread-message');\n            setTimeout(() => {\n                $msg.removeClass('unread-message-background');\n            }, 1000);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            }, (err) => {\n                _.extend(options, {present: null, subscription: null});\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')) || this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') || $elem.hasClass('not-decrypted-icon') || $elem.hasClass('not-decrypted-tooltip') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg, this.account.forwarded_messages.get($elem.data('uniqueid')));\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id) || this.account.context_messages.get(unique_id) || this.account.searched_messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact.showDetails();\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\n\nxabber.ChatContentPlaceholderView = xabber.BasicView.extend({\n    className: 'chat-body-content-placeholder-wrap',\n    template: templates.chat_content_placeholder,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        return this;\n    },\n\n    render: function () {\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.forwarded_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg, this.account.forwarded_messages.get(unique_id));\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        class QuillEmoji extends Image {\n            static create(value) {\n                if (typeof value == 'string') {\n                    let emoji = $(value.emojify({tag_name: 'img'}))[0];\n                    emoji.style.display = 'none';\n                    emoji.onload = function () {\n                        this.style.display = 'unset';\n                    };\n                    return emoji;\n                } else {\n                    return value;\n                }\n            }\n\n            static value(domNode) {\n                return domNode;\n            }\n        }\n        QuillEmoji.blotName = 'emoji';\n        QuillEmoji.className = 'emoji';\n        QuillEmoji.tagName = 'img';\n        QuillEmoji.prototype.optimize = function () {};\n\n        Quill.register(QuillEmoji);\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        chat.trigger('open', {clear_search: options.clear_search, right_force_close: options.right_force_close});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (!pending_message)\n                    return;\n                let chat = this.account.chats.get(pending_message.chat_hash_id);\n                if (chat && chat.get('group_chat'))\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                chat.setStanzaId(pending_message.unique_id, stanza_id);\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if ($message.find('replace').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact && contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == Strophe.NS.OMEMO;\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (!chat.get('group_chat') && retract_version > this.account.retraction_version) {\n                this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        if ($message.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`).length) {\n            let code =  $message.find('confirm').attr('id');\n            if (($message.attr('from') == this.account.xabber_auth.api_jid) && ($message.attr('id') == this.account.xabber_auth.request_id)) {\n                this.account.verifyXabberAccount(code, (data) => {\n                    if (xabber.api_account && this.account.get('auto_login_xa')) {\n                        xabber.api_account.save('token', data);\n                        xabber.api_account.login_by_token();\n                    }\n                });\n            }\n            else {\n                return this.receiveChatMessage(message);\n            }\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                if (!Object.keys(options).length)\n                    return;\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            if (!Object.keys(options).length && !forwarded_msgs.length)\n                return;\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n                if (contact.details_view && contact.details_view.isVisible())\n                    contact.trigger('update_participants');\n            }\n        }\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        all_servers = all_servers.sort((x,y) => { return x == this.account.domain ? -1 : y == this.account.domain ? 1 : 0; })\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n            let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                contact = this.account.contacts.mergeContact(group_jid);\n            contact.set('group_chat', true);\n            contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            this.close();\n            xabber.chats_view.updateScreenAllChats();\n            contact.trigger(\"open_chat\", contact);\n            if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: group_jid + '/' + moment.now()});\n                this.account.sendIQFast(iq_set_blocking);\n            }\n\n        }, () => {\n            this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n            this.$('input[name=\"chat_jid\"]').addClass('invalid');\n        });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"add_opened_chat\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').length);\n        if (options.right !== 'chat' && options.right !== 'contact_details' && !options.no_unread && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats') && !xabber.toolbar_view.data.get('account_filtering')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo).active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.setScreen(null, {chat_item: null, right: undefined},\n                    {silent: !xabber.body.isScreen('all-chats')});\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view && (item.get('timestamp') || item.get('saved'))) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        if (active_toolbar.hasClass('account-item') && view.account.get('jid') !== active_toolbar.attr('data-jid')){\n            return;\n        }\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        (active_toolbar.hasClass('all-chats') || (xabber.accounts.enabled.length === 1 && active_toolbar.hasClass('saved-chats'))) && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('saved-chats') && (xabber.accounts.enabled.length !== 1) && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved'))));\n        active_toolbar.hasClass('mentions') && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => (chat.get('jid') === chat.account.domain))));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false)) {\n            view.model.set('display', true);\n            view.model.set('active', true);\n            xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded')) {\n                if (\n                    (view.model.get('const_unread') || view.model.get('unread'))\n                    && view.model.get('last_read_msg') &&\n                    (!view.content._prev_scrolltop || (view.content._prev_scrolltop && view.content._is_scrolled_bottom) || (view.model.get('show_new_unread') === true))\n                    && !view.model.get('loading_unread_history') && !options.force_bottom && xabber.body.screen.get('chat_item') !== view\n                ){\n                    view.model.set('show_new_unread', false);\n                    view.model._wait_load_unread_history = new $.Deferred();\n                    view.content._no_scrolling_event = true;\n                    view.content.loadUnreadHistory();\n                } else if (view.model.messages.length < 20)\n                    view.content.loadPreviousHistory();\n            }\n            if (!options.right_force_close && (\n                xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )\n            )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            if (!view.model.get('loading_unread_history')){\n                let current_scrolling = view.content.getScrollTop() || view.content._scrolltop;\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.content.scrollTo(current_scrolling);\n            } else {\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    show_placeholder: true,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.model.set('active', true);\n                view.model._wait_load_unread_history.done(() => {\n                    if (xabber.body.screen.get('chat_item') === view) {\n                        view.model.set('loading_unread_history', false)\n                        xabber.body.setScreen((options.screen || 'all-chats'), {\n                            right: 'chat',\n                            clear_search: options.clear_search,\n                            chat_item: view,\n                            blocked: view.model.get('blocked')\n                        },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                        view.content.scrollToUnread();\n                        view.content._long_reading_timeout = true;\n                        view.content._no_scrolling_event = false;\n                        view.content.onScroll();\n                    }\n                });\n            }\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        if (options.scroll_to_chat) {\n            xabber.chats_view.scrollToChild(view.$el);\n        } else {\n            xabber.chats_view.scrollTo(scrolled_top);\n        }\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            archive_chats = archive_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showSavedChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            saved_chats = chats.filter(chat => chat.get('saved'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            saved_chats = saved_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        saved_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n            this.$(`.chat-list .chat-item[data-id=\"${chat.id}\"] .chat-title`).text(chat.get('jid'));\n        });\n    },\n\n    showNotifications: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            notificatons_chats = chats.filter(chat => (chat.get('jid') === chat.account.domain || chat.contact && chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both' ));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            notificatons_chats = notificatons_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        notificatons_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = no_unread || xabber.toolbar_view.data.get('account_filtering') ? false : xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        if (xabber.toolbar_view.data.get('account_filtering')){\n            all_chats = all_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n            all_chats_pinned = all_chats_pinned.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active')\n            .filter('.all-chats:not(.toolbar-logo)').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n      events: {\n          \"keyup .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\"\n      },\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap .pinned-chat-list').html(\"\");\n        this.$('.chat-list-wrap .chat-list').html(\"\");\n        this.$('.chat-list-wrap .contact-list').html(\"\");\n        this.saved_chat = false;\n        let chats = xabber.chats_view.model,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                if (chat.account.get('jid') === this.account.get('jid')) {\n                    if (chat.id == `${this.account.get('jid')}:saved`) {\n                        let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                        $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                        this.saved_chat = true;\n                        this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                    } else\n                        this.$('.chat-list-wrap .pinned-chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n                }\n            });\n        }\n        all_chats.forEach((chat) => {\n            if (chat.account.get('jid') === this.account.get('jid')) {\n                if (chat.id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap .chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap .pinned-chat-list').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap .chat-list').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap .contact-list').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.modal-content .error').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        $target.toggleClass('click-selected');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]));\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to])).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          this.model.on(\"hide_chat\", this.hideChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      hideChat: function () {\n          this.model.set({'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettings();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-contact-details\": \"showContactDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"hide_chat\", this.hideChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetails: function () {\n        this.contact.showDetails('all-chats');\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    hideChat: function () {\n        this.model.set({'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n            let img = new Image();\n            img.onload = () => {\n                onloaded_sprites++;\n                (onloaded_sprites === all_sprites) && $emoji_panel_wrap.find('.uploading-emoticons').detach();\n            };\n            img.src = constants.ASSETS_URL_PREFIX + 'assets/images/emoji/spritesheet' + i++ + '.png';\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        (Math.max.apply(null, widths) !== 0) && this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                        let is_contact_trusted = obj.trust,\n                            unverified_counter = obj.unverified_counter;\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').attr('data-unverified-device-count', unverified_counter).html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                this.account.showSettings(null, 'tokens');\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        (this.$el.hasClass('chat-bottom-blocked-wrap') && !$(ev.target).closest('.message-actions-panel').length) && this.contact.showDetails(xabber.body.screen.get('name'));\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        this.quill.root.focus();\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root.lastElementChild\n            && this.quill.root.lastElementChild.lastChild ? this.quill.root.lastElementChild.lastChild : this.quill.root.lastElementChild;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        range.detach(); // optimization\n        this.quill.root.scrollTop = this.quill.root.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                if (!edit_msg)\n                    return;\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n            } else {\n                this.unsetForwardedMessages();\n            }\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        ev.preventDefault();\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        if (clipboard_data) {\n            if (clipboard_data.files.length > 0) {\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                else {\n                    let text = _.escape(clipboard_data.getData('text')),\n                        arr_text = Array.from(text);\n                    arr_text.forEach((item, idx) => {\n                        if (item == '\\n')\n                            arr_text.splice(idx, 1, '</p><p>');\n                    });\n                    text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                    window.document.execCommand('insertHTML', false, text);\n                }\n            }\n            else {\n                let text = _.escape(clipboard_data.getData('text')),\n                    arr_text = Array.from(text);\n                arr_text.forEach((item, idx) => {\n                    if (item == '\\n')\n                        arr_text.splice(idx, 1, '</p><p>');\n                    if (item == ' ')\n                        arr_text.splice(idx, 1, '&nbsp');\n                });\n                text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                window.document.execCommand('insertHTML', false, text);\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted);\n        list = _.difference(list, this.currently_loaded_link_references);\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    } else {\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new opusRecorder({\n                        encoderPath: opusRecorderEncoderPath,\n                        encoderSampleRate: 16000,\n                        numberOfChannels: 1\n                }),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob([chunks], { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks = e;\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertEmbed(caret_idx, 'emoji', emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    submit: function (ev, forced) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea(),\n            dfd = new $.Deferred();\n\n\n        if (this.model.get('encrypted') && this.view.$('.chat-notification').hasClass('encryption-warning') && !forced){\n            let unverified_counter = this.view.$('.encryption-warning').attr('data-unverified-device-count');\n            utils.dialogs.ask_extended(xabber.getQuantityString(\"dialog_unverified_devices__header\", unverified_counter || 1), xabber.getQuantityString(\"dialog_unverified_devices__text\", unverified_counter || 1),\n                {modal_class: 'modal-unverified-devices', no_dialog_options: true},\n                { ok_button_text: xabber.getString(\"omemo__alert_new_device__button_manage_devices\"), optional_button: 'send-anyway', optional_button_text: xabber.getString(\"dialog_unverified_devices__send\")})\n                .done((result) => {\n                if (result) {\n                    if (result === 'send-anyway'){\n                        this.submit(ev, true);\n                    }\n                    else{\n                        this.openDevicesWindow();\n                    }\n                }\n            });\n            return;\n        }\n\n        dfd.done(() => {\n            this.$('.mentions-list').html(\"\").hide();\n            $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n                let emoji = emoji_item.innerText;\n                this.account.chat_settings.updateLastEmoji(emoji);\n            });\n            let content_concat = [];\n            if (text.length >= constants.STANZA_MAX_SIZE) {\n                utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n                $rich_textarea.flushRichTextarea();\n                return;\n            }\n            if (text.length) {\n                this.quill.getContents().forEach((content) => {\n                    if (content.attributes) {\n                        let content_attrs = [],\n                            start_idx = content_concat.length,\n                            end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                        for (let attr in content.attributes)\n                            (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                        if (content_attrs.indexOf('mention') > -1) {\n                            let mention_idx = content_attrs.indexOf('mention'),\n                                is_gc = this.contact.get('group_chat'),\n                                target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                            content_attrs.splice(mention_idx, mention_idx + 1);\n                            target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                            mentions.push({\n                                start: start_idx,\n                                end: end_idx,\n                                target: target,\n                                is_gc: is_gc\n                            });\n                        }\n                        if (content.attributes.blockquote) {\n                            if (content_concat.length) {\n                                Array.from(content.insert).forEach((ins) => {\n                                    let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                        quote_end_idx = content_concat.length;\n                                    blockquotes.push({\n                                        marker: constants.QUOTE_MARKER,\n                                        start: quote_start_idx,\n                                        end: quote_end_idx + constants.QUOTE_MARKER.length\n                                    });\n                                    text = Array.from(_.escape(text));\n\n                                    if (quote_start_idx === quote_end_idx) {\n                                        text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                    }\n                                    else {\n                                        text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                    }\n                                    (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                    text[quote_end_idx - 1] += '\\n';\n\n                                    text = _.unescape(text.join(\"\"));\n                                    content_concat = Array.from(content_concat.join(\"\"));\n\n                                    markup_references.forEach((markup_ref) => {\n                                        if (markup_ref.start >= quote_start_idx) {\n                                            markup_ref.start += constants.QUOTE_MARKER.length;\n                                            markup_ref.end += constants.QUOTE_MARKER.length;\n                                        }\n                                    });\n\n                                    content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                                })\n                            }\n                        }\n                        content_attrs.length && markup_references.push({\n                            start: start_idx,\n                            end: end_idx,\n                            markup: content_attrs\n                        });\n                    }\n                    if (content.insert && content.insert.emoji) {\n                        content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                    }\n                    else if (content.attributes && content.attributes.blockquote) {\n                    }\n                    else\n                        content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n                });\n            }\n            let start_length = text.length;\n            text = text.trimStart();\n            if (start_length > text.length) {\n                let delta = start_length - text.length;\n                mentions.forEach((mention) => {\n                    mention.start -= delta;\n                    mention.end -= delta;\n                });\n                markup_references.forEach((markup_reference) => {\n                    markup_reference.start -= delta;\n                    markup_reference.end -= delta;\n                });\n                blockquotes.forEach((blockquote) => {\n                    blockquote.start -= delta;\n                    blockquote.end -= delta;\n                });\n            }\n            if (link_references && link_references.length) {\n                link_references = link_references.filter(item => item.original_text);\n                link_references.forEach((link_reference) => {\n                    if (link_reference && link_reference.original_text) {\n                        link_reference.start = text.indexOf(link_reference.original_text);\n                        if (link_reference.start != -1) {\n                            link_reference.start = 0;\n                            link_reference.end = 0;\n                        }\n                    }\n                });\n            }\n            this.removeAllLinkReferences();\n            this.link_reference_exempted = [];\n            this.removeAllFileSnippets();\n            text = text.trimEnd();\n            $rich_textarea.flushRichTextarea();\n            this.quill.focus();\n            this.displayMicrophone();\n            if (this.edit_message) {\n                this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n                $rich_textarea.placeCaretAtEnd();\n                return;\n            }\n            if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n                if (this.model.get('saved') && this.fwd_messages.length && !text)\n                    this.fwd_messages.forEach((message) => {\n                        this.view.onSubmit(\"\", [message]);\n                    });\n                else\n                    this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            }\n            this.unsetForwardedMessages();\n            xabber.chats_view.clearSearch();\n            if (this.model.messages_view)\n                if (this.model.messages_view.data.get('visible'))\n                    xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n            $rich_textarea.placeCaretAtEnd();\n        });\n        if (attached_files && attached_files.length) {\n            let failed_files = [],\n                files_count = 0,\n                file_check_dfd = new $.Deferred();\n            file_check_dfd.done(() => {\n                if (failed_files.length){\n                    failed_files.forEach((file) => {\n                        this.$(`.message-reference-preview-item-file[data-id=\"${file.uid}\"]`).remove();\n                        this.removeFileSnippetById(file.uid);\n                    });\n                    utils.dialogs.error(\n                        '' + _.pluck(failed_files, 'name').join(` — ${xabber.getString(\"message__file_was_deleted__file_label\")}. \\n`) + ` — ${xabber.getString(\"message__file_was_deleted__file_label\")}.`,\n                        {},\n                        xabber.getQuantityString(\"message__file_was_deleted\", failed_files.length)\n                    );\n                    dfd.reject();\n                } else {\n                    dfd.resolve();\n                }\n            });\n            attached_files.forEach((file) => {\n                utils.tryReadingFile(file).then(()=> {\n                    files_count++;\n                    if (attached_files.length === files_count) {\n                        file_check_dfd.resolve();\n                    }\n                }, ()=> {\n                    failed_files = failed_files.concat([file]);\n                    files_count++;\n                    if (attached_files.length === files_count) {\n                        file_check_dfd.resolve();\n                    }\n                });\n            });\n        } else {\n            dfd.resolve();\n        }\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.forward-message-wrap').switchClass('non-active', this.model.get('encrypted'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content') || [],\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model),\n                id: stanza_id\n            }),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file['id'] && $message.c('gallery-id').t(file['id']).up();\n                file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message]);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, decrypted_msg);\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && my_msgs == $msgs.length && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.forward-message-wrap').hasClass('non-active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.ChatBodyPlaceholderContainer = xabber.Container.extend({\n    className: 'chat-body-placeholder-container',\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"chat_list__placeholder\"));\n        }\n    },\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        //readds msg handler if it somehow dissapears\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            let options = {};\n            this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                this.roster && this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                this.roster && this.roster.getRoster();\n            });\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_body_placeholder = this.right_panel.addChild('chat_body_placeholder',\n            this.ChatBodyPlaceholderContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"change:idle\", function () {\n        if (!this.get('idle')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function (no_unread) {\n        this.chats_view.showAllChats(no_unread);\n    }, this);\n\n    this.on(\"show_archive_chats\", function (no_unread) {\n        this.chats_view.showArchiveChats(no_unread);\n    }, this);\n\n    this.on(\"show_saved_chats\", function (no_unread) {\n        this.chats_view.showSavedChats(no_unread);\n    }, this);\n\n    this.on(\"show_notification_chats\", function (no_unread) {\n        this.chats_view.showNotifications(no_unread);\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"mentions_list__placeholder\"));\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n            if (attrs.name === 'all-chats' && attrs.right === 'contact_details')\n                attrs.contact.trigger('open_chat', attrs.contact);\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (!window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        this.updateContainersLayout();\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateContainersLayout = function () {\n        let width = this.body.$el.width(),\n            height = this.body.$el.height(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM;\n        let panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 64,\n            toolbar_accounts_heigth = height - 506,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow)) {\n            panel_width = 1536;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.toolbar_view.$el.find('.toolbar-bottom .accounts-wrap .accounts').css({\n            'max-height': toolbar_accounts_heigth,\n        });\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { settings: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_left = new this.ViewPath('account.settings_left'),\n        path_acc_settings_right = new this.ViewPath('account.settings_right'),\n        path_acc_vcard_edit = new this.ViewPath('account.vcard_edit');\n\n    this.body.addScreen('account_settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: {\n                account_settings: {\n                    left: path_acc_settings_left,\n                    right: path_acc_settings_right\n                }\n            },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.account_settings.patchTree = function (tree, options) {\n        if (options.right === 'vcard_edit') {\n            return {\n                left: path_acc_settings_left,\n                right: path_acc_vcard_edit\n            };\n        }\n    };\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_body_placeholder = new this.ViewPath('chat_item.content_placeholder'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details = new this.ViewPath('contact.details_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if (options.show_placeholder) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: null,\n                chat_body_placeholder: path_chat_body_placeholder,\n                chat_bottom: null\n            };\n        }\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.right === 'contact_details') {\n            return { details: path_contact_details };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (this.api_account) {\n        this.api_account.once(\"settings_result\", function (result) {\n            if (result === null && !this.accounts.length) {\n                this.body.setScreen('login');\n            } else if (this.body.isScreen('blank')) {\n                this.body.setScreen('all-chats');\n            }\n        }, this);\n\n        this.api_account.ready.then(this.api_account.start.bind(this.api_account));\n    } else {\n        if (!this.accounts.length)\n            this.body.setScreen('login');\n        else if (this.body.isScreen('blank'))\n            this.body.setScreen('all-chats');\n        xabber.trigger(\"bind_xmpp_accounts\");\n    }\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.FingerprintsOwnDevices = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-devices-wrap',\n    template: templates.fingerprints_devices,\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.omemo = this.model;\n        this.jid = this.account.get('jid');\n        this.is_own_devices = true;\n    },\n\n    open: function (device_id, is_own) {\n        this.omemo = this.account.omemo;\n        this.data.set('visible', true);\n        this.updateColorScheme();\n        this.show();\n        this.renderOwnDevices(device_id, is_own);\n    },\n\n    updateTrustDevice: function (device_id, $container) {\n        this.omemo.getMyDevices().then(() => {\n            let device = this.model.own_devices[device_id];\n            if (!device)\n                return;\n            if (device.get('ik')) {\n                let f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                this.renderTrustOnFingerprint(is_trusted, $container);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        this.renderTrustOnFingerprint(is_trusted, $container);\n                    }\n                }, () => {\n                });\n            }\n        });\n    },\n\n    renderTrustOnFingerprint: function (is_trusted, $container) {\n        $container.find('.device-encryption').attr('data-trust', is_trusted).addClass('active');\n        is_trusted === 'unknown' && $container.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n        is_trusted === 'trust' && $container.find('.device-encryption span').text(xabber.getString(\"settings_account__trusted_device\"));\n        $container.find('.device-encryption .mdi-lock').removeClass('hidden');\n    },\n\n    renderOwnDevices: function (device_id, is_own) {\n        this.omemo.getMyDevices().then(() => {\n            this.device_id = device_id;\n            this.fingerprint = null;\n            if (is_own)\n                this.updateOwnFingerprint(device_id);\n            else{\n                this.updateOwnFingerprint(device_id);\n                this.updateFingerprints(device_id);\n            }\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateFingerprints: async function (device_id) {\n        let counter = 0,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content .other-device-content'),\n            device = this.model.own_devices[device_id];\n        $container.html('');\n        dfd.done((is_error) => {\n            console.log(is_error);\n            this.$('.dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                container: this.$('.fingerprints-content .other-device-content')[0],\n                alignment: 'left'\n            });\n        });\n        if (device.get('ik')) {\n            let options = {},\n                f = device.generateFingerprint(),\n                fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n            is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n            this.fingerprint = f;\n            $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n            dfd.resolve();\n        }\n        else {\n            this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                let $iq = $(iq),\n                    $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                    ik = $bundle.find(`ik`).text();\n                if (ik) {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let options = {},\n                        f = device.generateFingerprint(),\n                        fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                        is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                    is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                    this.fingerprint = f;\n                    $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                }\n                dfd.resolve();\n            }, () => {\n                dfd.resolve(true);\n            });\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').html(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, true);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, false);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            device_icons = [\n                'device-cellphone',\n                'device-console',\n                'device-desktop',\n                'device-tablet',\n                'device-web',\n            ],\n            error, svg_icon;\n        if (fingerprint.match(/.{1,4}/g))\n            fingerprint = fingerprint.match(/.{1,4}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.account.omemo.own_devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,4}/g).join(\" \"));\n        svg_icon = edit_setting ? 'device-web' : device_icons[Math.floor(Math.random()*device_icons.length)]\n        let $row = templates.fingerprint_devices_item({id,label,trust, svg_icon, fingerprint, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content');\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [this.device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                delete this.model.own_devices[this.device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[this.device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        this.account.trigger('trusting_updated');\n                        this.close();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, this.device_id);\n                }\n            }\n        });\n    },\n\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle(this.model.get('device_attrs'));\n           this.model.set('resend_bundle', false);\n           this.model.set('device_attrs', null);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.model.account.trigger('update_omemo_devices');\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            await this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey){\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            }\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.cached_messages && this.cached_messages.destroy();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                }\n                else {\n                    this.publishBundle();\n                }\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                    }\n                    else {\n                        this.publishBundle();\n                    }\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, plaintext);\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('encryption', {\n                xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION,\n                namespace: Strophe.NS.OMEMO\n            });\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied && options.carbon_direction && options.carbon_direction === 'sent')\n                return;\n\n            if (cached_msg) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                        if (options.gallery && deferred)\n                            deferred.resolve($message, options);\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message, options);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0, unverified_counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust);\n                resolve({trust: trust, unverified_counter: unverified_counter});\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null){\n                                is_trusted = null;\n                                unverified_counter++;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                else{\n                                    is_trusted = null;\n                                    unverified_counter++;\n                                }\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        contact_trusted = contact_trusted.trust;\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true' || $(keyElement).attr('kex') === '1',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks, callback) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            }, callback);\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n        if (bundle.preKeys.length && bundle.preKeys.length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - bundle.preKeys.length,\n                last_id = _.sortBy(this.bundle.preKeys, 'keyId').last().keyId;\n            for (let i = ++last_id; last_id + missing_keys; i++)\n                await this.bundle.generatePreKey(i);\n            this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function (device_attrs) {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            this.set('device_attrs', device_attrs);\n            return;\n        }\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (device_attrs){\n                device_attrs.omemo.publishDevice(device_attrs.device_id, device_attrs.label);\n            }\n        });\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, (res) => {\n            this.publish(spk, ik.pubKey, pks, () => {\n                dfd.resolve();\n            });\n        }, (err) => {\n            if (($(err).find('error').attr('code') == 404)){\n                this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                    this.publish(spk, ik.pubKey, pks, () => {\n                        dfd.resolve();\n                    });\n                });\n            }\n        });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    getMessages: function (contact) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages;\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/emojis.json\": 85304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92444;","var map = {\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item.html\": 86348,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item.html\": 98078,\n\t\"./accounts/media_gallery_account.html\": 57872,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/settings_left.html\": 35626,\n\t\"./accounts/settings_right.html\": 34987,\n\t\"./accounts/token_item.html\": 52509,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./api_service/add_xabber_account.html\": 64805,\n\t\"./api_service/linked_email_item.html\": 5398,\n\t\"./api_service/sync_settings.html\": 48881,\n\t\"./api_service/sync_settings_account_item.html\": 28522,\n\t\"./api_service/xabber_account.html\": 29674,\n\t\"./api_service/xabber_login.html\": 48755,\n\t\"./api_service/xabber_login_by_email.html\": 24864,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_devices_item.html\": 16969,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/fingerprints_devices.html\": 26376,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/settings.html\": 15887,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_content_placeholder.html\": 36209,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./chats/unread_marker.html\": 98875,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details.html\": 62859,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/device-cellphone.html\": 79824,\n\t\"./svg/device-console.html\": 32111,\n\t\"./svg/device-desktop.html\": 5772,\n\t\"./svg/device-tablet.html\": 18955,\n\t\"./svg/device-web.html\": 16919,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/information.html\": 66035,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit.html\": 11803,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","let client_translation_progress = {\"en\":100,\"ar\":27,\"az\":2,\"be\":13,\"bg\":64,\"bs\":0,\"ca\":25,\"cs\":99,\"cy\":0,\"da\":0,\"de\":49,\"el\":29,\"es-ES\":34,\"es-latin\":7,\"et\":0,\"fa\":4,\"fi\":9,\"fil\":14,\"fr\":35,\"ga-IE\":0,\"he\":21,\"hi\":0,\"hr\":0,\"hu\":14,\"hy-AM\":8,\"id\":69,\"is\":0,\"it\":71,\"ja\":20,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":4,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":21,\"ne-NP\":0,\"nl\":19,\"no\":0,\"oc\":12,\"pa-IN\":0,\"pl\":65,\"pt-BR\":70,\"pt-PT\":14,\"qya-AA\":0,\"ro\":16,\"ru\":68,\"sat\":1,\"sco\":0,\"si-LK\":37,\"sk\":20,\"sl\":27,\"sq\":3,\"sr\":13,\"sr-Cyrl-ME\":0,\"sv-SE\":37,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":66,\"uk\":27,\"uz\":0,\"vi\":12,\"yo\":0,\"zh-CN\":37,\"zh-TW\":10,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.3.190\",\"version_description\":\"made that pinned message always shows current actual user info of participant\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(10019)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","constants","ASSETS_URL_PREFIX","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_DEFAULT_GREY","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","DOWNTIME_RECONNECTION_TIMEOUT","PING_SENDING_INTERVAL","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","url","credential","username","urls","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SOUNDS","beep_up","tiny_noize","retro_game","pixel_beep","beep_positive","good_chime","cellular_click","bleep","mono_u","plop","ether","pop","computer_chime","beep_a","call","connecting","busy","attention","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","API_SERVICE_URL","USE_SOCIAL_AUTH","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","BACKGROUND_IMAGES_XML_URL","BACKGROUND_PATTERNS_XML_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","idleJs","opusRecorder","opusRecorderEncoderPath","xabber_i18next","xabber_i18next_sprintf","sha256","VanillaQR","magnificPopup","Strophe","evaluate","interpolate","templates","_addTemplate","name","options","path","split","tpl","join","default","tpl_name","res","attr","is_svg","data","html","$html","find","each","$el","this","svg_name","removeClass","addClass","svg","insertSvg","addTemplate","addSvgTemplate","addJSONTemplate","raw_data","code","x","y","getEmoji","offset","lead","trail","emoji_data","item","emoji","push","emoji_regexp","prototype","emojify","sprite","tag_name","emoji_size","href","title","replace","emoji_code","Number","toString","length","repeat","img_src","removeEmoji","replaceEmoji","selector","text","all","get","getByIndex","idx","hasher","_image_cache","COLORS","MAX_IMG_SIZE","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","window","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","resolve","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","file_name","includes","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","id","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","value","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","ok_button","cancel_button","optional_buttons","reverse","no_dialog_options","inverted_buttons","img_details","append","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","isVisibleInViewport","elementTop","top","elementBottom","outerHeight","viewportTop","scrollTop","viewportBottom","isVisibleInContainer","container","eleTop","offsetTop","eleBottom","clientHeight","containerTop","containerBottom","isFullyVisibleInContainer","isBottomVisibleInContainer","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","e","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","forEach","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","replaceAll","RegExp","utils","uuid","c","r","random","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","tryReadingFile","Promise","reject","console","log","getDomainFromUrl","a","test","hostname","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_name","substr","toLowerCase","getKeyByValue","object","Object","keys","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","client_translation_progress","bc","BroadcastChannel","onmessage","event","disabled_client","postMessage","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","client_name","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","check_config","_settings","Settings","storage_name","getStorageName","fetch","settings","location","host","pathname","_cache","ModelWithStorage","cache","save","extendFunction","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","ononline","disconnectWhenConnecting","lang","language","loadTranslations","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","msg","warn","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","cacheFavicons","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","idling","notifications","notifications_private","notifications_group","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","configure","config","pick","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","isArray","ios_msg","android_msg","any_mobile_msg","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","updateFaviconConnected","is_disconnected","account","isConnected","session","updateAllMessageCounterOnDisconnect","is_fast","connection","activate","extendWith","reduce","instance","module","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","tree","patchTree","has","className","isNull","new_view","events","keyUpOnSearch","stopPropagation","ids","map","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","query_transliterated","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","unbind","chat_item_view","new_attrs","stamp","uniqueId","isScreen","show_placeholder","right","right_force_close","right_contact","content","_prev_scrolltop","_scrolltop","changed","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","clickAllChats","showAllChats","no_unread","closest","is_active","showArchive","showSavedChats","right_contact_save","scroll_to_chat","once","showNotifications","showChatsByAccount","showContacts","showMentions","showSettings","showPlaceholder","screen_name","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","left","setFullScreen","local_video","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","cancelFullScreen","exitFullscreen","fullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","xPercent","innerWidth","yPercent","innerHeight","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","video_file","video_decrypted","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","renderVoiceMessage","toggleMute","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","belowOrigin","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","jumpToBlock","$tab","$elem","setIdling","setNotifications","$target","requestPermission","setPrivateNotifications","setGroupNotifications","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","current_sound","pause","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","changeBackgroundImage","openColorPicker","colorPicker","openMainColorPicker","mainColorPicker","changeBlur","changeNotificationsVolume","volume","sound","changeVignetting","switchVignetting","is_switched","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","progress","progress_text","platform_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","request","dataType","success","onGetPatternsCallback","onGetImagesCallback","ajax","img","thumbnail","$img","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","updateScreen","$active_screen","non_active","current_count","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","headers","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","clearInterval","$icon","favicon","favicon_gray","favicon_message","stopBlinkingFavicon","resetMessageCounter","onChangedFocusState","popupNotification","notification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","idle","onIdle","onActive","keepTracking","startAtIdle","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_view","SettingsView","api_service","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","create_from_server","settings_item","create","token","sync_all","_attrs","settings_list","connected","sync_request","fcm_subscribe","fcm_unsubscribe","from_token","action","synchronize_main_settings","synchronize_order_settings","get_settings","social_auth","social_login","login_by_token","_call_method","method","context","textStatus","jqXHR","errorThrown","onAPIError","stringify","add_source","account_status","onUserData","onSettings","onSettingsFailed","delete_settings","where","settings_data","order_timestamp","order","order_data","fetch_from_server","deleted_list","order_list","order_map","max_order","order_item","response","responseJSON","reason","_login","credentials","password","login","onLogin","onLoginFailed","onLoginByToken","onLoginByTokenFailed","onSocialLogin","onSocialLoginFailed","revoke_token","storage","clear","xmpp_binding_jid","xmpp_binding","full_id","linked_email_list","email_list","linked_social","social_bindings","logout","delete_accounts","endpoint_key","$username_input","$password_input","onChangeAuthenticationState","onRender","authFeedback","updateTextFields","submit","errorFeedback","authentication","onChangeConnected","successFeedback","socialAuth","origin","xabber_login_by_email","auth","xabber_login","changeLoginType","openXmppLoginPanel","add_xabber_account","renderAccountItem","bindAccount","add_contact_account_item","selectAccount","loginXabberAccount","authXabberAccount","sync_settings","to_sync_map","accounts_map","deleted_map","settings_map","deleted_item","sync_way","sync_choose","acc1","acc2","addAccountHtml","updateSyncOptions","$account_el","sync_settings_account_item","updateAccountHtml","account_wrap","$account_wrap","account_item","mdiclass","$sync_icon","changeSyncAll","changeSyncOne","changeSyncWay","syncSettings","do_sync","xabber_account","updateForConnectedStatus","default_color","updateLastSyncInfo","updateSocialBindings","updateSyncButton","updateExpanded","changeExpanded","expanded","linked_emails","$social_item","email","email_id","email_address","is_verified","verified","linked_email_item","social","social_provider","social_name","linkSocial","mail","mail_data","openAccount","verifyEmail","unlinkSocial","$social_html","deleted_mail_index","splice","social_list","deleted_social_index","sync","last_sync","time_delta","fromNow","synchronize","onPasswordResetFailed","setPassword","verified_email","account_settings_list","AccountSettingsList","AccountsOrderTimestamp","api_account","APIAccount","xabber_login_panel","XabberLoginPanel","APIAccountView","add_api_account_view","AddAPIAccountView","email_auth_view","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","req","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","_submit_cb","error_text","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","getLastOrder","deleteAccount","photo_hash","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","xml","isOnline","getPassword","isReconnecting","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","verifyXabberAccount","createFastConnection","token_invalidated","fast_conn_manager","disconnect","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onConnectionConflict","CONNECTED","onTokenRevoked","onAuthFailed","DISCONNECTED","flush","_main_interval_worker","terminate","connectXabberAccount","iq_private_storage","PRIVATE_STORAGE","requestPassword","api_jid","request_id","verifying_code","verifying_mess","idx_verifying_code","iq_send_auth_mark","msg_attrs","from_jid","is_archived","createMessageFromIQ","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","settings_right","account_password_view","old_password","change_password_connection","change_password_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","omemo_id","last_auth","ip_address","ip","x_tokens_list","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_fast_interval_worker","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","retractions_query","Builder","is_msg","b","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","deactivate","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","block_name","has_settings_right","settings_left","revokeXToken","token_num","revokeAllXTokens","show_settings","show_settings_after_delete","omemo","groups_settings","clearStorage","groupchat_settings","chat_settings","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","testGalleryFileSlot","onloadend","b64","gallery_feature","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","testFile","getStorageStats","uploadFile","formData","FormData","voice","processData","deleteFile","file_id","getOpenGraphData","site","ogp","image_height","image_width","video_url","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","models","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","tabs","filterType","sorting","order_by","getAvatars","onTabClick","sortFiles","sort_type","onClickFile","prev_audio_message","file_url","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","load","assign","obj_per_page","current_rendered_type","renderFiles","total_objects","tab","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","deleteFilesFiltered","days","date","setDate","getDate","toISOString","date_lte","openStoragePanel","wheelPropagation","status_field","updateBlocks","updateGallery","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","gallery_view","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateXTokens","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateOmemoDevices","updateEnabledOmemo","updateEncryptedChatstates","dropdown_settings","store","showResources","resource_id","hideResources","renderAllXTokens","sortBy","pretty_token","findWhere","toJSON","is_omemo","$cur_token_html","current_token_item","$token_html","token_item","omemo_own_devices","omemo_device_id","updateTrustDevice","openFingerprint","is_own","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","own_devices","ik","fingerprint","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","openBlockWindow","block","blockContact","unblockSelected","blocklist","deselectBlocked","global_settings_item","onDragTo","onMoveAccount","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","current_items","current_file","addAvatar","img_from_gallery","createFileFromURL","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","stop","getUserMedia","stream","takePicture","clearPhoto","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","pickEmoji","change_password","is_login","getActionName","$old_password_input","$password_confirm_input","password_confirm","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","xmpp_login_panel","XmppLoginPanel","account_settings","acc_settings_left","Container","acc_settings_right","Accounts","ToolbarAccountsBlockView","SettingsAccountsBlockView","add_account_view","AddAccountView","onbeforeunload","login_screen","supports","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","GEOLOC","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","Worker","downtime","onLine","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","groups","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","b64_sha1","updateCachedInfo","is_deleted","out_request","status_text","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","resetParticipantsList","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","setActiveStateSendInterval","$msg","_sending_active_chatstate_timeout","_sending_active_chatstate_interval","handlePresence","$group_chat_info","updateGroupChatsList","details_view","group_chat_info","parseGroupInfo","prev_group_info","sync_deleted","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","receiver","XABBER_CHAT","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","cached_stanza_id","references","cached_message","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","created_at","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","concat","user_info","participant_info","chat_content","is_scrolled","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details","name_field","resources_view","edit_groups_view","updateJingleButtons","updateSubscriptions","setButtonsWidth","widths","button","is_blocked","is_server","showQRCode","qrcode","noBorder","domElement","$label_outcoming","$label_incoming","prev","onChangedSubscription","openChat","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","changeNotifications","muteChat","addContact","requestAuthorization","contact_details_right","contact_edit_view","updateNotifications","updateChilds","updateIndicator","keydownHandler","hideEdit","isOpen","scrollToTopSmooth","animate","bottom_block_scroll","showEdit","muted_seconds","mute_type","unmuteChat","$search_form","changeList","list_name","scrollLeft","addList","_render","constructor_func","group_chat_details","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit","is_owner","change_group","editProperties","editDefaultRestrictions","leaveGroupChat","inviteUser","getInvitations","deleteGroup","group_chat_details_right","default_restrictions_edit_right","hideRestrictions","showRestrictions","clearHistory","head","edit_view","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","err_text","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","participant","temporary_items","all_messages_loaded","getMediaFromDecryptedMessages","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","block_height","updateForParticipant","delegateEvents","filter_type","fail","cached_messages","getMessages","entries","msg_items","filtered_items","items_count","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","is_encrypted","media_items_empty","messages_count","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","removeParticipantFromList","badge","is_me","pretty_present","present","isValid","group_member_item","prependTo","updateMemberAvatar","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateNickname","updateRightsView","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","resetParticipants","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","args","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","add","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","cached_conversations_exclude","onSyncIQ","last_version_sync","syncCachedConversations","request_with_stamp","cached_conversations","syncConversation","conversation","parseXML","saved","conv","account_conversation_type","removeFromCachedConversations","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","current_chat_timestamp","retracted_msg_id_list","putInCachedConversations","last_message","updateEncryptedChat","updateMutedList","$jingle_message","getCallingAvailability","sendReject","initIncomingCall","sync_update","updateEmptyChat","is_unread","delay","messages_unread","isSenderMe","is_last_sync","sync_timestamp","sync_rsm_after","last_chat_msg_id","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","retract_version","sync_options","getRoster","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","onRosterItem","is_version","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","hideTabs","selectUnblock","updateUnblockButton","unblockContactByJid","tab_name","hideEmptyContainers","tmp","contact_blocked_item","$domain_wrap","$desc","blocked_list","reg","blocked_contacts_desc","blocked_domains_desc","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","onPlaceholderUpdate","add_contact","group_data","updateGroups","renderGroupsForAccount","stepForward","silent","groups_checkbox_list_contact","checkJid","custom_notifications","message_preview","pinned","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","Boolean","_roster_settings","RosterSettings","roster_settings_view","RosterSettingsView","contacts_view","RosterLeftView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","destroyOnEcho","removeMessage","forwarded_message","getState","getVerboseState","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","is_unread_archived","participant_message","echo_msg","is_between_anchors","not_encrypted","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","onChangedLastReadMsg","_no_scrolling_event","is_first","requestHistoryBetweenAnchors","read_count","message_item","_long_reading_timeout","scrollToUnread","recountUnread","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","omemo_dfd","msg_options","$delivery_msg","msg_id","by","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","undelivered_messages","last_read_msg_id","second_deferred","new_last_read_msg","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","getConversationType","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","SYNCHRONIZATION_REGULAR_CHAT","message_counter","content_placeholder","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","bottom","draft_message","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","click_counter","setDefaultPlaceholder","onChatRemoved","loading_history","history_loaded","first_msg_id","last_msg_id","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onChangedReadState","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","_onscroll_read_messages_timeout","readVisibleMessages","msg_item","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","timer","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","_is_scrolled_bottom","onChangedActiveStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMyInfo","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","is_context","last_visible_unread_msg","readMessage","hideMessagesAfterSkipping","synced_message","$synced_message","last_visible_msg","$last_visible_msg","_read_last_message_timeout","unread_context_messages","showUnreadMarker","unread_marker","$last_read_msg","mam_query","getMessageArchive","unread_history","scrollToUnreadWithButton","showDayIndicator","is_focused","indicator_idx","opacity_value","$chatday_indicator","$messages","marker","indicator","scroll_read_timer","removeAllMessagesExceptLast","_interval","is_saved","sendMAMRequest","func_conn","_delete_handler_timeout","send_counter","previous_history","_load_history_timeout","unread_history_first","first_unread_msg_stanza_id","unread_history_before","last_history","_wait_load_unread_history","last_archive_id","loadUnreadHistory","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","is_scrolling_needed","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","$prev_message","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","messages_to_save","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","current_time","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","main","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","day_date","msg_players","msg_videos","existing_player","message_id","video_id","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","_pending_time","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","oncancel","xhr_status","fakeStatus","fakeResponse","slot_response","setRequestHeader","response_text","error_status","statusText","files_","file_new_format","imgContent","video_attrs","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","is_missed_msg","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","chat_content_placeholder","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","QuillEmoji","domNode","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","participant_version","active_right_screen","participant_msg_item","$retracted_msg","retracted_msg_id","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","force_bottom","current_scrolling","showGroupChats","group_chats_pinned","showChats","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","archive_chats","saved_chats","notificatons_chats","all_chats","all_chats_pinned","cid","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","addUser","itemIdx","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","hideChat","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetails","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","metadata","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","onloaded_sprites","all_sprites","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","checkContactFingerprints","is_contact_trusted","trust","unverified_counter","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","lastElementChild","lastChild","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","bottom_height","scrolled_to_bottom","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","arr_text","execCommand","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","encoderPath","encoderSampleRate","numberOfChannels","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","forced","emoji_item","innerText","content_concat","getContents","content_attrs","insert","mention_idx","ins","quote_start_idx","quote_end_idx","markup_ref","start_length","delta","markup_reference","editMessage","failed_files","file_check_dfd","pluck","setText","msg_author","image_preview","$img_html_preview","fwd_images","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","putMessage","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","updateHeight","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","deleteTimedHandler","_get_msg_handler","addTimedHandler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","chat_body_placeholder","ChatBodyPlaceholderContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateLayout","updateContainersLayout","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","is_wide","is_narrow","toolbar_accounts_heigth","right_contact_panel_styles","right_contact_panel_saveable","wide","placeholders","path_acc_settings_left","ViewPath","path_acc_settings_right","path_acc_vcard_edit","path_chat_head","path_chat_body","path_chat_body_placeholder","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","devices_count","$container","f_count","generateFingerprint","fing","old_fingerprint","addRow","getBundleInfo","getBundle","pk","spk","getIdentityKeyPair","pubKey","padStart","trustDevice","is_session_initiated","ignoreDevice","delete_button","edit_setting","fingerprint_item","deleteDevice","fingerprints_devices","renderTrustOnFingerprint","device_icons","fingerprint_devices_item","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","cacheRetractVersion","getRetractVersion","dev_id","rand","peer","encryptedMessage","encryptedElement","myKeys","rid","kex","EXPLICIT_MESSAGE_ENCRYPTION","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","cached_msg","getMessage","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","missing_keys","last_id","rec","device_attrs","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","Error","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","discovery","ui","g","webpackContext","webpackContextResolve","__webpack_require__","o","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}