{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,kq2C,6DCAA,muZ,6DCAA,oR,6DCAA,25D,6DCAA,wsE,6DCAA,igC,6DCAA,kqE,4DCAA,moB,6DCAA,uxH,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,ulB,6DCAA,gyK,6DCAA,w4F,6DCAA,k6B,2DCAA,o2B,6DCAA,s9uC,6DCAA,yP,6DCAA,m7B,6DCAA,6iB,6DCAA,45E,6DCAA,0sC,6DCAA,m7lB,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,q9E,6DCAA,0pE,4DCAA,w9B,6DCAA,ue,6DCAA,4a,6DCAA,g6E,6DCAA,we,6DCAA,quC,6DCAA,8a,6DCAA,8S,6DCAA,2K,6DCAA,47pD,6DCAA,q/5C,6DCAA,s1I,6DCAA,uS,6DCAA,g7M,6DCAA,u6C,4DCAA,6hD,6DCAA,8H,6DCAA,qvM,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,24B,6DCAA,ijM,4DCAA,y5C,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,28E,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,0qE,6DCAA,6e,6DCAA,0J,6DCAA,wtH,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,woB,6DCAA,iE,6DCAA,qzG,6DCAA,ghE,6DCAA,8hB,6DCAA,8H,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,8U,6DCAA,iR,6DCAA,0/I,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,w3V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,o0L,6DCAA,q4F,6DCAA,qoG,6DCAA,+tK,6DCAA,oxD,6DCAA,0xE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,0kB,6DCAA,8iB,6DCAA,q1I,6DCAA,8kO,4DCAA,62G,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,u9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,0T,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,gsD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,slB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,+mC,6DCAA,g7B,6DCAA,u0B,6DCAA,ggC,6DCAA,+3B,6DCAA,iuC,6DCAA,o3B,6DCAA,ogC,6DCAA,88B,6DCAA,g3B,6DCAA,soC,6DCAA,ytC,6DCAA,0pC,6DCAA,k8B,6DCAA,qpC,6DCAA,qnD,6DCAA,qiC,6DCAA,m9B,4DCAA,s6B,6DCAA,koC,6DCAA,s7B,6DCAA,ioC,6DCAA,o3B,6DCAA,qrB,6DCAA,uoB,6DCAA,2hB,6DCAA,2iB,6DCAA,2nB,6DCAA,yjB,6DCAA,6sB,6DCAA,qsB,6DCAA,uuB,6DCAA,utB,6DCAA,8vB,6DCAA,ovB,6DCAA,ixB,6DCAA,2vB,6DCAA,gwC,6DCAA,i8B,6DCAA,w0B,4DCAA,izB,6DCAA,o3B,6DCAA,klB,6DCAA,0uB,6DCAA,yxB,6DCAA,k+B,6DCAA,6lC,6DCAA,01B,6DCAA,6tC,6DCAA,wyB,6DCAA,2uB,6DCAA,isB,6DCAA,mqB,6DCAA,q/B,4DCAA,ktB,6DCAA,6pB,6DCAA,8/B,6DCAA,84B,6DCAA,mjB,6DCAA,ovB,6DCAA,woB,6DCAA,iqB,6DCAA,kpB,6DCAA,k0B,4DCAA,ynB,6DCAA,4sB,4DCAA,wwC,6DCAA,22B,6DCAA,gwB,6DCAA,ixB,6DCAA,knB,6DCAA,wiC,6DCAA,igC,6DCAA,kiD,6DCAA,+xB,6DCAA,64E,6DCAA,0hC,6DCAA,+3B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,+8B,6DCAA,myB,6DCAA,kqB,4DCAA,krD,6DCAA,s2B,6DCAA,8uB,6DCAA,+oC,6DCAA,0zB,6DCAA,y5B,6DCAA,wtB,6DCAA,w2B,6DCAA,yzB,6DCAA,i2B,6DCAA,m3B,6DCAA,u7B,4DCAA,wgC,4DCAA,24B,6DCAA,+9C,4DCAA,y+B,6DCAA,mgC,6DCAA,k4B,4DCAA,i4C,4DCAA,8rB,6DCAA,svB,6DCAA,ogB,6DCAA,yoB,6DCAA,61C,6DCAA,6hB,6DCAA,qvB,6DCAA,07B,6DCAA,gvB,6DCAA,i8B,4DCAA,k6B,6DCAA,2f,6DCAA,+4B,6DCAA,ikC,6DCAA,qpB,6DCAA,wuB,6DCAA,gmB,6DCAA,6xL,6DCAA,68B,6DCAA,o8C,6DCAA,o4B,6DCAA,wtC,6DCAA,ktC,6DCAA,y9B,6DCAA,2oB,6DCAA,uwB,4DCAA,2kC,6DCAA,m6B,2DCAA,0uB,4DCAA,inC,4DCAA,q7B,6DCAA,2tB,6DCAA,k5B,6DCAA,0nB,6DCAA,6qB,6DCAA,4uB,4DCAA,4hB,6DCAA,u6B,6DCAA,g3D,4DCAA,6mD,6DCAA,y4C,6DCAA,6lC,6DCAA,8wB,6DCAA,86Q,6DCAA,07V,6DCAA,uN,6DCAA,2hf,YCAAC,EAAOC,QAAU,CAAC,oBAAoB,CAAC,MAAQ,CAAC,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,6HAA6H,CAAC,UAAY,CAAC,0GAA0G,mBAAmB,CAAC,wHAAwH,CAAC,UAAY,CAAC,wHAAwH,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,gIAAgI,mBAAmB,CAAC,oJAAoJ,CAAC,UAAY,CAAC,4HAA4H,mBAAmB,CAAC,0IAA0I,CAAC,UAAY,CAAC,8GAA8G,mBAAmB,CAAC,sIAAsI,CAAC,UAAY,CAAC,mHAAmH,mBAAmB,CAAC,iIAAiI,CAAC,UAAY,CAAC,6GAA6G,mBAAmB,CAAC,2HAA2H,CAAC,UAAY,CAAC,6HAA6H,mBAAmB,CAAC,2IAA2I,CAAC,UAAY,CAAC,uGAAuG,mBAAmB,CAAC,qHAAqH,CAAC,UAAY,CAAC,2GAA2G,mBAAmB,CAAC,yHAAyH,CA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C,OAAQ,YAAa,SAAU,SAAU,OAAQ,SAE/DC,YAAa,CACTC,IAAK,kwUACLC,IAAK,s6JACLC,KAAM,wyOAGVC,WAAY,CACRC,MAAO,CACH,YACA,aACA,cACA,YACA,gBACA,aACA,2BACA,qBACA,cAEJC,MAAO,CACH,cACA,YACA,YACA,YACA,aACA,YACA,yBACA,+BACA,eACA,iBACA,iBACA,yBACA,iBACA,aACA,eAEJC,MAAO,CACH,aACA,YACA,YACA,kBACA,aACA,iBACA,cACA,aACA,eAEJC,SAAU,CACN,WACA,WACA,WACA,YACA,6BACA,aACA,WACA,WACA,gBACA,sCACA,kBACA,0CACA,8CACA,sBAEJC,IAAK,CACD,mBAEJC,MAAO,CACH,iDACA,4BAEJC,QAAS,CACL,kBACA,mBACA,+BACA,oBACA,+BAEJC,aAAc,CACV,gCACA,oDAIRC,UAAW,CACP,GAAM,UACN,QAAS,UACT,QAAS,eACT,QAAS,aACT,QAAS,YACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,UACT,QAAS,WACT,MAAS,wBACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,QACT,SAAU,WACV,QAAS,WACT,QAAS,UACT,GAAM,QACN,QAAS,SACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,mBACT,QAAS,WACT,QAAS,WACT,QAAS,MACT,QAAS,UACT,SAAU,mBACV,QAAS,MACT,QAAS,QACT,QAAS,WACT,QAAS,SACT,QAAS,gBACT,QAAS,WACT,QAAS,aACT,QAAS,SACT,QAAS,QACT,QAAS,gBACT,QAAS,iBACT,QAAS,SACT,QAAS,aACT,QAAS,kBACT,QAAS,UACT,QAAS,mBACT,QAAS,SACT,QAAS,wBACT,QAAS,YACT,SAAU,SACV,QAAS,SACT,QAAS,UACT,SAAU,QACV,QAAS,QACT,QAAS,aACT,QAAS,cACT,QAAS,QACT,aAAc,yBACd,QAAS,kBACT,QAAS,UACT,QAAS,YACT,QAAS,QACT,QAAS,SACT,QAAS,SACT,QAAS,YACT,SAAU,UACV,QAAS,SACT,QAA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AEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,MAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,MAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IACtkF,mBAAsB,CAAC,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,MAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAA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G,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAA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AEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,MAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,KAAOiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,IAAI,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EA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AQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,GAAGC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OAAQiR,EAAE,EAAEC,EAAE,GAAG,CAAClR,KAAK,OA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AAE,IAAM,EAAE,QAAQ,GAAG,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,aAAa,EAAE,QAAQ,GAAG,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,SAAS,EAAE,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,GAAK,EAAE,QAAQ,GAAG,QAAQ,GAAG,GAAK,QAAuF,KAAnD,OAAsBuyB,GAA6B,6B,iBCArvB,IAAI1yB,EAAM,CACT,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,IACA,KAED,UAAW,CACV,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,KACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,oBAAqB,CACpB,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,KACA,MAED,4BAA6B,CAC5B,OAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,OAGF,SAAS4yJ,EAAoB1yJ,GAC5B,IAAIG,EAAoBC,EAAEN,EAAKE,GAC9B,OAAOqmB,QAAQ3lB,UAAUqrB,MAAK,KAC7B,IAAI1rB,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,CAAC,IAIT,IAAI6iC,EAAMpjC,EAAIE,GAAMC,EAAKijC,EAAI,GAC7B,OAAO7c,QAAQ1T,IAAIuwB,EAAIxvB,MAAM,GAAG5T,IAAIK,EAAoBE,IAAI0rB,MAAK,IACzD5rB,EAAoBy2B,EAAE32B,EAAI,KAEnC,CACAyyJ,EAAoBlyJ,KAAO,IAAOC,OAAOD,KAAKV,GAC9C4yJ,EAAoBzyJ,GAAK,KACzBL,EAAOC,QAAU6yJ,C,kBCzUjB,WAEE,KAFF,aAAqB,OAAOz6H,KAAKC,MACjC,kJACE,+B,02rBCDEy6H,EAA2B,CAAC,EAGhC,SAASxyJ,EAAoByyJ,GAE5B,IAAIC,EAAeF,EAAyBC,GAC5C,QAAqB9lI,IAAjB+lI,EACH,OAAOA,EAAahzJ,QAGrB,IAAID,EAAS+yJ,EAAyBC,GAAY,CACjD3yJ,GAAI2yJ,EACJl3B,QAAQ,EACR77H,QAAS,CAAC,GAUX,OANAizJ,EAAoBF,GAAUt7F,KAAK13D,EAAOC,QAASD,EAAQA,EAAOC,QAASM,GAG3EP,EAAO87H,QAAS,EAGT97H,EAAOC,OACf,CAGAM,EAAoBooB,EAAIuqI,EC5BxB3yJ,EAAoB4yJ,KAAO,CAAC,EhWAxBxzJ,EAAW,GACfY,EAAoB6yJ,EAAI,CAACz6I,EAAQ06I,EAAU59I,EAAIkgD,KAC9C,IAAG09F,EAAH,CAMA,IAAIC,EAAeC,IACnB,IAASt/I,EAAI,EAAGA,EAAItU,EAASmT,OAAQmB,IAAK,CAGzC,IAFA,IAAKo/I,EAAU59I,EAAIkgD,GAAYh2D,EAASsU,GACpCu/I,GAAY,EACPC,EAAI,EAAGA,EAAIJ,EAASvgJ,OAAQ2gJ,MACpB,EAAX99F,GAAsB29F,GAAgB39F,IAAa90D,OAAOD,KAAKL,EAAoB6yJ,GAAGM,OAAOtrI,GAAS7nB,EAAoB6yJ,EAAEhrI,GAAKirI,EAASI,MAC9IJ,EAAS71E,OAAOi2E,IAAK,IAErBD,GAAY,EACT79F,EAAW29F,IAAcA,EAAe39F,IAG7C,GAAG69F,EAAW,CACb7zJ,EAAS69E,OAAOvpE,IAAK,GACrB,IAAI6Q,EAAIrP,SACEyX,IAANpI,IAAiBnM,EAASmM,EAC/B,CACD,CACA,OAAOnM,CAnBP,CAJCg9C,EAAWA,GAAY,EACvB,IAAI,IAAI1hD,EAAItU,EAASmT,OAAQmB,EAAI,GAAKtU,EAASsU,EAAI,GAAG,GAAK0hD,EAAU1hD,IAAKtU,EAASsU,GAAKtU,EAASsU,EAAI,GACrGtU,EAASsU,GAAK,CAACo/I,EAAU59I,EAAIkgD,EAqBjB,EiWzBdp1D,EAAoBozJ,EAAK3zJ,IACxB,IAAI4zJ,EAAS5zJ,GAAUA,EAAO6zJ,WAC7B,IAAO7zJ,EAAiB,QACxB,IAAM,EAEP,OADAO,EAAoBmmJ,EAAEkN,EAAQ,CAAE9sI,EAAG8sI,IAC5BA,CAAM,EhWNV/zJ,EAAWgB,OAAOizJ,eAAkBnwI,GAAS9iB,OAAOizJ,eAAenwI,GAASA,GAASA,EAAa,UAQtGpjB,EAAoBy2B,EAAI,SAASxqB,EAAOunJ,GAEvC,GADU,EAAPA,IAAUvnJ,EAAQoD,KAAKpD,IAChB,EAAPunJ,EAAU,OAAOvnJ,EACpB,GAAoB,iBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAPunJ,GAAavnJ,EAAMqnJ,WAAY,OAAOrnJ,EAC1C,GAAW,GAAPunJ,GAAoC,mBAAfvnJ,EAAM2f,KAAqB,OAAO3f,CAC5D,CACA,IAAI28D,EAAKtoE,OAAO+tD,OAAO,MACvBruD,EAAoBukB,EAAEqkD,GACtB,IAAI6qF,EAAM,CAAC,EACXp0J,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAIo0J,EAAiB,EAAPF,GAAYvnJ,EAAyB,iBAAXynJ,KAAyBr0J,EAAeiV,QAAQo/I,GAAUA,EAAUp0J,EAASo0J,GACxHpzJ,OAAOqzJ,oBAAoBD,GAAS1jJ,SAAS6X,GAAS4rI,EAAI5rI,GAAO,IAAO5b,EAAM4b,KAI/E,OAFA4rI,EAAa,QAAI,IAAM,EACvBzzJ,EAAoBmmJ,EAAEv9E,EAAI6qF,GACnB7qF,CACR,EiWxBA5oE,EAAoBmmJ,EAAI,CAACzmJ,EAASk0J,KACjC,IAAI,IAAI/rI,KAAO+rI,EACX5zJ,EAAoBC,EAAE2zJ,EAAY/rI,KAAS7nB,EAAoBC,EAAEP,EAASmoB,IAC5EvnB,OAAOuzJ,eAAen0J,EAASmoB,EAAK,CAAEisI,YAAY,EAAMrhJ,IAAKmhJ,EAAW/rI,IAE1E,ECND7nB,EAAoBosF,EAAI,CAAC,EAGzBpsF,EAAoBE,EAAK6zJ,GACjB7tI,QAAQ1T,IAAIlS,OAAOD,KAAKL,EAAoBosF,GAAGxtD,QAAO,CAACo1H,EAAUnsI,KACvE7nB,EAAoBosF,EAAEvkE,GAAKksI,EAASC,GAC7BA,IACL,KCNJh0J,EAAoB84H,EAAKi7B,GAEjB,UAAYA,EAAU,MCF9B/zJ,EAAoBi0J,SAAYF,IAEf,ECHjB/zJ,EAAoBsyJ,EAAI,WACvB,GAA0B,iBAAf4B,WAAyB,OAAOA,WAC3C,IACC,OAAO7kJ,MAAQ,IAAIqK,SAAS,cAAb,EAGhB,CAFE,MAAOxZ,GACR,GAAsB,iBAAX+T,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBjU,EAAoBm0J,IAAO10J,KAC1BA,EAASa,OAAO+tD,OAAO5uD,IACX2/B,WAAU3/B,EAAO2/B,SAAW,IACxC9+B,OAAOuzJ,eAAep0J,EAAQ,UAAW,CACxCq0J,YAAY,EACZviI,IAAK,KACJ,MAAM,IAAIpxB,MAAM,0FAA4FV,EAAOK,GAAG,IAGjHL,GCTRO,EAAoBC,EAAI,CAACmjB,EAAK7I,IAAUja,OAAOwR,UAAU20F,eAAetvC,KAAK/zC,EAAK7I,GtWA9Ehb,EAAa,CAAC,EACdC,EAAoB,cAExBQ,EAAoBo0J,EAAI,CAACloJ,EAAK0tB,EAAM/R,EAAKksI,KACxC,GAAGx0J,EAAW2M,GAAQ3M,EAAW2M,GAAKmE,KAAKupB,OAA3C,CACA,IAAIy6H,EAAQC,EACZ,QAAW3nI,IAAR9E,EAEF,IADA,IAAI0sI,EAAU/qJ,SAASuhD,qBAAqB,UACpCr3C,EAAI,EAAGA,EAAI6gJ,EAAQhiJ,OAAQmB,IAAK,CACvC,IAAI8gJ,EAAID,EAAQ7gJ,GAChB,GAAG8gJ,EAAE7oH,aAAa,QAAUz/B,GAAOsoJ,EAAE7oH,aAAa,iBAAmBnsC,EAAoBqoB,EAAK,CAAEwsI,EAASG,EAAG,KAAO,CACpH,CAEGH,IACHC,GAAa,GACbD,EAAS7qJ,SAAS8M,cAAc,WAEzBm+I,QAAU,QACjBJ,EAAOz5F,QAAU,IACb56D,EAAoB00J,IACvBL,EAAO3oH,aAAa,QAAS1rC,EAAoB00J,IAElDL,EAAO3oH,aAAa,eAAgBlsC,EAAoBqoB,GACxDwsI,EAAO/8I,IAAMpL,GAEd3M,EAAW2M,GAAO,CAAC0tB,GACnB,IAAI+6H,EAAmB,CAACxlE,EAAM18D,KAE7B4hI,EAAO57I,QAAU47I,EAAO78I,OAAS,KACjCwuB,aAAa40B,GACb,IAAIg6F,EAAUr1J,EAAW2M,GAIzB,UAHO3M,EAAW2M,GAClBmoJ,EAAOvyG,YAAcuyG,EAAOvyG,WAAWjhB,YAAYwzH,GACnDO,GAAWA,EAAQ5kJ,SAASkF,GAAQA,EAAGud,KACpC08D,EAAM,OAAOA,EAAK18D,EAAM,EAExBmoC,EAAUxgD,WAAWu6I,EAAiBp8I,KAAK,UAAMoU,EAAW,CAAE5Y,KAAM,UAAW6J,OAAQy2I,IAAW,MACtGA,EAAO57I,QAAUk8I,EAAiBp8I,KAAK,KAAM87I,EAAO57I,SACpD47I,EAAO78I,OAASm9I,EAAiBp8I,KAAK,KAAM87I,EAAO78I,QACnD88I,GAAc9qJ,SAAS0nF,KAAK7zE,YAAYg3I,EAnCkB,CAmCX,EuWtChDr0J,EAAoBukB,EAAK7kB,IACH,oBAAXm1J,QAA0BA,OAAOC,aAC1Cx0J,OAAOuzJ,eAAen0J,EAASm1J,OAAOC,YAAa,CAAE7oJ,MAAO,WAE7D3L,OAAOuzJ,eAAen0J,EAAS,aAAc,CAAEuM,OAAO,GAAO,ECL9DjM,EAAoB+0J,IAAOt1J,IAC1BA,EAAOu1J,MAAQ,GACVv1J,EAAO2/B,WAAU3/B,EAAO2/B,SAAW,IACjC3/B,G,MCHR,IAAIw1J,EACAj1J,EAAoBsyJ,EAAE4C,gBAAeD,EAAYj1J,EAAoBsyJ,EAAEn+H,SAAW,IACtF,IAAI3qB,EAAWxJ,EAAoBsyJ,EAAE9oJ,SACrC,IAAKyrJ,GAAazrJ,IACbA,EAAS2rJ,gBACZF,EAAYzrJ,EAAS2rJ,cAAc79I,MAC/B29I,GAAW,CACf,IAAIV,EAAU/qJ,EAASuhD,qBAAqB,UACzCwpG,EAAQhiJ,SAAQ0iJ,EAAYV,EAAQA,EAAQhiJ,OAAS,GAAG+E,IAC5D,CAID,IAAK29I,EAAW,MAAM,IAAI90J,MAAM,yDAChC80J,EAAYA,EAAU/iJ,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFlS,EAAoBi7G,EAAIg6C,C,WCfxBj1J,EAAoBi5C,EAAIzvC,SAAS4rJ,SAAWx4H,KAAKzI,SAAS1N,KAK1D,IAAI4uI,EAAkB,CACrB,IAAK,GAGNr1J,EAAoBosF,EAAE8mE,EAAI,CAACa,EAASC,KAElC,IAAIsB,EAAqBt1J,EAAoBC,EAAEo1J,EAAiBtB,GAAWsB,EAAgBtB,QAAWpnI,EACtG,GAA0B,IAAvB2oI,EAGF,GAAGA,EACFtB,EAAS3jJ,KAAKilJ,EAAmB,QAC3B,CAGL,IAAI58I,EAAU,IAAIwN,SAAQ,CAAC3lB,EAAS4lB,IAAYmvI,EAAqBD,EAAgBtB,GAAW,CAACxzJ,EAAS4lB,KAC1G6tI,EAAS3jJ,KAAKilJ,EAAmB,GAAK58I,GAGtC,IAAIxM,EAAMlM,EAAoBi7G,EAAIj7G,EAAoB84H,EAAEi7B,GAEpD71I,EAAQ,IAAI/d,MAgBhBH,EAAoBo0J,EAAEloJ,GAfFumB,IACnB,GAAGzyB,EAAoBC,EAAEo1J,EAAiBtB,KAEf,KAD1BuB,EAAqBD,EAAgBtB,MACRsB,EAAgBtB,QAAWpnI,GACrD2oI,GAAoB,CACtB,IAAIC,EAAY9iI,IAAyB,SAAfA,EAAM1e,KAAkB,UAAY0e,EAAM1e,MAChEyhJ,EAAU/iI,GAASA,EAAM7U,QAAU6U,EAAM7U,OAAOtG,IACpD4G,EAAMwK,QAAU,iBAAmBqrI,EAAU,cAAgBwB,EAAY,KAAOC,EAAU,IAC1Ft3I,EAAMlS,KAAO,iBACbkS,EAAMnK,KAAOwhJ,EACbr3I,EAAMshC,QAAUg2G,EAChBF,EAAmB,GAAGp3I,EACvB,CACD,GAEwC,SAAW61I,EAASA,EAE/D,CACD,EAWF/zJ,EAAoB6yJ,EAAEK,EAAKa,GAA0C,IAA7BsB,EAAgBtB,GAGxD,IAAI0B,EAAuB,CAACC,EAA4B3mJ,KACvD,IAGI0jJ,EAAUsB,GAHTjB,EAAU6C,EAAaC,GAAW7mJ,EAGhB2E,EAAI,EAC3B,GAAGo/I,EAAS+C,MAAM/1J,GAAgC,IAAxBu1J,EAAgBv1J,KAAa,CACtD,IAAI2yJ,KAAYkD,EACZ31J,EAAoBC,EAAE01J,EAAalD,KACrCzyJ,EAAoBooB,EAAEqqI,GAAYkD,EAAYlD,IAGhD,GAAGmD,EAAS,IAAIx9I,EAASw9I,EAAQ51J,EAClC,CAEA,IADG01J,GAA4BA,EAA2B3mJ,GACrD2E,EAAIo/I,EAASvgJ,OAAQmB,IACzBqgJ,EAAUjB,EAASp/I,GAChB1T,EAAoBC,EAAEo1J,EAAiBtB,IAAYsB,EAAgBtB,IACrEsB,EAAgBtB,GAAS,KAE1BsB,EAAgBtB,GAAW,EAE5B,OAAO/zJ,EAAoB6yJ,EAAEz6I,EAAO,EAGjC09I,EAAqBl5H,KAA6B,uBAAIA,KAA6B,wBAAK,GAC5Fk5H,EAAmB9lJ,QAAQylJ,EAAqBl9I,KAAK,KAAM,IAC3Du9I,EAAmBzlJ,KAAOolJ,EAAqBl9I,KAAK,KAAMu9I,EAAmBzlJ,KAAKkI,KAAKu9I,G,KClFvF,IAAIC,EAAsB/1J,EAAoB6yJ,OAAElmI,EAAW,CAAC,OAAO,IAAO3sB,EAAoB,SAC9F+1J,EAAsB/1J,EAAoB6yJ,EAAEkD,E","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/account_settings_modal.html","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_account_password.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item_modal.html","webpack://xabber.web/./templates/accounts/delete_files_media_gallery.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item_modal.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/single_account_settings_modal.html","webpack://xabber.web/./templates/accounts/status_message_input_widget.html","webpack://xabber.web/./templates/accounts/token_item_modal.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/unregister_account.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_devices_item.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/fingerprints_devices.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/setting_emoji_font_radio_input.html","webpack://xabber.web/./templates/base/setting_language_radio_input.html","webpack://xabber.web/./templates/base/setting_radio_input.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/settings_modal.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_content_placeholder.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/chats/unread_marker.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-cancel.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/account.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/address.html","webpack://xabber.web/./templates/svg/alarm-bell.html","webpack://xabber.web/./templates/svg/alert-circle.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/birthday.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/bug.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/camera.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chat.html","webpack://xabber.web/./templates/svg/check-circle.html","webpack://xabber.web/./templates/svg/check.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circle-slice-1.html","webpack://xabber.web/./templates/svg/circle-slice-2.html","webpack://xabber.web/./templates/svg/circle-slice-3.html","webpack://xabber.web/./templates/svg/circle-slice-4.html","webpack://xabber.web/./templates/svg/circle-slice-5.html","webpack://xabber.web/./templates/svg/circle-slice-6.html","webpack://xabber.web/./templates/svg/circle-slice-7.html","webpack://xabber.web/./templates/svg/circle-slice-8.html","webpack://xabber.web/./templates/svg/circles-outline.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/client-outline.html","webpack://xabber.web/./templates/svg/client.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/cloud.html","webpack://xabber.web/./templates/svg/contact-add.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/database-lock.html","webpack://xabber.web/./templates/svg/database.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/description.html","webpack://xabber.web/./templates/svg/device-cellphone.html","webpack://xabber.web/./templates/svg/device-console.html","webpack://xabber.web/./templates/svg/device-desktop.html","webpack://xabber.web/./templates/svg/device-tablet.html","webpack://xabber.web/./templates/svg/device-web.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/download.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/email.html","webpack://xabber.web/./templates/svg/expires.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/id.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/information.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/invite.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/job.html","webpack://xabber.web/./templates/svg/key-variant.html","webpack://xabber.web/./templates/svg/key.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/lock-alert.html","webpack://xabber.web/./templates/svg/lock-check.html","webpack://xabber.web/./templates/svg/lock-cross.html","webpack://xabber.web/./templates/svg/lock-open.html","webpack://xabber.web/./templates/svg/lock-question.html","webpack://xabber.web/./templates/svg/lock.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/security.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/star-face.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/status.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/trash.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/web-cancel.html","webpack://xabber.web/./templates/svg/web.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit_modal.html","webpack://xabber.web/./templates/vcard/vcard_modal.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./xmls/background-images.xml","webpack://xabber.web/./xmls/background-patterns.xml","webpack://xabber.web/./sounds/attention/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/dialtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/notifications/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/ringtones/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./sounds/system/ sync ^\\.\\/.*\\/.*\\.mp3$","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/sounds.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/./templates/ sync ^\\.\\/.*\\.json$","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column settings-column noselect\\\">\\n            <div class=\\\"settings-account-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <div class=\\\"name one-line\\\"></div>\\n                <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n                <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                        <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                        <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                        <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                        <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                        <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                        <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                        <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                        <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                        <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                        <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                        <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                        <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                        <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                        <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                        <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                        <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                        <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n                <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n                    <label class=\\\"field-value\\\">\\n                        <input type=\\\"checkbox\\\">\\n                        <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n                <div class=\\\"picture-wrap\\\">\\n                    <div class=\\\"avatar-wrap\\\">\\n                        <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                            <img/>\\n                            <input type=\\\"file\\\"/>\\n                            <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                                <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-selfie property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                                </div>\\n                                <div class=\\\"btn-choose-image property-variant\\\">\\n                                    {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                                </div>\\n                            </ul>\\n                            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                            </svg>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"name one-line\\\"></div>\\n                <div class=\\\"jid one-line\\\"></div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n                    <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n                    <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"devices-wrap hidden\\\">\\n                <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                    <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                    <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                    <div class=\\\"device-encryption-warning-label\\\"></div>\\n                </div>\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                            <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                    <div class=\\\"orphaned-fingerprints hidden\\\">\\n                        <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                        <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap\\\">\\n                <div class=\\\"settings-tab settings-deletion-button delete-account\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column settings-column noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n                <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n                <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant btn-select-files hidden\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n                    </div>\\n                </ul>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content details-panel\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                        <div class=\\\"settings-tabs-wrap\\\">\\n                            <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"status-wrap setting\\\"></div>\\n                            <div class=\\\"status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"vcard\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"block-list-view-wrap\\\">\\n                        <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tabs-wrap\\\">\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                                <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                                    <div class=\\\"setting-icon-background\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                                    </div>\\n                                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                            <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                                <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                            <div class=\\\"settings-subblock-wrap\\\">\\n                                <div class=\\\"blocklist-info\\\">\\n                                    <div class=\\\"blocklist-wrap\\\">\\n                                        <div class=\\\"buttons-wrap\\\">\\n                                            <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                            <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                        </div>\\n                                        <div class=\\\"blocked-items\\\">\\n                                            <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                        <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                            <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"blocklist-info\\\">\\n                                <div class=\\\"blocklist-wrap\\\">\\n                                    <div class=\\\"buttons-wrap\\\">\\n                                        <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                        <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                        <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                    </div>\\n                                    <div class=\\\"blocked-items\\\">\\n                                        <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                        <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                            <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"groups-info\\\">\\n                                <div class=\\\"groups-wrap\\\">\\n                                    <div class=\\\"groups\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"server-info\\\">\\n                                <div class=\\\"capabilities-wrap\\\">\\n                                    <div class=\\\"capabilities\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                        <div class=\\\"color-scheme-wrap\\\">\\n                            <div class=\\\"account-color\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                            <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                            <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                            <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                            <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                            <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                            <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                            <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                            <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                            <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                            <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                            <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                            <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                            <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                            <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                            <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                            <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                            <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                        <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                        </div>\\n                        <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                            <div class=\\\"property-variant btn-manage-devices\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"property-variant btn-purge-keys\\\">\\n                                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                            </div>\\n                        </ul>\\n                        <div class=\\\"omemo-settings-wrap\\\">\\n                            <div class=\\\"settings\\\">\\n                                <div class=\\\"setting-wrap omemo-enable\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                                    <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"setting-wrap send-chat-states\\\">\\n                                    <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                                    <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                        <label class=\\\"field-value\\\">\\n                                            <input type=\\\"checkbox\\\">\\n                                            <span class=\\\"lever\\\"></span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                        <div class=\\\"device-information-trust-text-wrap\\\">\\n                            <div class=\\\"device-information-trust-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-wrap\\\">\\n                            <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                                <div class=\\\"device-information-item device-information-status\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-last-seen\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-client\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-ip\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-expires\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                            <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                                <div class=\\\"device-information-item device-information-device-id\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                                    <div class=\\\"device-information-text\\\"></div>\\n                                </div>\\n                                <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                                    <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                                    <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span class=\\\"original-state\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</span>\\n        <span class=\\\"success-state hidden\\\">{[print(xabber.getString(\\\"password_changed_success\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content original-state\\\">\\n        <div class=\\\"change-password-fields\\\">\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_old_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"block-subheader\\\">\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"hint_new_pass\\\"))]}</span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key-variant\\\"></svg>\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"change-password-field\\\">\\n                <input class=\\\"input-glow account-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-change btn-flat btn-main original-state\\\" disabled>{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel btn-finish-change success-state hidden\\\">{[print(xabber.getString(\\\"ok\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel original-state\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message input-glow\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}}</div>\\n    </div>\\n    {[if (is_omemo) {]}\\n    <div class=\\\"device-encryption one-line active is-own\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"media_gallery_delete_files_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"deletion-variants no-select\\\">\\n            <div class=\\\"delete-files-text-info\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_info_text\\\"))]}</div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"15\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-1\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_15_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"25\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-2\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_25_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"50\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-4\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_50_percent\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files-percent\\\" data-value=\\\"100\\\">\\n                <svg class=\\\"percent-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circle-slice-8\\\"></svg>\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_button_100_percent\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"media-gallery-delete-items-wrap hidden\\\">\\n            <div class=\\\"delete-files-preview-wrap media-gallery-items-wrap\\\">\\n                <div class=\\\"delete-files-text no-select\\\">{[print(xabber.getString(\\\"media_gallery_delete_files_preview_text\\\"))]}</div>\\n                <div data-value=\\\"image\\\" class=\\\"setting-name header-setting no-select delete-files-images\\\">\\n                    {[print(xabber.getString(\\\"images\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-image hidden grid delete-files-images delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"video\\\" class=\\\"setting-name header-setting no-select delete-files-videos\\\">\\n                    {[print(xabber.getString(\\\"videos\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-video hidden grid delete-files-videos delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"voice\\\" class=\\\"setting-name header-setting no-select delete-files-voices\\\">\\n                    {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-file hidden voice delete-files-voices delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n                <div data-value=\\\"file\\\" class=\\\"setting-name header-setting no-select delete-files-files\\\">\\n                    {[print(xabber.getString(\\\"files\\\"))]}\\n                </div>\\n                <div class=\\\"gallery-files gallery-preview-voice hidden file delete-files-files delete-files-preview-container zoom-gallery\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"no-files hidden\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-confirm btn-flat btn-main\\\">{[print(xabber.getString(\\\"delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"account-info-wrap\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <!--<div class=\\\"status\\\"></div>-->\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"nickname-wrap\\\">\\n            <div class=\\\"nickname one-line\\\"></div>\\n        </div>\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"storage-usages\\\">\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-images hidden\\\" data-media-type=\\\"image\\\" data-header-text='{[print(xabber.getString(\\\"images\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"image\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_images_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-videos hidden\\\" data-media-type=\\\"video\\\" data-header-text='{[print(xabber.getString(\\\"videos\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-video\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_videos_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-voices hidden\\\" data-media-type=\\\"voice\\\" data-header-text='{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file-audio\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_voice_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-files hidden\\\" data-media-type=\\\"file\\\" data-header-text='{[print(xabber.getString(\\\"files\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"file\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_files_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab storage-usage-avatars\\\" data-media-type=\\\"avatars\\\" data-header-text='{[print(xabber.getString(\\\"avatars\\\"))]}'>\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"media_gallery_avatars_label\\\"))]}</div>\\n            <span class=\\\"storage-usage-amount\\\"></span>\\n        </div>\\n        <div class=\\\"settings-tab settings-non-tab show-deletion settings-deletion-button\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"media_gallery_delete_files\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"media-gallery-items-wrap hidden\\\">\\n    <div class=\\\"gallery-sticky-buttons\\\">\\n        <i class=\\\"btn-back-gallery sticky-item mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-close-selection sticky-item mdi mdi-24px mdi-close\\\"></i>\\n        <div class=\\\"sticky-item gallery-selection-head\\\"></div>\\n        <i class=\\\"btn-delete-selection sticky-item mdi mdi-24px mdi-delete\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'; this.onerror = null;\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{created_at}}</span>\\n        </div>\\n        {[if (duration && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\"/>\\n        <label></label>\\n    </div>\\n    {[if (download_only){]}\\n        <div class=\\\"btn-download btn-more\\\">\\n            <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n                <i class=\\\"mdi mdi-24px mdi-download\\\"></i>\\n            </a>\\n        </div>\\n    {[} else {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n    {[}]}\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"\\n<div class=\\\"left-column settings-column noselect\\\">\\n    <div class=\\\"settings-account-head\\\">\\n        <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n        <div class=\\\"name one-line\\\"></div>\\n        <svg class=\\\"btn-color-picker dropdown-button mdi mdi-24px mdi-svg-template\\\" data-activates=\\\"color-picker-dropdown\\\" data-svgname=\\\"palette\\\"></svg>\\n        <ul id=\\\"color-picker-dropdown\\\" class=\\\"dropdown-content color-picker-dropdown bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"red\\\">\\n                <span class=\\\"one-line text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"pink\\\">\\n                <span class=\\\"one-line text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"purple\\\">\\n                <span class=\\\"one-line text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-purple\\\">\\n                <span class=\\\"one-line text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"indigo\\\">\\n                <span class=\\\"one-line text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue\\\">\\n                <span class=\\\"one-line text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-blue\\\">\\n                <span class=\\\"one-line text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"cyan\\\">\\n                <span class=\\\"one-line text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"teal\\\">\\n                <span class=\\\"one-line text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"green\\\">\\n                <span class=\\\"one-line text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"light-green\\\">\\n                <span class=\\\"one-line text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"lime\\\">\\n                <span class=\\\"one-line text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"amber\\\">\\n                <span class=\\\"one-line text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"orange\\\">\\n                <span class=\\\"one-line text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"deep-orange\\\">\\n                <span class=\\\"one-line text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"brown\\\">\\n                <span class=\\\"one-line text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant color-picker-button\\\" data-color-value=\\\"blue-grey\\\">\\n                <span class=\\\"one-line text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</span>\\n            </div>\\n        </ul>\\n        <svg class=\\\"btn-qr-code mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        <div class=\\\"field clickable-field enabled-state switch normal\\\">\\n            <label class=\\\"field-value\\\">\\n                <input type=\\\"checkbox\\\">\\n                <span class=\\\"lever\\\"></span>\\n            </label>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <img/>\\n                    <input type=\\\"file\\\"/>\\n                    <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                        <div class=\\\"btn-emoji-panel property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-selfie property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                        </div>\\n                        <div class=\\\"btn-choose-image property-variant\\\">\\n                            {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                        </div>\\n                    </ul>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"name one-line\\\"></div>\\n        <div class=\\\"jid one-line\\\"></div>\\n    </div>\\n    <div class=\\\"settings-tabs-wrap\\\">\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"profile\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__profile_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cloud\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"encryption\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}</div>\\n            <div class=\\\"settings-block-label hidden label-encryption-enabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_enabled_label\\\"))]}</div>\\n            <div class=\\\"settings-block-label label-encryption-disabled one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_disabled_label\\\"))]}</div>\\n        </div>\\n        <div class=\\\"settings-tab\\\" data-block-name=\\\"devices\\\">\\n            <div class=\\\"setting-icon-background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n            </div>\\n            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}</div>\\n            <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"right-column settings-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <i class=\\\"btn-back-settings mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <i class=\\\"btn-back-subsettings-account mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <i class=\\\"btn-sorting dropdown-button mdi mdi-24px mdi-sort hidden\\\" data-activates=\\\"storage-file-sorting\\\"></i>\\n        <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button hidden\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-select-files hidden\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_select_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__devices_subheader\\\"))]}' class=\\\"settings-block-wrap devices\\\">\\n                <div class=\\\"devices-wrap hidden\\\">\\n                    <div class=\\\"device-encryption-warning hidden\\\" data-not-trusted-count=\\\"0\\\">\\n                        <svg class=\\\"device-encryption-icon mdi mdi-40px mdi-svg-template\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n                        <div class=\\\"device-encryption-warning-name one-line\\\">{[print(xabber.getString(\\\"settings_account__encryption_warning_header\\\"))]}</div>\\n                        <div class=\\\"device-encryption-warning-label\\\"></div>\\n                    </div>\\n                    <div class=\\\"tokens-wrap\\\">\\n                        <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n                        <div class=\\\"current-token-wrap\\\">\\n                            <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                            <div class=\\\"btn-revoke-all-tokens settings-button-devices\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg>\\n                                <div class=\\\"settings-button-devices-label\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-panel-label active-sessions-label\\\">{[print(xabber.getString(\\\"settings_account__label_active_sessions\\\"))]}</div>\\n                        <div class=\\\"all-sessions-wrap\\\">\\n                            <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"orphaned-fingerprints hidden\\\">\\n                            <div class=\\\"orphaned-fingerprints-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__legacy_encryption_label\\\"))]}</div>\\n                            <div class=\\\"orphaned-fingerprints-wrap selectable-text\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap profile\\\">\\n                <div class=\\\"settings-tabs-wrap\\\">\\n                    <div class=\\\"settings-tab settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"status\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"vcard-tab\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__edit_profile_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"password\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"key\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__password_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"blocklist\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"block_list\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"circles-groups\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\"></div>\\n                    </div>\\n                    <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"capabitilies\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}</div>\\n                        <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__capabilities_subheader_label\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab unregister-account settings-deletion-button settings-non-tab\\\" data-subblock-parent-name=\\\"profile\\\" data-block-name=\\\"delete-account\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name settings-block-name-single one-line\\\">{[print(xabber.getString(\\\"settings_account__delete_account_subheader\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__status_subheader\\\"))]}' class=\\\"settings-block-wrap status\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"status-wrap setting\\\"></div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__edit_profile\\\"))]}' class=\\\"settings-block-wrap vcard-tab\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"vcard\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-list-view-wrap\\\">\\n                <div data-header='{[print(xabber.getString(\\\"block_list\\\"))]}' data-parent-block=\\\"profile\\\" class=\\\"settings-block-wrap blocklist\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tabs-wrap\\\">\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-contacts\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-domains\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web-cancel\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                        <div class=\\\"settings-tab hidden\\\" data-subblock-parent-name=\\\"blocklist\\\" data-block-name=\\\"blocklist-invitations\\\">\\n                            <div class=\\\"setting-icon-background\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite\\\"></svg>\\n                            </div>\\n                            <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}</div>\\n                            <div class=\\\"settings-block-label one-line\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_contacts\\\"))]}' data-block-name=\\\"blocklist-contacts\\\" class=\\\"settings-block-wrap blocklist-contacts\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-contacts-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                                    <div class=\\\"blocked-items-container blocked-contacts-wrap\\\" data-tab-name=\\\"contacts-item\\\">\\n                                        <div class=\\\"blocked-contacts blocked-list\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_domains\\\"))]}' data-block-name=\\\"blocklist-domains\\\" class=\\\"settings-block-wrap blocklist-domains\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"blocklist-info\\\">\\n                            <div class=\\\"blocklist-wrap\\\">\\n                                <div class=\\\"buttons-wrap\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                    <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                    <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                                </div>\\n                                <div class=\\\"blocked-items\\\">\\n                                    <div class=\\\"blocked-domains-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_domains_empty\\\"))]}</div></div>\\n                                <div class=\\\"blocked-items-container blocked-domains-wrap\\\" data-tab-name=\\\"domains-item\\\">\\n                                    <div class=\\\"blocked-domains blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__blocked_invitations\\\"))]}' data-block-name=\\\"blocklist-invitations\\\" class=\\\"settings-block-wrap blocklist-invitations\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"blocklist-info\\\">\\n                        <div class=\\\"blocklist-wrap\\\">\\n                            <div class=\\\"buttons-wrap\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template btn-block\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n                                <button class=\\\"btn-deselect-blocked btn-flat btn-main   hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n                                <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500  hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n                            </div>\\n                            <div class=\\\"blocked-items\\\">\\n                                <div class=\\\"blocked-invitations-placeholder placeholder\\\">{[print(xabber.getString(\\\"blocked_invitations_empty\\\"))]}</div>\\n                                <div class=\\\"blocked-items-container blocked-invitations-wrap\\\" data-tab-name=\\\"invitations-item\\\">\\n                                    <div class=\\\"blocked-invitations blocked-list\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap circles-groups\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"groups-info\\\">\\n                        <div class=\\\"groups-wrap\\\">\\n                            <div class=\\\"groups\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__capabilities_subheader\\\"))]}' class=\\\"settings-block-wrap capabitilies\\\">\\n                <div class=\\\"settings-subblock-wrap\\\">\\n                    <div class=\\\"server-info\\\">\\n                        <div class=\\\"capabilities-wrap\\\">\\n                            <div class=\\\"capabilities\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__encryption\\\"))]}' class=\\\"settings-block-wrap encryption\\\">\\n                <div class=\\\"btn-more device-more-button dropdown-button\\\" data-activates=\\\"device-omemo-actions\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n                </div>\\n                <ul id=\\\"device-omemo-actions\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n                    <div class=\\\"property-variant btn-manage-devices\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</span>\\n                    </div>\\n                    <div class=\\\"property-variant btn-purge-keys\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</span>\\n                    </div>\\n                </ul>\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}' class=\\\"settings-block-wrap device-information hidden\\\">\\n                <div class=\\\"device-information-trust-text-wrap\\\">\\n                    <div class=\\\"device-information-trust-text\\\"></div>\\n                </div>\\n                <div class=\\\"device-information-wrap\\\">\\n                    <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings_account__device_information\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-basic\\\">\\n                        <div class=\\\"device-information-item device-information-status\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"status\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-last-seen\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__status__label_last_seen\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-client\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"id\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__client__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-ip\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__ip__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-expires\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"expires\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"device__info__expire__label\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-panel-label device-information-security-label\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>\\n                    <div class=\\\"device-information-items-wrap device-information-encryption\\\">\\n                        <div class=\\\"device-information-item device-information-device-id\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"information\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"settings_account__device_information_device_id\\\"))]}</div>\\n                            <div class=\\\"device-information-text\\\"></div>\\n                        </div>\\n                        <div class=\\\"device-information-item device-information-fingerprint hidden\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"lock\\\"></svg>\\n                            <div class=\\\"device-information-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}</div>\\n                            <div class=\\\"device-information-text device-information-fingerprint-text\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-tab device-information-trust settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-alert\\\" data-svgname=\\\"lock-alert\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-check\\\" data-svgname=\\\"lock-check\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-cross\\\" data-svgname=\\\"lock-cross\\\"></svg>\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template lock-question\\\" data-svgname=\\\"lock-question\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__identity_verification\\\"))]}</div>\\n                    </div>\\n                    <div class=\\\"settings-tab btn-revoke-token settings-deletion-button\\\">\\n                        <div class=\\\"setting-icon-background\\\">\\n                            <svg class=\\\"mdi device-information-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"trash\\\"></svg>\\n                        </div>\\n                        <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"device__info__terminate_session__button\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input input-glow field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap settings-tab\\\" data-subblock-parent-name=\\\"devices\\\" data-block-name=\\\"device-information\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"token-icon-wrap\\\">\\n        {[if (device && (device.indexOf('Android') > -1 || device.indexOf('iOS') > -1)){]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-cellphone\\\"></svg>\\n        {[} else {]}\\n            <svg class=\\\"mdi token-icon mdi-24px mdi-svg-template\\\" data-svgname=\\\"device-web\\\"></svg>\\n        {[}]}\\n    </div>\\n    <div class=\\\"token-client-wrap\\\">\\n        <div class=\\\"device one-line\\\">{{device}}</div>\\n        <div class=\\\"ip-address\\\">{{ip}} • {[ if (resource_obj) {]}{[print(xabber.getString(\\\"account_state_connected\\\"))]}{[} else {]}{{last_auth}}{[}]}</div>\\n    </div>\\n    <div class=\\\"device-encryption one-line\\\">\\n        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"security\\\"></svg>\\n    </div>\\n</div>\";","export default \"<div class=\\\"border ground-color-500\\\"></div>\\n<div class=\\\"account-item-avatar-wrap\\\">\\n    <div class=\\\"circle-avatar-wrap\\\">\\n        <div class=\\\"dropdown-button circle-avatar border-color noselect\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"status\\\"></div>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"filter-chats\\\">\\n        <i class=\\\"mdi mdi-filter mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account__toolbar_item__button_filter_chats\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header no-select\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__delete_account_modal_title\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n        <div class=\\\"modal-description-text no-select\\\">{[print(xabber.getString(\\\"settings_account__delete_account_modal_text\\\"))]}</div>\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_1\\\"/>\\n                        <label for=\\\"confirm_unregister_1\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_1\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field checkbox-field\\\">\\n                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"confirm_unregister_2\\\"/>\\n                        <label for=\\\"confirm_unregister_2\\\">{[print(xabber.getString(\\\"settings_account__checkbox_confirm_unregister_text_2\\\"))]}</label>\\n                    </div>\\n                    <div class=\\\"input-field password-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"settings_account__delete_account_modal_password_placeholder_text\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                        <div class=\\\"login-form-step-error login-password-error\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"login-confirm-form-step-wrap hidden\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid input-field-jid-borders\\\">\\n                        <input id=\\\"jid\\\" type=\\\"text\\\" name=\\\"jid\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button disabled class=\\\"btn-flat btn-main btn-submit-unregister hidden\\\">{[print(xabber.getString(\\\"account_delete\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"fingerprint-content\\\">\\n    {[if (svg_icon){]}\\n        <div class=\\\"fingerprint-device-icon\\\">\\n            <svg class=\\\"mdi mdi-72px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        </div>\\n    {[}]}\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"fingerprint-label\\\">\\n            <div class=\\\"value\\\">{{label}}</div>\\n        </div>\\n    </div>\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap device-fingerprints-part\\\">\\n        <div class=\\\"device-id\\\">\\n            <div class=\\\"value\\\">{{id}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint device-fingerprints-part\\\">\\n            <div class=\\\"label\\\">\\n                {[if (!edit_setting) {]}\\n                    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__other_fingerprint_label\\\"))]}\\n                {[} else {]}\\n                <span class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</span> {[print(xabber.getString(\\\"omemo__dialog_fingerprints__fingerprint_label\\\"))]}\\n                {[}]}</div>\\n            <div class=\\\"value\\\">{{fingerprint}}</div>\\n        </div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n</div>\\n<div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n    {[if (trust !== null && !error) {]}\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n        <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n            <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_verify_device`))]}</div>\\n        </div>\\n    </div>\\n    <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content bootstrap-dropdown noselect fingerprint-dropdown\\\">\\n        <div data-value=\\\"ignore\\\" class=\\\"property-variant btn-ignore\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n        <div data-value=\\\"trust\\\" class=\\\"property-variant btn-trust\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n    </div>\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    {[print(xabber.getString(\\\"omemo__dialog_fingerprints__device_verification_label\\\"))]}\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n    <div class=\\\"other-device-content\\\">\\n\\n    </div>\\n    <div class=\\\"this-device-content\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"fingerprints-help-text\\\">\\n        {[print(xabber.getString(\\\"omemo__dialog_fingerprints__bottom_help_text\\\"))]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"></div>\\n    <div class=\\\"calling-status\\\"></div>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"></audio>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"></video>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"name one-line\\\"></div>\\n    </div>\\n</>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"></path>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"></i>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"></i>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"<div class=\\\"emoji-font-field\\\">\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label class=\\\"one-line\\\" for=\\\"{{input_id}}\\\">{{label}}</label>\\n    {[ if (hint) {]}<div class=\\\"emoji-hint\\\">{{hint}}</div>{[}]}\\n    {[ if (value === 'system') {]}<div class=\\\"emoji-hint\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_system_label\\\"))]}</div>{[}]}\\n</div>\";","export default \"<div class=\\\"language-item\\\">\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n    {[ if (progress && progress.text) {]}<div class=\\\"translation-progress\\\">{{progress.text}}</div>{[}]}\\n</div>\";","export default \"<p>\\n    <input class=\\\"with-gap\\\" name=\\\"{{input_name}}\\\" value=\\\"{{value}}\\\" type=\\\"radio\\\" id=\\\"{{input_id}}\\\" />\\n    <label for=\\\"{{input_id}}\\\">{{label}}</label>\\n</p>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"></div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting idling field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"background-overlay\\\"></div>\\n<div class=\\\"settings-panel\\\">\\n    <div class=\\\"settings-transition-wrap\\\">\\n        <div class=\\\"left-column main-left-column settings-column noselect\\\">\\n            <svg class=\\\"btn-add-account mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"contact-add\\\"></svg>\\n            <div class=\\\"single-account-info-wrap account-settings-panel\\\">\\n                <div class=\\\"single-account-info\\\"></div>\\n            </div>\\n            <div class=\\\"accounts-info-wrap\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n                <div class=\\\"settings-divider\\\"></div>\\n                <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n            </div>\\n            <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                <div class=\\\"settings-panel-label\\\">{[print(xabber.getString(\\\"preferences\\\"))]}</div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__background_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"data_storage\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"database\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__data_storage_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"group-private\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"connection\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab disabled\\\" data-block-name=\\\"debug\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bug\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__debug_label\\\"))]}</div>\\n                </div>\\n                <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                    </div>\\n                    <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n                    <div class=\\\"settings-block-label one-line\\\"></div>\\n                </div>\\n                <div class=\\\"settings-tab settings-deletion-button delete-all-accounts\\\">\\n                    <div class=\\\"setting-icon-background\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                    </div>\\n                    <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings__button_quit\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"right-column main-right-column settings-column hidden noselect\\\">\\n            <div class=\\\"settings-panel-head\\\">\\n                <i class=\\\"btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <i class=\\\"btn-back-subsettings mdi mdi-24px mdi-arrow-left hidden\\\"></i>\\n                <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n                <div class=\\\"description\\\"></div>\\n            </div>\\n\\n            <div class=\\\"panel-content-wrap\\\">\\n                <div class=\\\"panel-content\\\">\\n\\n                    <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"appearance\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__appearance_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"chats\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings_account__chats_label\\\"))]}</div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"avatars\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"background\\\" data-block-name=\\\"emoji_font\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"star-face\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_header\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}' class=\\\"settings-block-wrap appearance\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                                <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                    <div class=\\\"client-main-color-picker\\\">\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-deep-purple-500 outline-color-deep-purple-500\\\" data-value=\\\"deep-purple\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-indigo-500 outline-color-indigo-500\\\" data-value=\\\"indigo\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-cyan-500 outline-color-cyan-500\\\" data-value=\\\"cyan\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-amber-500 outline-color-amber-500\\\" data-value=\\\"amber\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-teal-500 outline-color-teal-500\\\" data-value=\\\"teal\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-brown-500 outline-color-brown-500\\\" data-value=\\\"brown\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-blue-grey-500 outline-color-blue-grey-500\\\" data-value=\\\"blue-grey\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"colors-line\\\">\\n                                            <div class=\\\"client-main-color-item ground-color-light-green-500 outline-color-light-green-500\\\" data-value=\\\"light-green\\\">\\n                                            </div>\\n                                            <div class=\\\"client-main-color-item ground-color-green-500 outline-color-green-500\\\" data-value=\\\"green\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"toolbar-color-setting-wrap\\\">\\n                                <div class=\\\"setting settings-color-padding toolbar-color-setting field-wrap\\\">\\n                                    <div class=\\\"selected-color-wrap\\\">\\n                                        <div class=\\\"selected-color-item\\\"></div>\\n                                        <div class=\\\"selected-color-info\\\">\\n                                            <div class=\\\"selected-color-name\\\"></div>\\n                                            <div class=\\\"selected-color-hex\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"setting background radio-button field-wrap\\\">\\n                                    <div class=\\\"field radio-field clickable-field\\\">\\n                                        <form action=\\\"#\\\">\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                            </p>\\n                                            <p>\\n                                                <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                                <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                    <div class=\\\"current-background-wrap\\\">\\n                                        <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                        <div class=\\\"current-background\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background_effects\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"background-setting-wrap\\\">\\n                                <div class=\\\"blur-setting-wrap\\\">\\n                                    <div class=\\\"setting blur-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                            <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"vignetting-setting-wrap\\\">\\n                                    <div class=\\\"setting vignetting-setting checkbox-setting field-wrap\\\">\\n                                        <div class=\\\"input-field checkbox-field\\\">\\n                                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                            <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                        </div>\\n                                        <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                            <div class=\\\"disabled hidden\\\"></div>\\n                                            <p class=\\\"range-field range-field-design\\\">\\n                                                <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                                <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                            </p>\\n                                        </form>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"chat_viewer\\\"))]}' class=\\\"settings-block-wrap chats\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                            <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                            <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"block-subheader\\\">\\n                                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout\\\"))]}</span>\\n                            </div>\\n                            <div class=\\\"setting idling checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field  checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"idling\\\"/>\\n                                    <label for=\\\"idling\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_idling\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting idling-time field-wrap\\\">\\n                                <div class=\\\"idling-time-input\\\">\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input class=\\\"materialize-timer\\\" placeholder='{[print(constants.IDLING_DEFAULT_TIMEOUT)]}' id=\\\"idle_timeout\\\" min=\\\"{[print(constants.IDLING_MINIMAL_TIMEOUT)]}\\\" max=\\\"{[print(constants.IDLING_MAXIMUM_TIMEOUT)]}\\\" value=\\\"{[print(xabber._settings.get('idling_time'))]}\\\" type=\\\"range\\\" name=\\\"idle_timeout\\\">\\n                                        <span class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-clue\\\">{[print(xabber.getString(\\\"settings__menu_item__idle_timeout_clue\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"avatars\\\"))]}' class=\\\"settings-block-wrap avatars\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"circle-avatar noselect\\\"></div>\\n                            <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                            <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                            <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                            <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                            <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                            <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__emoji_font_header\\\"))]}' class=\\\"settings-block-wrap emoji_font hidden\\\">\\n                        <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                            <div class=\\\"setting emoji-font radio-button\\\">\\n                                <div class=\\\"emoji-fonts-list field radio-field clickable-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"emoji-font-information-wrap\\\">\\n                            <div class=\\\"emojis-preview no-select\\\">\\n                                <div class=\\\"emoji-preview\\\">😀</div>\\n                                <div class=\\\"emoji-preview\\\">😁</div>\\n                                <div class=\\\"emoji-preview\\\">😂</div>\\n                                <div class=\\\"emoji-preview\\\">😋</div>\\n                                <div class=\\\"emoji-preview\\\">😎</div>\\n                                <div class=\\\"emoji-preview\\\">😃</div>\\n                                <div class=\\\"emoji-preview\\\">😄</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🐱</div>\\n                                <div class=\\\"emoji-preview\\\">🐭</div>\\n                                <div class=\\\"emoji-preview\\\">🐛</div>\\n                                <div class=\\\"emoji-preview\\\">🕸</div>\\n                                <div class=\\\"emoji-preview\\\">🕷</div>\\n                                <div class=\\\"emoji-preview\\\">🐢</div>\\n                                <div class=\\\"emoji-preview\\\">🐑</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🍏</div>\\n                                <div class=\\\"emoji-preview\\\">🍜</div>\\n                                <div class=\\\"emoji-preview\\\">🍈</div>\\n                                <div class=\\\"emoji-preview\\\">🍕</div>\\n                                <div class=\\\"emoji-preview\\\">🥢</div>\\n                                <div class=\\\"emoji-preview\\\">🍰</div>\\n                                <div class=\\\"emoji-preview\\\">☕️</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🏋️‍♂️</div>\\n                                <div class=\\\"emoji-preview\\\">🏏</div>\\n                                <div class=\\\"emoji-preview\\\">🏉</div>\\n                                <div class=\\\"emoji-preview\\\">🥇</div>\\n                                <div class=\\\"emoji-preview\\\">🎬</div>\\n                                <div class=\\\"emoji-preview\\\">⚽️</div>\\n                                <div class=\\\"emoji-preview\\\">🎸</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🚗</div>\\n                                <div class=\\\"emoji-preview\\\">🏎</div>\\n                                <div class=\\\"emoji-preview\\\">🎡</div>\\n                                <div class=\\\"emoji-preview\\\">⛴</div>\\n                                <div class=\\\"emoji-preview\\\">🏛</div>\\n                                <div class=\\\"emoji-preview\\\">🏝</div>\\n                                <div class=\\\"emoji-preview\\\">🗿</div>\\n\\n                                <div class=\\\"emoji-preview\\\">🖱</div>\\n                                <div class=\\\"emoji-preview\\\">📡</div>\\n                                <div class=\\\"emoji-preview\\\">🎁</div>\\n                                <div class=\\\"emoji-preview\\\">📬</div>\\n                                <div class=\\\"emoji-preview\\\">⏰</div>\\n                                <div class=\\\"emoji-preview\\\">📹</div>\\n                                <div class=\\\"emoji-preview\\\">📱</div>\\n                            </div>\\n                            <div class=\\\"preloader-wrap hidden\\\">\\n                                <div class=\\\"preloader-wrapper preloader-20px active \\\">\\n                                    <div class=\\\"spinner-layer\\\">\\n                                        <div class=\\\"circle-clipper left\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                        <div class=\\\"gap-patch\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                        <div class=\\\"circle-clipper right\\\">\\n                                            <div class=\\\"circle\\\"></div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"emoji-font-attribution-text hidden\\\"></div>\\n                            <div class=\\\"emoji-font-external-url-text hidden\\\">{[print(xabber.getString(\\\"settings__menu_item__emoji_font_external_url_text\\\"))]}</div>\\n                            <div class=\\\"emoji-font-button-background emoji-font-external-url-button hidden\\\">\\n                                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"download\\\"></svg>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}' class=\\\"settings-block-wrap notifications\\\">\\n                        <div class=\\\"settings-tabs-wrap global-settings-tabs\\\">\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"web-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"client\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</div>\\n                                <div class=\\\"settings-block-label one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications_label\\\"))]}</div>\\n                                <div class=\\\"field notifications-lever clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"chats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chat\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field private-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab settings-tab-big-icon\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"groupchats-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"group-public\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field group-notifications clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"calls-notifications\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls_label\\\"))]}</div>\\n                                <div class=\\\"field jingle-calls clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"settings-tab\\\" data-subblock-parent-name=\\\"notifications\\\" data-block-name=\\\"attention-calls\\\">\\n                                <div class=\\\"setting-icon-background\\\">\\n                                    <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"alarm-bell\\\"></svg>\\n                                </div>\\n                                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</div>\\n                                <div class=\\\"settings-block-label capitalized one-line\\\"></div>\\n                                <div class=\\\"field call-attention clickable-field switch normal\\\">\\n                                    <label class=\\\"field-value\\\">\\n                                        <input type=\\\"checkbox\\\">\\n                                        <span class=\\\"lever\\\"></span>\\n                                    </label>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}' class=\\\"settings-block-wrap web-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting notifications checkbox-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                    <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name volume-setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                            <!--<div class=\\\"setting volume-enable checkbox-setting field-wrap\\\">-->\\n                                <!--<div class=\\\"input-field checkbox-field\\\">-->\\n                                    <!--<input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications_volume_enable\\\"/>-->\\n                                    <!--<label for=\\\"notifications_volume_enable\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume_enable\\\"))]}</label>-->\\n                                <!--</div>-->\\n                            <!--</div>-->\\n                            <div class=\\\"setting volume-setting\\\">\\n                                <form class=\\\"range-form\\\" action=\\\"#\\\">\\n                                    <div class=\\\"disabled hidden\\\"></div>\\n                                    <p class=\\\"range-field range-field-design\\\">\\n                                        <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        <span style=\\\"display: none\\\" class=\\\"thumb\\\"><span class=\\\"value\\\"></span></span>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}' class=\\\"settings-block-wrap chats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting private-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}' class=\\\"settings-block-wrap groupchats-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting message-preview checkbox-setting group-preview field-wrap\\\">\\n                                <div class=\\\"input-field notifications-dependant checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                    <div class=\\\"desktop-notifications-clue-wrap\\\">\\n                                        {[print(xabber.getString(\\\"settings__section_notifications__desktop_notifications_clue\\\"))]}\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field notification-field group-notification-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}' class=\\\"settings-block-wrap calls-notifications\\\">\\n                        <div class=\\\"settings-subblock-wrap\\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field ringtone-field\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field dialtone-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div data-header='{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}' class=\\\"settings-block-wrap attention-calls\\\">\\n                        <div class=\\\"settings-subblock-wrap \\\">\\n                            <div class=\\\"setting-name header-setting\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field attention-field\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                        <div class=\\\"setting load-media checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                                <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting typing-notifications checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                                <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting mapping-service checkbox-setting field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                                <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                        <div class=\\\"setting radio-button interface-language-setting\\\">\\n                            <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"toolbar-top\\\">\\n    <div class=\\\"toolbar-item toolbar-logo\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-middle\\\">\\n    <div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n        <span class=\\\"all-msg-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item jingle-calls\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__jingle_calls\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"bell\\\"></svg>\\n        <span class=\\\"mentions-indicator\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n    </div>\\n\\n    <div class=\\\"toolbar-item geolocation-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__geolocation_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-compass\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"toolbar-item saved-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__saved_chats\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-bookmark\\\"></i>\\n        <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n    </div>\\n\\n    <div class=\\\"add-something-wrap\\\">\\n        <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n            <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n        </div>\\n\\n        <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n            <div class=\\\"add-variant contact\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant public-groupchat\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant incognito-groupchat\\\">\\n                <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n                </svg>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n            </div>\\n            <div class=\\\"add-variant account\\\">\\n                <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n                <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    <div class=\\\"accounts-wrap\\\">\\n        <div class=\\\"accounts\\\">\\n            <div class=\\\"toolbar-item settings-modal hidden\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n                <div class=\\\"border\\\"></div>\\n                <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"></div>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-unread hidden mdi-chevron-down\\\"><div class=\\\"back-to-unread-counter\\\"></div></i>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-body-content-placeholder-text no-select\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"contact-status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"chat-list forward-chats-list\\\">\\n        </div>\\n        <div class=\\\"contact-list forward-chats-list\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"invitation-reason-wrap hidden\\\">\\n        <textarea class=\\\"text-field textarea-glow input-glow account-glow\\\" type=\\\"text\\\" cols=\\\"10\\\" rows=\\\"5\\\" placeholder='{[print(xabber.getString(\\\"invitation_text_placeholder\\\"))]}' id=\\\"invitation_text\\\" name=\\\"invitation_text\\\"></textarea>\\n    </div>\\n    <button class=\\\"btn-flat btn-main btn-invitation-reason\\\">{[print(xabber.getString(\\\"Invitation_reason_button_text\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590 || image_height && image_height < 80 || (1.5 * image_height) < image_width) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" data-width=\\\"{{image_width}}\\\" data-height=\\\"{{image_height}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"\\n     {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]}\\n     {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]}\\n     data-time=\\\"{{timestamp}}\\\"\\n     data-uniqueid=\\\"{{unique_id}}\\\"\\n     {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]}\\n     data-from=\\\"{{from_jid}}\\\"\\n     {[if (device_id) {]} data-device-id=\\\"{{device_id}}\\\" {[}]}\\n>\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}{[ if (device_id) {]}&#013;{[print(xabber.getString('omemo__dialog_fingerprints__label_device_id'))]}: {{device_id}}{[}]}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"not-decrypted-icon mdi-14px\\\" title=\\\"{[print(xabber.getString('omemo__not_verified_message_title'))]}\\\" {[ if (not_verified_device) { ]}data-device-id=\\\"{{not_verified_device}}\\\" {[ } ]} data-activates=\\\"not-verified-tooltip-{{msgid}}\\\">\\n            <svg class=\\\"mdi mdi-14px mdi-svg-template not-verified-icon-svg\\\" data-svgname=\\\"alert-circle\\\"></svg>\\n            <svg class=\\\"mdi mdi-14px mdi-svg-template not-decrypted-icon-svg\\\" data-svgname=\\\"information\\\"></svg>\\n        </div>\\n        <div id=\\\"not-verified-tooltip-{{msgid}}\\\" class=\\\"dropdown-content not-decrypted-tooltip noselect\\\">\\n            <div class=\\\"not-existing-device-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_existing_device_message_tooltip\\\"))]}</div>\\n            <div class=\\\"not-decrypted-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_decrypted_message_tooltip\\\"))]}</div>\\n            <div class=\\\"not-verified-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_verified_message_tooltip\\\"))]}</div>\\n            <button class=\\\"btn-manage-devices btn-flat btn-main text-color-700\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n            <div class=\\\"not-verified-previously-tooltip-text\\\">{[print(xabber.getString(\\\"omemo__not_verified_previously_message_tooltip\\\"))]}</div>\\n        </div>\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-msg-video-id=\\\"{{video_id}}\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"></div>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"></path>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"></i>\\n</div>\";","export default \"<div class=\\\"unread-marker\\\">\\n    <div class=\\\"unread-marker-content no-select\\\">\\n        {{text}}\\n    </div>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <div class=\\\"audio-control-time\\\">\\n        <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n        <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    </div>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n            <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-unmute-dropdown\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-block-wrap\\\">\\n            <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-group-image\\\">\\n                    <input class=\\\"hidden\\\" title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"{{view.cid}}-group-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                    <div class=\\\"btn-emoji-panel property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-selfie property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-choose-image property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"header-buttons\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <div class=\\\"btn-qr-code\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n        </div>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n        </div>\\n        <div class=\\\"group-edit-preloader\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        <div class=\\\"button-wrap btn-invite-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-search-messages\\\">\\n            <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-mute-wrap\\\">\\n            <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n            <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                </li>\\n                <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                    <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"button-wrap btn-leave-wrap\\\">\\n            <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                <svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n            </div>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n    </div>\\n    <ul class=\\\"tabs not-edit bottom-block-tabs\\\">\\n        <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"bottom-block\\\">\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"></div>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap sticky-details-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <ul class=\\\"tabs participant-tabs bottom-block-tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-participant-image\\\">\\n                    <input class=\\\"hidden\\\" title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div id=\\\"{{view.cid}}-participant-image\\\" class=\\\"profile-image-dropdown bootstrap-dropdown dropdown-content noselect\\\">\\n                    <div class=\\\"btn-emoji-panel property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-selfie property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                    </div>\\n                    <div class=\\\"btn-choose-image property-variant\\\">\\n                        {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"></path></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles-outline\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files && !is_encrypted))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,4 C7.790861,4 6,5.790861 6,8 C6,10.209139 7.790861,12 10,12 C12.209139,12 14,10.209139 14,8 C14,5.790861 12.209139,4 10,4 M17.5,13 C15,13 13,15 13,17.5 C13,20 15,22 17.5,22 C20,22 22,20 22,17.5 C22,15 20,13 17.5,13 M10,14 C5.58,14 2,15.79 2,18 L2,20 L11.5,20 C11.169935,19.2078439 11,18.3581691 11,17.5 C11.004284,16.3143165 11.3328048,15.1523902 11.95,14.14 C11.32,14.06 10.68,14 10,14 M17.5,14.5 C19.16,14.5 20.5,15.84 20.5,17.5 C20.5,18.06 20.35,18.58 20.08,19 L16,14.92 C16.42,14.65 16.94,14.5 17.5,14.5 M14.92,16 L19,20.08 C18.58,20.35 18.06,20.5 17.5,20.5 C15.84,20.5 14.5,19.16 14.5,17.5 C14.5,16.94 14.65,16.42 14.92,16 Z\\\" id=\\\"mdi:account-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/account\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6,17 C6,15 10,13.9 12,13.9 C14,13.9 18,15 18,17 L18,18 L6,18 M15,9 C15,10.6568542 13.6568542,12 12,12 C10.3431458,12 9,10.6568542 9,9 C9,7.34314575 10.3431458,6 12,6 C13.6568542,6 15,7.34314575 15,9 M3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.8954305 20.1045695,3 19,3 L5,3 C3.89,3 3,3.9 3,5 Z\\\" id=\\\"mdi:account-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/address\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alarm-bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,18.66 L15,22 L5,22 L5,18.66 C8.09301265,20.4500491 11.9069873,20.4500491 15,18.66 M22,4 C22,2.8954305 21.1045695,2 20,2 C19.69,2 19.39,2.07 19.12,2.21 C18.82,2.36 18.56,2.58 18.36,2.85 C17.9280885,3.46077217 17.873744,4.26171236 18.219194,4.92522914 C18.564644,5.58874591 19.2519508,6.00355658 20,6 L20.24,6 C21.97,10.43 20.66,15.46 17,18.5 C16.68,18.75 16.35,19 16,19.22 L16,21 L17,21 L17,19.74 C20.14,17.5 22,13.86 22,10 C22,8.5 21.72,7 21.17,5.62 C21.69,5.24 22,4.64 22,4 M18,10 C18,12.1217319 17.1571453,14.1565632 15.6568542,15.6568542 C14.1565632,17.1571453 12.1217319,18 10,18 C5.581722,18 2,14.418278 2,10 C2,5.581722 5.581722,2 10,2 C12.1217319,2 14.1565632,2.84285472 15.6568542,4.34314575 C17.1571453,5.84343678 18,7.87826808 18,10 L18,10 Z\\\" id=\\\"mdi:alarm-bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/alert-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,13 L11,13 L11,7 L13,7 M13,17 L11,17 L11,15 L13,15 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C14.6521649,22 17.195704,20.9464316 19.0710678,19.0710678 C20.9464316,17.195704 22,14.6521649 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:alert-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/birthday\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,7 C13.11,7 14,6.1 14,5 C14,4.62 13.9,4.27 13.71,3.97 L12,1 L10.29,3.97 C10.1,4.27 10,4.62 10,5 C10,6.1045695 10.8954305,7 12,7 M16.6,17 L15.53,15.92 L14.45,17 C13.15,18.29 10.87,18.3 9.56,17 L8.5,15.92 L7.4,17 C6.75,17.64 5.88,18 4.96,18 C4.23,18 3.56,17.77 3,17.39 L3,22 C3,22.5522847 3.44771525,23 4,23 L20,23 C20.5522847,23 21,22.5522847 21,22 L21,17.39 C20.44,17.77 19.77,18 19.04,18 C18.12,18 17.25,17.64 16.6,17 M18,10 L13,10 L13,8 L11,8 L11,10 L6,10 C4.34314575,10 3,11.3431458 3,13 L3,14.54 C3,15.62 3.88,16.5 4.96,16.5 C5.5,16.5 6,16.3 6.34,15.93 L8.5,13.8 L10.61,15.93 C11.35,16.67 12.64,16.67 13.38,15.93 L15.5,13.8 L17.65,15.93 C18,16.3 18.5,16.5 19.03,16.5 C20.11,16.5 21,15.62 21,14.54 L21,13 C21,11.3431458 19.6568542,10 18,10 Z\\\" id=\\\"mdi:cake-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/bug\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,12 L10,12 L10,10 L14,10 M14,16 L10,16 L10,14 L14,14 M20,8 L17.19,8 C16.7389578,7.21773668 16.1167554,6.54767256 15.37,6.04 L17,4.41 L15.59,3 L13.42,5.17 C12.4901518,4.94442551 11.5198482,4.94442551 10.59,5.17 L8.41,3 L7,4.41 L8.62,6.04 C7.88,6.55 7.26,7.22 6.81,8 L4,8 L4,10 L6.09,10 C6.04,10.33 6,10.66 6,11 L6,12 L4,12 L4,14 L6,14 L6,15 C6,15.34 6.04,15.67 6.09,16 L4,16 L4,18 L6.81,18 C7.85,19.79 9.78,21 12,21 C14.22,21 16.15,19.79 17.19,18 L20,18 L20,16 L17.91,16 C17.96,15.67 18,15.34 18,15 L18,14 L20,14 L20,12 L18,12 L18,11 C18,10.66 17.96,10.33 17.91,10 L20,10 L20,8 Z\\\" id=\\\"mdi:bug\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/camera\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M4,5 L7,5 L9,3 L15,3 L17,5 L20,5 C21.1045695,5 22,5.8954305 22,7 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.8954305,21 2,20.1045695 2,19 L2,7 C2,5.8954305 2.8954305,5 4,5 M12,8 C9.23857625,8 7,10.2385763 7,13 C7,15.7614237 9.23857625,18 12,18 C14.7614237,18 17,15.7614237 17,13 C17,10.2385763 14.7614237,8 12,8 M12,10 C13.6568542,10 15,11.3431458 15,13 C15,14.6568542 13.6568542,16 12,16 C10.3431458,16 9,14.6568542 9,13 C9,11.3431458 10.3431458,10 12,10 Z\\\" id=\\\"mdi:camera\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chat\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.8954305,2 2,2.8954305 2,4 L2,22 L6,18 L20,18 C21.1045695,18 22,17.1045695 22,16 L22,4 C22,2.8954305 21.1045695,2 20,2 M6,9 L18,9 L18,11 L6,11 M14,14 L6,14 L6,12 L14,12 M18,8 L6,8 L6,6 L18,6\\\" id=\\\"mdi:message-text\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check-circle\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.5,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C17.5,22 22,17.5 22,12 C22,6.5 17.5,2 12,2 M10,17 L5,12 L6.41,10.59 L10,14.17 L17.59,6.58 L19,8 L10,17 Z\\\" id=\\\"mdi:check-circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"21 7 9 19 3.5 13.5 4.91 12.09 9 16.17 19.59 5.59\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.5, 12) scale(-1, 1) translate(-11.5, -12)\\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C13.93,5 15.68,5.78 16.95,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-1\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-2\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-2\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-3\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,13.93 18.22,15.68 16.95,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-3\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-4\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 L12,5 Z\\\" id=\\\"mdi:circle-slice-4\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-5\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C10.07,19 8.32,18.22 7.05,16.95 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-5\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-6\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-6\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-7\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,10.07 5.78,8.32 7.05,7.05 L12,12 L12,5 Z\\\" id=\\\"mdi:circle-slice-7\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circle-slice-8\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,5 C15.87,5 19,8.13 19,12 C19,15.87 15.87,19 12,19 C8.13,19 5,15.87 5,12 C5,8.13 8.13,5 12,5 M12,2 C17.5,2 22,6.5 22,12 C22,17.5 17.5,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 M12,4 C7.58,4 4,7.58 4,12 C4,16.42 7.58,20 12,20 C16.42,20 20,16.42 20,12 C20,7.58 16.42,4 12,4 Z\\\" id=\\\"mdi:circle-slice-8\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61467749,4.32037814 C8.21824496,5.30257332 8,6.37579974 8,7.5 C8,12.1944204 11.8055796,16 16.5,16 C17.6242003,16 18.6974267,15.781755 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.91703774 4.71884223,5.46909511 8.44481526,4.36788353 L8.61467749,4.32037814 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 L19,10 L19,19 L5,19 L5,5 L14.03,5 C14,4.84 14,4.67 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkbox-blank-badge-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/client\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,4.5 C23,6.43 21.43,8 19.5,8 C17.57,8 16,6.43 16,4.5 C16,2.57 17.57,1 19.5,1 C21.43,1 23,2.57 23,4.5 M19.5,10 C16.4647165,9.9944963 14.0055037,7.53528349 14,4.5 C14,4 14.08,3.5 14.21,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,9.79 C20.5,9.92 20,10 19.5,10 Z\\\" id=\\\"mdi:checkout-blank-badge\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/cloud\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.35,10.03 C18.67,6.59 15.64,4 12,4 C9.11,4 6.6,5.64 5.35,8.03 C2.34,8.36 0,10.9 0,14 C0,17.3137085 2.6862915,20 6,20 L19,20 C20.3260824,20 21.597852,19.4732158 22.5355339,18.5355339 C23.4732158,17.597852 24,16.3260824 24,15 C24,12.36 21.95,10.22 19.35,10.03 Z\\\" id=\\\"mdi:cloud\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/contact-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M15,14 C12.33,14 7,15.33 7,18 L7,20 L23,20 L23,18 C23,15.33 17.67,14 15,14 M6,10 L6,7.5 L4,7.5 L4,10 L1.5,10 L1.5,12 L4,12 L4,14.5 L6,14.5 L6,12 L8.5,12 L8.5,10 M15,12 C17.209139,12 19,10.209139 19,8 C19,5.790861 17.209139,4 15,4 C12.790861,4 11,5.790861 11,8 C11,10.209139 12.790861,12 15,12 Z\\\" id=\\\"xabber:contact-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database-lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,3 C15.42,3 19,4.79 19,7 C19,9.21 15.42,11 11,11 C6.58,11 3,9.21 3,7 C3,4.79 6.58,3 11,3 M19,12.03 C17.11,12.24 15.57,13.62 15.13,15.43 C13.92,15.79 12.5,16 11,16 C6.58,16 3,14.21 3,12 L3,9 C3,11.21 6.58,13 11,13 C15.42,13 19,11.21 19,9 L19,12.03 M14,17.71 L14,20.71 C13.07,20.9 12.06,21 11,21 C6.58,21 3,19.21 3,17 L3,14 C3,16.21 6.58,18 11,18 C12.06,18 13.07,17.9 14,17.71 M19.5,14 C20.8807119,14 22,15.1192881 22,16.5 L22,17 C22.5522847,17 23,17.4477153 23,18 L23,22 C23,22.5522847 22.5522847,23 22,23 L17,23 C16.4477153,23 16,22.5522847 16,22 L16,18 C16,17.4477153 16.4477153,17 17,17 L17,16.5 C17,15.1192881 18.1192881,14 19.5,14 M19.5,15 C18.6715729,15 18,15.6715729 18,16.5 L18,17 L21,17 L21,16.5 C21,15.6715729 20.3284271,15 19.5,15 Z\\\" id=\\\"mdi:database-lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/database\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C7.58,3 4,4.79 4,7 C4,9.21 7.58,11 12,11 C16.42,11 20,9.21 20,7 C20,4.79 16.42,3 12,3 M4,9 L4,12 C4,14.21 7.58,16 12,16 C16.42,16 20,14.21 20,12 L20,9 C20,11.21 16.42,13 12,13 C7.58,13 4,11.21 4,9 M4,14 L4,17 C4,19.21 7.58,21 12,21 C16.42,21 20,19.21 20,17 L20,14 C20,16.21 16.42,18 12,18 C7.58,18 4,16.21 4,14 Z\\\" id=\\\"mdi:database\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/description\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L7,17 L7,15 L14,15 M17,13 L7,13 L7,11 L17,11 M17,9 L7,9 L7,7 L17,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:text-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-cellphone\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,20 L7,20 L7,4 L17,4 M17,1 L7,1 C5.89,1 5,1.89 5,3 L5,21 C5,22.1045695 5.8954305,23 7,23 L17,23 C18.1045695,23 19,22.1045695 19,21 L19,3 C19,1.8954305 18.1045695,1 17,1 Z\\\" id=\\\"xabber:cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-console\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M18,12 L18,14 L13,14 L13,12 L18,12 Z M8.4,6 L11.7,9.3 C12.09,9.69 12.09,10.33 11.7,10.72 L8.42,14 L5.59,14 L9.58,10 L5.57,6 L8.4,6 Z\\\" id=\\\"xabber.monitor-console\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-desktop\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,16 L3,16 L3,4 L21,4 M21,2 L3,2 C1.89,2 1,2.89 1,4 L1,16 C1,17.1045695 1.8954305,18 3,18 L10,18 L10,20 L8,20 L8,22 L16,22 L16,20 L14,20 L14,18 L21,18 C22.1045695,18 23,17.1045695 23,16 L23,4 C23,2.8954305 22.1045695,2 21,2 Z\\\" id=\\\"mdi:monitor\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-tablet\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,18 L4,18 L4,6 L20,6 M21,4 L3,4 C1.89,4 1,4.89 1,6 L1,18 C1,19.1045695 1.8954305,20 3,20 L21,20 C22.1045695,20 23,19.1045695 23,18 L23,6 C23,4.8954305 22.1045695,4 21,4 Z\\\" id=\\\"xabber:tablet\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/device-web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,2 C22.0543618,2 22.9181651,2.81587779 22.9945143,3.85073766 L23,4 L23,16 C23,17.0543618 22.1841222,17.9181651 21.1492623,17.9945143 L21,18 L14,18 L14,20 L16,20 L16,22 L8,22 L8,20 L10,20 L10,18 L3,18 C1.9456382,18 1.08183488,17.1841222 1.00548574,16.1492623 L1,16 L1,4 C1,2.94045455 1.81092975,2.08136364 2.85006292,2.00545361 L3,2 L21,2 Z M21,4 L3,4 L3,16 L21,16 L21,4 Z M9.59,6.41 L10.5,7.5 L8,10 L10.5,12.5 L9.59,13.5 L6,10 L9.59,6.41 Z M14.5,6.50152764 L18,10 L14.5,13.5 L13.5,12.5 L16,10 L13.5,7.5 L14.5,6.50152764 Z\\\" id=\\\"xabber.monitor-tag\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/download\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,20 L19,20 L19,18 L5,18 M19,9 L15,9 L15,3 L9,3 L9,9 L5,9 L12,16 L19,9 Z\\\" id=\\\"mdi:download\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/email\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,8 L12,13 L4,8 L4,6 L12,11 L20,6 M20,4 L4,4 C2.89,4 2,4.89 2,6 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.1045695,20 22,19.1045695 22,18 L22,6 C22,4.89 21.1,4 20,4 Z\\\" id=\\\"mdi:email\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/expires\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.03,7.39 L20.45,5.97 C20.0000001,5.46 19.55,5 19.04,4.56 L17.62,6 C16.07,4.74 14.12,4 12.0000001,4 C7.0294373,4 3.00000013,8.0294373 3.00000013,13 C3.00000013,17.9705627 7.0294373,22 12.0000001,22 C17.0000001,22 21.0000001,17.97 21.0000001,13 C21.0000001,10.88 20.26,8.93 19.03,7.39 M13,14 L11,14 L11,7 L13,7 L13,14 M15,1 L9,1 L9,3 L15,3 L15,1 Z\\\" id=\\\"mdi:timer\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/id\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C8.13400675,2 5,5.13400675 5,9 C5,11.38 6.19,13.47 8,14.74 L8,17 C8,17.5522847 8.44771525,18 9,18 L15,18 C15.5522847,18 16,17.5522847 16,17 L16,14.74 C17.81,13.47 19,11.38 19,9 C19,5.13400675 15.8659932,2 12,2 M9,21 C9,21.5522847 9.44771525,22 10,22 L14,22 C14.5522847,22 15,21.5522847 15,21 L15,20 L9,20 L9,21 Z\\\" id=\\\"mdi:lightbulb\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/information\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L11,9 L11,7 L13,7 M13,17 L11,17 L11,11 L13,11 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 Z\\\" id=\\\"mdi:information\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,0.64 L8.23,3 L5,3 L5,5 L2.97,6.29 C2.39,6.64 2,7.27 2,8 L2,18 C2,19.1045695 2.8954305,20 4,20 L20,20 C21.11,20 22,19.11 22,18 L22,8 C22,7.27 21.61,6.64 21.03,6.29 L19,5 L19,3 L15.77,3 M7,5 L17,5 L17,9.88 L12,13 L7,9.88 M8,6 L8,7.5 L16,7.5 L16,6 M5,7.38 L5,8.63 L4,8 M19,7.38 L20,8 L19,8.63 M8,8.5 L8,10 L16,10 L16,8.5 L8,8.5 Z\\\" id=\\\"mdi:email-newsletter\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/job\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,2 L14,2 C15.1045695,2 16,2.8954305 16,4 L16,6 L20,6 C21.1045695,6 22,6.8954305 22,8 L22,19 C22,20.1045695 21.1045695,21 20,21 L4,21 C2.89,21 2,20.1 2,19 L2,8 C2,6.89 2.89,6 4,6 L8,6 L8,4 C8,2.89 8.89,2 10,2 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L15,14 L15,18 L18,18 L18,14 L19,14 L19,18 L22,18 L22,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"xabber:key-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/key\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M7,14 C5.8954305,14 5,13.1045695 5,12 C5,10.8954305 5.8954305,10 7,10 C8.1045695,10 9,10.8954305 9,12 C9,13.1045695 8.1045695,14 7,14 M12.65,10 C11.8057828,7.60319579 9.54113618,6 7,6 C3.6862915,6 1,8.6862915 1,12 C1,15.3137085 3.6862915,18 7,18 C9.54113618,18 11.8057828,16.3968042 12.65,14 L17,14 L17,18 L21,18 L21,14 L23,14 L23,10 L12.65,10 Z\\\" id=\\\"mdi:key\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-alert\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,17 C11.1,17 12,16.1 12,15 C12,13.9 11.1,13 10,13 C8.9,13 8,13.9 8,15 C8,16.1 8.9,17 10,17 M16,8 C17.1,8 18,8.9 18,10 L18,20 C18,21.1 17.1,22 16,22 L4,22 C2.9,22 2,21.1 2,20 L2,10 C2,8.9 2.9,8 4,8 L5,8 L5,6 C5,3.2 7.2,1 10,1 C12.8,1 15,3.2 15,6 L15,8 L16,8 M10,3 C8.3,3 7,4.3 7,6 L7,8 L13,8 L13,6 C13,4.3 11.7,3 10,3 M22,13 L20,13 L20,7 L22,7 L22,13 M22,17 L20,17 L20,15 L22,15 L22,17 Z\\\" id=\\\"mdi:lock-alert\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-check\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M15.6,11 L10.47,16.18 L8.4,14.09 L7,15.5 L10.47,19 L17,12.41 L15.6,11 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-check\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-cross\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M14.12,11.47 L12,13.59 L9.88,11.47 L8.5,12.86 L10.61,15 L8.5,17.11 L9.91,18.53 L12.03,16.41 L14.12,18.5 L15.5,17.11 L13.43,15 L15.55,12.9 L14.12,11.47 Z M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock-cross\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-open\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,1 C15.24,1 13,3.24 13,6 L13,8 L4,8 C2.8954305,8 2,8.8954305 2,10 L2,20 C2,21.1045695 2.8954305,22 4,22 L16,22 C17.11,22 18,21.11 18,20 L18,10 C18,8.8954305 17.1045695,8 16,8 L15,8 L15,6 C15,4.34 16.34,3 18,3 C19.66,3 21,4.34 21,6 L21,8 L23,8 L23,6 C23,3.24 20.76,1 18,1 M10,13 C11.1045695,13 12,13.8954305 12,15 C12,16.11 11.11,17 10,17 C8.8954305,17 8,16.1045695 8,15 C8,13.8954305 8.8954305,13 10,13 Z\\\" id=\\\"mdi:lock-open-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,1 C9.23857625,1 7,3.23857625 7,6 L7,8 L6,8 C4.8954305,8 4,8.8954305 4,10 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,10 C20,8.8954305 19.1045695,8 18,8 L17,8 L17,6 C17,4.67391755 16.4732158,3.40214799 15.5355339,2.46446609 C14.597852,1.5267842 13.3260824,1 12,1 M12,2.9 C13.71,2.9 15.1,4.29 15.1,6 L15.1,8 L8.9,8 L8.9,6 C8.9,4.29 10.29,2.9 12,2.9 M12.19,10.5 C13.13,10.5 13.88,10.71 14.42,11.12 C14.96,11.54 15.23,12.1 15.23,12.8 C15.23,13.24 15.08,13.63 14.79,14 C14.5,14.36 14.12,14.64 13.66,14.85 C13.4,15 13.23,15.15 13.14,15.32 C13.05,15.5 13,15.72 13,16 L11,16 C11,15.5 11.1,15.16 11.29,14.92 C11.5,14.68 11.84,14.4 12.36,14.08 C12.62,13.94 12.83,13.76 13,13.54 C13.14,13.33 13.22,13.08 13.22,12.8 C13.22,12.5 13.13,12.28 12.95,12.11 C12.77,11.93 12.5,11.85 12.19,11.85 C11.92,11.85 11.7,11.92 11.5,12.06 C11.34,12.2 11.24,12.41 11.24,12.69 L9.27,12.69 C9.22,12 9.5,11.4 10.05,11.04 C10.59,10.68 11.3,10.5 12.19,10.5 M11,17 L13,17 L13,19 L11,19 L11,17 Z\\\" id=\\\"mdi:lock-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/lock\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,17 C13.1045695,17 14,16.1045695 14,15 C14,13.89 13.1,13 12,13 C10.8954305,13 10,13.8954305 10,15 C10,16.1045695 10.8954305,17 12,17 M18,8 C19.1045695,8 20,8.8954305 20,10 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,10 C4,8.89 4.9,8 6,8 L7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 C13.3260824,1 14.597852,1.5267842 15.5355339,2.46446609 C16.4732158,3.40214799 17,4.67391755 17,6 L17,8 L18,8 M12,3 C10.3431458,3 9,4.34314575 9,6 L9,8 L15,8 L15,6 C15,4.34314575 13.6568542,3 12,3 Z\\\" id=\\\"mdi:lock\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <defs>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </defs>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <use xlink:href=\\\"#path-1\\\"></use>\\n        </mask>\\n        <use id=\\\"mdi:search\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" xlink:href=\\\"#path-1\\\"></use>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/security\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,12 L19,12 C18.47,16.11 15.72,19.78 12,20.92 L12,12 L5,12 L5,6.3 L12,3.19 M12,1 L3,5 L3,11 C3,16.55 6.84,21.73 12,23 C17.16,21.73 21,16.55 21,11 L21,5 L12,1 Z\\\" id=\\\"mdi:security\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/star-face\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2.5 L8.42,8.06 L2,9.74 L6.2,14.88 L5.82,21.5 L12,19.09 L18.18,21.5 L17.8,14.88 L22,9.74 L15.58,8.06 L12,2.5 M9.38,10.5 C10,10.5 10.5,11 10.5,11.63 C10.5,11.9270425 10.3820003,12.2119189 10.1719596,12.4219596 C9.96191885,12.6320003 9.67704247,12.75 9.38,12.75 C8.75,12.75 8.25,12.25 8.25,11.63 C8.25,11 8.75,10.5 9.38,10.5 M14.63,10.5 C15.25,10.5 15.75,11 15.75,11.63 C15.75,12.2485589 15.2485589,12.75 14.63,12.75 C14,12.75 13.5,12.25 13.5,11.63 C13.5,11 14,10.5 14.63,10.5 M9,15 L15,15 C14.4960889,16.2119097 13.3124982,17.0016023 12,17.0016023 C10.6875018,17.0016023 9.50391113,16.2119097 9,15 L9,15 Z\\\" id=\\\"mdi:star-face\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/status\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M13.5,7 L12.5,7 L9,13 L12,13 L10.5,17 L11.5,17 L15,11 L12,11 L13.5,7 Z\\\" id=\\\"xabber:status\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/trash\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,4 L15.5,4 L14.5,3 L9.5,3 L8.5,4 L5,4 L5,6 L19,6 M6,19 C6,20.1045695 6.8954305,21 8,21 L16,21 C17.1045695,21 18,20.1045695 18,19 L18,7 L6,7 L6,19 Z\\\" id=\\\"mdi:trash\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web-cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.82,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.5 14.46,13 14.4,13.46 C15,12.96 15.72,12.57 16.5,12.32 L16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 L20,12.18 C20.7,12.35 21.35,12.63 21.95,13 C22,12.68 22,12.34 22,12 C22,6.5 17.5,2 12,2 C6.47,2 2,6.5 2,12 C2,17.5 6.5,22 12,22 C12.34,22 12.68,22 13,21.95 C12.59,21.29 12.29,20.55 12.13,19.75 C12.09,19.82 12.05,19.89 12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L12.5,16 C12.81,15.25 13.26,14.58 13.82,14 M18.92,8 L15.97,8 C15.6570216,6.76145777 15.1935734,5.56589587 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 L4.26,14 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57862399,18.9316655 6.0448462,17.667719 5.08,16 M8,8 L5.08,8 C6.03885577,6.32721463 7.57479586,5.06148622 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M18.5,14 C16,14 14,16 14,18.5 C14,21 16,23 18.5,23 C21,23 23,21 23,18.5 C23,16 21,14 18.5,14 M18.5,21.5 C16.84,21.5 15.5,20.16 15.5,18.5 C15.5,17.94 15.65,17.42 15.92,17 L20,21.08 C19.58,21.35 19.06,21.5 18.5,21.5 M21.08,20 L17,15.92 C17.42,15.65 17.94,15.5 18.5,15.5 C20.16,15.5 21.5,16.84 21.5,18.5 C21.5,19.06 21.35,19.58 21.08,20 Z\\\" id=\\\"mdi:web-cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/web\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.36,14 C16.44,13.34 16.5,12.68 16.5,12 C16.5,11.32 16.44,10.66 16.36,10 L19.74,10 C19.9,10.64 20,11.31 20,12 C20,12.69 19.9,13.36 19.74,14 M14.59,19.56 C15.19,18.45 15.65,17.25 15.97,16 L18.92,16 C17.96,17.65 16.43,18.93 14.59,19.56 M14.34,14 L9.66,14 C9.56,13.34 9.5,12.68 9.5,12 C9.5,11.32 9.56,10.65 9.66,10 L14.34,10 C14.43,10.65 14.5,11.32 14.5,12 C14.5,12.68 14.43,13.34 14.34,14 M12,19.96 C11.17,18.76 10.5,17.43 10.09,16 L13.91,16 C13.5,17.43 12.83,18.76 12,19.96 M8,8 L5.08,8 C6.03,6.34 7.57,5.06 9.4,4.44 C8.8,5.55 8.35,6.75 8,8 M5.08,16 L8,16 C8.35,17.25 8.8,18.45 9.4,19.56 C7.57,18.93 6.03,17.65 5.08,16 M4.26,14 C4.1,13.36 4,12.69 4,12 C4,11.31 4.1,10.64 4.26,10 L7.64,10 C7.56,10.66 7.5,11.32 7.5,12 C7.5,12.68 7.56,13.34 7.64,14 M12,4.03 C12.83,5.23 13.5,6.57 13.91,8 L10.09,8 C10.5,6.57 11.17,5.23 12,4.03 M18.92,8 L15.97,8 C15.65,6.75 15.19,5.55 14.59,4.44 C16.43,5.07 17.96,6.34 18.92,8 M12,2 C6.47,2 2,6.5 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,9.3478351 20.9464316,6.80429597 19.0710678,4.92893219 C17.195704,3.0535684 14.6521649,2 12,2 Z\\\" id=\\\"mdi:web\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    \\n    <g id=\\\"icon/material/xmpp\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,16.4 C9.75,14.09 8,10.54 8,7 C2,5 8,7 2,5 C2,10.65 6.33,15.11 10.55,17.66 C9.38,18.5 8.15,19 7,19 C7,20 7,19 7,20 C8.2,20 10.03,19.46 12,18.46 C13.97,19.46 15.8,20 17,20 C17,19 17,20 17,19 C15.85,19 14.62,18.5 13.45,17.66 C17.66,15.11 22,10.65 22,5 C16,7 22,5 16,7 C16,10.54 14.25,14.09 12,16.4 Z\\\" id=\\\"mdi:xmpp\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"buttons-wrap\\\">\\n    <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n</div>\\n<div class=\\\"vcard-edit-wrap\\\">\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n    <div class=\\\"info-wrap personal-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field first-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n        </div>\\n        <div class=\\\"input-field middle-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n        </div>\\n        <div class=\\\"input-field last-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n        </div>\\n        <div class=\\\"input-field fullname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n    <div class=\\\"info-wrap nickname-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field nickname\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n    <div class=\\\"info-wrap birthday-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field birthday\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n    <div class=\\\"info-wrap job-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field org-name\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n        </div>\\n        <div class=\\\"input-field job-title\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n        </div>\\n        <div class=\\\"input-field org-unit\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n        </div>\\n        <div class=\\\"input-field role\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n    <div class=\\\"info-wrap site-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"web\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field url\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field description\\\">\\n            <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field textarea-glow input-glow account-glow\\\" name=\\\"description\\\"></textarea>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n    <div class=\\\"info-wrap phone-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field phone-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n        </div>\\n        <div class=\\\"input-field phone-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n        </div>\\n        <div class=\\\"input-field phone-mobile\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n    <div class=\\\"info-wrap email-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email\\\"></svg>\\n        </div>\\n        <div class=\\\"input-field email-work\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n        </div>\\n        <div class=\\\"input-field email-home\\\">\\n            <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n    <div class=\\\"info-wrap address-info-wrap\\\">\\n        <div class=\\\"setting-icon-background\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"address\\\"></svg>\\n        </div>\\n        <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n            <div class=\\\"input-field pobox\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n            </div>\\n            <div class=\\\"input-field extadd\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n            </div>\\n            <div class=\\\"input-field street\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n            </div>\\n            <div class=\\\"input-field locality\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n            </div>\\n            <div class=\\\"input-field region\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n            </div>\\n            <div class=\\\"input-field pcode\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n            </div>\\n            <div class=\\\"input-field country\\\">\\n                <input class=\\\"input-glow account-glow\\\" id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"vcard-wrap\\\">\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"></div>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","module.exports = {\"background-images\":{\"image\":[{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0293+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A0tXm8gjfMU/U08VDMRGtuI/AAAAAAAAvrI/IQEscTGZyJY/s1920-w1920-h1080-c/IMG_0293%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0660.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wkrGBuk0DoA/Us9JnUoXnTI/AAAAAAAAkTA/yDQexzLKhKY/s1920-w1920-h1080-c/DSC_0660.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071227-4144-PtLomaReef.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1xZqgaRDIec/Tg1dMJq1vBI/AAAAAAAAALc/7m0Tpv2htVc/s1920-w1920-h1080-c/071227-4144-PtLomaReef.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/976865336_a+view+of+queenstown.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-36YdSRh6q9w/TgtZEChvrkI/AAAAAAAJA0M/zVvIUAdwQ3Q/s1920-w1920-h1080-c/976865336_a%2Bview%2Bof%2Bqueenstown.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-MarshallBeach-lightSky.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--L7AhWZit78/TysVss3ThoI/AAAAAAAARho/n2ToQ-2Kw7g/s1920-w1920-h1080-c/GGB-MarshallBeach-lightSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01079+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ePzy0PYNkjY/ToE9F9iPxKI/AAAAAAAAsWg/o7LkkqWEs2o/s1920-w1920-h1080-c/DSC01079%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8492_HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-pnosgcd6G2c/UbheNBeniVI/AAAAAAAAWp0/hSEX3IwAgyI/s1920-w1920-h1080-c/DSC_8492_HDR-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02202012-04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-El8tXEJMqm4/UOD9tk8_rkI/AAAAAAAAkM0/sZP34rwkVsQ/s1920-w1920-h1080-c/02202012-04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100530_120257_0273-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EpsKJMBxb6I/TBpXudG4_PI/AAAAAAABEHk/_knVZZOptTY/s1920-w1920-h1080-c/20100530_120257_0273-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lines.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Ot1wFdQdaqw/UBSl7ewGOkI/AAAAAAAAPd4/3tUkrKTWDgM/s1920-w1920-h1080-c/Lines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DunesEdge.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WbNq4f1kE7Y/Tu9tVtXGCYI/AAAAAAABFWY/N9NL1MKUt4A/s1920-w1920-h1080-c/DunesEdge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2857.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YPiBdTDD5Vo/UpExbztAgWI/AAAAAAAAFg8/8n5CyP4w8Ps/s1920-w1920-h1080-c/DSC_2857.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0513-edited.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CY6T5q8rqmA/UZWyvmYhLYI/AAAAAAAAAw4/Pi0Uy3nq19I/s1920-w1920-h1080-c/DSC_0513-edited.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stuck_04.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-fc8aRqsAEzk/U0MjlhykUtI/AAAAAAAJF1s/nRoV1Yk1z2E/s1920-w1920-h1080-c/stuck_04.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dandelion_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ExqBtlpobeE/T-aKZZzVcKI/AAAAAAABhl4/jrErtktlcuA/s1920-w1920-h1080-c/Dandelion_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8670434759_91e92fd1ee_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3nqLFWiEm3E/UXXCrC5RBeI/AAAAAAAANoY/8_ktEhLdCLs/s1920-w1920-h1080-c/8670434759_91e92fd1ee_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2049233526_19f97ff57f_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gJmej39yU_c/TgtZECWgTtI/AAAAAAAJFFY/Y0nVr5_Tchg/s1920-w1920-h1080-c/2049233526_19f97ff57f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-firespinning-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-teMxOetSsy0/TwNDboHbM0I/AAAAAAABFao/F9yQHylkRdo/s1920-w1920-h1080-c/RodeoBeach-firespinning-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rF8zodn1xAI/U_yjoZyDgcI/AAAAAAAB-38/U62D7hi4-NU/s1920-w1920-h1080-c/20140204_Iceland_0234_5_6_32bit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6887-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KiRwrTTHEWk/UdFoWqh2bFI/AAAAAAAAXhA/6PIDVYH9nFY/s1920-w1920-h1080-c/DSC_6887-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-beach-rock.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-6_QxmRRnJO8/TwjqsB2kshI/AAAAAAABFZw/__-irT00R2k/s1920-w1920-h1080-c/SealRocks-sunset-beach-rock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7112.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-HWAadtEQKQE/UtTyRxs2u4I/AAAAAAAAOhk/Y3jT0QJtdhQ/s1920-w1920-h1080-c/DSC_7112.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Invitation.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5NKrifl_xpo/UUxwAqoj7nI/AAAAAAAAwGk/82Dkiz_sEaw/s1920-w1920-h1080-c/Invitation.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_7114-Edit-Recovered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-W5qc4LH_lpo/U_yjzHjSpzI/AAAAAAAB-7E/8MQAw4fsEJc/s1920-w1920-h1080-c/_DX_7114-Edit-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8993.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sy3wa9ofb38/UQtPlF6YOQI/AAAAAAAAfXc/9uYpeM68vOc/s1920-w1920-h1080-c/IMGP8993.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/dsc_4194.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-cFySK9YoOOI/SwTDSXWTa2I/AAAAAAABNnY/1VFL3dYXkgA/s1920-w1920-h1080-c/dsc_4194.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/panthercreek_7509-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-JoKkOqJLegk/T7KQORntaBI/AAAAAAABjLg/FbmDYu5k3DY/s1920-w1920-h1080-c/panthercreek_7509-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6464.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-RYt_J-BlGJs/UmBWyVrQZII/AAAAAAAAFAA/9Y9zqjdXQeU/s1920-w1920-h1080-c/DSC_6464.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080820-5209-MakenaLL.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6IrulujJPwU/Tg1d_n1nptI/AAAAAAAAAMc/O4OAV6udX8Y/s1920-w1920-h1080-c/080820-5209-MakenaLL.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5300.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-cn-CS-vxFn4/UtTvqLzjmrI/AAAAAAAAX3Y/OdfK9XhRGeE/s1920-w1920-h1080-c/DSC_5300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080327-4706-JoshuaTreeOasis.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-mwobIYTjtko/Tg1dd90GDjI/AAAAAAAAAL0/M_NjYSMqoG0/s1920-w1920-h1080-c/080327-4706-JoshuaTreeOasis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/217440037_8ca190627e_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EjnJBBcvhrU/TgtZEIVpLlI/AAAAAAAJJ5s/CQK74NolX7E/s1920-w1920-h1080-c/217440037_8ca190627e_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_1184.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lM1sKRbIu7A/T_mdon8mP-I/AAAAAAAAAwc/SJMO-kWHQLY/s1920-w1920-h1080-c/MSU_1184.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HfCYnCbpqww/Us1HNtNz00I/AAAAAAAAkFE/UJChD7bbmm0/s1920-w1920-h1080-c/DSC_0537-Edit-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonShwabacher.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-gi8-azW5hAQ/UGdSQqk9G_I/AAAAAAAAJto/inIHRwOCy3c/s1920-w1920-h1080-c/TetonShwabacher.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PVK_5178.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-zAuJ1AZC34Y/TrsJH22VV5I/AAAAAAAAEvc/EzBqDb6tQRE/s1920-w1920-h1080-c/PVK_5178.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3824+pe.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QgFnhS9tfuI/U0tzKPZox-I/AAAAAAAAvhg/EjRaa8ETaYM/s1920-w1920-h1080-c/IMG_3824%2Bpe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101016-4858-GrayWhaleGran1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gb7vG0Z6jrU/Tg1gas5e87I/AAAAAAAAAPY/4zsNQt6LotI/s1920-w1920-h1080-c/101016-4858-GrayWhaleGran1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+Queenstown+Aurora+Australis.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F1T9flY075Y/U0Mgnwr2AJI/AAAAAAAJBJY/eeooel6-ZXY/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BQueenstown%2BAurora%2BAustralis.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4393.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RtJjOCkuYL8/UtTvDO3sraI/AAAAAAAAX3c/VVVtMV1yPW0/s1920-w1920-h1080-c/DSC_4393.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-paradise.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2Lhxkz2EBz4/U0MlX7aExHI/AAAAAAAJXMc/Lh1kPpcrBi8/s1920-w1920-h1080-c/trey-ratcliff-road-to-paradise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sunrise+in+Sangam.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7X44UiG6ohw/Ua2Qmj06zkI/AAAAAAAAfYA/owBHOfu6u_I/s1280-w1280-c-h720-k-no/Sunrise%2Bin%2BSangam\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1109-PigeonPEve.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-r3D0LQrT3K4/Tg1bQhpX5hI/AAAAAAAAAIs/ONg4BWnADUM/s1920-w1920-h1080-c/061012-1109-PigeonPEve.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Motion.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-eYFfx8sHLZY/UBSl8KkdpRI/AAAAAAAAPeA/5sJreKxzLYc/s1920-w1920-h1080-c/Motion.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGate+Dawn+from+Slacker+Hill.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GYfXywevB-4/UtTtugxGWlI/AAAAAAAAXpw/e5tyHYdIIK0/s1920-w1920-h1080-c/GGate%2BDawn%2Bfrom%2BSlacker%2BHill.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7006-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iqs_ihvxlzM/Ur0B20OjdgI/AAAAAAAAF7Y/yJ1rAuyEQjQ/s1920-w1920-h1080-c/IMG_7006-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MoraineLake.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YNlHO0F-y_U/UoazYeYqMvI/AAAAAAAAVqg/h8tLY6Zwktw/s1920-w1920-h1080-c/MoraineLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/12-11-12-original.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qdhLu3VPZU8/Uqjrkz-1dzI/AAAAAAAAYTY/Is8QaEy3rZo/s1920-w1920-h1080-c/12-11-12-original.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20090411_132734_.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-0EQ-4alz8RY/S9aXij2EEzI/AAAAAAABDQ8/SUAUmq9rm60/s1920-w1920-h1080-c/20090411_132734_.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle_BrianMatiash.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BK4o8MjAzHY/T6vkuyTuQ7I/AAAAAAAIovQ/rWAnhK0bJqQ/s1920-w1920-h1080-c/Seattle_BrianMatiash.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Infinity+of+Tokyo.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vCWMbf5t3RI/U0MbNIFWMsI/AAAAAAAJA-w/hbek0tN8Oqk/s1920-w1920-h1080-c/The%2BInfinity%2Bof%2BTokyo.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/PatriciaLake.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oMSn89uorIA/UktkPI4oEVI/AAAAAAAAVqo/d_0ZasIPfnc/s1920-w1920-h1080-c/PatriciaLake.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/02212012-08.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_ApXZ5TKn2Y/UOD9xbbz3OI/AAAAAAAAkNY/p6fXkvjZNY8/s1920-w1920-h1080-c/02212012-08.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnds-le-sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aqN5sgbqggQ/T3sLvuIoTmI/AAAAAAABFlQ/jxR2IgWbFM4/s1920-w1920-h1080-c/LandsEnds-le-sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Approaching+Yosemite.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bEYj5hwZ1G8/U0MSbgTqo4I/AAAAAAAJF9c/ijCLJ4jvSuU/s1920-w1920-h1080-c/Approaching%2BYosemite.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Rust.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-B7_iA_X9u6k/UBSl-nRhkxI/AAAAAAAAPeg/QCRwYky8OXM/s1920-w1920-h1080-c/Rust.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3054580997_b9c89c7d9f_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KilhfjagQZw/TgtZGB0uBJI/AAAAAAAJXZc/rjj3xvxSkso/s1920-w1920-h1080-c/3054580997_b9c89c7d9f_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0853-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3dXv-q-kMJg/Ute8DoCJgSI/AAAAAAAAlHI/A3PJNXvm8g4/s1920-w1920-h1080-c/DSC_0853-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Across+the+Alaskan+Fjords.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-h782AeqXwL4/U0MTcwzNuyI/AAAAAAAJBlg/B0ICHy6uj-I/s1920-w1920-h1080-c/Across%2Bthe%2BAlaskan%2BFjords.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0592.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rOuBbaxoNAU/T-zOq9MmziI/AAAAAAAABdU/y24M7n3oj70/s1920-w1920-h1080-c/IMGP0592.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071121-3891-MontcitoMorn.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-X5n9ak4dE1s/Tg1c8c9xvWI/AAAAAAAAALE/M9bf_hSgUHI/s1920-w1920-h1080-c/071121-3891-MontcitoMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8551.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-0QWWEWkAEkA/UTmo6qnkIgI/AAAAAAAAWsU/VIzT5UsUyh8/s1920-w1920-h1080-c/DSC_8551.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_20130330_120430-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-f1YF98XfEmY/UVmHsvQBxvI/AAAAAAAAT9g/0Uk7XjxUFCw/s1920-w1920-h1080-c/IMG_20130330_120430-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-surf-burn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-zcGhuTDGZ7Q/TvI44kbopOI/AAAAAAABFaY/677iL2Z8O8s/s1920-w1920-h1080-c/SutroSunset-surf-burn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Beach.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lMCO5r3MLUQ/UZURZdDoWWI/AAAAAAAAPOU/FayJm6cQrN4/s1920-w1920-h1080-c/The%2BBeach.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Take+It+or+Leave+It.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-jrCbEVo5pok/UTUniMfAPQI/AAAAAAAAMlc/taFKyOwN7ro/s1920-w1920-h1080-c/Take%2BIt%2Bor%2BLeave%2BIt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ENS-+Macro+Snow-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JMRLCkgYWUI/UR0He_hKbyI/AAAAAAAAOyM/Fjml1QshbrU/s1920-w1920-h1080-c/ENS-%2BMacro%2BSnow-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1351.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DHg264B2vlg/Ul9y7zxl9iI/AAAAAAAAE6A/KNGHpq_cH1M/s1920-w1920-h1080-c/DSC_1351.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7939+he.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-lA8lfuSjpBY/U0tzavr8B0I/AAAAAAAAvh8/YNJ4VVT6axk/s1920-w1920-h1080-c/IMG_7939%2Bhe.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071124-3917-BigSurSky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vQXExn8x3Wo/Tg1dCJ3WSJI/AAAAAAAAALM/j6v5p4iMLDc/s1920-w1920-h1080-c/071124-3917-BigSurSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3189889363_6357f5f645_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mA6_1F0fM7U/TgtZGJt2oII/AAAAAAAJKTg/te1m0BOVycg/s1920-w1920-h1080-c/3189889363_6357f5f645_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01070+Mosaic.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-nCN9lgyjKd0/UpBNC_yRLBI/AAAAAAAAD_s/xH5Pb5wEGH4/s1920-w1920-h1080-c/DSC01070%2BMosaic.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1182.CR2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-2y17u99oVV8/TwyPAbOBPqI/AAAAAAAAF9w/EQOhIwGaHiA/s1920-w1920-h1080-c/IMG_1182.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Grassy+Roof.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Y_Bp6GUWfSE/U0Maxnb6OyI/AAAAAAAJA4U/a05iPi39_7c/s1920-w1920-h1080-c/The%2BGrassy%2BRoof.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal+Rocks-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rQdS7R8LdHM/T1Jy2z5kZcI/AAAAAAABFZY/Cqb-Q9aWw2Q/s1920-w1920-h1080-c/Seal%2BRocks-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MountainSplendor.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f6OToCJWRrg/UUsOySkJXoI/AAAAAAAATgk/DWwubrzxFPY/s1920-w1920-h1080-c/MountainSplendor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4460.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GQv4Q_NZKH8/UDZ1v6AEcSI/AAAAAAAA6ik/i90ZeH2jexc/s1920-w1920-h1080-c/IMG_4460.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled+(101+of+207).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tw3AkYSVojM/U0MlwltSINI/AAAAAAAJBMA/7_5x_BUOOww/s1920-w1920-h1080-c/untitled%2B%2528101%2Bof%2B207%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6674-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-X3k5JeDbKW4/UZtfuMrJ49I/AAAAAAAAVpI/Qy3yA3weGXM/s1920-w1920-h1080-c/DSC_6674-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-07-13-hodgeman-ks-lightning-supercell.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NE7B7ZtjC9M/UknSexY2-_I/AAAAAAAAN6g/od62b4KTS9U/s1920-w1920-h1080-c/5-07-13-hodgeman-ks-lightning-supercell.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Thamserku.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gvCvkN6ll9Y/UtRUq4mYc8I/AAAAAAAAGpo/RecztlhW01k/s1920-w1920-h1080-c/Thamserku.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ohau-cliff-hawaii-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-lKPOvxP_3hQ/U0MjW1IS8QI/AAAAAAAJBP4/qTn4pFXZq_8/s1920-w1920-h1080-c/ohau-cliff-hawaii-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7439storm2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-PBAhFhrSEPM/Ugj3wyodrvI/AAAAAAAAIOs/Fo7lNmwWNu0/s1920-w1920-h1080-c/7439storm2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bondi_sml.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OuaQJ-ktrms/TmH7HMco5NI/AAAAAAAADYk/CvmoywXR_ck/s1920-w1920-h1080-c/bondi_sml.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+A+Great+Wall+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bm8YwGRxgzI/U0MfR72bkDI/AAAAAAAJKHE/TKs1mWF8US4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BA%2BGreat%2BWall%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TwilightRocks_SanMateoCoast-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WiGnP1yACq0/T2-Ib08jHdI/AAAAAAABFaw/uRs4YlY_qss/s1920-w1920-h1080-c/TwilightRocks_SanMateoCoast-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Farm+of+Eden.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-To5JBx7eAO4/U0MaTRPOM4I/AAAAAAAJEWM/8Bgvm9uL6Do/s1920-w1920-h1080-c/The%2BFarm%2Bof%2BEden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8031438226_5713c1a86c_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeCrM9fKDYw/UkPR39wFICI/AAAAAAAALrQ/1VmRr7zq_N4/s1920-w1920-h1080-c/8031438226_5713c1a86c_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061012-1078-PelicanCove.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hn2QgYPEDxo/Tg1bUgAlTfI/AAAAAAAAAI0/R33ZpN3IaJ8/s1920-w1920-h1080-c/061012-1078-PelicanCove.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC03916+Green+Leaf+Texture.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Lpppujp4Qb4/UpBTNYFdx7I/AAAAAAAAD_4/SCgq46wEvcU/s1920-w1920-h1080-c/DSC03916%2BGreen%2BLeaf%2BTexture.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Fickle+Mistress.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Z9mJn5vva2U/T6sVZGdrvgI/AAAAAAAAdAo/rdpy_ia2NS8/s1920-w1920-h1080-c/The%2BFickle%2BMistress.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090227-0384-McCluresPoint.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-K7DKKrLhMec/Tg1eUKdLbXI/AAAAAAAAAM4/BaH6ytbEX4U/s1920-w1920-h1080-c/090227-0384-McCluresPoint.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080816-4952-WaianSands.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-tCgHZWwSulc/Tg1dtfmRPHI/AAAAAAAAAMI/ol6-WLOo7WU/s1920-w1920-h1080-c/080816-4952-WaianSands.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0684.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xOVjmeJjM3o/TqtYP_buAoI/AAAAAAAAFlA/xUHqJSkr-MU/s1920-w1920-h1080-c/IMG_0684.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071229-4276-LaJollaFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-e6TcvHbkNxo/Tg1dYGAJKTI/AAAAAAAAALw/_t-M3-wmbeg/s1920-w1920-h1080-c/071229-4276-LaJollaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090911-2088-AngelIslandSky2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n76GULHmI8U/Tg1fNmGyDbI/AAAAAAAAAOA/pNieTMoo0ro/s1920-w1920-h1080-c/090911-2088-AngelIslandSky2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1134103121_gateway+to+the+temple+of+heaven.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-08NVs0omPPw/TgtZEFlihuI/AAAAAAAJBBo/KKdqrpOP5Z0/s1920-w1920-h1080-c/1134103121_gateway%2Bto%2Bthe%2Btemple%2Bof%2Bheaven.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DolphinWalk.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-WHdVljxASJk/UOue-BcvLNI/AAAAAAAAwoo/ENRQQBJtKsA/s1920-w1920-h1080-c/DolphinWalk.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+paint+on+rock!.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-1OMPOm50As0/Ua2didd-IjI/AAAAAAAAfX4/afXkw0vQ4Nc/s1280-w1280-c-h720-k-no/Red%2Bpaint%2Bon%2Brock%2521\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-20-11-sunset-clouds365-kdelay.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sVsjQwFKpM0/UFN9mKAiexI/AAAAAAAASuM/qpOQevOJY8k/s1920-w1920-h1080-c/5-20-11-sunset-clouds365-kdelay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/maui-13.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-A5xnIm26hoM/UQ6xWBcP60I/AAAAAAAAFZI/xCilpfxW-3Y/s1920-w1920-h1080-c/maui-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sloat-SunsetBeachFoam.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2oWY5eMxbnY/TwJ1W3DnAII/AAAAAAABFbs/V9UTfZKkOnM/s1920-w1920-h1080-c/Sloat-SunsetBeachFoam.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6436.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hjg_1FAJV7k/T8miVTXavMI/AAAAAAAAIgo/Ksveh_v5Pws/s1920-w1920-h1080-c/DSC_6436.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090501-0963-CycloneOfLt.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-duWLWrx3RtU/Tg1erB-vvtI/AAAAAAAAANU/3iD8-ATfJsw/s1920-w1920-h1080-c/090501-0963-CycloneOfLt.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1189866210_spanish+sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-zAb56uSfuX0/TgtZEG6yqnI/AAAAAAAJBDQ/5prXR1sSzyU/s1920-w1920-h1080-c/1189866210_spanish%2Bsunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5433.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dN576MDlyEM/TiRJgIjUtZI/AAAAAAAD6lY/sbNK1sQOiow/s1920-w1920-h1080-c/IMG_5433.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4957.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EJI2_bMWrg/U0_6WXfnu0I/AAAAAAAA2IA/qnv2qDY374E/s1920-w1920-h1080-c/388A4957.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Olmsted-Sunset-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_X4BN2gmOh4/TqTdEJ8Q95I/AAAAAAAAEx4/4HIX-pD4OuI/s1920-w1920-h1080-c/Olmsted-Sunset-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/new-england-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-z9s9Br2P5fo/UKZedhD_eYI/AAAAAAAACfk/2-qRWoFQDcs/s1920-w1920-h1080-c/new-england-4.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9VBXTbvWld0/U_yjmbN6zVI/AAAAAAAB-3c/rSgR3kL3uTQ/s1920-w1920-h1080-c/20101103_TorresDelPaine_Cuernos_Horns_6215_blended-Edit-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/bodie-11.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NFuPWEa3vrE/UFs2mhJrWQI/AAAAAAAAST4/QAg74w1fZpI/s1920-w1920-h1080-c/bodie-11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8003.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-xjlOWCsBOHg/UL2Bg7-fWJI/AAAAAAAAEQM/_Af3LToQDmg/s1920-w1920-h1080-c/IMGP8003.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20110710-160024.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GN97YhnT3Qo/Tj1SVC1wv-I/AAAAAAAADi0/upwFGIqVhPQ/s1920-w1920-h1080-c/20110710-160024.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/River+and+Mount.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mdbG7ZFFzKQ/U0MX5tKa1vI/AAAAAAAJCBM/XGhf_-p25Ys/s1920-w1920-h1080-c/River%2Band%2BMount.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060607-0405-PillarsPast.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-USkNl2UVpk8/Tg1a6ynrEKI/AAAAAAAAc0c/fcUJz1E5SKw/s1920-w1920-h1080-c/060607-0405-PillarsPast.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8949932059_416d4806ab_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-rU4h5IKilhs/UbC8PJyZCII/AAAAAAAABBo/tPQZAwV8nxA/s1920-w1920-h1080-c/8949932059_416d4806ab_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-5.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-iXtTEIicPCE/Thz5P1Y-mFI/AAAAAAACqmA/QwzDzmHWk94/s1920-w1920-h1080-c/untitled-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140105-untitled+shoot-2908_HDR_HDR.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-kM5nzgAtWSI/Us2ewqEBtFI/AAAAAAAABiM/iwvLzC2OMEk/s1920-w1920-h1080-c/20140105-untitled%2Bshoot-2908_HDR_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100731-4524-HapunaLight1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EF8NaWPwjTM/Tg1gLGBR_9I/AAAAAAAAAPE/3DlU_Kv1HHQ/s1920-w1920-h1080-c/100731-4524-HapunaLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TetonSnakeOverlook.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-RCFt3utBaXk/UE5kxyUxo6I/AAAAAAAAJWQ/jtgzKjcGfuU/s1920-w1920-h1080-c/TetonSnakeOverlook.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120212-IMG_4250.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-5FV5VQzT0WQ/Tzy0dNznpGI/AAAAAAAAEwc/5uIfwjNBMhc/s1920-w1920-h1080-c/20120212-IMG_4250.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100312-3521-MonolithicLight1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-KKZmrbmQdYM/Tg1fx0f9EaI/AAAAAAAAAOs/zg07LmkK2eg/s1920-w1920-h1080-c/100312-3521-MonolithicLight1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8156803630_fcb67dbe98_k.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p3T0Z0zLK5E/UJhoD6_Ac1I/AAAAAAAAgMQ/fqQxNGKpL-c/s1920-w1920-h1080-c/8156803630_fcb67dbe98_k.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4088949046_5d094cb2e2_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yX9BOjrswig/TgtZEPKtS_I/AAAAAAAJEmo/jrnHGoDlpHw/s1920-w1920-h1080-c/4088949046_5d094cb2e2_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8621-2-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4eLicoBRkAQ/Uc7OMQqqKMI/AAAAAAAAXbw/eMQHZ3fhXGA/s1920-w1920-h1080-c/DSC_8621-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1171692863_the+eiffel+from+beneath.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PQQBBUfBmNs/TgtZENaPpRI/AAAAAAAJA1Y/mfOoa5PJw4g/s1920-w1920-h1080-c/1171692863_the%2Beiffel%2Bfrom%2Bbeneath.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Sunset+on+a+Texas+Farm.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9-6Sd41GxEQ/U0MR8Gvqf4I/AAAAAAAJRB0/9fYITnA4fQk/s1920-w1920-h1080-c/A%2BSunset%2Bon%2Ba%2BTexas%2BFarm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/300928932_3bf6d408df_o.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DfDrf9tZth0/TgtZGBjmXqI/AAAAAAAJA_A/e6jq_VQrXaY/s1920-w1920-h1080-c/300928932_3bf6d408df_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ReflectingMoonlight.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-B7gaJXyGoIs/UHOmYB8GzPI/AAAAAAAAwHA/MGpwJlaw7Yw/s1920-w1920-h1080-c/Reflecting%25252520Moonlight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Solar+Flower.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zuD-bqjkRMs/U0MdYYTiWJI/AAAAAAAJJLE/xEEn0-D32-Q/s1920-w1920-h1080-c/The%2BSolar%2BFlower.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061119-1290-HaenaSurf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DtOOMCEQEzs/Tg1baI_IkFI/AAAAAAAAc0g/4HYnmK0I21k/s1920-w1920-h1080-c/061119-1290-HaenaSurf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3425202839_7a6b829432_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Mo0DARoQ5pg/TgtZGObV66I/AAAAAAAJA4A/x3NBiBZ1T08/s1920-w1920-h1080-c/3425202839_7a6b829432_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3302.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EGI_DF6_jjM/U0_6WeYaAcI/AAAAAAAA2IA/onrkX5wYXC0/s1920-w1920-h1080-c/388A3302.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2388+e.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uWYftkrNY7Y/U08nbhRFXEI/AAAAAAAAvt8/Jvqvy9ZX7Rw/s1920-w1920-h1080-c/IMG_2388%2Be.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060506-0094-Farscape.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mB0CsB02334/Tg1a0rca9TI/AAAAAAAAc0M/poMn2aae0XU/s1920-w1920-h1080-c/060506-0094-Farscape.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090102-0143-SeaAndStorm.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-rqPXOCN3Sf4/Tg1eJr7jzJI/AAAAAAAAAMs/neSQj8_NJbQ/s1920-w1920-h1080-c/090102-0143-SeaAndStorm.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-Wave_mono-square.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_9KsThqIDII/TsKQNHpnMcI/AAAAAAABFcM/myl4tBgFSMs/s1920-w1920-h1080-c/GGB-Wave_mono-square.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KTagpsQRiZw/Tk84FHT3wvI/AAAAAAABMJE/lGUSRehuqK0/s1920-w1920-h1080-c/DSC_2817.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Morning+at+the+Secret+Lak2e.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r9JZ23uiJdw/U0MRzWVvfDI/AAAAAAAJA5Q/4xCghAQGdp8/s1920-w1920-h1080-c/A%2BMorning%2Bat%2Bthe%2BSecret%2BLak2e.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0817.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-s8Arhr77hCs/UqTF_xWLYVI/AAAAAAAAXK8/uRcPFpV7CPM/s1920-w1920-h1080-c/C21T0817.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091009-2169-LibOfAges3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-VeOuV8_xtzQ/Tg1fcY4BfBI/AAAAAAAAAOQ/y0D10NZbTOw/s1920-w1920-h1080-c/091009-2169-LibOfAges3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SFBay-Sunrise-Hank-n-Pilings-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZ_Ll43savw/TzCKeTsXQHI/AAAAAAAASAc/n4AJeYm6ehA/s1920-w1920-h1080-c/SFBay-Sunrise-Hank-n-Pilings-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Adventure+in+Argentina-7283-March+31,+2009-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-q7WJKw9Oqog/U0MSH9OpjdI/AAAAAAAJGxU/FDOzRfCcMro/s1920-w1920-h1080-c/Adventure%2Bin%2BArgentina-7283-March%2B31%252C%2B2009-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SunetReflection_16x9-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--s1xvTZu_8s/TvEFum2qOkI/AAAAAAABFiQ/RVtjU4CacrI/s1920-w1920-h1080-c/SunetReflection_16x9-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1221.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-id9Mf91TyIg/UQmGXFzYiAI/AAAAAAAAlfo/n2RM1udWSeM/s1920-w1920-h1080-c/IMG_1221.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-New-Zealand+(362+of+696).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4-wMlkvbnxI/U0MiMX47iJI/AAAAAAAJJJ8/lstLqeHqMOM/s1920-w1920-h1080-c/Trey-Ratcliff-New-Zealand%2B%2528362%2Bof%2B696%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Rocks+of+Iceland.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-7EENXFBPvH8/U0Mc5Ty31YI/AAAAAAAJBIY/d9kb4PcgsXc/s1920-w1920-h1080-c/The%2BRocks%2Bof%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012-Favorites-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-_TPUkTQ0foE/UOu3R1Fih9I/AAAAAAAAUwU/n2BcAi9lFAI/s1920-w1920-h1080-c/2012-Favorites-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Exclamation-4.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-p2S6pYJG8TY/UkLZ-2heppI/AAAAAAAAdAo/UEwJsuYTGXM/s1920-w1920-h1080-c/Exclamation-4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01099+Plant.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-AM_AYNzr-a0/UpBNRCa9JbI/AAAAAAAAD_w/gATI2Qr7EHw/s1920-w1920-h1080-c/DSC01099%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-24-13.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k85UvBDxqso/UbdXjw35hhI/AAAAAAAAFh4/E7cP1B2hXgg/s1920-w1920-h1080-c/1-24-13.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LowerAntelope1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Hy-GW9jdRmM/UOOY4T51IhI/AAAAAAAAKiI/dj3WLyRqMJE/s1920-w1920-h1080-c/LowerAntelope1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DelicateArch.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lTCOr1mGi98/T0m262j2RnI/AAAAAAAAGbs/4Ab-Mhv-4_A/s1920-w1920-h1080-c/DelicateArch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_3091-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-dzQdFd1d2cg/UpExTYfIJ6I/AAAAAAAAFgo/jW1vrNByXqg/s1920-w1920-h1080-c/DSC_3091-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lorne+Road.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SPVIRuebjx0/U0MWpwm-GJI/AAAAAAAJJKQ/b1X__UQq1K8/s1920-w1920-h1080-c/Lorne%2BRoad.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110429-7971-Faultlines.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-9evAJAwXovk/Tg1aR0viDRI/AAAAAAAAc0I/TecuJZTaV44/s1920-w1920-h1080-c/110429-7971-Faultlines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+NEX+7-+Sunset+2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-2Q98cG0kiX8/U0MgMcXhJgI/AAAAAAAJKoU/iqJaKYOi6J0/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNEX%2B7-%2BSunset%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ree1zkofuLM/UPBTkiEo3pI/AAAAAAAAfWU/t0UKepl53qw/s1920-w1920-h1080-c/IMGP8556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Most+Beautiful+Road+in+the+World.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Cp1EGSOiT7o/U0MbuGaep5I/AAAAAAAJIA0/Hi4dBFthsQE/s1920-w1920-h1080-c/The%2BMost%2BBeautiful%2BRoad%2Bin%2Bthe%2BWorld.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chicago.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KxjcNjAfrow/U0MTi1JasjI/AAAAAAAJKS4/JcqmHStMKgE/s1920-w1920-h1080-c/Chicago.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070211-2329-GarrapataSurf1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-p8gu7w4UaB0/Tg1cD-zJRXI/AAAAAAAAAJw/xKPs4AJ8WTU/s1920-w1920-h1080-c/070211-2329-GarrapataSurf1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Day+Break+G+.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KwGZ0753oAA/T_SUbhKUrmI/AAAAAAAAhqg/aN2q0nhUYNA/s1920-w1920-h1080-c/Day%2BBreak%2BG%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070902-3129-BowlingBall1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-EIrEuHD0skg/Tg1cUtz3htI/AAAAAAAAc00/ykp5Z4-BtGg/s1920-w1920-h1080-c/070902-3129-BowlingBall1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+OTW+to+Glen.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ggjaMcHz6Fw/U0Mgf-CsIDI/AAAAAAAJFdQ/iyuO6PIuUdg/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BOTW%2Bto%2BGlen.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/136.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-DZDQ-Jc4VPA/TSjtGSyY5lI/AAAAAAAAkNQ/r8BTRHGP7qI/s1920-w1920-h1080-c/136.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1311-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-smKqSEXvptA/UpZ3FAZqrSI/AAAAAAAAf5w/iIG6Dg0XSKs/s1920-w1920-h1080-c/DSC_1311-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/In+a+Foreign+Land+-+West+Fjords,+Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5vOp8Qd9Cr0/UZURZbC6EvI/AAAAAAAAgTY/jZBHwF9W4VU/s1920-w1920-h1080-c/In%2Ba%2BForeign%2BLand%2B-%2BWest%2BFjords%252C%2BIceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hell's+Gate+Bridge-6.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sZXaqdy-xcA/UKzgVo7pqnI/AAAAAAAAIaA/tvF7kHoKH2I/s1920-w1920-h1080-c/Hell%2527s%2BGate%2BBridge-6.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/End+Game+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-vYrcLbr_syE/UO0CdVlLb_I/AAAAAAAAgOE/-NoOWCD3-LY/s1920-w1920-h1080-c/End%2BGame%252B.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+China+2011+-+The+Egg+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-fSZtzjxYoBk/U0MfcOvbsrI/AAAAAAAJBP8/prm689xvgE4/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BChina%2B2011%2B-%2BThe%2BEgg%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8642.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IFmqkzp2Z74/SlgjPMN0INI/AAAAAAAAJlI/cVrfkqJwBj4/s1920-w1920-h1080-c/IMG_8642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3234.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-81O00JEe7GY/U0_6WV9qs6I/AAAAAAAA2IA/xSYNSA5zuIo/s1920-w1920-h1080-c/388A3234.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A4648-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Xb-0VhFJErE/U0_6WZpo_5I/AAAAAAAA2IA/3wWOfPmtuno/s1920-w1920-h1080-c/388A4648-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2238-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0gRcRJvCyq8/UYWMMwK-xyI/AAAAAAAAgOg/YAmwDINMMW4/s1920-w1920-h1080-c/MOL_2238-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Kona-Hawaii-Stormy-Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EgToYDexIWA/TugFtw6MbOI/AAAAAAAAJ_E/AFdXppomBHM/s1920-w1920-h1080-c/Kona-Hawaii-Stormy-Sky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BakerBeach-SunsetColor.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-AGyN05vOAVg/Trv455hOvXI/AAAAAAABFag/ruA7zfHRDik/s1920-w1920-h1080-c/BakerBeach-SunsetColor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/red+bridge+in+late+afternoon.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-voPn3r8W5cQ/TgtZEGX9FFI/AAAAAAAJG7g/wotb_OlghAE/s1920-w1920-h1080-c/red%2Bbridge%2Bin%2Blate%2Bafternoon.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-sunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-i1rPphMhUYQ/T1l7sJNRR5I/AAAAAAABFaA/ISCx26OdOHM/s1920-w1920-h1080-c/LandsEnd-sunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130915-7372-34873c91-2048.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-3d-tkshy_0Y/Um32gHQ1usI/AAAAAAAACGA/O4ZCsNcd1-M/s1920-w1920-h1080-c/20130915-7372-34873c91-2048.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Ocean+Sigh.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KKLEMMadjkQ/UO8V4We8BYI/AAAAAAAAwHI/245vkVmGU8w/s1920-w1920-h1080-c/Ocean%2BSigh.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoCove-SmallSunset-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cFtlqrFqSy0/Tpr3ij-CA7I/AAAAAAABC7g/PhNSHOv9-dw/s1920-w1920-h1080-c/RodeoCove-SmallSunset-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1556-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-01ZxJyYSOq4/UtTs57pjoXI/AAAAAAAAOYg/L4SWL7LqweM/s1920-w1920-h1080-c/DSC_1556-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Road+to+Lindis+Pass.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wBaT-XTU5lw/U0McsiS2QGI/AAAAAAAJG6g/emxVwa5ILwo/s1920-w1920-h1080-c/The%2BRoad%2Bto%2BLindis%2BPass.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Life+in+the+greenhouse-3.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-t4GuDMvJgtk/TPK0WgSeLBI/AAAAAAADI4c/zYc1x7I-S9k/s1920-w1920-h1080-c/Life%2Bin%2Bthe%2Bgreenhouse-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/7995122298_d4743a46ce_k.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-dVPjiuCL-og/UNi-6EF0QjI/AAAAAAAAK5E/33w0ipRlzuc/s1920-w1920-h1080-c/7995122298_d4743a46ce_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/McWay+Milky+Way.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-4J2fjwHlZpk/UtTyvD-FnJI/AAAAAAAAX1k/TuYoeLc-Ku8/s1920-w1920-h1080-c/McWay%2BMilky%2BWay.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-queenstown-nz-nikon-d800.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxsx0IEs6eA/U0MlLb1IerI/AAAAAAAJP20/dPosYR9XVxw/s1920-w1920-h1080-c/trey-ratcliff-queenstown-nz-nikon-d800.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chef+at+Sunset.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YB4kZ5ge9Cc/U0MTgZTfmZI/AAAAAAAJQpw/V9nAX7xkgF0/s1920-w1920-h1080-c/Chef%2Bat%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ConvictLakeSunrise.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FAIPD0L_XLs/UBctAcHLwcI/AAAAAAAAJAo/fsicVZWEcT8/s1920-w1920-h1080-c/ConvictLakeSunrise.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01009+(1).png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-k1Op3rHp90U/ToFAGEMaH4I/AAAAAAAAraU/f_xZikhzlCY/s1920-w1920-h1080-c/DSC01009%2B%25281%2529.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0444_5_6-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-UHWxgek6Ei0/T58Hpp9zkeI/AAAAAAAANzY/M8D4GtsE6cY/s1920-w1920-h1080-c/DSC_0444_5_6-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090424-0690-CrystCvBreakers.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9FMwjMIo6MU/Tg1efx1FWSI/AAAAAAAAANE/NuC3xJSPApo/s1920-w1920-h1080-c/090424-0690-CrystCvBreakers.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Sky+Forever.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-rYUyEz24110/U0MddxVVpKI/AAAAAAAJI0g/Yo2Aeee9akk/s1920-w1920-h1080-c/The%2BSky%2BForever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140310_Iceland_1392-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bjac3OgFBG8/U_yjp004PtI/AAAAAAAB-4U/jq6sA93FbVI/s1920-w1920-h1080-c/20140310_Iceland_1392-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3410783929_310572ed16_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1oYAqn8Hi9o/TgtZEE_8tKI/AAAAAAAJJKI/8CbtKab2l0U/s1920-w1920-h1080-c/3410783929_310572ed16_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/G+.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-udPQ4zAGUYg/UZURZTfLDhI/AAAAAAAAPSc/ptIJgEKd2LQ/s1920-w1920-h1080-c/G%252B.jpeg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0861.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-v6_xr8m1Nh4/UqTF_6FhNQI/AAAAAAAATJY/VWbCHgg5quc/s1920-w1920-h1080-c/C21T0861.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3505475407_d776e4d589_o-1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TVzStzhfexU/S_5S8_zMy5I/AAAAAAADFE0/fN7-JZzP46I/s1920-w1920-h1080-c/3505475407_d776e4d589_o-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seattle.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-DteiBArt5UI/U0MYH6zthEI/AAAAAAAJFtY/UU1t1FU6uX4/s1920-w1920-h1080-c/Seattle.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100409-3657-PinnacleRock3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eOzWq5Yn-SY/Tg1f10Dgx4I/AAAAAAAAAOw/PiXj6h2JAio/s1920-w1920-h1080-c/100409-3657-PinnacleRock3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-Ratcliff-Milford-Sound-100.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PwjNo1puYPI/U0MiQaw-PxI/AAAAAAAJF3M/gyTiKomggGc/s1920-w1920-h1080-c/Trey-Ratcliff-Milford-Sound-100.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061125-1635-Maelstrom3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5E0jD9xU4kU/Tg1brt6WipI/AAAAAAAAc0s/2YRKYYKsEkM/s1920-w1920-h1080-c/061125-1635-Maelstrom3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A1865_HDR.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-zrMZyIFb_wM/U0_6WbX2k0I/AAAAAAAA2IA/EM_Lt3L7XOg/s1920-w1920-h1080-c/388A1865_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2337.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uxwr24FdX3I/TwZMCaKx4XI/AAAAAAAAQnE/DcLxR0jnfqE/s1920-w1920-h1080-c/IMG_2337.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1531.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-EIEk1-tv81w/TGD0hHBXZEI/AAAAAAAAav0/MfGEerqGlfk/s1920-w1920-h1080-c/IMG_1531.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C4577.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KN7d8PlNOxU/UA7HP8WNpTI/AAAAAAAASLc/esv8pSYjYmQ/s1920-w1920-h1080-c/FI4C4577.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RaceTrack-tilted.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-TiuUGmgrIJo/T2fhWrPoAtI/AAAAAAAAX-0/KhLFCt5muZ0/s1920-w1920-h1080-c/RaceTrack-tilted.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tempest+(1)-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-aN5bGPX4Rig/UW_esdzHpZI/AAAAAAAAUYo/lhx3gIuY2Tc/s1920-w1920-h1080-c/tempest%2B%25281%2529-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+lonely+grass+house.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-BqdD6DbXnso/TgtZGH_h6AI/AAAAAAAJA0Q/VNpKkFnn1eg/s1920-w1920-h1080-c/the%2Blonely%2Bgrass%2Bhouse.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BeanHollow-sunset-surf.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bhHK29YjgVc/T3CquVOc6hI/AAAAAAABFZI/Z-FfTyBzwLI/s1920-w1920-h1080-c/BeanHollow-sunset-surf.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20140328_Hawaii_2209-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-JOT24t6ZLx4/U_yjrKLK2zI/AAAAAAAB-4o/KC0ZWVXh110/s1920-w1920-h1080-c/20140328_Hawaii_2209-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_402.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-a860A9miaZQ/ThtTuOdNWNI/AAAAAAABSE0/tjO54r6kego/s1920-w1920-h1080-c/RHeaRy_402.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningBlue-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-w_It3dmq8_Q/Tr26ZtIDRNI/AAAAAAAAGVg/qOM8lD2pCpU/s1920-w1920-h1080-c/MorningBlue-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071118-3765-LvrsPtMorn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-3l1ZJxwb6rI/Tg1czp-9MFI/AAAAAAAAAK0/rdFg0gGfCqg/s1920-w1920-h1080-c/071118-3765-LvrsPtMorn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/forest+fog+v2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-f3E6blFBDVk/Tg0tjUx3BJI/AAAAAAAAgMY/f8tnlRGQisU/s1920-w1920-h1080-c/forest%2Bfog%2Bv2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/oil3.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-cQXP45_tLq0/T0m27oIexHI/AAAAAAAAGb8/keNzP_2lN60/s1920-w1920-h1080-c/oil3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FoggySunrise-HawkHill-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nwpgAk2m0O8/ToM1yp5NLQI/AAAAAAABC64/ExPWPjc-oLE/s1920-w1920-h1080-c/FoggySunrise-HawkHill-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB-SlackersRidge-Sunrise-fog-headlights-wide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-s-CrcrZfoEY/TzlsdNVcPpI/AAAAAAAAS2I/vgewR4SWII0/s1920-w1920-h1080-c/GGB-SlackersRidge-Sunrise-fog-headlights-wide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4+horses.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PFORpB2nRWU/TgtZEBZXStI/AAAAAAAJG78/sg8P1h1FTu4/s1920-w1920-h1080-c/4%2Bhorses.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1-02-12-part2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-LuTnYJ-_AcA/UbdXj-v1fMI/AAAAAAAAFhg/emAw_2y06Ak/s1920-w1920-h1080-c/1-02-12-part2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/1071616194_the+farm+of+eden.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-mWoPAMsZ8qM/TgtZECWsZDI/AAAAAAAJGYQ/mGJ5umfc76I/s1920-w1920-h1080-c/1071616194_the%2Bfarm%2Bof%2Beden.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_2155.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ll7ATwQQOnE/UkPP_YH9WKI/AAAAAAAALoA/_9E2BHedhG4/s1920-w1920-h1080-c/MWF_2155.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_465.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-hDuDewqWJhc/ThYuDF3m4II/AAAAAAABSc8/OMs4oB1Xj6U/s1920-w1920-h1080-c/RHeaRy_465.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/101027-4887-TestOfTime.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lOZvJ3yPdfc/Tg1gbgvj2bI/AAAAAAAAAPc/bgWip6MWRVI/s1920-w1920-h1080-c/101027-4887-TestOfTime.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1272-Edit-Edit-2-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Ov6cnpCqcKo/Ue52zucefaI/AAAAAAAAZuc/Ya8H97MGDxo/s1920-w1920-h1080-c/DSC_1272-Edit-Edit-2-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshallBeachSunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-BjCgH3F-OtM/ToojnEsMoHI/AAAAAAAAFNw/RMun2UfSHvI/s1920-w1920-h1080-c/MarshallBeachSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Chris+Chabot.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5L66J8m3eOc/US-gTtMRQbI/AAAAAAAAX5c/kyQnx5QiiKw/s1920-w1920-h1080-c/by%2BChris%2BChabot.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Chasing+the+Sunset.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-oeJbNPb-T-M/UZURZeo6N9I/AAAAAAAAPQU/py94YP9ogqg/s1920-w1920-h1080-c/Chasing%2Bthe%2BSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1428.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-KK0a8yX7hUc/TnemEmslOEI/AAAAAAAAG4I/qj90bfgIkqs/s1920-w1920-h1080-c/IMG_1428.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6160-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Fz5s5Sq3uSc/UqXO06_DNPI/AAAAAAAAhPw/UNBDEnOdEhs/s1920-w1920-h1080-c/DSC_6160-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20130805_mit_and_river_00001-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGY-AaDQgJc/UgG4BcMHLWI/AAAAAAAAVgA/pUfLz3uxV-w/s1920-w1920-h1080-c/20130805_mit_and_river_00001-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tree+in+the+park.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-OIKJTN2YWhU/TgtZGPb42zI/AAAAAAAJA5c/IY3N83zJARw/s1920-w1920-h1080-c/tree%2Bin%2Bthe%2Bpark.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_1449.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-qLopnv-fFT0/TxYB5_vxoEI/AAAAAAABFlo/0zpzDJeTYYk/s1920-w1920-h1080-c/_MG_1449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3K9C4807.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-4x17JQmbu1s/Ur0CrKBRTzI/AAAAAAAAGH4/t-G8zEmm1jU/s1920-w1920-h1080-c/3K9C4807.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP4090-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Hhp_SMvb6a0/UOSjNI1cZnI/AAAAAAAAGjU/0XLFokAU-bw/s1920-w1920-h1080-c/IMGP4090-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8703.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ZVK5-96bzpA/UtTypXkQUHI/AAAAAAAARwI/_iTqNhaMZ6c/s1920-w1920-h1080-c/DSC_8703.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-milford11.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-ISfFDxxtu-s/U0MkxpnU1rI/AAAAAAAJBQQ/gmuXSo3KcFQ/s1920-w1920-h1080-c/trey-ratcliff-milford11.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/by+Joel++Tjintjelaar.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-sVAg7ixe6zM/US-gUOy49yI/AAAAAAAAXrM/6iXuvw5XdBw/s1920-w1920-h1080-c/by%2BJoel%2B%2BTjintjelaar.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-V4KqnGwqPtA/Ur0CJf-GmTI/AAAAAAAAGBA/LO0uFjb-Erc/s1920-w1920-h1080-c/IMG_3857-Edit-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1311.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-9n3C3hJmGGc/UQmHUE2y6RI/AAAAAAAAlfs/6JKtNnI29Uk/s1920-w1920-h1080-c/IMG_1311.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6743-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NZsqwlPxJ08/Ulff-DU9xQI/AAAAAAAAdbg/pJkMnw8uLCk/s1920-w1920-h1080-c/DSC_6743-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_DarkMorningWindyFog.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-qiK0GrZEcpQ/TtZtCl10xrI/AAAAAAAAHow/WGJu8GP6dmA/s1920-w1920-h1080-c/GGB_DarkMorningWindyFog.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey-ratcliff-toronto-Recovered.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HiLp9PsqEEg/U0MiTxSu0yI/AAAAAAAJP3w/ZWMfpXVaQVI/s1920-w1920-h1080-c/Trey-ratcliff-toronto-Recovered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/070319-2657-PathToLight.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-VGh9JQ9DCzM/Tg1cKU7qBRI/AAAAAAAAAJ4/Dyi6MrlgffU/s1920-w1920-h1080-c/070319-2657-PathToLight.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6244-7.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-UBxJsB_kCVU/UettpK1i2BI/AAAAAAAAK3s/siEVsMTSHIg/s1920-w1920-h1080-c/MWF_6244-7.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A3363.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Fje9gDslRI0/U0_6WU_6rMI/AAAAAAAA2IA/m4PXkm_hAvI/s1920-w1920-h1080-c/388A3363.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_8520.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-sTiWMAC13YQ/UTmo6ED7v9I/AAAAAAAAWsQ/PfI4WYswhJw/s1920-w1920-h1080-c/DSC_8520.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1870.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YOIwgQ1uXcM/SRGZJ-A3yvI/AAAAAAAADMI/6qvORkHqWS4/s1920-w1920-h1080-c/700_1870.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Dream+Catcher+-+Palouse,WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-skB9ljKV58M/UXp3kiaG3DI/AAAAAAAAgRM/hZ3rTbu1XwU/s1920-w1920-h1080-c/The%2BDream%2BCatcher%2B-%2BPalouse%252CWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+India.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-H8NDmFzpF_A/TgtZEOagTaI/AAAAAAAIPp0/eTfdvWDBvt4/s1920-w1920-h1080-c/Farewell%2BIndia.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SonomaCoast-Arch-surf-longexp.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-x0qCPDjYL9w/T2Z8tuYaHII/AAAAAAABFXc/empnlAhR_eY/s1920-w1920-h1080-c/SonomaCoast-Arch-surf-longexp.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2398605326_bf7dde0cf7_o.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-bXrGY2Cafa0/TgtZGEzbZDI/AAAAAAAJA5g/JWbeuWkbTLc/s1920-w1920-h1080-c/2398605326_bf7dde0cf7_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+View+from+the+Ranch+in+Argentina.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-txUs9Q95dM8/U0MR9lvvDNI/AAAAAAAJIA8/vY9TD4TiPzw/s1920-w1920-h1080-c/A%2BView%2Bfrom%2Bthe%2BRanch%2Bin%2BArgentina.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00077.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5uz5EzVcvNU/UEpN7gJg2nI/AAAAAAAAI7s/-Xwxg57SCn0/s1920-w1920-h1080-c/inverness-to-istanbul-00077.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SanGregorioCliffReflection.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-465XgZS4LQo/UOuDAiDRcrI/AAAAAAAAKng/4m7maZotsgg/s1920-w1920-h1080-c/SanGregorioCliffReflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/santa-cruz-trey-ratcliff.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-U0yjKIXF2fs/U0MjfTbjf1I/AAAAAAAJEbY/MkqCoe1DfG4/s1920-w1920-h1080-c/santa-cruz-trey-ratcliff.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061122-1421-LtAtEndOfPier.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-7Zi62qJ-NNg/Tg1bfusNzfI/AAAAAAAAAJA/P4bDaf-68Ys/s1920-w1920-h1080-c/061122-1421-LtAtEndOfPier.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_SUE4322.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vA0vdrM3_ro/UnDyzCqXFaI/AAAAAAAAGxw/GAtvLCwZbAM/s1920-w1920-h1080-c/_SUE4322.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Bamboo+Forest.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-bkNEhcz00Z8/U0MZQ3MdO3I/AAAAAAAJGy4/S-coTfmsQfE/s1920-w1920-h1080-c/The%2BBamboo%2BForest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02146+Red+Plant.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tyOlTzJRvmw/UpBQXuuK_JI/AAAAAAAAD_0/PL7enPiYUT8/s1920-w1920-h1080-c/DSC02146%2BRed%2BPlant.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/01_MG_3677.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YHEf8jl_LDg/Tgxgtdub2iI/AAAAAAAAAMQ/zmkWf0WkFTI/s1920-w1920-h1080-c/01_MG_3677.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RedTide.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-feW_gVKW6j8/UI5fg6xQBXI/AAAAAAAAWQY/DIOuGTieAMM/s1920-w1920-h1080-c/RedTide.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/091220-2536-TheCurl.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-lR3vG062kEk/Tg1fjlh053I/AAAAAAAAAOc/Sv1zKPXPkPQ/s1920-w1920-h1080-c/091220-2536-TheCurl.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-close-to-tepako-new-zealand.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Q1AA5A9uiYU/U0MkdTp90YI/AAAAAAAJJIw/SuamKxYgwts/s1920-w1920-h1080-c/trey-ratcliff-close-to-tepako-new-zealand.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6837_CropBrightContrast.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Hqmu2H_l2XY/SwIysuFOIiI/AAAAAAABLWk/W9rX5qlmk4c/s1920-w1920-h1080-c/DSC_6837_CropBrightContrast.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061121-1389-UndPierHanalei.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-VZ8vGJ6Qfvc/Tg1bgCMJ1HI/AAAAAAAAAJE/QMa5LYy7phM/s1920-w1920-h1080-c/061121-1389-UndPierHanalei.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100924-IMG_5794-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-eCSjsP08EcA/T_0K5wVePeI/AAAAAAAARxk/I-Qx3ciOzUE/s1920-w1920-h1080-c/20100924-IMG_5794-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Farewell+San+Francisco.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-N7h4Iit041g/U0MUZ6H8WdI/AAAAAAAJKok/V-IfPQ_XXK4/s1920-w1920-h1080-c/Farewell%2BSan%2BFrancisco.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/stream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-GCr_cZIif7g/Tnarp7XhOMI/AAAAAAAABPU/WNrHyAJOLNA/s1920-w1920-h1080-c/stream.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071110-3579-HvnsGate.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-0DC0pkVJw5g/Tg1cjeX4YpI/AAAAAAAAAKc/bNEDQtv0J4A/s1920-w1920-h1080-c/071110-3579-HvnsGate.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100726-4239-LightAtAhalanui.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m-0LmCqZxSo/Tg1gLoaJJKI/AAAAAAAAAPI/KNkzyqLgUa0/s1920-w1920-h1080-c/100726-4239-LightAtAhalanui.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RHeaRy_380.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-4026KDnYCqc/ThYb2MMKRLI/AAAAAAABSEs/3N3nOtyl_lI/s1920-w1920-h1080-c/RHeaRy_380.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrissyField-SaltMarsh-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-OwU2batkg6A/TrbvnMATI7I/AAAAAAAAF3w/q_7_jgF0ngE/s1920-w1920-h1080-c/CrissyField-SaltMarsh-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tekapo-new-zealand-trey-ratcliff-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-mGgW1ovI2PE/U0Mjzq2YJuI/AAAAAAAJA0o/aLuxOVgUjlY/s1920-w1920-h1080-c/tekapo-new-zealand-trey-ratcliff-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/p1000284.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-patMHu2oyfs/RJBWFz5TABI/AAAAAAACnSo/ZP9KYfCSFM8/s1920-w1920-h1080-c/p1000284.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2617.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-_p1iKjPzjGc/TIW63f_px1I/AAAAAAAAOck/NCDLhcVRam8/s1920-w1920-h1080-c/IMG_2617.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8280686512_7820f388dc_k.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-NeMzsWIU6RU/UZURZR7U_aI/AAAAAAAAgSY/-AtSrt0ig5Q/s1920-w1920-h1080-c/8280686512_7820f388dc_k.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC02700.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9Nj6ilPU0NI/Ts9Gk0pfW_I/AAAAAAAAD4I/GWbtz0c91tE/s1920-w1920-h1080-c/DSC02700.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/388A6457.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-jTQjx2iGz84/U0_6WWCDwxI/AAAAAAAA2IA/FmHhYqwC0Y8/s1920-w1920-h1080-c/388A6457.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TufaSunset-1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uk4W-F3OXbM/Tqwm9e_vuJI/AAAAAAABFcE/zPYFePKqTxs/s1920-w1920-h1080-c/TufaSunset-1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1142336.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7ZuJOGpJ5-0/UHRHfwcGEUI/AAAAAAAAKsU/s31OrXjVZ9A/s1920-w1920-h1080-c/P1142336.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Glacier+Point+Milky+Way+Panorama.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-YxXTf0j_MTQ/UtTwF4t9yEI/AAAAAAAAW8g/dYsGmWzs81Y/s1920-w1920-h1080-c/Glacier%2BPoint%2BMilky%2BWay%2BPanorama.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_6908_09_10_11_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-gBb9HtLb3zw/U_yjyTFvcAI/AAAAAAAB-64/G_Jt5mnm-mU/s1920-w1920-h1080-c/_DX_6908_09_10_11_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/inverness-to-istanbul-00177.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-yCO0vebn5x0/UFBrOZtDNZI/AAAAAAAAJO8/jX4MgPfHQbE/s1920-w1920-h1080-c/inverness-to-istanbul-00177.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0554.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-59MYsAxhB_I/UtTzqg1a7VI/AAAAAAAAWds/BLWELYZHUWE/s1920-w1920-h1080-c/DSC_0554.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Blue.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-p4V1WVO8Dhw/UBSl6P5W35I/AAAAAAAAPdg/UFIS4M1KDBE/s1920-w1920-h1080-c/Blue.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridge-night-mono.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-5IpprOs0T78/T3PwhE-VJ9I/AAAAAAAAYzA/-2X-oY9C3N0/s1920-w1920-h1080-c/BayBridge-night-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9645-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-utp4ouvAO10/Ud6okYh24yI/AAAAAAAAYrg/fRr-tnaqxBI/s1920-w1920-h1080-c/DSC_9645-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A8818-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-bCmJvz5jD9s/U_yj0wk6KLI/AAAAAAAB-7s/t7dIu3T7nvw/s1920-w1920-h1080-c/_X7A8818-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/FI4C6008.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Pg1HXtyXBZ0/UGHWhKaSrhI/AAAAAAAASZE/q3omNbvxCJU/s1920-w1920-h1080-c/FI4C6008.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/10-13-12highres.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-boXHwu7eW_g/UjjGBMhSzwI/AAAAAAAANJE/9w555NqrJws/s1920-w1920-h1080-c/10-13-12highres.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/P1080441.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gKcKe_o5slw/RapYX1Oyx0I/AAAAAAAAa9Q/P9rYqEPs7dc/s1920-w1920-h1080-c/P1080441.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Seal_Rocks-centered.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-PtAU0On5OII/Tr8FOZ3yVuI/AAAAAAAAGY4/IYyAYzHZzo0/s1920-w1920-h1080-c/Seal_Rocks-centered.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3144-3.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-129Q91osfKU/UKsTjV0_Q0I/AAAAAAACKD0/ejMXCx6_w14/s1920-w1920-h1080-c/IMG_3144-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_X7A5208-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-7wj7ipdaCbI/U_yj0qysNgI/AAAAAAAB-7k/dl8d2M4N5vE/s1920-w1920-h1080-c/_X7A5208-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Red+by+Alistair+Nicol.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-vK7sTdwps8g/UKPHFTynz-I/AAAAAAAARas/_RETAXGVU9g/s1920-w1920-h1080-c/Red%2Bby%2BAlistair%2BNicol.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Silver+Lake+StarTrails.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-rQ9SZ0dfJ_I/UtTzyqBufcI/AAAAAAAAOj4/zAOnrvu9aG8/s1920-w1920-h1080-c/Silver%2BLake%2BStarTrails.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP7962.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-fOXNAoVsl2E/UONnO-Zp2zI/AAAAAAAAyPo/kjEzrMZXylk/s1920-w1920-h1080-c/IMGP7962.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-19.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-q2yAJwhwIic/Th0QR-JaxiI/AAAAAAAABCo/YIGFyyYRXBI/s1920-w1920-h1080-c/untitled-19.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/080229-4653-GraytonStream.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-cjUv9eE6oRE/Tg1dXWtEjRI/AAAAAAAAc1E/ScCXWwu6HbM/s1920-w1920-h1080-c/080229-4653-GraytonStream.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6902-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-x838dk0Z5UE/UaXxyeQ21gI/AAAAAAAAm-o/7OSZeQrHSO0/s1920-w1920-h1080-c/DSC_6902-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Lupines.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-oWXc6hihoxM/UAQ2flp_ioI/AAAAAAAAgLE/wL2UgiGSdRk/s1920-w1920-h1080-c/Lupines.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/BayBridgeSunrise-LE.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-k1-SvxtkRaI/TzW2PE5LU_I/AAAAAAAA14A/JuGDMoDvbCQ/s1920-w1920-h1080-c/BayBridgeSunrise-LE.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Iceland.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-fJVeA8ZcZSU/UAbPQdXxfbI/AAAAAAAAgLI/tIVVrrPINVs/s1920-w1920-h1080-c/Iceland.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+trane+and+the+pharoah.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-B4s7SDef3U8/TwttGH3PVKI/AAAAAAAAR8k/Gp5uWnBs4JE/s1920-w1920-h1080-c/the%2Btrane%2Band%2Bthe%2Bpharoah.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6930-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-F44_mY6bA2c/UaiW3nWnsrI/AAAAAAAAWKk/pVPuQcy_ygQ/s1920-w1920-h1080-c/DSC_6930-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Funston-Sunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hs9pldJQseQ/Tw9Z3Mea0PI/AAAAAAABFTs/u8KBBQQ9At4/s1920-w1920-h1080-c/Funston-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0913.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-ouB3hbNdnVY/Tzlw8hO_W7I/AAAAAAAAAVQ/GNAVkaDa0lw/s1920-w1920-h1080-c/IMGP0913.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP5017.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-YiCUO9G6Vfg/ULgv8pQPeGI/AAAAAAAAD-k/NGhYvPuu5bc/s1920-w1920-h1080-c/IMGP5017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/061228-2049-UTPScripps1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JkxqJu_ZG6I/Tg1b6ZErN-I/AAAAAAAAAJk/sD_vHpTz-hU/s1920-w1920-h1080-c/061228-2049-UTPScripps1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/071010-3287-SausMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-o11hGOKretw/Tg1cW-5ZUOI/AAAAAAAAAKQ/bz8-ylAE0_A/s1920-w1920-h1080-c/071010-3287-SausMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trey+Ratcliff+-+New+York+-+Inception.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-uw6YFcXJKbo/U0MgUuctfgI/AAAAAAAJEXg/rLxRH7N4ths/s1920-w1920-h1080-c/Trey%2BRatcliff%2B-%2BNew%2BYork%2B-%2BInception.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/LandsEnd-Sunset.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-lEy_31bnK1A/TyYVYFaoUxI/AAAAAAAAPxc/_4v9O3EKy6c/s1920-w1920-h1080-c/LandsEnd-Sunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Spires-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MjADvnIjxV0/U0MdmA5ytOI/AAAAAAAJKn4/0ZUjaXODMKA/s1920-w1920-h1080-c/The%2BSpires-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/32+Hours++Counting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-xbmT1vIDvZc/UZURZTZzmhI/AAAAAAAAgSo/f1msNjQ2YSw/s1920-w1920-h1080-c/32%2BHours%2B%2526%2BCounting.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2018-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IPbUv2dc9E4/Ugotamqb0xI/AAAAAAAAbME/zTVKgdkCdRY/s1920-w1920-h1080-c/DSC_2018-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MSU_9976.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-tFk1NsophJc/UqWc4p6NF9I/AAAAAAAAHws/4zvvKSi-qRk/s1920-w1920-h1080-c/MSU_9976.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reef-mono.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5-bmm_yEw8Q/ToaN8JLAR1I/AAAAAAABC7I/eMpXTtyj67Y/s1920-w1920-h1080-c/Reef-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Dreams.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-wWAxuHAMqWo/UZURZU59sUI/AAAAAAAAPOY/bxIdsdlg4DE/s1920-w1920-h1080-c/Dreams.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2705.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-D-a8TeEMxVU/T0u5OcN_KcI/AAAAAAAAQ3A/buaoFgy2i-Y/s1920-w1920-h1080-c/IMG_2705.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-WaterfallRock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-F3PyWBuTa9A/Txo6n6KVzRI/AAAAAAABFQ4/bhv0lJobcUE/s1920-w1920-h1080-c/SutroSunset-WaterfallRock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/060820-0818-ThePhotogs.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-m6gJXedR5K0/Tg1bJIJrdDI/AAAAAAAAAIk/luzGf-NHcC0/s1920-w1920-h1080-c/060820-0818-ThePhotogs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Portofino2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-F33Ezsq01cw/TgkRlUvin5I/AAAAAAAI6wA/g434OYIBJiA/s1920-w1920-h1080-c/Portofino2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/110521-8046-PacificaLt2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QOLm5NyrBAg/Tg1hGjt7CQI/AAAAAAAAc2A/oW-ErAUPpKY/s1920-w1920-h1080-c/110521-8046-PacificaLt2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_DX_3511_2_3_4_5_32bit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-QVbxD_ZZCa0/U_yjxBJn4WI/AAAAAAAB-6k/fAnDqFKCfh4/s1920-w1920-h1080-c/_DX_3511_2_3_4_5_32bit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/C21T0880.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uNim7D5ywdM/UqTGRcbr78I/AAAAAAAAXKY/2Fv7yLI2kZc/s1920-w1920-h1080-c/C21T0880.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Pescadero.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FNrstx8M7hY/TyH51o60WuI/AAAAAAAAGTY/3nRvYRuPjEU/s1920-w1920-h1080-c/Pescadero.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Temple+Over+Kyoto.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-I7qT8fiUqZU/TgkSotvmFkI/AAAAAAAI6h0/ASyt4FPWAso/s1920-w1920-h1080-c/Temple%2BOver%2BKyoto.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4154b.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-7FTPwrBoDBs/Ufb1a1gM-UI/AAAAAAAADK0/NrOPNAfCG7I/s1920-w1920-h1080-c/DSC_4154b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0663-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-JLMulqzQsQQ/UqBrOg83JWI/AAAAAAAAgsY/vzUeMdvC-h0/s1920-w1920-h1080-c/DSC_0663-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/GGB_130628_MCu_1-2.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-IevMmNQigxY/Uc3F-z0I5qI/AAAAAAAAItw/eRKlk6yr6TY/s1920-w1920-h1080-c/GGB_130628_MCu_1-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/090810-1930-NeedleAndHaystack.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-SUKN-r5lw5A/Tg1fNM6yIEI/AAAAAAAAAN8/PULlaJpHBkI/s1920-w1920-h1080-c/090810-1930-NeedleAndHaystack.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/2012.+purple+is+my+favorite+color.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-vtVHPLJKT3w/T9KLSzUhuOI/AAAAAAAABiY/3a5M4phhFs0/s1920-w1920-h1080-c/2012.%2Bpurple%2Bis%2Bmy%2Bfavorite%2Bcolor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SealRocks-sunset-reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-55UeILqE2s0/T0PDELei3HI/AAAAAAABFbU/4_nqVtef2m8/s1920-w1920-h1080-c/SealRocks-sunset-reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/New+York+-+NEX7+-+Trey+Ratcliff+(8+of+21).png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-XxP1oir93Fg/U0MW6gL3miI/AAAAAAAJA0U/hP0D1e9JC-w/s1920-w1920-h1080-c/New%2BYork%2B-%2BNEX7%2B-%2BTrey%2BRatcliff%2B%25288%2Bof%2B21%2529.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Patience.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Gp7BKH79U6k/T_rPHeEUv4I/AAAAAAAAPL8/LSoFOwB9QNU/s1920-w1920-h1080-c/Patience.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP8828.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-RZKOyMbLobw/UONnVGAE9tI/AAAAAAAAyPM/60as7LUVuHI/s1920-w1920-h1080-c/IMGP8828.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/5-01-13-spider-crawler-lightning-road-albany-tx.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oYOr7AcS0F4/UZUYFMNixiI/AAAAAAAAGL0/6fp4ZSWjH90/s1920-w1920-h1080-c/5-01-13-spider-crawler-lightning-road-albany-tx.png\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/The+Blue+City.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-4wJlrgKnUsI/U0MZbQCL-5I/AAAAAAAJOwE/yL0yy2OMWtI/s1920-w1920-h1080-c/The%2BBlue%2BCity.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/06152012-12.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-_OVIBu35BFs/UOD9ybxkzmI/AAAAAAAAkNo/YyQXlMNgeEk/s1920-w1920-h1080-c/06152012-12.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/D30_0895.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-onm54VnIRFQ/SBnwVTP3Y4I/AAAAAAAAvJc/jJxlxmTu5t8/s1920-w1920-h1080-c/D30_0895.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Metal-1.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-TKsDKeRS95U/Tkrw6TiAyPI/AAAAAAAC4HY/bygELaJa5-s/s1920-w1920-h1080-c/Metal-1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0300.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-b_ZyO6A8eec/UNcwXdvdtMI/AAAAAAAAR4k/YcThGSa1EHE/s1920-w1920-h1080-c/DSC_0300.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_6868.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Mc32ZHV--b0/SwIy9sStc0I/AAAAAAABLXg/AB-YvtyK-wk/s1920-w1920-h1080-c/DSC_6868.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/class3_05.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-EUrlRFim4uQ/Uo5D2fBJduI/AAAAAAAABZU/73PLVw3Xxk0/s1920-w1920-h1080-c/class3_05.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MarshalBeach-sunset-rocks-.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-_SFDsIPPKzI/TxhNwgko__I/AAAAAAABFhY/uz_fTrjtNFg/s1920-w1920-h1080-c/MarshalBeach-sunset-rocks-.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_O9V5569_HDR.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-WrzPVL3SMFs/Uq-D3XLVHUI/AAAAAAAAPBY/JQpQw38ggyM/s1920-w1920-h1080-c/_O9V5569_HDR.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/trey-ratcliff-road-to-mountain-forever.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-n8kCRwIAl3I/U0MlTxDHALI/AAAAAAAJEL0/VwbBzYmP0nQ/s1920-w1920-h1080-c/trey-ratcliff-road-to-mountain-forever.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/RodeoBeach-sunset-16x9.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-grccgI_cL8k/TwH0-_dHIvI/AAAAAAABFbM/sqNxtA-Gi30/s1920-w1920-h1080-c/RodeoBeach-sunset-16x9.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Sky+Painting.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-XZGw1LIoIQk/Ua2ANshiwmI/AAAAAAAAfX8/PIcgUJRHb3M/s1280-w1280-c-h720-k-no/Sky%2BPainting\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0816-Edit-Edit-Edit-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-dKrL8_a8MmE/UrWktdbZX_I/AAAAAAAAilY/2Ce0qzN9r3s/s1920-w1920-h1080-c/DSC_0816-Edit-Edit-Edit-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1204.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-NvzWYFZm9b0/UQmFrRIGaDI/AAAAAAAAlew/em5aqVHnV3M/s1920-w1920-h1080-c/IMG_1204.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU8463.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-9SBIVQE_N98/UnDyKXBM-VI/AAAAAAAAGw8/JRqWBIObFek/s1920-w1920-h1080-c/_MSU8463.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_4067.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-oVqvzpNBaE8/UlmYCAD6pNI/AAAAAAAAQPQ/xDn8iGotkyo/s1920-w1920-h1080-c/DSC_4067.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_D3_0763-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-SzwsBTne5SM/U_yjvpyvA6I/AAAAAAAB-6A/q0imuvbf0Yw/s1920-w1920-h1080-c/_D3_0763-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4772+p4.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uXesNMoRpN8/U08k4CCBTsI/AAAAAAAAvr0/7ZtIaGpNfHU/s1920-w1920-h1080-c/IMG_4772%2Bp4.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/SutroSunset-rocks-misty.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-sSh1MI_KB_c/TwXF_f9Tr4I/AAAAAAAAL-g/ivbuKnmkfLI/s1920-w1920-h1080-c/SutroSunset-rocks-misty.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/the+docs.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-djAiXa_L7EU/TgtZGJZPcFI/AAAAAAAJBA0/Ih2FgNUBZYE/s1920-w1920-h1080-c/the%2Bdocs.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/AtAnchor.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-25-BIcSpaLU/UX-tEB0seYI/AAAAAAAAU2Y/SX0W4AL4YQM/s1920-w1920-h1080-c/AtAnchor.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/A+Razor+to+the+Sky.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-WUT3n130gGw/U0MR8lh-SbI/AAAAAAAIpgw/VO52olLVJN8/s1920-w1920-h1080-c/A%2BRazor%2Bto%2Bthe%2BSky.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/4070581709_a1c668a779_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--ETG9eU1_Xw/Tgt5l8cyMwI/AAAAAAAIWTg/nWSbj2O5c6w/s1920-w1920-h1080-c/4070581709_a1c668a779_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6165.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-PAZT1pXjMM8/UrM5S_Ht1cI/AAAAAAAACVE/adGv8TflzYc/s1920-w1920-h1080-c/IMG_6165.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CliffHouseSunset.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-aIBq7YhM6-M/TxMQytFssDI/AAAAAAAANXs/9RurRnKmOOw/s1920-w1920-h1080-c/CliffHouseSunset.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC01034.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/--Km5pB3lBaM/Ua3DdDBGtcI/AAAAAAAAPV4/p_BFy_Ps50w/s2560/DSC01034\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Big-Sur-Coastal-Seascape-2.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-LVkYomDgo1g/TwoREmpuoLI/AAAAAAAAMiE/duaVKfg5Blg/s1920-w1920-h1080-c/Big-Sur-Coastal-Seascape-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/100804-4696-PololuMorn1.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-hXPVBw1iPyc/Tg1gUs9WABI/AAAAAAAAAPU/J-g25o_00Gk/s1920-w1920-h1080-c/100804-4696-PololuMorn1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1600.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GwSLzDzfyGA/UWoqCg-pk2I/AAAAAAAAMh0/JeyhZ3UqFys/s1920-w1920-h1080-c/MOL_1600.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP0652_3_4_tonemapped.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Sm0TD1_vzFo/ULrHwJOPf3I/AAAAAAAAEMY/NGUYdwUEtGY/s1920-w1920-h1080-c/IMGP0652_3_4_tonemapped.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CGPier-storm-mono.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-gE1QbuQR45Q/TqiD0bdOG7I/AAAAAAAAE8w/fawdaKhXGu4/s1920-w1920-h1080-c/CGPier-storm-mono.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Night+Falls+on+Crater+Lake+-+Crater+Lake,+OR1.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8h4vm06cRYo/UZURZQG4KwI/AAAAAAAAPOE/GltqdZojKKE/s1920-w1920-h1080-c/Night%2BFalls%2Bon%2BCrater%2BLake%2B-%2BCrater%2BLake%252C%2BOR1.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0213.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-uaGTbkMBysI/R7qYVHTGv6I/AAAAAAAABiQ/IU0yK7OgvYc/s1920-w1920-h1080-c/IMG_0213.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP1985_stitch.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-14sNcCfmulY/UOj-YBSQ8oI/AAAAAAAALsk/v-C7ZmZ-UIk/s1920-w1920-h1080-c/IMGP1985_stitch.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Reflection.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qd290nJU0FM/UZYXTBbrzeI/AAAAAAAAVhI/gNH2tEzLT80/s1920-w1920-h1080-c/Reflection.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/ibiza+dock.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QyxGZeaBON4/TgtZEYemvZI/AAAAAAAAgVE/_VepyvNFiTE/s1920-w1920-h1080-c/ibiza%2Bdock.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Trippin'-3.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-b4ZiJXUmZLg/TUCPhc_z2pI/AAAAAAAAAgM/uY37UMRjGsw/s1920-w1920-h1080-c/Trippin%2527-3.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_1612.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-2A31P4WBC8s/UtT1BndamcI/AAAAAAAAO1E/Qj5CF7S1UeU/s1920-w1920-h1080-c/DSC_1612.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/YosemiteFalls.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1dANL8dJDT0/T6h0JShpn-I/AAAAAAAAIDk/l_dKhWvFXUs/s1920-w1920-h1080-c/YosemiteFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/07_20090416.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-8kQQYYzz_l8/UZSathUsJGI/AAAAAAAAsUM/3Z4WK9CG8wE/s1920-w1920-h1080-c/07_20090416.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_7222-Edit-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-yYJUfqBHHXw/UoffDIFgJOI/AAAAAAAARpQ/M7Nskp7pTDg/s1920-w1920-h1080-c/DSC_7222-Edit-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_9581.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-gcU_icksx-A/TnuyXEh2MeI/AAAAAAAAFhE/sjZHDkU_Vlg/s1920-w1920-h1080-c/IMG_9581.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20100525-IMG_6788-HDR-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--y_TRuOOPTA/T_0KxukaPeI/AAAAAAAARw0/VTeenM1J2xI/s1920-w1920-h1080-c/20100525-IMG_6788-HDR-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MagicBallContest.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-6nBwDVfR-BE/UXrL2u6iqII/AAAAAAAAUro/CL47d2nXDzE/s1920-w1920-h1080-c/MagicBallContest.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3857-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-eDbulGr2hu8/Ur0CIxLk-FI/AAAAAAAAGA4/R7oAYMeXRws/s1920-w1920-h1080-c/IMG_3857-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMGP9268.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-K258GmbSDxM/T_TBV0i4kLI/AAAAAAAABro/rW_nlHdct7U/s1920-w1920-h1080-c/IMGP9268.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Hooded+Lady+of+the+Valley.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-31H2j9KKMi0/UTpeMK5JrEI/AAAAAAAAPHo/4QOl-12J750/s1920-w1920-h1080-c/Hooded%2BLady%2Bof%2Bthe%2BValley.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MG_4776.CR2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-MxVUPW7j-L0/UCFpW985f5I/AAAAAAAAJI8/HQfELZDoN7I/s1920-w1920-h1080-c/_MG_4776.CR2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untitled-3-2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1cz2zcbiz-4/Th0QVgyAMBI/AAAAAAAABC4/gVc-Bp_mFGs/s1920-w1920-h1080-c/untitled-3-2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/sky_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-1o-jUyycpcE/UIdjwEWDS3I/AAAAAAAAED4/7Mj-xSqdO5E/s1920-w1920-h1080-c/sky_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TunnelViewWinter.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-GGVPhdUiKwY/UOOZDe9JFQI/AAAAAAAAKiY/Noq6gsZlXxk/s1920-w1920-h1080-c/TunnelViewWinter.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/3674678524_f49854f3b1_o.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ZGfUihferj8/TgtZGKAJjOI/AAAAAAAAdd8/e-EXjm51hhA/s1920-w1920-h1080-c/3674678524_f49854f3b1_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/I+Cover+the+Waterfront+-+Alki+Beach,+WA.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-Zj8Aex6oXYo/UW6x5FfAtjI/AAAAAAAANiY/lukbqNiI2go/s1920-w1920-h1080-c/I%2BCover%2Bthe%2BWaterfront%2B-%2BAlki%2BBeach%252C%2BWA.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/morning+with+coffee+in+yellowstone.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-HdhuOcwGEcs/TgtZEZtITGI/AAAAAAAAVmw/nPx5UAR0qic/s1920-w1920-h1080-c/morning%2Bwith%2Bcoffee%2Bin%2Byellowstone.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Bristlecone_Stars.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-xu-TTAEZtQo/UbtDr65unqI/AAAAAAAABKo/-2asqRlMolw/s1920-w1920-h1080-c/Bristlecone_Stars.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/StillStanding.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-Bz1rXnbAy1s/UQNThZKgMRI/AAAAAAAAScM/eUItE7glPn0/s1920-w1920-h1080-c/StillStanding.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Salt_Point.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FDe6_2rxtEs/UkBgjq9ZJmI/AAAAAAAAELo/zT29ZhT2NAA/s1920-w1920-h1080-c/Salt_Point.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/untouched.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-KPCupfttZeg/UYEMyuiN84I/AAAAAAAAU5k/74L4iR6gMDk/s1920-w1920-h1080-c/untouched.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/TacomaChiluly--10.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/--LqjPK05as8/TsSfH1cu69I/AAAAAAAATUE/JyMyDxcW1Ms/s1920-w1920-h1080-c/TacomaChiluly--10.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_5165-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-5ntl45J8Lxg/UiHZG2mJ1nI/AAAAAAAAb8s/f10TxWDh2zA/s1920-w1920-h1080-c/DSC_5165-Edit-Edit.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Group+TWO.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HbF8zRNZt-o/UMPHYkBuCMI/AAAAAAAAKUQ/GYFSC7-LVqs/s1920-w1920-h1080-c/Group%2BTWO.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/CrackedIsSometimesGood.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-5lm5qxI06OU/TqkYjHdt_lI/AAAAAAAAKOc/Eqb40U2Jsiw/s1920-w1920-h1080-c/CrackedIsSometimesGood.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0472.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ot6zDqm0p1s/UM-oZwFOYBI/AAAAAAAAImc/_9QNnbQXa5Y/s1920-w1920-h1080-c/IMG_0472.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_2167.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-HW1I0DVsq6A/UlmXtm9TvGI/AAAAAAAAQOM/MBQeGBzVB2M/s1920-w1920-h1080-c/MOL_2167.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/T3_IMG_3936.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-r3jKfQruwv4/Uc6B8fRsKmI/AAAAAAAAIAg/VCLgE4EqjtY/s1920-w1920-h1080-c/T3_IMG_3936.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/8941Autumn.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-TFEx1ptMuoc/UpN7a9C-YlI/AAAAAAAAKUI/A3KeBF2vSnE/s1920-w1920-h1080-c/8941Autumn.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6682.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-l9peRQpmVRQ/T54s3ZTfGBI/AAAAAAAAJQk/-_8lDImWzwE/s1920-w1920-h1080-c/IMG_6682.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5908.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nFgpOv4T3M0/TWLTD6xOiJI/AAAAAAAAPFs/PSfnLjBIrVU/s1920-w1920-h1080-c/IMG_5908.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0935.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-acdH1dPsUdk/ToQNXK7HgDI/AAAAAAAATyM/95rFxKIy_Dw/s1920-w1920-h1080-c/IMG_0935.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/11-17-12-India+Trip-Kanheri+Caves+(JPEGs)-20.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-ko4QbKawOzs/UMrlGpBHGtI/AAAAAAAAMbA/TVYDrsxchf4/s1920-w1920-h1080-c/11-17-12-India%2BTrip-Kanheri%2BCaves%2B%2528JPEGs%2529-20.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/_MSU3203.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E5h_DjLkO9g/UJGAP4Q_1jI/AAAAAAAABI0/xb_a1wwuddA/s1920-w1920-h1080-c/_MSU3203.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5328.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-3vJ7YydpvVU/T3Fad0DfOvI/AAAAAAAAIIg/rJ5piFMcgKg/s1920-w1920-h1080-c/IMG_5328.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_5974.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-qwOaqE4cYCg/Ur0CAf2nO5I/AAAAAAAAF-I/b2vYQp-TxW4/s1920-w1920-h1080-c/IMG_5974.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1755.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-nVpMVoplcjA/UlmXtr57GiI/AAAAAAAAQOo/YPNo51GXyLU/s1920-w1920-h1080-c/MOL_1755.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2828.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-RM253k65h0g/RuWXqF2PN3I/AAAAAAAAASw/bWQAJ47AvxQ/s1920-w1920-h1080-c/IMG_2828.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_T3_0788.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-JhsS5Efemfw/UAUNCf1J1aI/AAAAAAAACno/1178JtnVPVQ/s1920-w1920-h1080-c/IMG_T3_0788.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0471-Edit-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-IOB7UYjdfKk/UWxRNQruJpI/AAAAAAAAqYo/ZYOTEFEaUUQ/s1920-w1920-h1080-c/DSC_0471-Edit-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8176.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-97kOELXyRw0/UpKzpdSGLsI/AAAAAAAACU8/t7toymdF9ys/s1920-w1920-h1080-c/IMG_8176.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSCF0155-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-v5W9oXSutcs/UjX_nq7Q1DI/AAAAAAAAPVE/A201XC4J5qs/s1920-w1920-h1080-c/DSCF0155-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1017.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-OvptEVwUDuA/UE_P875OPoI/AAAAAAAAPWM/ocqkejUt5AQ/s1920-w1920-h1080-c/IMG_1017.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4701.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-SCc_19Vl5Ng/SuoniirQlZI/AAAAAAAAGOo/UsRZ0o6GJeI/s1920-w1920-h1080-c/IMG_4701.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6000.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-GMJoozxAcgE/Tk7h8aldhrI/AAAAAAAAFZ8/SnFiv5CZcYE/s1920-w1920-h1080-c/IMG_6000.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/austin+2.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-G4bChH6K3mY/ULdpTli69GI/AAAAAAAAJIg/cfku63jtnY4/s1920-w1920-h1080-c/austin%2B2.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_2526-3b.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-11t9DgvNYhY/UG3HjpR9T9I/AAAAAAAAIO4/FSkNbPYzUMA/s1920-w1920-h1080-c/IMG_2526-3b.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6451.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-YtE41zDzZZM/UBCa4Ui2cuI/AAAAAAAAOMg/Uzs03aPfWak/s1920-w1920-h1080-c/IMG_6451.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_4369+-+Large.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-mPicgJz8Yes/USOzc3Ki2TI/AAAAAAAADVA/QzQqtctMISI/s1920-w1920-h1080-c/IMG_4369%2B-%2BLarge.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0109.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-1n2blvh-lkQ/TX_WqEAkKAI/AAAAAAAAAI4/xlaLPLcp6nI/s1920-w1920-h1080-c/DSC_0109.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-HBDE39Hgv9M/TyXGMvNUzjI/AAAAAAAAA_A/nBMmnHMcT0o/s1920-w1920-h1080-c/20120128-20120128-ENS_3119_20_21_tonemapped-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_6499.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iTxENBfrZfY/T5ZLrTvoeCI/AAAAAAAAJD8/ik0c31ZcTOw/s1920-w1920-h1080-c/IMG_6499.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MorningGlory.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-8K8X3n7zPKE/UOOZGSlNvjI/AAAAAAAAKig/yTCbEVh-lCw/s1920-w1920-h1080-c/MorningGlory.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_1984.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-MXAy1Q1e8pw/TtPRnPCM4AI/AAAAAAAAQc0/Vvc74HYL35s/s1920-w1920-h1080-c/IMG_1984.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1841.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-LQXZpNUUdw8/UWoqJONj7-I/AAAAAAAAMh0/7m100XOFcEo/s1920-w1920-h1080-c/MOL_1841.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/9082667654_c7919ec6ed_o.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-iVr5r1Yycbs/UkPSMp_2CZI/AAAAAAAALrA/ME5aBtr5fdM/s1920-w1920-h1080-c/9082667654_c7919ec6ed_o.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/Wyoming-5.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jwJEWGscrls/T-dsvGIbyRI/AAAAAAAABp4/Pgn_t5V2LNs/s1920-w1920-h1080-c/Wyoming-5.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_8981.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-FeRCoqwVOB4/Tkgq-geJE3I/AAAAAAAAFYo/xdj-91ytvg8/s1920-w1920-h1080-c/IMG_8981.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/04_20080526.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ENSOsH-5iPQ/UZSar_1xTLI/AAAAAAAAsTo/CjPKgR3jXAs/s1920-w1920-h1080-c/04_20080526.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0432.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-jmMSVP61kaQ/TqtX5OPLfZI/AAAAAAAAFkk/8dE_CxpTiHM/s1920-w1920-h1080-c/IMG_0432.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/tah+prohm+ruins.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-N-jkCCpnvmM/Tg0t85f5-dI/AAAAAAAABj8/otdYcgGq4ZU/s1920-w1920-h1080-c/tah%2Bprohm%2Bruins.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0642.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Lk6txIIotmM/ToZuJ99slYI/AAAAAAAAQIg/y0jvaiYTIHA/s1920-w1920-h1080-c/IMG_0642.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MC2_8779.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-QpB1YMuAXEA/TikI95S2KmI/AAAAAAAAPSw/kJPeHft92m4/s1920-w1920-h1080-c/MC2_8779.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0366.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-E57LJIzkkd8/UM-oHjiKHJI/AAAAAAAAIjY/QKAP7QTXBNY/s1920-w1920-h1080-c/IMG_0366.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MOL_1818.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/--qL9ddvO4gs/UWoqHffdewI/AAAAAAAAMh0/uf5mp_xqsHI/s1920-w1920-h1080-c/MOL_1818.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_3027.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-Xdz2ceNVzdw/Tm5L7A9tdYI/AAAAAAAAFsg/k4Tjwbi73Cw/s1920-w1920-h1080-c/IMG_3027.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_0242.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ejLi6Bg7IUI/TonR_AZLYLI/AAAAAAAAQWk/A1bVgL3p2A4/s1920-w1920-h1080-c/IMG_0242.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_0423-Edit.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-iNpCGNJTrRo/Ugbk1ZMLczI/AAAAAAAAOE0/FZWVWqXGdT8/s1920-w1920-h1080-c/DSC_0423-Edit.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/WahclelaFalls.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-q9gWC1ZIAvg/UbZrg9lIcAI/AAAAAAAAL4I/xzSlyLfAGrQ/s1920-w1920-h1080-c/WahclelaFalls.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_9166.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-CaqC7SHp_2w/SF8sHokHjwI/AAAAAAAACyw/gC4j26zZen8/s1920-w1920-h1080-c/DSC_9166.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/IMG_7449.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-Bo0_R3Hshio/UOUefGb4bpI/AAAAAAAARno/EBZGWRhWwzk/s1920-w1920-h1080-c/IMG_7449.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/path_of_leaves.png\"],\"fullscreen-image\":[\"https://lh3.googleusercontent.com/-y9mHkm6F9NI/UJH6oUvIN3I/AAAAAAAADqU/ueLAmjtceMI/s1920-w1920-h1080-c/path_of_leaves.jpg\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/700_1905.png\"],\"fullscreen-image\":[\"https://lh4.googleusercontent.com/-nEEPZA887gc/SRGbDPl6jgI/AAAAAAAADOc/LH5WYu-Vc1k/s1920-w1920-h1080-c/700_1905.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/DSC_2079-1.png\"],\"fullscreen-image\":[\"https://lh5.googleusercontent.com/-ps4uT_pEdCE/RpKjlC16MuI/AAAAAAAAAt0/n09gNExGMl0/s1920-w1920-h1080-c/DSC_2079-1.JPG\"]},{\"thumbnail\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/images/thumbnails/MWF_6457-2.png\"],\"fullscreen-image\":[\"https://lh6.googleusercontent.com/-M6BRAUZHPyo/UfbbKobVOKI/AAAAAAAAK_M/4WIHtFv7Idk/s1920-w1920-h1080-c/MWF_6457-2.jpg\"]}]}}","module.exports = {\"background-patterns\":{\"image\":[\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern1.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern2.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern3.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern4.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern5.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern6.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern7.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-1667135_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2069198_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2425614_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2790359_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-2863542_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-3288642_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/abstract-geometric-pattern-background_1319-242.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/animals-16908_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/autumn-1801896_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/backdrop-3346304_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141891_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/background-1141892_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/basket-2023197_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo45.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo55.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begflo63.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan20.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/begtkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo102.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo106.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo135.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo75.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo76.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/belflo80.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan21.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan30.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan50.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/beltkan56.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-1545368_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/blue-3368023_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/braiding-2697075_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-2191647_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3324067_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cactus-3334141_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-145980_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/camouflage-33708_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor125.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor126.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor129.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor131.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor139.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor15.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/chbeluzor44.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/christmas-1091551_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circle-2696910_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005197_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/circles-1005321_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cube-402231_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/cute-3047767_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decor-763806_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/decorative-1781458_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/design-3289984_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/diamonds-1524471_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/dreamcatcher-3334128_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1299131_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-1788412_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-4655084_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/floral-pattern-1603073_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/foil14.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/galk09.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor81.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geluzor84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/geometric-patterns-1978688_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/goltum10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/gothic-756211_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-753533_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/green-763804_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart05.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart33.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart34.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart39.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart51.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/heart53.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/hexagon-1312786_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-1bjZ4CEqGLSGiWI.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-3PniNaR4EM.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-6oQV3ly2I1vFY5Je.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-9fPsO9xLXxzONha.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-AJ5CKq0awy4d9EF.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Elrl20LiRFHXr.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-Fu9UMDonFXB4mIqU.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-HxkaMXBjzP.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-UwawezoPZ9I.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VFpI9G4V62V.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-VcTxveu7iXkz.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ka9dtT7zZFsY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-nJw0PAz0l03dSZY.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-ybmMVJ4cYA.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/imgonline-com-ua-Transparent-backgr-z9Xwv2KKSbgW2b.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga16.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga17.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga25.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/koga37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan03.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/kortkan07.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow110.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow24.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/lilflow84.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/magnolia-732331_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/meha23.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mesh-2697072_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic18.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic28.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic82.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic87.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/metallic88.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/mosaic-2790339_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music57.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/music58.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-1008150_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-3289978_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-403769_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-5415668_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/pattern-728509_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-755266_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/purple-756209_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rail-2721626_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast11.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast22.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast38.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast43.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast46.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast59.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast60.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast68.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast69.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast79.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rast83.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5095521_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/roses-5100472_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor12.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor26.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor27.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor35.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/rozuzor67.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sand89.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1320742_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1781493_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-1837442_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-3289975_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085294_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1085297_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086306_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086309_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1086311_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089796_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1089797_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-1822610_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-5095737_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seamless-pattern-757848_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv01.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sersv32.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor06.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/seruzor47.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz101.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/sinkrasuz37.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star-2721633_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star02.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star41.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star48.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/star49.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/stars-1005267_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tile-1892631_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970709_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/tree-5970776_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/triangle-753534_640.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/vector-1603109_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/violet10.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2697053_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/wave-2721632_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-2484120_960_720.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148806274.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810246.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/white-abstract-background_23-2148810353.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot31.png\",\"https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/patterns/zolot47.png\"]}}","var map = {\n\t\"./attention/attention.mp3\": 17533\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10253;","var map = {\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 65705\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 81089;","var map = {\n\t\"./beep_positive/beep_positive.mp3\": 66391,\n\t\"./beep_up/beep_up.mp3\": 51922,\n\t\"./bleep/bleep.mp3\": 83113,\n\t\"./cellular_click/cellular_click.mp3\": 70180,\n\t\"./computer_chime/computer_chime.mp3\": 14528,\n\t\"./ether/ether.mp3\": 86123,\n\t\"./good_chime/good_chime.mp3\": 11691,\n\t\"./mono_u/mono_u.mp3\": 63414,\n\t\"./pixel_beep/pixel_beep.mp3\": 66488,\n\t\"./plop/plop.mp3\": 88711,\n\t\"./pop/pop.mp3\": 730,\n\t\"./retro_game/retro_game.mp3\": 76496,\n\t\"./tiny_noize/tiny_noize.mp3\": 28288\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60255;","var map = {\n\t\"./future-synth/future-synth.mp3\": 66849,\n\t\"./marching-band-dave-girtsman/marching-band-dave-girtsman.mp3\": 36445,\n\t\"./retro-chiptune/retro-chiptune.mp3\": 15737\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 90683;","var map = {\n\t\"./_auth_request/_auth_request.mp3\": 48710,\n\t\"./_call_connecting/_call_connecting.mp3\": 2301,\n\t\"./_phone_busy/_phone_busy.mp3\": 33246\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60623;","var constants = {\n\n    ASSETS_URL_PREFIX: './',\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_DEFAULT_GREY: \"assets/images/favicon-grey.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n    DOWNTIME_RECONNECTION_TIMEOUT: 15,\n    PING_SENDING_INTERVAL: 10,\n\n    IDLING_MINIMAL_TIMEOUT: 10,\n    IDLING_MAXIMUM_TIMEOUT: 90,\n    IDLING_DEFAULT_TIMEOUT: 30,\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 900000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            urls: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, ',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, GkXfowEAAAAAAAAfQoaBAUL3gQFC8oEEQvOBCEKChHdlYm1Ch4EEQoWBAhhTgGcBAAAAAAAVkhFNm3RALE27i1OrhBVJqWZTrIHfTbuMU6uEFlSua1OsggEwTbuMU6uEHFO7a1OsghV17AEAAAAAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmAQAAAAAAAEUq17GDD0JATYCNTGF2ZjU1LjMzLjEwMFdBjUxhdmY1NS4zMy4xMDBzpJBlrrXf3DCDVB8KcgbMpcr+RImIQJBgAAAAAAAWVK5rAQAAAAAAD++uAQAAAAAAADLXgQFzxYEBnIEAIrWcg3VuZIaFVl9WUDiDgQEj44OEAmJaAOABAAAAAAAABrCBsLqBkK4BAAAAAAAPq9eBAnPFgQKcgQAitZyDdW5khohBX1ZPUkJJU4OBAuEBAAAAAAAAEZ+BArWIQOdwAAAAAABiZIEgY6JPbwIeVgF2b3JiaXMAAAAAAoC7AAAAAAAAgLUBAAAAAAC4AQN2b3JiaXMtAAAAWGlwaC5PcmcgbGliVm9yYmlzIEkgMjAxMDExMDEgKFNjaGF1ZmVudWdnZXQpAQAAABUAAABlbmNvZGVyPUxhdmM1NS41Mi4xMDIBBXZvcmJpcyVCQ1YBAEAAACRzGCpGpXMWhBAaQlAZ4xxCzmvsGUJMEYIcMkxbyyVzkCGkoEKIWyiB0JBVAABAAACHQXgUhIpBCCGEJT1YkoMnPQghhIg5eBSEaUEIIYQQQgghhBBCCCGERTlokoMnQQgdhOMwOAyD5Tj4HIRFOVgQgydB6CCED0K4moOsOQghhCQ1SFCDBjnoHITCLCiKgsQwuBaEBDUojILkMMjUgwtCiJqDSTX4GoRnQXgWhGlBCCGEJEFIkIMGQcgYhEZBWJKDBjm4FITLQagahCo5CB+EIDRkFQCQAACgoiiKoigKEBqyCgDIAAAQQFEUx3EcyZEcybEcCwgNWQUAAAEACAAAoEiKpEiO5EiSJFmSJVmSJVmS5omqLMuyLMuyLMsyEBqyCgBIAABQUQxFcRQHCA1ZBQBkAAAIoDiKpViKpWiK54iOCISGrAIAgAAABAAAEDRDUzxHlETPVFXXtm3btm3btm3btm3btm1blmUZCA1ZBQBAAAAQ0mlmqQaIMAMZBkJDVgEACAAAgBGKMMSA0JBVAABAAACAGEoOogmtOd+c46BZDppKsTkdnEi1eZKbirk555xzzsnmnDHOOeecopxZDJoJrTnnnMSgWQqaCa0555wnsXnQmiqtOeeccc7pYJwRxjnnnCateZCajbU555wFrWmOmkuxOeecSLl5UptLtTnnnHPOOeecc84555zqxekcnBPOOeecqL25lpvQxTnnnE/G6d6cEM4555xzzjnnnHPOOeecIDRkFQAABABAEIaNYdwpCNLnaCBGEWIaMulB9+gwCRqDnELq0ehopJQ6CCWVcVJKJwgNWQUAAAIAQAghhRRSSCGFFFJIIYUUYoghhhhyyimnoIJKKqmooowyyyyzzDLLLLPMOuyssw47DDHEEEMrrcRSU2011lhr7jnnmoO0VlprrbVSSimllFIKQkNWAQAgAAAEQgYZZJBRSCGFFGKIKaeccgoqqIDQkFUAACAAgAAAAABP8hzRER3RER3RER3RER3R8RzPESVREiVREi3TMjXTU0VVdWXXlnVZt31b2IVd933d933d+HVhWJZlWZZlWZZlWZZlWZZlWZYgNGQVAAACAAAghBBCSCGFFFJIKcYYc8w56CSUEAgNWQUAAAIACAAAAHAUR3EcyZEcSbIkS9IkzdIsT/M0TxM9URRF0zRV0RVdUTdtUTZl0zVdUzZdVVZtV5ZtW7Z125dl2/d93/d93/d93/d93/d9XQdCQ1YBABIAADqSIymSIimS4ziOJElAaMgqAEAGAEAAAIriKI7jOJIkSZIlaZJneZaomZrpmZ4qqkBoyCoAABAAQAAAAAAAAIqmeIqpeIqoeI7oiJJomZaoqZoryqbsuq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq7ruq4LhIasAgAkAAB0JEdyJEdSJEVSJEdygNCQVQCADACAAAAcwzEkRXIsy9I0T/M0TxM90RM901NFV3SB0JBVAAAgAIAAAAAAAAAMybAUy9EcTRIl1VItVVMt1VJF1VNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVN0zRNEwgNWQkAkAEAkBBTLS3GmgmLJGLSaqugYwxS7KWxSCpntbfKMYUYtV4ah5RREHupJGOKQcwtpNApJq3WVEKFFKSYYyoVUg5SIDRkhQAQmgHgcBxAsixAsiwAAAAAAAAAkDQN0DwPsDQPAAAAAAAAACRNAyxPAzTPAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA0jRA8zxA8zwAAAAAAAAA0DwP8DwR8EQRAAAAAAAAACzPAzTRAzxRBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA0jRA8zxA8zwAAAAAAAAAsDwP8EQR0DwRAAAAAAAAACzPAzxRBDzRAwgIRQasiIAiBMAcEgSJAmSBM0DSJYFTYOmwTQBkmVB06BpME0AAAAAAAAAAAAAJE2DpkHTIIoASdOgadA0iCIAAAAAAAAAAAAAkqZB06BpEEWApGnQNGgaRBEAAAAAAAAAAAAAzzQhihBFmCbAM02IIkQRpgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAGHAAAAgwoQwUGrIiAIgTAHA4imUBAIDjOJYFAACO41gWAABYliWKAABgWZooAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAYcAAACDChDBQashIAiAIAcCiKZQHHsSzgOJYFJMmyAJYF0DyApgFEEQAIAAAocAAACLBBU2JxgEJDVgIAUQAABsWxLE0TRZKkaZoniiRJ0zxPFGma53meacLzPM80IYqiaJoQRVE0TZimaaoqME1VFQAAUOAAABBgg6bE4gCFhqwEAEICAByKYlma5nmeJ4qmqZokSdM8TxRF0TRNU1VJkqZ5niiKommapqqyLE3zPFEURdNUVVWFpnmeKIqiaaqq6sLzPE8URdE0VdV14XmeJ4qiaJqq6roQRVE0TdNUTVV1XSCKpmmaqqqqrgtETxRNU1Vd13WB54miaaqqq7ouEE3TVFVVdV1ZBpimaaqq68oyQFVV1XVdV5YBqqqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    USE_SOCIAL_AUTH: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    BACKGROUND_IMAGES_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-images.xml',\n    BACKGROUND_PATTERNS_XML_URL: 'https://raw.githubusercontent.com/redsolution/xabber-backgrounds/master/background-patterns.xml',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE',\n    DEFAULT_EMOJI_FONT: 'notoColor',\n\n    EMOJI_FONTS_LIST: {\n        notoColor: {\n            name: 'NotoColorEmoji',\n            value: 'notoColor',\n            url: '../assets/fonts/notocolor/NotoColorEmoji-Regular.ttf',\n            hint: 'Placeholder hint',\n            attribution_text: 'Copyright 2021 Google Inc. All Rights Reserved.',\n            order: 0\n\n        },\n        system: {\n            name: 'system',\n            value: 'system',\n            is_system: 'true',\n            order: 1\n        }\n    },\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport Recorder from 'opus-recorder';\nimport encoderPath from 'opus-recorder/dist/encoderWorker.min.js';\nimport VanillaQR from \"VanillaQR\";\nimport idleJs from \"idle-js\";\nimport backgroundImagesXml from \"xml-loader!~/xmls/background-images.xml\";\nimport backgroundPatternsXml from \"xml-loader!~/xmls/background-patterns.xml\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    idleJs: idleJs,\n    opusRecorder: Recorder,\n    opusRecorderEncoderPath: encoderPath,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    VanillaQR: VanillaQR,\n    magnificPopup: magnificPopup,\n    backgroundImagesXml: backgroundImagesXml,\n    backgroundPatternsXml: backgroundPatternsXml,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = require('~/templates/'+path.join('/')+'.json'),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = tpl;\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprints_devices');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.fingerprint_devices_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.settings_modal');\n    addTemplate('base.setting_radio_input');\n    addTemplate('base.setting_emoji_font_radio_input');\n    addTemplate('base.setting_language_radio_input');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.unregister_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.change_account_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.delete_files_media_gallery');\n    addTemplate('accounts.single_account_settings_modal');\n    addTemplate('accounts.account_settings_modal');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item_modal');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item_modal');\n    addTemplate('accounts.current_token_item_modal');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n    addTemplate('accounts.status_message_input_widget');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_modal');\n    addTemplate('vcard.vcard_edit_modal');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_placeholder');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.unread_marker');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.web');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.job');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.contact-add');\n    addSvgTemplate('svg.check');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.device-cellphone');\n    addSvgTemplate('svg.device-console');\n    addSvgTemplate('svg.device-desktop');\n    addSvgTemplate('svg.device-tablet');\n    addSvgTemplate('svg.device-web');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.client');\n    addSvgTemplate('svg.client-outline');\n    addSvgTemplate('svg.database-lock');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.bug');\n    addSvgTemplate('svg.cloud');\n    addSvgTemplate('svg.key');\n    addSvgTemplate('svg.key-variant');\n    addSvgTemplate('svg.account');\n    addSvgTemplate('svg.alert-circle');\n    addSvgTemplate('svg.security');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.check-circle');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.information');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.account-cancel');\n    addSvgTemplate('svg.web-cancel');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.chat');\n    addSvgTemplate('svg.star-face');\n    addSvgTemplate('svg.alarm-bell');\n    addSvgTemplate('svg.id');\n    addSvgTemplate('svg.expires');\n    addSvgTemplate('svg.database');\n    addSvgTemplate('svg.download');\n    addSvgTemplate('svg.lock');\n    addSvgTemplate('svg.lock-open');\n    addSvgTemplate('svg.lock-alert');\n    addSvgTemplate('svg.lock-check');\n    addSvgTemplate('svg.lock-cross');\n    addSvgTemplate('svg.lock-question');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.circles-outline');\n    addSvgTemplate('svg.circle-slice-1');\n    addSvgTemplate('svg.circle-slice-2');\n    addSvgTemplate('svg.circle-slice-3');\n    addSvgTemplate('svg.circle-slice-4');\n    addSvgTemplate('svg.circle-slice-5');\n    addSvgTemplate('svg.circle-slice-6');\n    addSvgTemplate('svg.circle-slice-7');\n    addSvgTemplate('svg.circle-slice-8');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.trash');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","\n    let sounds = {};\n\n    let attention_json = require('~/sounds/attention/attention.json'),\n        attention = [];\n\n\n    Object.keys(attention_json).forEach(item => {\n        let audio = require(`~/sounds/attention/${item}/${item}.mp3`),\n            attention_sound = {\n                file_name: item,\n                name: attention_json[item].name,\n                audio: audio,\n                not_selectable: attention_json[item].not_selectable,\n        };\n        attention.push(attention_sound);\n    });\n\n    let ringtones_json = require('~/sounds/ringtones/ringtones.json'),\n        ringtones = [];\n\n\n    Object.keys(ringtones_json).forEach(item => {\n        let audio = require(`~/sounds/ringtones/${item}/${item}.mp3`),\n            ringtone = {\n                file_name: item,\n                name: ringtones_json[item].name,\n                audio: audio,\n                not_selectable: ringtones_json[item].not_selectable,\n        };\n        ringtones.push(ringtone);\n    });\n\n    let dialtones_json = require('~/sounds/dialtones/dialtones.json'),\n        dialtones = [];\n\n\n    Object.keys(dialtones_json).forEach(item => {\n        let audio = require(`~/sounds/dialtones/${item}/${item}.mp3`),\n            dialtone = {\n                file_name: item,\n                name: dialtones_json[item].name,\n                audio: audio,\n                not_selectable: dialtones_json[item].not_selectable,\n        };\n        dialtones.push(dialtone);\n    });\n\n    let notifications_json = require('~/sounds/notifications/notifications.json'),\n        notifications = [];\n\n\n    Object.keys(notifications_json).forEach(item => {\n        let audio = require(`~/sounds/notifications/${item}/${item}.mp3`),\n            notification = {\n                file_name: item,\n                name: notifications_json[item].name,\n                audio: audio,\n                not_selectable: notifications_json[item].not_selectable,\n        };\n        notifications.push(notification);\n    });\n\n    let system_json = require('~/sounds/system/system.json'),\n        system_sound_list = [];\n\n\n    Object.keys(system_json).forEach(item => {\n        let audio = require(`~/sounds/system/${item}/${item}.mp3`),\n            system_item = {\n                file_name: item,\n                name: system_json[item].name,\n                audio: audio,\n                not_selectable: system_json[item].not_selectable,\n        };\n        system_sound_list.push(system_item);\n    });\n\n    sounds.attention = attention;\n    sounds.ringtones = ringtones;\n    sounds.dialtones = dialtones;\n    sounds.notifications = notifications;\n    sounds.system = system_sound_list;\n    sounds.all_sounds = attention.concat(ringtones).concat(dialtones).concat(notifications).concat(system_sound_list);\n\n    export default sounds;","import _ from \"underscore\";\nimport $ from \"jquery\";\nimport constants from \"xabber-constants\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    let emoji_size = options.emoji_size || 20,\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        return `<span ${title} class=\"emoji emoji-w${emoji_size}\" data-emoji=\"${emoji}\"><span class=\"positioned-emoji\">${emoji}</span></span>`;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        if ($(`<div>${text}</div>`).find('.positioned-emoji').length)\n            return;\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = font ? '#000' : \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.33) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (max_size){\n        if (size.width > size.height) {\n            if (size.width > max_size) {\n                size.height *= max_size / size.width;\n                size.width = max_size;\n            }\n        } else {\n            if (size.height > max_size) {\n                size.width *= max_size / size.height;\n                size.height = max_size;\n            }\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml' || file.type.includes('image/gif') || (width < MAX_IMG_SIZE && height < MAX_IMG_SIZE)) {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                dialog_options || (dialog_options = []);\n                let options = dialog_options || [];\n                buttons || (buttons = {});\n                if (typeof(dialog_options) === \"object\" && !Array.isArray(dialog_options)){\n                    options = [];\n                }\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.no_dialog_options) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n            }\n\n            if (dialog_options.quoted_text) {\n                dialog.$modal.find('.modal-content').append(`<div class=\"dialog-quoted-text\">${dialog_options.quoted_text}</div>`);\n            }\n            if (dialog_options.cancel_button_main) {\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n            }\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options, header) {\n            return this.common(header || getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, cancel_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\n$.fn.isVisibleInViewport = function() {\n    let elementTop = $(this).offset().top,\n        elementBottom = elementTop + $(this).outerHeight();\n\n    let viewportTop = $(window).scrollTop(),\n        viewportBottom = viewportTop + $(window).height();\n\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n};\n\n$.fn.isVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        (eleTop >= containerTop && eleBottom <= containerBottom) ||\n        // Some part of the element is visible in the container\n        (eleTop < containerTop && containerTop < eleBottom) ||\n        (eleTop < containerBottom && containerBottom < eleBottom)\n    );\n};\n\n$.fn.isFullyVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleTop >= containerTop && eleBottom <= containerBottom\n    );\n};\n\n$.fn.isBottomVisibleInContainer = function(container) {\n    if (!this.length || !container.length)\n        return;\n    container = container[0];\n    let eleTop = this[0].offsetTop,\n        eleBottom = eleTop + this[0].clientHeight;\n\n    let containerTop = container.scrollTop,\n        containerBottom = containerTop + container.clientHeight;\n\n    return (\n        eleBottom <= containerBottom\n    );\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {}\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                        if (options.decode_uri)\n                            x = x.replace(list[i], decodeURI(list[i]));\n                        else\n                            x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1 && !(type.indexOf('application') > -1))\n            return true;\n        else\n            return false;\n    },\n\n    tryReadingFile: function(file) {\n        return new Promise((resolve, reject) => {\n            let r = new FileReader();\n            r.onload = (e) => {\n                resolve();\n            };\n            r.onerror = (e) => {\n                console.log(r.error);\n                reject(r.error);\n            };\n            r.readAsDataURL(file)\n        });\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size && size != 0)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport sounds from \"xabber-sounds\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    sounds: sounds,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils,\n    bc = new BroadcastChannel(\"xabber-web\");\n\nbc.onmessage = (event) => {\n    if (event.data === `1` && !bc.disabled_client) {\n        bc.postMessage(`2`);\n    }\n    if (event.data === `2`) {\n        bc.disabled_client = true\n    }\n};\n\nbc.postMessage(`1`);\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        client_name: 'Xabber for Web'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this.check_config = new $.Deferred();\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.extendFunction();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n\n        window.ononline = () => {\n            this.disconnectWhenConnecting();\n        };\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_gray', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT_GREY).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description client-text-color-500\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            idling: true,\n            idling_time: 'default',\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            jingle_calls: true,\n            notifications_volume_enabled: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            emoji_font: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            sound_on_call: 'marching-band-dave-girtsman',\n            sound_on_dialtone: 'marching-band-dave-girtsman',\n            sound_on_connection: '_call_connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: '_auth_request',\n            sound_on_call_busy: '_phone_busy',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.cacheFavicons();\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'ASSETS_URL_PREFIX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'USE_SOCIAL_AUTH',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n            if (this._settings.get(\"idling_time\") === 'default' && config.IDLING_DEFAULT_TIMEOUT != null)\n                this._settings.set(\"idling_time\", config.IDLING_DEFAULT_TIMEOUT);\n            else if (this._settings.get(\"idling_time\") === 'default')\n                this._settings.set(\"idling_time\", constants.IDLING_DEFAULT_TIMEOUT);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.ASSETS_URL_PREFIX) {\n                constants.ASSETS_URL_PREFIX = config.ASSETS_URL_PREFIX;\n            }\n            if (config.BACKGROUND_IMAGES_XML_URL)\n                constants.BACKGROUND_IMAGES_XML_URL = config.BACKGROUND_IMAGES_XML_URL;\n            if (config.BACKGROUND_PATTERNS_XML_URL)\n                constants.BACKGROUND_PATTERNS_XML_URL = config.BACKGROUND_PATTERNS_XML_URL;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.DOWNTIME_RECONNECTION_TIMEOUT)\n                constants.DOWNTIME_RECONNECTION_TIMEOUT = config.DOWNTIME_RECONNECTION_TIMEOUT;\n            if (config.IDLING_MINIMAL_TIMEOUT)\n                constants.IDLING_MINIMAL_TIMEOUT = config.IDLING_MINIMAL_TIMEOUT;\n            if (config.IDLING_MAXIMUM_TIMEOUT)\n                constants.IDLING_MAXIMUM_TIMEOUT = config.IDLING_MAXIMUM_TIMEOUT;\n            if (config.PING_SENDING_INTERVAL)\n                constants.PING_SENDING_INTERVAL = config.PING_SENDING_INTERVAL;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n            if (config.DEFAULT_EMOJI_FONT)\n                constants.DEFAULT_EMOJI_FONT = config.DEFAULT_EMOJI_FONT;\n            if (config.EMOJI_FONTS_LIST && _.isObject(config.EMOJI_FONTS_LIST) && Object.keys(config.EMOJI_FONTS_LIST).length)\n                constants.EMOJI_FONTS_LIST = config.EMOJI_FONTS_LIST;\n            (this._settings.get(\"emoji_font\") == 'default') && this._settings.set(\"emoji_font\", constants.DEFAULT_EMOJI_FONT);\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            constants.FAVICON_DEFAULT = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT;\n            constants.FAVICON_DEFAULT_GREY = constants.ASSETS_URL_PREFIX + constants.FAVICON_DEFAULT_GREY;\n            constants.FAVICON_MESSAGE = constants.ASSETS_URL_PREFIX + constants.FAVICON_MESSAGE;\n            constants.BACKGROUND_IMAGE = constants.ASSETS_URL_PREFIX + constants.BACKGROUND_IMAGE;\n\n\n            constants.CLIENT_LOGO = constants.ASSETS_URL_PREFIX + constants.CLIENT_LOGO;\n            constants.TOOLBAR_LOGO = constants.ASSETS_URL_PREFIX + constants.TOOLBAR_LOGO;\n\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            if (bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                let emoji_dfd = new $.Deferred();\n                emoji_dfd.done(() => {\n                    self._cache.save('notifications', granted);\n                    self._cache.save('endpoint_key', undefined);\n                    self.check_config.resolve(true);\n                })\n                if (self._settings.get(\"emoji_font\") === 'system' || !Object.keys(constants.EMOJI_FONTS_LIST).length)\n                    emoji_dfd.resolve();\n                else {\n                    let emoji_obj = constants.EMOJI_FONTS_LIST[self._settings.get(\"emoji_font\")],\n                        emoji_url;\n                    if (emoji_obj && emoji_obj.url) {\n                        emoji_url = emoji_obj.url;\n                        self.loadEmojiFont(emoji_url, emoji_dfd);\n                    }\n                    else {\n                        emoji_dfd.resolve();\n                    }\n                }\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    updateFaviconConnected: function () {\n        let is_disconnected = false;\n        this.accounts.each((account) => {\n            if (account.get('enabled') && (!account.isConnected() || (account.session && account.session.get('auth_failed')))){\n                is_disconnected = true;\n                return;\n            }\n        });\n        this.updateAllMessageCounterOnDisconnect(is_disconnected);\n    },\n\n    disconnectWhenConnecting: function (is_fast) {\n        this.accounts.each((account) => {\n            if (account.session && account.connection && account.get('enabled') && !account.session.get('reconnecting') && !account.session.get('connected')){\n                account.activate();\n            }\n        });\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\nimport { transliterate as query_transliterate } from 'transliteration';\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return (scrollHeight - (scrollTop + offsetHeight)) < 10;\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        if (options.close_settings && this.children.main_overlay){\n            this.children.main_overlay.hide();\n            this.children.main_overlay.$el.detach();\n            return;\n        }\n        if (!(tree && tree.main_overlay)){\n            _.each(this.children, function (view) {\n                view.hide();\n            });\n        }\n        if (!(tree && tree.main_overlay))\n            this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (tree.main_overlay && (name != 'main_overlay'))\n                return;\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        if (_.isNull(path)){\n            this.$el.addClass('hidden');\n            return;\n        } else {\n            this.$el.removeClass('hidden');\n        }\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          let query_transliterated = query_transliterate(query);\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                      || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1\n                      || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1\n                          || name.indexOf(query_transliterated) > -1 || jid.indexOf(query_transliterated) > -1) {\n                          let searched_by = name.indexOf(query) > -1 || name.indexOf(query_transliterated) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        xabber.error(name);\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if (!attrs || !attrs.show_placeholder) {\n            new_attrs.show_placeholder = null;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || options.right_force_close)\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        new_attrs = _.extend(new_attrs, attrs);\n        let chat_item_view;\n        if (_.isUndefined(new_attrs.chat_item)){\n            chat_item_view = this.screen.get('chat_item');\n            if (chat_item_view && chat_item_view.content)\n                chat_item_view.content._prev_scrolltop = chat_item_view.content.getScrollTop() || chat_item_view.content._scrolltop;\n        }\n        if (name){\n            let tree = this.screen_map.get(name);\n            if (tree && tree.main_overlay){\n                if (!this.screen.get('previous_screen'))\n                    new_attrs.previous_screen = {...this.screen.attributes};\n            } else {\n                new_attrs.previous_screen = undefined;\n            }\n        }\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    showChatPlaceholder: function () {\n        try {\n            xabber.right_panel.$el.children().detach();\n            xabber.right_panel.$el.append(xabber.chat_placeholder.$el);\n        } catch (e) {\n            console.log(e)\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    template: templates.toolbar,\n\n    events: {\n        \"click .toolbar-logo\":             \"clickAllChats\",\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .saved-chats\":           \"showSavedChats\",\n        \"click .mentions\":              \"showNotifications\",\n        \"click .settings\":              \"showSettings\",\n        \"click .settings-modal\":              \"showSettingsModal\",\n        \"click .jingle-calls\":              \"showPlaceholder\",\n        \"click .geolocation-chats\":              \"showPlaceholder\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n    },\n\n    onUpdatedScreen: function (name) {\n        if (name === 'account_settings_modal' || name === 'settings-modal'){\n            return;\n        }\n        if ((name === 'all-chats') &&\n            (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active') ||\n                this.$('.toolbar-item:not(.toolbar-logo).chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')||\n                this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active'))) {\n            return;\n        }\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'settings-modal', 'search', 'jingle-calls', 'geolocation-chats', 'about'], name)) {\n            this.$('.toolbar-item:not(.toolbar-logo).'+name).addClass('active');\n        }\n    },\n\n    clickAllChats: function (ev) {\n        this.$('.all-chats').click();\n    },\n\n    showAllChats: function (ev, no_unread) {\n        let $el;\n        if (ev && ev.target)\n            $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        else\n            $el = this.$('.all-chats');\n        let is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        let options = {}\n        no_unread && (options.no_unread = no_unread);\n        xabber.body.setScreen('all-chats', options);\n        xabber.trigger('show_all_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showArchive: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showSavedChats: function (ev, no_unread) {\n        if (xabber.accounts.enabled.length === 1){\n            let saved_chat = xabber.accounts.enabled[0].chats.getSavedChat();\n            saved_chat.item_view && saved_chat.item_view.open({right_contact_save: true, clear_search: false, scroll_to_chat: true});\n            this.$('.active').removeClass('active');\n            this.$('.saved-chats').addClass('active');\n            saved_chat.once(\"change:active\", () => {\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n                xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).'+xabber.body.screen.get('name')).addClass('active');\n            });\n        } else {\n            this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n                .filter('.saved-chats').addClass('active');\n            xabber.body.setScreen('all-chats',);\n            xabber.trigger('show_saved_chats', no_unread);\n            xabber.trigger('update_placeholder');\n        }\n    },\n\n    showNotifications: function (ev, no_unread) {\n        this.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active unread')\n            .filter('.mentions').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_notification_chats', no_unread);\n        xabber.trigger('update_placeholder');\n    },\n\n    showChatsByAccount: function (account) {\n        if (this.data.get('account_filtering') === account.get('jid'))\n            this.data.set('account_filtering', null);\n        else\n            this.data.set('account_filtering', account.get('jid'));\n        if (this.$('.toolbar-item:not(.toolbar-logo).all-chats').hasClass('active')) {\n            this.showAllChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).archive-chats').hasClass('active')) {\n            this.showArchive(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).saved-chats').hasClass('active')) {\n            this.showSavedChats(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).mentions').hasClass('active')) {\n            this.showNotifications(null, true);\n            return;\n        }\n        if (this.$('.toolbar-item:not(.toolbar-logo).jingle-calls').hasClass('active') ||\n            this.$('.toolbar-item:not(.toolbar-logo).geolocation-chats').hasClass('active')){\n            this.showAllChats(null, true);\n            return;\n        }\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showSettingsModal: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    showPlaceholder: function (ev) {\n        if (xabber.chats_view && xabber.chats_view.active_chat){\n            xabber.chats_view.active_chat.model.trigger('hide_chat');\n            xabber.chats_view.active_chat = null;\n        }\n        let screen_name = this.$('.toolbar-item:not(.toolbar-logo).settings').hasClass('active') ? 'all-chats' : xabber.body.screen.get('name');\n        xabber.body.setScreen(screen_name, {chat_item: null});\n        let $el = $(ev.target).closest('.toolbar-item:not(.toolbar-logo)');\n        this.$('.toolbar-item:not(.toolbar-logo):not(.account-item)').removeClass('active unread');\n        $el.addClass('active');\n        xabber.trigger('update_placeholder');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    if (chat.get('unread') || chat.get('const_unread')){\n                        xabber.error(chat);\n                    }\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n        xabber.recountAllMessageCounter();\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        if (c >= 100)\n            c = '99+';\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        if (document.fullscreenElement) {\n            document.exitFullscreen();\n        } else if(this.$el.length) {\n            this.$el[0].requestFullscreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function (status) {\n        let status_text;\n        if (this.model.get('status') == 'device_busy')\n            status_text = 'dialog_jingle_message__status_device_busy';\n        else if (this.model.get('status') == 'busy')\n            status_text = 'dialog_jingle_message__status_busy';\n        else if (this.model.get('status') == 'accepted_another_device')\n            status_text = 'dialog_jingle_message__status_another_device_accepted';\n        else\n            status_text = 'dialog_jingle_message__status_disconnected';\n        this.updateStatusText(xabber.getString(status_text));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n\n                        let xPercent = (((this.$el.offset().left - this.pos1)/window.innerWidth) * 100),\n                            yPercent = (((this.$el.offset().top - this.pos2)/window.innerHeight) * 100);\n\n\n                        // set the element's new position:\n                        this.$el.css('left', xPercent + '%');\n                        this.$el.css('top', yPercent + '%');\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (options.player.provider === 'youtube'){\n                this.$('.plyr-player-popup-draggable').addClass('hidden');\n                this.$('.plyr-player-popup-draggable').css({\n                    width: 400,\n                    height: 200,\n                });\n            }\n            this.account = options.player.chat_item.account;\n            this.updateColorScheme();\n            this.player.chat_item = options.player.chat_item;\n            this.player.player_item = options.player;\n            this.player.message_unique_id = options.player.message_unique_id;\n            let video_sources = {\n                src: options.player.video_src,\n                provider: options.player.provider,\n            };\n            options.player.type && (video_sources.type = options.player.type);\n            this.player.source = {\n                type: 'video',\n                sources: [\n                    video_sources,\n                ],\n            }\n            xabber.current_plyr_player = this.player;\n            this.player.once('ready',(event) => {\n                let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n                $minimize_element_float.append(env.templates.svg['player-float']())\n                $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n                $minimize_element_full.append(env.templates.svg['player-full']())\n                $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n                let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n                $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n                $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n                let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n                $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n                $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n                this.player.play();\n                xabber.trigger('plyr_player_updated');\n            });\n        });\n\n        if (options.player && options.player.video_file && options.player.video_file.key) {\n            options.player.key = options.player.video_file.key;\n            options.player.video_file.type && (options.player.type = options.player.video_file.type);\n        }\n\n        if (options.player && options.player.key && options.player.chat_item.model && options.player.video_src && !options.player.video_decrypted){\n            options.player.chat_item.model.messages.decryptFile(options.player.video_src, options.player.key).then((result) => {\n                options.player.video_src = result;\n                options.player.video_decrypted = true;\n                dfd.resolve();\n            });\n        } else\n            dfd.resolve();\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.settings_modal,\n    ps_selector: '.settings-panel',\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"click .btn-back\": \"backToMenu\",\n        \"click .btn-back-subsettings\": \"backToSubMenu\",\n        \"click .settings-tabs-wrap.global-settings-tabs .settings-tab:not(.delete-all-accounts)\": \"jumpToBlock\",\n        \"click .desktop-notifications-clue-wrap b\": \"goToWebNotifications\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.idling label\": \"setIdling\",\n        \"change #idle_timeout\": \"setIdlingTimeout\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        // \"click .setting.volume-enable label\": \"setNotificationsVolumeEnabled\",\n        \"click .private-notifications label\": \"setPrivateNotifications\",\n        \"click .group-notifications label\": \"setGroupNotifications\",\n        \"click .notifications-lever label\": \"setNotifications\",\n        \"click .jingle-calls label\": \"setJingleCalls\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change .emoji-fonts-list input[type=radio][name=emoji_font]\": \"changeEmojiFont\",\n        \"click .emoji-font-external-url-button\": \"loadExternalEmojiFont\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .client-main-color-item\": \"chooseMainColor\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function (options) {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n        this.model.on('change:language', this.updateLanguage, this);\n        this.model.on('change:emoji_font', this.updateEmojiFontLabel, this);\n        this.model.on('change:avatar_shape', this.updateAvatarLabel, this);\n        this.model.on('change:notifications_private', this.updateSoundsLabel, this);\n        this.model.on('change:notifications_group', this.updateSoundsLabel, this);\n        this.model.on('change:call_attention', this.updateSoundsLabel, this);\n        this.model.on('change:private_sound', this.updateSoundsLabel, this);\n        this.model.on('change:group_sound', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_private_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_group_message', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_call', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_dialtone', this.updateSoundsLabel, this);\n        this.model.on('change:sound_on_attention', this.updateSoundsLabel, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        $(document).on(\"keyup\", (ev) => {\n            if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible')) {\n                this.closeSettings();\n            }\n        });\n        xabber.once('accounts_ready',() => {\n            xabber.accounts.on(\"list_changed add change:enabled destroy\", this.updateAccounts, this);\n        })\n    },\n\n    render: function (options) {\n        let settings = this.model.attributes,\n            lang = settings.language,\n            emoji_font = settings.emoji_font;\n        this.updateSounds();\n        this.updateLanguages();\n        this.updateEmojiFonts();\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.notifications-lever input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !settings.jingle_calls);\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.jingle-calls input[type=checkbox]')\n            .prop({checked: settings.jingle_calls});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.sound input[type=radio][name=attention_sound]').prop('disabled', !settings.call_attention)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_private));\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group}).prop('disabled', !(settings.notifications && xabber._cache.get('notifications') && settings.notifications_group));\n        this.$('.desktop-notifications-clue-wrap').hideIf(settings.notifications);\n        this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !settings.notifications);\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.idling input[type=checkbox]')\n            .prop({checked: settings.idling});\n        this.$('#idle_timeout')\n            .val(settings.idling_time).prop('disabled', !settings.idling);\n        // this.$(`#notifications_volume_enable`)\n        //     .prop('checked', settings.notifications_volume_enabled);\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        this.$(`.emoji-fonts-list input[type=radio][name=emoji_font][value=\"${emoji_font}\"]`)\n            .prop('checked', true);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${settings.main_color}\"]`).addClass('chosen-client-color');\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        // this.$('.volume-setting .disabled').switchClass('hidden', settings.notifications_volume_enabled);\n        // this.$('#notifications_volume').prop('disabled', !settings.notifications_volume_enabled);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateAvatarLabel();\n        this.updateSoundsLabel();\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.updateLanguage();\n        this.updateEmojiFontLabel();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        this.$('.left-column').removeClass('hidden');\n        this.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back').removeClass('hidden');\n        this.$('.btn-back-subsettings').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.$('.emoji_font .preloader-wrap').addClass('hidden');\n        this.$('.emoji_font .emojis-preview').removeClass('hidden');\n        this.$('.desktop-notifications-clue-wrap b').addClass('client-text-color-500');\n        this.updateAccounts(options);\n        this.updateHeight();\n        this.updateSliders();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateAccounts: function (options) {\n        if (this.settings_single_account_modal){\n            this.settings_single_account_modal.removeChild('blocklist');\n            this.removeChild('single_account');\n        }\n        if (xabber.accounts.length === 1 && xabber.accounts.enabled.length){\n            this.$('.accounts-info-wrap').addClass('hidden');\n            this.$('.btn-add-account').addClass('hidden');\n            this.$('.single-account-info-wrap').removeClass('hidden');\n            let first_account = xabber.accounts.models[0];\n            this.single_account_has_rendered = false;\n            this.settings_single_account_modal = this.addChild('single_account', xabber.AccountSettingsSingleModalView, {\n                model: first_account,\n                forced_ps_container: this.ps_container,\n                single_account_modal: true,\n                el: this.$('.single-account-info-wrap .single-account-info')[0]\n            });\n            if (!this.single_account_has_rendered){\n                this.settings_single_account_modal.show(null, options);\n            }\n            first_account.trigger('render_single_settings', this.settings_single_account_modal);\n            this.settings_single_account_modal.addChild('blocklist', xabber.BlockListView, {\n                account: first_account,\n                el: this.settings_single_account_modal.$('.block-list-view-wrap')[0]\n            });\n        } else {\n            this.$('.btn-add-account').removeClass('hidden');\n            this.$('.accounts-info-wrap').removeClass('hidden');\n            this.$('.single-account-info-wrap').addClass('hidden');\n        }\n        this.updateHeight();\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        if (blur_switched)\n            this.$('#blur')[0].value = appearance.blur;\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        if (vignetting_switched)\n            this.$('#vignetting')[0].value = appearance.vignetting;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    jumpToBlock: function (ev) {\n        if ($(ev.target).closest('.switch').length)\n            return;\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name'));\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back').addClass('hidden');\n            this.$('.btn-back-subsettings').removeClass('hidden');\n            this.$('.btn-back-subsettings').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        if ($tab.attr('data-block-name') === 'interface_language')\n            this.$('.settings-panel-head .description').removeClass('hidden');\n        else\n            this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column.main-left-column').hasClass('hidden'))\n            height = this.$('.left-column.main-left-column').height();\n        if (!this.$('.right-column.main-right-column').hasClass('hidden'))\n            height = this.$('.right-column.main-right-column').height();\n        this.ps_container.css('height', height + 'px');\n        setTimeout(() => {\n            this.updateScrollBar();\n        }, 500)\n    },\n\n    updateSliders: function () {\n        this.$('.range-field.range-field-design').each((idx, item) => {\n            let $input = $(item).find('input'),\n                range_min = $input.attr('min'),\n                range_max = $input.attr('max'),\n                range_value = $input.val(),\n                left =  ((182 / (range_max - range_min)) * (range_value - range_min)) + 10;\n            $(item).find('span.thumb').css('left', left + 'px');\n            if ($input.hasClass('materialize-timer'))\n                $(item).find('span.value').text(range_value + 's');\n            else\n                $(item).find('span.value').text(range_value);\n        })\n\n    },\n\n    updateSounds: function () {\n\n        this.$('.notification-field').html('<form action=\"#\"></form>');\n\n        sounds.notifications.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'private_sound',\n                    input_id: `${this.cid}-private-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.notification-field:not(.group-notification-field)').append(element);\n                let group_element = $(templates.setting_radio_input({\n                    input_name: 'group_sound',\n                    input_id: `${this.cid}-group-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.group-notification-field').append(group_element);\n            }\n        });\n\n        let element_no_sound = $(templates.setting_radio_input({\n            input_name: 'private_sound',\n            input_id: `${this.cid}-private-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.notification-field:not(.group-notification-field)').prepend(element_no_sound);\n\n        let group_element_no_sound = $(templates.setting_radio_input({\n            input_name: 'group_sound',\n            input_id: `${this.cid}-group-sound-no`,\n            label: 'No sound',\n            value: '',\n        }));\n        this.$('.group-notification-field').prepend(group_element_no_sound);\n\n        this.$('.dialtone-field').html('<form action=\"#\"></form>');\n        sounds.dialtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'dialtone_sound',\n                    input_id: `${this.cid}-dialtone-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.dialtone-field').append(element);\n            }\n        });\n\n        this.$('.ringtone-field').html('<form action=\"#\"></form>');\n        sounds.ringtones.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'call_sound',\n                    input_id: `${this.cid}-call-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.ringtone-field').append(element);\n            }\n        });\n\n        this.$('.attention-field').html('<form action=\"#\"></form>');\n        sounds.attention.forEach((item,idx) => {\n            if (!item.not_selectable){\n                let element = $(templates.setting_radio_input({\n                    input_name: 'attention_sound',\n                    input_id: `${this.cid}-attention-sound-${item.file_name}`,\n                    label: item.name,\n                    value: item.file_name,\n                }));\n                this.$('.attention-field').append(element);\n            }\n        });\n\n    },\n\n    updateLanguages: function () {\n        this.$('.languages-list').html('<form action=\"#\"></form>');\n\n        let default_element = $(templates.setting_language_radio_input({\n            input_name: 'language',\n            input_id: `${this.cid}-default`,\n            label: xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]),\n            value: 'default',\n            progress: {},\n        }));\n\n        this.$('.languages-list').append(default_element);\n\n        if (!window.navigator.language.includes('en')){\n            let second_lang = xabber.get(\"default_language\") === 'en' ? window.navigator.language : 'en',\n                second_prog, second_prog_text,\n                second_locale = Object.keys(client_translation_progress)\n                    .find(key => !second_lang.indexOf(key)) || constants.languages_another_locales[second_lang] && Object.keys(client_translation_progress)\n                    .find(key => !constants.languages_another_locales[second_lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (second_locale) {\n                second_prog = client_translation_progress[second_locale];\n                second_prog_text = (second_prog == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                    : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${second_prog}%`]);\n\n                let second_element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${second_lang}`,\n                    label: constants.languages[second_lang],\n                    value: second_lang,\n                    progress: {\n                        text: second_prog_text\n                    },\n                }));\n                this.$('.languages-list').append(second_element);\n            }\n        }\n\n\n        for (let lang in constants.languages) {\n            if (!lang || lang == xabber.get(\"default_language\") || lang == window.navigator.language)\n                continue;\n\n            let locale = Object.keys(client_translation_progress)\n                .find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress)\n                .find(key => !constants.languages_another_locales[lang].indexOf(key)); // < - check for locales that differ in names\n\n            if (locale) {\n                let progress = client_translation_progress[locale],\n                    progress_text = (progress == 100) ? xabber.getString(\"settings__section_interface_language__translation_progress_fully\")\n                        : xabber.getString(\"settings__section_interface_language__translation_progress\", [`${progress}%`]);\n\n                let element = $(templates.setting_language_radio_input({\n                    input_name: 'language',\n                    input_id: `${this.cid}-${lang}`,\n                    label: constants.languages[lang],\n                    value: lang,\n                    progress: {\n                        text: progress_text\n                    },\n                }));\n                this.$('.languages-list').append(element);\n            }\n        }\n    },\n\n    updateEmojiFonts: function () {\n        let emoji_fonts_list = constants.EMOJI_FONTS_LIST;\n\n        if (!Object.keys(emoji_fonts_list).length) {\n            this.$('.settings-tab[data-block-name=\"emoji_font\"').addClass('hidden');\n            return;\n        }\n        this.$('.settings-tab[data-block-name=\"emoji_font\"').removeClass('hidden');\n\n        this.$('.emoji-fonts-list').html('<form action=\"#\"></form>');\n        emoji_fonts_list = Object.values(emoji_fonts_list);\n\n        emoji_fonts_list.sort((a, b) => {\n            return a.order - b.order;\n        })\n\n        emoji_fonts_list.forEach((item) => {\n            let item_name = item.name === 'system' ? xabber.getString(\"settings__menu_item__emoji_font_system\") : item.name,\n                element = $(templates.setting_emoji_font_radio_input({\n                    input_name: 'emoji_font',\n                    input_id: `${this.cid}-emoji-font-${item.value}`,\n                    label: item_name,\n                    value: item.value,\n                    hint: item.hint,\n                }));\n            this.$('.emoji-fonts-list').append(element);\n        });\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head')\n        else\n            this.$('.settings-panel-head').addClass('lined-head')\n    },\n\n    closeSettings: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        if (xabber.body.screen && xabber.body.screen.get('previous_screen')){\n            let previous_screen = xabber.body.screen.get('previous_screen');\n            previous_screen.close_settings = true;\n            xabber.body.setScreen(previous_screen.name, previous_screen);\n            xabber.body.screen.attributes.close_settings = undefined;\n        } else\n            xabber.toolbar_view.showAllChats();\n    },\n\n    backToMenu: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.current_sound && this.current_sound.pause();\n        let $tab = $(ev.target).closest('.btn-back-subsettings'),\n            block_name = $tab.attr('data-subblock-parent-name'),\n            $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent)\n        } else {\n            this.$('.btn-back').removeClass('hidden');\n            this.$('.btn-back-subsettings').addClass('hidden');\n        }\n        this.$('.settings-panel-head .description').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    goToWebNotifications: function (ev) {\n        this.$('.settings-tab[data-block-name=\"web-notifications\"]').click();\n    },\n\n    setIdling: function (ev) {\n        let value = !this.model.get('idling');\n        this.model.save('idling', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.idling').find('input').prop('checked', value);\n        this.$('#idle_timeout').prop('disabled', !value);\n    },\n\n    setIdlingTimeout: function (ev) {\n        let $target = $(ev.target),\n            value = $(ev.target).val();\n        value = parseInt(value);\n        if (_.isNaN(value)){\n            value = constants.IDLING_DEFAULT_TIMEOUT;\n        } else if (value < constants.IDLING_MINIMAL_TIMEOUT){\n            value = constants.IDLING_MINIMAL_TIMEOUT;\n        }\n        this.model.save('idling_time', value);\n        $target.val(value);\n        ev.preventDefault();\n    },\n\n    setNotificationsVolumeEnabled: function (ev) {\n        ev.preventDefault();\n        let value = !this.model.get('notifications_volume_enabled');\n        this.model.save('notifications_volume_enabled', value);\n        this.$('#notifications_volume_enable').prop('checked', value);\n        this.$('.volume-setting .disabled').switchClass('hidden', value);\n        this.$('#notifications_volume').prop('disabled', !value);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications');\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                    this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                    this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                    this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                    this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                    this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                this.$('.setting.notifications input[type=checkbox]').prop('checked', value);\n                this.$('.notifications-lever input[type=checkbox]').prop('checked', value);\n                this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n                this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n                this.$('.desktop-notifications-clue-wrap').hideIf(value);\n                this.$('.notifications-dependant').switchClass('notifications-dependant-two-line', !value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        this.$('.message-preview.private-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_private')));\n        $(ev.target).closest('.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        this.$('.message-preview.group-preview input[type=checkbox]').prop('disabled', !(this.model.get('notifications') && xabber._cache.get('notifications') && this.model.get('notifications_group')));\n        $(ev.target).closest('.group-notifications').find('input').prop('checked', value);\n    },\n\n    setJingleCalls: function (ev) {\n        let value = !this.model.get('jingle_calls');\n        this.model.save('jingle_calls', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=call_sound]').prop('disabled', !value)\n        this.$('.sound input[type=radio][name=dialtone_sound]').prop('disabled', !value)\n        $(ev.target).closest('.jingle-calls').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, !this.model.get('notifications_volume_enabled') ? 0 : this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    chooseMainColor: function (ev) {\n        let color = $(ev.target).closest('.client-main-color-item').attr('data-value');\n        this.model.save('main_color', color);\n        this.$(`.client-main-color-item`).removeClass('chosen-client-color');\n        this.$(`.client-main-color-item[data-value=\"${color}\"]`).addClass('chosen-client-color');\n        xabber.trigger('update_main_color');\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#vignetting')[0].value : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? this.$('#blur')[0].value : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value,\n            locale = Object.keys(client_translation_progress).find(key => !value.indexOf(key)) || constants.languages_another_locales[value] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[value].indexOf(key)),\n            progress = client_translation_progress[locale],\n            platform_text;\n\n        (value == 'default') && (progress = 100);\n\n        if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && value === 'default') || value === 'en')) {\n            platform_text = xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 100) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_full_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translations\")}</a>`, constants.SHORT_CLIENT_NAME, ])\n             + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        } else if (progress == 0) {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_no_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation\")}</a>`]);\n        } else {\n            platform_text = xabber.getString(\"settings__interface_language__change_language_text_partial_translation\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${xabber.getString(\"settings__section_interface_language__text_description__text_translation_team\")}</a>`, constants.SHORT_CLIENT_NAME])\n                + '\\n\\n' +xabber.getString(\"settings__dialog_change_language__confirm\");\n        }\n        let modal_classes = ['change-language-modal'], inverted_buttons;\n        if (progress == 0){\n            modal_classes.push('change-language-modal-no-ok');\n        } else if (progress != 0 && progress < 70){\n            inverted_buttons = true;\n        }\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"),\n            platform_text,\n            {modal_class: modal_classes, no_dialog_options: true, inverted_buttons: inverted_buttons},\n            { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    changeEmojiFont: function (ev) {\n        let value = ev.target.value,\n            emoji_font = constants.EMOJI_FONTS_LIST[value],\n            font_load_dfd = new $.Deferred();\n\n        if (!emoji_font){\n            $(ev.target).closest('.emoji-font-field').detach();\n            utils.dialogs.error(xabber.getString(\"settings__menu_item__emoji_font_chosen_does_not_exist\"));\n            return\n        }\n        font_load_dfd.done(() => {\n            this.$('.emoji_font .preloader-wrap').addClass('hidden');\n            this.$('.emoji_font .emojis-preview').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n            this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n            this.model.save('emoji_font', value);\n        });\n        this.load_emoji_dfd = new $.Deferred();\n        this.load_emoji_dfd.done(() => {\n            this.$('.emoji_font .emoji-font-external-url-text').addClass('hidden');\n            this.$('.emoji_font .emoji-font-external-url-button').addClass('hidden');\n            this.$('.emoji_font .preloader-wrap').removeClass('hidden');\n            let emoji_url = emoji_font.is_system ? emoji_font.value : emoji_font.url;\n            this.load_emoji_dfd = null;\n            xabber.loadEmojiFont(emoji_url, font_load_dfd);\n        });\n\n        this.$('.emoji_font .emojis-preview').addClass('hidden');\n        this.$('.emoji_font .emoji-font-attribution-text').addClass('hidden');\n\n        if (emoji_font.is_outside_url){\n            this.$('.emoji_font .emoji-font-external-url-text').removeClass('hidden');\n            this.$('.emoji_font .emoji-font-external-url-button').removeClass('hidden');\n        } else {\n            this.load_emoji_dfd.resolve();\n        }\n    },\n\n    loadExternalEmojiFont: function (ev) {\n        this.load_emoji_dfd && this.load_emoji_dfd.resolve();\n    },\n\n    updateEmojiFontLabel: function () {\n        if (!constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')]) {\n            this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(xabber.getString(\"settings__menu_item__emoji_font_chosen_does_not_exist\"))\n            return;\n        }\n        let label = constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')].name,\n            attribution_text = constants.EMOJI_FONTS_LIST[this.model.get('emoji_font')].attribution_text;\n        if (label === 'system')\n            label = xabber.getString(\"settings__menu_item__emoji_font_system\");\n        this.$('.settings-tab[data-block-name=\"emoji_font\"] .settings-block-label').text(label);\n        this.$('.emoji-font-attribution-text').switchClass('hidden', !attribution_text);\n        this.$('.emoji-font-attribution-text').text(attribution_text);\n    },\n\n    updateLanguage: function () {\n        if (this.model.get('language') === 'default'){\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(xabber.getString(\"settings__languages_list___item_default\", [constants.languages[xabber.get(\"default_language\") || 'en']]));\n        } else {\n            this.$('.settings-tab[data-block-name=\"interface_language\"] .settings-block-label').text(constants.languages[this.model.get('language')]);\n        }\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n\n        if (!xabber.settings.language)\n            return;\n\n        let lang = xabber.settings.language,\n            locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key)),\n            progress = client_translation_progress[locale];\n\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100 && ((xabber.get(\"default_language\") === 'en' && lang === 'default') || lang === 'en')) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation_english\", [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" class=\"email-link\" href='mailto:${constants.EMAIL_FOR_JOIN_TRANSLATION}'>${constants.EMAIL_FOR_JOIN_TRANSLATION}</a>`, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME]);\n            }\n            platform_text = xabber.getString(\"settings__interface_language__text_description_platform\",\n                [constants.SHORT_CLIENT_NAME, `<a target=\"_blank\" href='${constants.PROJECT_CROWDIN_URL}'>${constants.PROJECT_CROWDIN_URL}</a>`]);\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    },\n\n    updateAvatarLabel: function () {\n        let shape = this.model.get('avatar_shape'), label_text;\n        if (shape === 'circle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_circle\");\n        if (shape === 'squircle')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_squircle\");\n        if (shape === 'octagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_octagon\");\n        if (shape === 'hexagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_hexagon\");\n        if (shape === 'pentagon')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_pentagon\");\n        if (shape === 'rounded')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_rounded\");\n        if (shape === 'star')\n            label_text = xabber.getString(\"settings__section_appearance__avatars_star\");\n        this.$('.settings-tab[data-block-name=\"avatars\"] .settings-block-label').text(label_text);\n    },\n\n    updateSoundsLabel: function () {\n        let sound_private_value = this.model.get('private_sound') && this.model.get('notifications_private') ? this.model.get('sound_on_private_message') : '',\n            sound_group_value = this.model.get('group_sound') && this.model.get('notifications_group') ? this.model.get('sound_on_group_message') : '',\n            sound_on_attention = this.model.get('call_attention') ? this.model.get('sound_on_attention') : '',\n            sound_private_text, sound_group_text, sound_on_attention_text;\n\n\n        if (sound_private_value === '')\n            sound_private_text = 'No sound';\n        else\n            sound_private_text = sound_private_value.replace('_', ' ');\n\n        if (sound_group_value === '')\n            sound_group_text = 'No sound';\n        else\n            sound_group_text = sound_group_value.replace('_', ' ');\n\n        if (sound_on_attention === '')\n            sound_on_attention_text = 'No sound';\n        else\n            sound_on_attention_text = sound_on_attention.replace('_', ' ');\n\n        this.$('.settings-tab[data-block-name=\"chats-notifications\"] .settings-block-label').text(sound_private_text);\n        this.$('.settings-tab[data-block-name=\"groupchats-notifications\"] .settings-block-label').text(sound_group_text);\n        this.$('.settings-tab[data-block-name=\"attention-calls\"] .settings-block-label').text(sound_on_attention_text);\n    },\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_modal_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        if (this.type == 'repeating-pattern') {\n            this.onGetPatternsCallback(env.backgroundPatternsXml)\n        } else {\n            this.onGetImagesCallback(env.backgroundImagesXml);\n        }\n        callback && callback();\n    },\n\n    onGetPatternsCallback: function (data) {\n        if (!(data && data['background-patterns'] && data['background-patterns'].image))\n            return;\n        let images = [];\n        data = data['background-patterns'].image;\n        data.forEach((item) => {\n            images.push({thumbnail: item});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        if (!(data && data['background-images'] && data['background-images'].image))\n            return;\n        let images = [];\n        data = data['background-images'].image;\n        data.forEach((item) => {\n            let thumbnail = item.thumbnail,\n                fs_img = item['fullscreen-image'];\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        if ((this.type == 'repeating-pattern' && !this.model.patterns_library) || (this.type == 'images' && !this.model.img_library))\n            return;\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_modal_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev && ev.target && ev.target.closest ? ev.target.closest('.drag-handle') : $(ev.target).closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 10,\n            out_duration: 10,\n            opacity: 0.4\n        },\n        close: {out_duration: 10}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval && is_disconnected === undefined)\n            return;\n        clearInterval(this._blink_interval);\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1 || $icon.attr('href').indexOf(this.cache.favicon_gray) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT_GREY) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function (is_disconnected) {\n        if (this._blink_interval || is_disconnected !== undefined) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = is_disconnected ? this.cache.favicon_gray || constants.FAVICON_DEFAULT_GREY : this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    updateAllMessageCounterOnDisconnect: function (is_disconnected) {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon(is_disconnected);\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon(is_disconnected);\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    loadEmojiFont: function (url, dfd) {\n        if (url && url !== 'system') {\n            let FontName = \"EmojiFont\",\n                FontURL = url,\n                emoji_font = new FontFace(FontName, `url(${FontURL})`);\n\n            emoji_font.load().then((loaded_face) => {\n                document.fonts.add(loaded_face);\n                $(constants.CONTAINER_ELEMENT).addClass('custom-emoji-font');\n                dfd && dfd.resolve();\n            }).catch((error) => {\n                utils.dialogs.error(error);\n                $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n                dfd && dfd.resolve();\n            });\n        } else if (url === 'system'){\n            $(constants.CONTAINER_ELEMENT).removeClass('custom-emoji-font');\n            dfd && dfd.resolve();\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n            let incoming_subscriptions = account.contacts.filter(item => (item.get('invitation') && !item.get('removed')) || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_msg += incoming_subscriptions;\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        if (!this.get('focused')) {\n            this.set('all_msg_counter', this.setAllMessageCounter());\n        }\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = sounds.all_sounds.find(item => item.file_name === name);\n        if (filename) {\n            let audio = new window.Audio(filename.audio);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    },\n\n\n    initIdleJS: function () {\n        if (this.idleJs)\n            this.idleJs.stop();\n        let self = this,\n            idling_time = self._settings.get('idling_time') * 1000\n\n        this.idleJs = new idleJs({\n            idle: idling_time, // idle time in ms\n            events: ['mousemove', 'keydown', 'mousedown', 'touchstart', 'focus', 'blur'], // events that will trigger the idle resetter\n            onIdle: () => {\n                if (self._settings.get('idling'))\n                    self.set('idle', true);\n                else\n                    self.set('idle', false);\n            } , // callback function to be executed after idle time\n            onActive:() => {\n                self.set('idle', false);\n            }  , // callback function to be executed after back form idleness\n            keepTracking: true, // set it to false if you want to be notified only on the first idleness change\n            startAtIdle: false // set it to true if you want to start in the idle state\n        })\n        this.idleJs.start();\n    },\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this._settings.on(\"change:idling_time\", this.initIdleJS, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    this.initIdleJS();\n\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.main_overlay_panel = this.body.addChild('main_overlay', this.NodeView, {\n        classlist: 'main-overlay-wrap hidden'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_modal_view = this.main_overlay_panel.addChild(\n        'settings_modal', this.SettingsModalView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    utils = env.utils;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    },\n\n    submit_unregister: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER}).c('remove');\n\n        conn._addSysHandler(this._submit_unregister_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    _submit_unregister_cb: function (stanza) {\n        var i, error = null, conn = this._connection;\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Unregistration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Unregistration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('XABBER_CHAT', 'urn:xabber:chat');\nStrophe.addNamespace('EXPLICIT_MESSAGE_ENCRYPTION', 'urn:xmpp:eme:0');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditModalView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-modal-wrap account-vcard-edit-wrap',\n    template: templates.vcard_edit_modal,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function (options) {\n        options.$el.html('');\n        options.$el.append(this.$el);\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')},\n    pretty_datetime_date = (timestamp) => { return utils.pretty_datetime(timestamp, 'MMM DD, YYYY')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            xabber.on(\"start_accounts\", () => {\n                this.trigger('start');\n            }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isReconnecting: function () {\n            return this.session && this.session.get('reconnecting');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails && res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/xabber-web-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            } else if (status === Strophe.Status.ERROR && (condition === 'policy-violation')) {\n                this.onAuthFailed(condition);\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({\n                    connected: true,\n                    reconnected: true,\n                    reconnecting: false,\n                    conn_retries: 0\n                });\n            } else if (status === Strophe.Status.ERROR && (condition === 'policy-violation')) {\n                this.onAuthFailed(condition);\n            } else if (status === Strophe.Status.AUTHFAIL || ((status === Strophe.Status.ERROR) && (condition === 'not-authorized'))) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                if (this._main_interval_worker)\n                    this._main_interval_worker.terminate();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.change_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.change_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.change_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.change_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.change_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        unregisterAccountCallback: function (status, condition) {\n            if (this.unregister_account_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.unregister_account_view.close();\n                    this.trigger('deactivate', this);\n                    this.deleteAccount();\n                    xabber.settings_modal_view.closeSettings();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"account_unregister_failed\") + condition});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.unregister_account_view.errorFeedback({password: xabber.getString(\"wrong_password\")});\n                    this.unregister_account_view.data.set('step', 0);\n                    this.unregister_account_connection && this.unregister_account_connection.disconnect();\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.unregister_account_view.data.set('step', 1);\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.unregister_account_connection_manager = undefined;\n                    this.unregister_account_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function (text) {\n            if (!this.auth_view && !text){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            } else if (text){\n                if (this.auth_view)\n                    return;\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                    no_reconnect: true\n                });\n                let dialog_text = xabber.getString(\"XMPP_EXCEPTION\") + \": \" + text;\n                utils.dialogs.ask_extended(xabber.getString(\"error\"), xabber.getString(\"modal_policy_violation_text\"),\n                    {modal_class: 'modal-policy-violation', no_dialog_options: true, quoted_text: text, cancel_button_main: true},\n                    {\n                        ok_button_text: xabber.getString(\"disable_account\"),\n                        cancel_button_text: xabber.getString(\"account_settings\"),\n                        optional_button: 'account-reconnect',\n                        optional_button_text: xabber.getString(\"account_reconnect\")\n                    }).done((res) => {\n                    if (res){\n                        if (res === 'account-reconnect')\n                            this.reconnect();\n                        else {\n                            this.save('enabled', false);\n                            this.deactivate()\n                        }\n                    } else {\n                        this.showSettingsModal();\n                    }\n                });\n                return;\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function (callback) {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('public-label').text(),\n                        omemo_id = $token.find('omemo-id').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address, omemo_id: omemo_id});\n                });\n                this.x_tokens_list = tokens_list;\n                callback && callback();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                if (this._fast_interval_worker)\n                    this._fast_interval_worker.terminate();\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n                if (this.connection && !this.connection.disconnecting\n                    && this.connection.authenticated && this.connection.connected){\n                    this.getVCard();\n                    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n                        this.trigger('ready_to_get_roster');\n                }\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: this.retraction_version};\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQ(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                if (msg.collection && msg.collection.chat && msg.collection.chat.get('group_chat'))\n                    $(msg_iq).append(\"<retry to='\" + msg.collection.chat.get('jid') + \"' xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                else\n                    $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\");\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            this.showSettingsModal(block_name);\n        },\n\n        showSettingsModal: function (block_name) {\n            if (xabber.accounts.length === 1){\n                xabber.body.setScreen('settings-modal', {account_block_name: block_name});\n                xabber.trigger('update_placeholder');\n                return;\n            }\n            let has_modal_settings = !_.isUndefined(this.settings_account_modal);\n            if (!has_modal_settings)\n                this.settings_account_modal = new xabber.AccountSettingsModalView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings_modal', {\n                account: this, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_modal_settings) {\n                this.trigger('render_settings');\n                this.settings_account_modal.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_account_modal.$('.block-list-view-wrap')[0]\n                });\n            }\n            this.settings_account_modal.updateHeight();\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_account_modal && this.settings_account_modal.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings, dont_change_screen) {\n            this.show_settings_after_delete = show_settings;\n            this.dont_change_screen_after_delete = dont_change_screen;\n            let screen = xabber.body.screen;\n            if (screen.get('account') && screen.get('account') === this && screen.get('name') === 'account_settings_modal')\n                this.show_settings_after_delete = true;\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.omemo){\n                this.omemo.destroy();\n                this.omemo = undefined;\n            }\n            this.groups_settings\n            if (this.groups_settings){\n                this.groups_settings.clearStorage();\n            }\n            if (this.groupchat_settings){\n                this.groupchat_settings.destroy();\n                this.groupchat_settings = undefined;\n            }\n            if (this.chat_settings){\n                this.chat_settings.destroy();\n                this.chat_settings = undefined;\n            }\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations && this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster && this.cached_roster.deleteDataBase();\n            this.cached_server_features && this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback, errback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        testGalleryFileSlot: function(file, callback) {\n            if (this.get('gallery_token') && this.get('gallery_url')){\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: {size: file.size, name: file.name, hash: sha1(bytes)},\n                        success: (response) => {\n                            console.log(response);\n                            callback && callback(response);\n                        },\n                        error: (response) => {\n                            console.log(response);\n                            callback && callback(response.responseJSON);\n                        }\n                    });\n                }\n                reader.onerror = (e) => {\n                    console.log(reader.error);\n                    callback && callback(false)\n                };\n                reader.readAsDataURL(file);\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature, errback) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                this.set('gallery_auth', true)\n                this.gallery_iq_answered = false;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            this.gallery_auth_errback = errback;\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                            setTimeout(() => {\n                                if (!this.gallery_iq_answered)\n                                    this.handleCommonGalleryErrors({status: 500}, errback)\n                            }, 5000)\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response, errback)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code) {\n                this.gallery_iq_answered = true;\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response, errback) {\n            !errback && (errback = this.gallery_auth_errback);\n            this.gallery_auth_errback = undefined;\n            let err_text;\n            response && response.responseJSON && response.responseJSON.error && (err_text = response.responseJSON.error);\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'), errback)\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                    errback && errback('No Media Gallery server feature');\n                }\n            } else if (response.status === 500) {\n                this.set('gallery_url', null);\n                this.set('gallery_token', null);\n                errback && errback(xabber.getString(\"media_gallery_server_error\"));\n            } else {\n                errback && errback('Media Gallery error - ' + (err_text || response.status));\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData(),\n                        metadata = {};\n                    file.duration && (metadata.duration = file.duration);\n                    formData.append('file', file, file.name);\n                    formData.append('metadata', JSON.stringify(metadata));\n                    if (file.size)\n                        formData.append('size', file.size);\n                    if (file.voice)\n                        formData.append('media_type', file.type + '+voice');\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/avatar/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id)\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({id: file_id}),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n    },\n\n    onQuit: function () {\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount(true);\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login', {chat_item: null});\n    },\n\n    onQuitAccounts: function () {\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length);\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings-modal', {account_block_name: null});\n            } else if (account.dont_change_screen_after_delete) {\n                return;\n            } else {\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .filter-chats': 'filterChats',\n        'click .account-item-avatar-wrap': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n        xabber.updateFaviconConnected();\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        xabber.updateFaviconConnected();\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    filterChats: function (ev) {\n        ev.stopPropagation();\n        let is_single = $(ev.target).closest('.single-item').length;\n        if (is_single){\n            xabber.body.setScreen('settings-modal', {account_block_name: null});\n            xabber.trigger('update_placeholder');\n            return;\n        }\n        xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        if (xabber.toolbar_view.data.get('account_filtering') != this.model.get('jid'))\n            this.$el.addClass('active');\n        xabber.toolbar_view.showChatsByAccount(this.model);\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        this.$el.find('.single-item').removeClass('single-item');\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n            if (this.model.enabled.length === 1)\n                this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        });\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.$el.find('.single-item').removeClass('single-item');\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n        if (this.model.enabled.length === 1)\n            this.$el.find('.toolbar-item.account-item').addClass('single-item');\n        this.$el.find('.toolbar-item.settings-modal').switchClass('hidden', this.model.enabled.length != 0);\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardModalView = xabber.VCardView.extend({\n    template: env.templates.vcard.vcard_modal,\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function ($el) {\n        this.vcard_edit_modal = new xabber.VCardEditModalView({model: this.model});\n        this.vcard_edit_modal.show({$el: $el});\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .gallery-file .checkbox-field\": \"selectFile\",\n        \"click .btn-delete-selection\": \"deleteSelectedFiles\",\n        \"click .settings-tab:not(.settings-deletion-button)\": \"onTabClick\",\n        \"click .show-deletion\": \"showDeleteFilesView\",\n        \"click .btn-back-gallery\": \"backToMain\",\n        \"click .gallery-file\": \"onClickFile\",\n        \"click .btn-close-selection\": \"disableFilesSelect\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            if (this.current_options.type === 'avatars'){\n                this.getAvatars(this.current_options)\n            } else {\n                this.getFiles(this.current_options)\n            }\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (this.parent){\n                this.parent.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                this.parent.updateHeight();\n            }\n            if (xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label').length){\n                xabber.settings_modal_view.$('.settings-tab[data-block-name=\"media-gallery\"] .settings-block-label')\n                    .text(xabber.getString(\"settings_account__storage_label\", [utils.pretty_size(response.total.used), utils.pretty_size(response.quota)]));\n                xabber.settings_modal_view.updateHeight();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice');\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').addClass('grid');\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('file');\n            this.$('.gallery-files').removeClass('grid')\n        }\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.settings-tab'),\n            file_type = $target.attr('data-media-type'),\n            tab_header = $target.attr('data-header-text');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(tab_header);\n        this.parent.$('.btn-select-files').removeClass('hidden');\n        this.parent.$('.btn-sorting').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.$('.gallery-wrap').addClass('hidden');\n        this.$('.media-gallery-items-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').attr('data-value', file_type);\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    backToMain: function (ev) {\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.parent.$('.btn-select-files').addClass('hidden');\n        this.parent.$('.btn-sorting').addClass('hidden');\n        this.parent.$('.settings-panel-head-title').text(xabber.getString(\"account_cloud_storage\"));\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.$('.gallery-wrap').removeClass('hidden');\n        this.$('.media-gallery-items-wrap').addClass('hidden');\n        this.updateStorage();\n        if (this.parent){\n            this.parent.updateHeight();\n        }\n        if (xabber.settings_modal_view){\n            xabber.settings_modal_view.updateHeight();\n        }\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    showDeleteFilesView: function (ev) {\n        xabber.trigger('show_delete_files', {model: this.account, gallery_view: this});\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.media-gallery-items-wrap').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove();\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: false,\n                }));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(`<div class=\"no-files\">${xabber.getString(\"no_files\")}</div>`)\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n        if (this.parent && this.parent.updateHeight)\n            this.parent.updateHeight();\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: JSON.stringify({id: file_id}),\n                    success: (response) => {\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    enableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').addClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').addClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').addClass('hidden');\n        this.parent.$('.btn-back-settings').addClass('hidden');\n        this.onSelectFile();\n    },\n\n    disableFilesSelect: function (ev) {\n        this.$('.media-gallery-items-wrap').removeClass('select-items-state');\n        this.parent.$('.settings-panel-head-title').removeClass('hidden');\n        this.parent.$('.btn-more.media-gallery-button').removeClass('hidden');\n        this.parent.$('.btn-back-settings').removeClass('hidden');\n        this.$('.gallery-file .checkbox-field input:checked').prop('checked', false);\n    },\n\n    selectFile: function (ev) {\n        let $target_input = $(ev.target).closest('.checkbox-field').find('input');\n        $target_input.prop('checked', !$target_input.prop('checked'));\n        this.onSelectFile();\n    },\n\n    onSelectFile: function () {\n        if (!this.$('.media-gallery-items-wrap').attr('data-value'))\n            return;\n        let selected_count = this.$('.gallery-file .checkbox-field input:checked').length,\n            selected_header;\n        selected_header = xabber.getQuantityString(`media_gallery_selected_${this.$('.media-gallery-items-wrap').attr('data-value')}_header`, selected_count);\n        this.$('.gallery-selection-head').text(selected_header);\n\n        this.$('.gallery-file .checkbox-field input:checked').closest('.gallery-file').addClass('selected-gallery-file');\n        this.$('.gallery-file .checkbox-field input:not(:checked)').closest('.gallery-file').removeClass('selected-gallery-file');\n    },\n\n    deleteSelectedFiles: function () {\n        this.$('.gallery-file .checkbox-field input:checked').each((idx, item) => {\n            let file_id = $(item).closest('.gallery-file').attr('data-id');\n            if (file_id){\n                if (this.$('.media-gallery-items-wrap').attr('data-value') === 'avatars'){\n                    this.deleteAvatar({target: item});\n                } else {\n                    this.deleteFile({target: item});\n                }\n            }\n        })\n        this.disableFilesSelect();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.DeleteFilesFromGalleryView = xabber.BasicView.extend({\n    className: 'modal main-modal delete-files-modal',\n    ps_selector: '.modal-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    template: templates.delete_files_media_gallery,\n    events: {\n        \"click .btn-confirm\": \"deleteFilesFiltered\",\n        \"click .btn-delete-files-percent\": \"deletePercent\",\n        \"click .btn-cancel\": \"close\",\n        \"click .gallery-file\": \"onClickFile\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.gallery_view = options.gallery_view;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$el.removeClass('wide-deletion');\n        this.$('.media-gallery-delete-items-wrap').addClass('hidden');\n        this.$('.deletion-variants').removeClass('hidden');\n        this.$('.modal-footer').addClass('hidden');\n        this.$('.gallery-files').addClass('hidden');\n        this.$('.list-variant.tab').addClass('hidden');\n        this.$('.delete-files-preview-container').addClass('hidden');\n        this.$('.setting-name').addClass('hidden');\n        this.$('.delete-files-preview-wrap .gallery-files').html('');\n        this.$('.media-gallery-delete-items-wrap .no-files').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files\"));\n        this.updateScrollBar();\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target),\n            gallery;\n\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.gallery_view.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    deletePercent: function (ev) {\n        let $target = $(ev.target).closest('.btn-delete-files-percent'),\n            percent = $target.attr('data-value');\n        this.$el.addClass('wide-deletion');\n        this.$('.deletion-variants').addClass('hidden');\n        this.$('.modal-header').text(xabber.getString(\"media_gallery_delete_files_header\"));\n        this.updateScrollBar();\n        let options = {percent: percent}\n        this.current_page_preview = 1\n        $(env.templates.contacts.preloader()).appendTo(this.$('.modal-content'))\n        this.getFilesForDeletion(options);\n    },\n\n    getFilesForDeletion: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        let current_page = this.current_page_preview;\n                        if (current_page < response.total_pages){\n                            this.current_page_preview++;\n                            options.page = this.current_page_preview;\n                            this.getFilesForDeletion(options)\n                        } else {\n                            this.$('.preloader-wrapper').remove();\n                            this.$('.modal-footer').removeClass('hidden');\n                            this.$('.media-gallery-delete-items-wrap').removeClass('hidden');\n                            this.updateScrollBar();\n                        }\n                        this.renderForDeletion(response);\n                        if (current_page === 1 && response.items && response.items.length){\n                            this.date_lte_for_deletion = response.items[0].created_at;\n                        } else if (current_page === 1) {\n                            this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                        }\n                    },\n                    error: (response) => {\n                        console.log(response)\n                        this.$('.preloader-wrapper').remove();\n                        this.$('.media-gallery-delete-items-wrap .no-files').removeClass('hidden');\n                        this.updateScrollBar();\n                    }\n                });\n            }\n        });\n    },\n\n    renderForDeletion: function (response) {\n        if (response.items && response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let duration;\n                item.metadata && item.metadata.duration && (duration = utils.pretty_duration(item.metadata.duration));\n                let $gallery_file = $(templates.media_gallery_account_file({\n                    file: item,\n                    svg_icon: utils.file_type_icon_svg(item.media_type),\n                    filesize: utils.pretty_size(item.size),\n                    created_at: utils.pretty_date(item.created_at),\n                    duration: duration,\n                    download_only: true,\n                }));\n                if (item.media_type && item.media_type.includes('image')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-images'));\n                    this.$('.delete-files-images').removeClass('hidden');\n                } else if (item.media_type && item.media_type.includes('video')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-videos'));\n                    this.$('.delete-files-videos').removeClass('hidden');\n                } else if (item.media_type && item.media_type.includes('+voice')){\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-voices'));\n                    this.$('.delete-files-voices').removeClass('hidden');\n                } else {\n                    $gallery_file.appendTo(this.$('.gallery-files.delete-files-files'));\n                    this.$('.delete-files-files').removeClass('hidden');\n                }\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n            let dropdown_settings = {\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'right'\n            };\n            this.$('.dropdown-button').dropdown(dropdown_settings)\n            this.$('.list-variant.tab:not(.hidden)').length && this.$('.list-variant.tab:not(.hidden)').first().click();\n            this.updateScrollBar();\n        }\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (!this.date_lte_for_deletion)\n            return\n\n        utils.dialogs.ask(xabber.getString(\"media_gallery_delete_files_confirm_delete_header\"), xabber.getString(\"media_gallery_delete_files_confirm_delete_text\"),\n            null, { ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (!res)\n                return;\n            $(env.templates.contacts.preloader()).appendTo(this.$('.modal-footer'))\n            this.account.testGalleryTokenExpire(() => {\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                        url: this.account.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        contentType: \"application/json\",\n                        data: JSON.stringify({date_lte: this.date_lte_for_deletion}),\n                        success: (response) => {\n                            console.log(response);\n                            this.close();\n                        },\n                        error: (response) => {\n                            this.account.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        this.gallery_view.updateStorage();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AccountSettingsModalView = xabber.BasicView.extend({\n    className: 'settings-panel-wrap',\n    template: templates.account_settings_modal,\n    ps_selector: '.settings-panel',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"click .background-overlay\": \"closeSettings\",\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-back\": \"showSettings\",\n        \"click .btn-back-settings\": \"backToMenu\",\n        \"click .btn-back-subsettings-account\": \"backToSubMenu\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .settings-tab[data-block-name='status']\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab:not(.delete-account):not(.settings-non-tab)\": \"jumpToBlock\",\n        \"click .tokens-wrap .settings-tab.token-wrap\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\",\n        \"click .settings-tab.unregister-account\": \"unregisterAccount\",\n\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"click .color-picker-button\": \"changeColor\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-revoke-token\": \"revokeXToken\",\n        \"click .devices-wrap .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .btn-select-files\": \"enableFilesSelect\",\n        \"click .all-sessions .device-encryption.active\": \"openFingerprint\",\n        \"click .device-information-trust\": \"openFingerprintDevice\",\n        \"click .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function (options) {\n        if (options.forced_ps_container){\n            this.ps_container = options.forced_ps_container;\n        }\n        this.status_field = new xabber.StatusMessageModalWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardModalView,\n            {model: this.model,});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.groups.on(\"change\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"add\", this.updateGroupsLabel, this);\n        this.model.groups.on(\"destroy\", this.updateGroupsLabel, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"update_omemo_devices\", this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateOmemoDevices, this);\n        this.model.on('trusting_updated', this.updateXTokens, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n        if (options && !options.single_account_modal) {\n            $(document).on(\"keyup.account_settings_modal\", (ev) => {\n                if (ev.keyCode === constants.KEY_ESCAPE && this.data.get('visible') && !options.single_account_modal) {\n                    this.closeSettings();\n                }\n            });\n        }\n    },\n\n    render: function (options) {\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.$('.btn-sorting').addClass('hidden');\n        this.$('.settings-panel-head-title').removeClass('hidden');\n        this.$('.media-gallery-button.btn-more').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n        return this;\n    },\n\n    updateHeight: function () {\n        let height;\n        if (!this.$('.left-column').hasClass('hidden'))\n            height = this.$('.left-column').height();\n        if (!this.$('.right-column').hasClass('hidden'))\n            height = this.$('.right-column').height();\n        this.ps_container.css('height', height + 'px');\n        this.updateScrollBar();\n    },\n\n    updateBlockedLabel: function () {\n        if (!(this.model.blocklist && this.model.blocklist.list))\n            return;\n\n        let blocked_count = Object.keys(this.model.blocklist.list).length,\n            label_text = blocked_count === 0 ? xabber.getString(\"no_entries\") : xabber.getQuantityString(\"entry_count\", blocked_count);\n        this.$('.settings-tab[data-block-name=\"blocklist\"] .settings-block-label').text(label_text);\n    },\n\n    onScrollY: function () {\n        if (this.getScrollTop() === 0)\n            this.$('.settings-panel-head').removeClass('lined-head');\n        else\n            this.$('.settings-panel-head').addClass('lined-head');\n        if (this.getScrollTop() >= 180)\n            this.$('.settings-account-head').addClass('head-scrolled');\n        else\n            this.$('.settings-account-head').removeClass('head-scrolled');\n    },\n\n    jumpToBlock: function (ev) {\n        this.jumpToBlockHandler(ev);\n    },\n\n    jumpToBlockHandler: function (ev) {\n        if ($(ev.target).closest('.device-encryption').length || $(ev.target).closest('.btn-revoke-token').length)\n            return;\n\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.attr('data-block-name')),\n            block_name = $tab.attr('data-block-name');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n            if (block_name != 'media-gallery'){\n                this.$('.media-gallery-button.btn-more').addClass('hidden');\n            }\n        }\n        if (block_name === 'password'){\n            xabber.trigger('change_account_password', this.model);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        this.$('.left-column').addClass('hidden');\n        this.$('.right-column').removeClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (block_name === 'media-gallery'){\n            this.gallery_view.$('.media-gallery-items-wrap:not(.delete-files-preview-wrap)').removeClass('select-items-state');\n            this.gallery_view.disableFilesSelect();\n            this.gallery_view.backToMain();\n        }\n        if (block_name === 'blocklist'){\n            this.$('.blocklist-tabs-wrap .tabs .indicator').remove();\n            this.$('.blocklist-tabs-wrap .tabs').tabs();\n            this.$('.blocklist-tabs-wrap .indicator').addClass('ground-color-500');\n        }\n        if (block_name === 'vcard-tab'){\n            this.vcard_view.showEditView(this.$('.vcard'));\n        }\n        if (block_name === 'device-information'){\n            $elem.attr('data-token-uid', $tab.attr('data-token-uid'));\n            this.updateDeviceInformation($tab.attr('data-token-uid'));\n        }\n        this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', '');\n        if ($tab.closest('.right-column') && $tab.attr('data-subblock-parent-name')) {\n            this.$('.btn-back-settings').addClass('hidden');\n            this.$('.btn-back-subsettings-account').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').attr('data-subblock-parent-name', $tab.attr('data-subblock-parent-name'));\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToMenu: function (ev) {\n        this.backToMenuHandler(ev);\n    },\n\n    backToMenuHandler: function (ev) {\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    backToSubMenu: function (ev) {\n        this.backToSubMenuHandler(ev);\n    },\n\n    backToSubMenuHandler: function (ev) {\n        let $tab = $(ev.target).closest('.btn-back-subsettings-account'),\n            block_name = $tab.attr('data-subblock-parent-name');\n        if (!block_name){\n            this.backToMenu(ev);\n            return;\n        }\n        let $elem = this.$('.settings-block-wrap.' + block_name),\n            elem_parent = $elem.attr('data-parent-block');\n        if (block_name){\n            this.$('.device-more-button.btn-more').hideIf(block_name != 'encryption');\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span.settings-panel-head-title').text($elem.attr('data-header'));\n        if (elem_parent) {\n            $tab.attr('data-subblock-parent-name', elem_parent);\n            this.deselectBlocked();\n        } else {\n            this.$('.btn-back-settings').removeClass('hidden');\n            this.$('.btn-back-subsettings-account').addClass('hidden');\n        }\n        this.scrollToTop();\n        this.updateHeight();\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateNameCSS();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        this.$('.settings-tab[data-block-name=\"profile\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"encryption\"]').showIf(connected);\n        this.$('.profile-image-dropdown').showIf(connected);\n        this.$('.set-groupchat-avatar').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    },\n\n    closeSettings: function (ev) {\n        xabber.settings_modal_view.closeSettings();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, () => {\n                    this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    deleteAccount: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            [], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            this.model.deleteAccount(true);\n        });\n    },\n\n    unregisterAccount: function () {\n        xabber.trigger('unregister_account', this.model);\n    },\n\n\n\n\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status');\n        this.$('.settings-block-wrap.status .settings-subblock-wrap .status').attr('data-status', status);\n\n        this.$('.settings-tab[data-block-name=\"status\"] .settings-block-label').text(this.model.getStatusMessage());\n    },\n\n    updateOmemoDevices: function () {\n        if (this.model.omemo && this.model.omemo.store){\n            let identity_key = this.model.omemo.store.get('identityKey');\n            if (identity_key){\n                this.$('.btn-manage-devices').removeClass('hidden2');\n            } else {\n                this.model.omemo.store.once('change:identityKey', () => {\n                    this.$('.btn-manage-devices').removeClass('hidden2');\n                }, this);\n            }\n        }\n        else\n            this.$('.btn-manage-devices').addClass('hidden2');\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.sessions-wrap').html(\"\");\n        this.$('.orphaned-fingerprints-wrap').html(\"\");\n        this.$('.device-encryption-warning').addClass('hidden');\n        this.$('.device-encryption-warning').attr('data-not-trusted-count', 0);\n        this.$('.settings-tab[data-block-name=\"devices\"] .settings-block-label').text(xabber.getQuantityString(\"settings_account__devices_subheader_label\", this.model.x_tokens_list.length));\n        $(_.sortBy(this.model.x_tokens_list, '-last_auth')).each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime_date(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    pretty_token.is_omemo = this.model.omemo ? true : false\n                    let $cur_token_html = $(templates.current_token_item_modal(pretty_token));\n                    this.$('.current-session').append($cur_token_html);\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item_modal(pretty_token));\n            this.$('.all-sessions').append($token_html);\n            if (this.model.omemo) {\n                !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n                let omemo_device_id = token.omemo_id ? token.omemo_id : Number(pretty_token.token_uid.slice(0,8));\n                this.omemo_own_devices.updateTrustDevice(Number(omemo_device_id), $token_html, this, () => {\n                    if (this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).length\n                        && !this.$(`.settings-block-wrap.device-information[data-token-uid=\"${pretty_token.token_uid}\"]`).hasClass('hidden')){\n                        this.updateDeviceInformation(pretty_token.token_uid);\n                    }\n                });\n            } else {\n                if (token.omemo_id){\n                    $token_html.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n                    $token_html.find('.device-encryption .mdi-lock').removeClass('hidden');\n                }\n            }\n        });\n        if (this.$('.all-sessions').children().length){\n            this.$('.all-sessions-wrap').removeClass('hidden');\n            this.$('.active-sessions-label').removeClass('hidden');\n            this.$('.btn-revoke-all-tokens').removeClass('hidden');\n        }\n        else {\n            this.$('.all-sessions-wrap').addClass('hidden');\n            this.$('.active-sessions-label').addClass('hidden');\n            this.$('.btn-revoke-all-tokens').addClass('hidden');\n        }\n        this.$('.devices-wrap').removeClass('hidden')\n        !this._single_account  && this.$('.token-wrap').attr('data-subblock-parent-name', '');\n        this.updateHeight();\n    },\n\n    updateDeviceInformation: function (token_uid) {\n        let token = this.model.x_tokens_list.find(item => (item.token_uid === token_uid));\n        this.$('.device-information-last-seen').showIf(pretty_datetime(token.last_auth)).find('.device-information-text').text(pretty_datetime(token.last_auth));\n        this.$('.device-information-device').showIf(token.device).find('.device-information-text').text(token.device);\n        this.$('.device-information-client').showIf(token.client).find('.device-information-text').text(token.client);\n        this.$('.device-information-ip').showIf(token.ip).find('.device-information-text').text(token.ip);\n        this.$('.device-information-expires').showIf(pretty_datetime(token.expire)).find('.device-information-text').text(pretty_datetime(token.expire));\n        this.$('.device-information-device-id').showIf(token.omemo_id).find('.device-information-text').text(token.omemo_id);\n        this.$('.device-information-security-label').showIf(token.omemo_id);\n        let resource_obj = this.model.resources.findWhere({ token_uid: token_uid }),\n            status_text;\n        if (resource_obj){\n            status_text = resource_obj.get('status_message') || resource_obj.get('status') && xabber.getString(resource_obj.get('status')) || xabber.getString(\"account_state_connected\");\n        } else if (this.model.get('x_token').token_uid == token.token_uid){\n            status_text = this.model.get('status_message') || this.model.get('status') && xabber.getString(this.model.get('status')) || xabber.getString(\"account_state_connected\")\n        } else\n            status_text = xabber.getString(\"offline\");\n\n        this.$('.device-information-status .device-information-text').text(status_text);\n\n        if (this.model.get('x_token')) {\n            this.$('.btn-revoke-token').hideIf(this.model.get('x_token').token_uid == token.token_uid);\n            this.$('.device-information-trust')\n                .switchClass('hidden', this.model.get('x_token').token_uid == token.token_uid)\n        }\n        if (token.omemo_id && this.model.omemo){\n            let dfd = new $.Deferred(),\n                device = this.model.omemo.own_devices[token.omemo_id];\n            dfd.done((fing) => {\n                if (fing.match(/.{1,8}/g))\n                    fing = fing.match(/.{1,8}/g).join(\" \");\n                this.$('.device-information-fingerprint').showIf(fing).find('.device-information-text').text(fing);\n\n                let $this_device = this.$(`.token-wrap[data-token-uid=\"${token_uid}\"]`)\n\n                this.$('.device-information-trust').removeClass('hidden');\n                this.$('.device-information-trust-text').text($this_device.attr('data-trust-text'));\n                this.$('.device-information-trust').attr('data-trust', $this_device.attr('data-trust'));\n                this.$('.device-information-trust-text').attr('data-trust', $this_device.attr('data-trust'));\n                if (this.model.get('x_token') && this.model.get('x_token').token_uid == token.token_uid){\n                    this.$('.device-information-trust-text').text(xabber.getString(\"settings_account__omemo_enabled\"));\n                    this.$('.device-information-trust').addClass('hidden');\n                    this.$('.device-information-trust').attr('data-trust', 'trust');\n                    this.$('.device-information-trust-text').attr('data-trust', 'trust');\n                }\n            })\n            if (device.get('fingerprint')) {\n                dfd.resolve(device.get('fingerprint'));\n            } else if (device.get('ik')) {\n                device.set('fingerprint', device.generateFingerprint());\n                dfd.resolve(device.get('fingerprint'));\n            } else {\n                device.getBundle().then(({pk, spk, ik}) => {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let fingerprint = device.generateFingerprint();\n                    if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                        device.set('fingerprint', fingerprint);\n                    dfd.resolve(device.get('fingerprint'));\n                });\n            }\n        } else {\n            this.$('.device-information-fingerprint').addClass('hidden');\n            this.$('.device-information-trust').addClass('hidden');\n            this.$('.device-information-trust-text').text('');\n            this.$('.device-information-trust').attr('data-trust', '');\n            this.$('.device-information-trust-text').attr('data-trust', '');\n        }\n        this.$('.settings-panel-head span.settings-panel-head-title').text(token.device);\n    },\n\n    openFingerprint: function (ev) {\n        if (this.model.omemo){\n            let $target = $(ev.target).closest('.device-encryption'),\n                is_own = $target.hasClass('is-own');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.closest('.token-wrap').attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.closest('.token-wrap').attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), is_own);\n        }\n    },\n\n    openFingerprintDevice: function (ev) {\n        if (this.model.omemo){\n            if ($(ev.target).closest('.device-information-trust.device-information-trust-own').length)\n                return;\n            let $target = $(ev.target).closest('.device-information');\n            !this.omemo_own_devices && (this.omemo_own_devices = new xabber.FingerprintsOwnDevices({model: this.model.omemo}));\n            let token = this.model.x_tokens_list.find(item => (item.token_uid === $target.attr('data-token-uid'))),\n                omemo_device_id = token && token.omemo_id ? token.omemo_id : Number($target.attr('data-token-uid').slice(0,8));\n            this.omemo_own_devices.open(Number(omemo_device_id), false);\n        }\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.tokens').addClass('hidden');\n            this.$('.sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.model.getAllXTokens(() => {\n            this.$('.sessions-wrap').html(\"\");\n            if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                this.renderAllXTokens();\n            }\n        });\n    },\n\n    updateGroupsLabel: function () {\n        let groups_count = this.model.groups.length,\n            label_text = groups_count === 0 ? xabber.getString(\"contact_circles_empty\") : xabber.getQuantityString(\"settings_account__section_header_circles\", groups_count);\n\n        this.$('.settings-tab[data-block-name=\"circles-groups\"] .settings-block-label').text(label_text);\n    },\n\n    revokeXToken: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"terminate_session_title\"), xabber.getString(\"terminate_session_text\"),\n            {}, { ok_button_text: xabber.getString(\"button_terminate\")}).done((res) => {\n            if (!res)\n                return;\n            let $target = $(ev.target).closest('.settings-block-wrap.device-information'),\n                token_uid = $target.attr('data-token-uid');\n            this.model.revokeXToken([token_uid], () => {\n                if (this.model.get('x_token')){\n                    if (this.model.get('x_token').token_uid === token_uid) {\n                        this.model.deleteAccount(true);\n                        return;\n                    }\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        this.$('.btn-back-subsettings-account').length && this.backToSubMenu({target: this.$('.btn-back-subsettings-account')[0]})\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                }\n            });\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens(() => {\n                        this.$('.sessions-wrap').html(\"\");\n                        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n                            this.renderAllXTokens();\n                        }\n                    });\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.device-more-button').switchClass('hidden', !enabled);\n        this.$('.label-encryption-enabled').switchClass('hidden', !enabled);\n        this.$('.label-encryption-disabled').switchClass('hidden', enabled);\n        if (!this.model.omemo){\n            this.$('.btn-manage-devices').addClass('hidden2');\n        }\n        this.updateHeight();\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n        if (xabber.accounts.length !== 1){\n            this.showSettings();\n        }\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n            this.updateXTokens();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n        this.updateXTokens();\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = $(ev.target).closest('.color-picker-button').attr('data-color-value');\n        this.model.settings.update_settings({color: value});\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist){\n            this.children.blocklist.unblockSelected();\n        }\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    sortFiles: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.sortFiles(ev);\n    },\n\n    enableFilesSelect: function () {\n        if (this.gallery_view)\n            this.gallery_view.enableFilesSelect();\n    },\n});\n\nxabber.AccountSettingsSingleModalView = xabber.AccountSettingsModalView.extend({\n    className: 'single-account-settings-panel-wrap',\n    template: templates.single_account_settings_modal,\n    // ps_selector: '.right-column',\n    // ps_settings: {\n    //     wheelPropagation: true\n    // },\n\n    render: function (view, options, args) {\n        if (!_.isNull(view))\n            return;\n        this.$el.detach();\n        this.parent.$('.single-account-info-wrap').append(this.$el);\n        this.ps_container = this.parent.ps_container;\n        this.gallery_view.render();\n        this._single_account = true;\n\n        this.$el.attr('data-color', this.model.settings.get('color'));\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.updateCSS();\n\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateGroupsLabel();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.updateOmemoDevices;\n        this.$('.left-column').removeClass('hidden');\n        this.$('.right-column').addClass('hidden');\n        this.$('.btn-back-settings').removeClass('hidden');\n        this.$('.btn-back-subsettings-account').addClass('hidden');\n        this.updateHeight();\n        this.updateBlockedLabel();\n        if (options && options.account_block_name) {\n            let $elem = this.$(`.settings-tab[data-block-name=\"${options.account_block_name}\"]`);\n            if ($elem.length)\n                this.jumpToBlock({target: $elem[0]});\n        }\n\n        this.parent.single_account_has_rendered = true;\n        return this;\n    },\n\n    jumpToBlock: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.jumpToBlockHandler(ev);\n    },\n\n    backToMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').removeClass('hidden');\n        this.backToMenuHandler(ev);\n    },\n\n    backToSubMenu: function (ev) {\n        this.parent.$('.left-column .settings-tabs-wrap.global-settings-tabs').addClass('hidden');\n        this.backToSubMenuHandler(ev);\n    },\n\n    updateHeight: function () {\n        this.parent.updateHeight();\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.StatusMessageModalWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n    template: templates.status_message_input_widget,\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemModalView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item_modal,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.updateEnabled();\n        this.updateNickname();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.on(\"change:vcard\", this.updateNickname, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateNickname: function () {\n        let nickname;\n        if (this.model.get('vcard')) {\n            if (this.model.get('vcard').nickname)\n                nickname = this.model.get('vcard').nickname;\n            else if (this.model.get('vcard').fullname)\n                nickname = this.model.get('vcard').fullname;\n            else if (this.model.get('vcard').first_name || this.model.get('vcard').last_name)\n                nickname = this.model.get('vcard').first_name + ' ' + this.model.get('vcard').last_name;\n        }\n        if (nickname){\n            this.$('.nickname').text(nickname);\n            this.$('.jid').text(this.model.get('jid'));\n            this.$('.nickname-wrap').removeClass('single-row');\n            this.$('.jid-wrap').removeClass('hidden');\n        } else {\n            this.$('.nickname').text(this.model.get('jid'));\n            this.$('.nickname-wrap').addClass('single-row');\n            this.$('.jid-wrap').addClass('hidden');\n        }\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        // this.$('.status').attr('data-status', this.model.get('status'));\n        // this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n    },\n\n    showSettings: function () {\n        if (this.model.get('enabled'))\n            this.model.showSettingsModal();\n        else {\n            utils.dialogs.ask_extended(xabber.getString(\"settings_account__enable_account_label\"), xabber.getString(\"settings_account__enable_account_text\", [this.model.get('jid')]),\n                {modal_class: 'modal-offline-account', no_dialog_options: true},\n                {\n                    ok_button_text: xabber.getString(\"button_enable\"),\n                    optional_button: 'delete-account',\n                    optional_button_text: xabber.getString(\"settings_account__button_quit_account\")\n                }).done((res) => {\n                    if (res){\n                        if (res === 'delete-account')\n                            this.model.deleteAccount(null, true);\n                        else {\n                            this.model.save('enabled', true);\n                            this.model.activate();\n                        }\n                    }\n            });\n        }\n    }\n});\n\nxabber.SettingsAccountsModalBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        this.model.on(\"add\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"update_order\", this.parent.updateAccounts, this.parent);\n        this.model.on(\"destroy\", this.parent.updateAccounts, this.parent);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemModalView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.no-accounts-tip').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n    },\n\n    updateSyncState: function () {\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    contentType: \"application/json\",\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatarSelecter: function () {\n        if (this.contact){\n            this.addNotOwnAvatar();\n        } else {\n            this.addAvatar();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    addNotOwnAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                image.type = image.media_type;\n                this.contact.pubAvatar(image, participant_node, () => {\n                    this.current_items = [];\n                    this.close();\n                    if (this.parent && this.participant) {\n                        this.parent.updateMemberAvatar(this.participant, true);\n                    }\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.contact.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, participant_node, () => {\n                            this.close();\n                            if (this.parent && this.participant) {\n                                this.parent.updateMemberAvatar(this.participant, true);\n                            }\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n    addAvatarSelecter: function (ev) {\n        if (this.contact){\n            this.saveNotOwnAvatar();\n        } else {\n            this.saveAvatar();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n\n    saveNotOwnAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            }),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n            this.$('.btn-save').addClass('hidden-disabled');\n            this.$('.circle-icon').addClass('disabled');\n            this.contact.pubAvatar(file, participant_node, () => {\n                this.close();\n                if (this.parent && this.participant) {\n                    this.parent.updateMemberAvatar(this.participant, true);\n                }\n            }, () => {\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            });\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"addAvatarSelecter\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.contact = options.contact;\n        this.participant = options.participant;\n        this.parent = options.parent;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    addAvatarSelecter: function (ev) {\n        if (this.contact){\n            this.saveNotOwnAvatar();\n        } else {\n            this.saveAvatar();\n        }\n    },\n\n    saveAvatar: function (ev) {\n        if (this.registration && this.registration_view){\n            let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.generated = true;\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            }\n        } else {\n            let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176)),\n                file = new File([blob], \"avatar.png\", {\n                    type: \"image/png\",\n                });\n            file.base64 = blob;\n            if (file && file.base64) {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n\n    saveNotOwnAvatar: function (ev) {\n        let blob = Images.getBlobImage(Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"96px EmojiFont\", 176, 176)),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            }),\n            participant_node = '';\n        if (this.participant && this.participant.get('id')){\n            participant_node = '#' + this.participant.get('id');\n        }\n        file.base64 = blob;\n        if (file && file.base64) {\n            this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n            this.$('.btn-save').addClass('hidden-disabled');\n            this.contact.pubAvatar(file, participant_node, () => {\n                this.close();\n                if (this.parent && this.participant) {\n                    if (this.participant.get('jid') === this.account.get('jid'))\n                        this.parent.updateMemberAvatar(this.participant, true);\n                }\n            }, () => {\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            });\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = templates.emojis;\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-account-password-modal',\n    template: templates.change_account_password,\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.$('.original-state').removeClass('hidden');\n        this.$('.success-state').addClass('hidden');\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n        this.keyUp();\n    },\n\n    keyUp: function (ev) {\n        ev && ev.keyCode === constants.KEY_ENTER && this.submit();\n        if (this.$old_password_input.val() && this.$password_input.val() && this.$password_confirm_input.val()){\n            this.$('.btn-change').prop('disabled', false);\n        } else {\n            this.$('.btn-change').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_view = this;\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm && !options.password_not_error)\n            .siblings('span.errors').switchClass('non-error', options.password_not_error).text(options.password_confirm || '');\n        this.parent && this.parent.updateHeight();\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.$('.original-state').addClass('hidden');\n        this.$('.success-state').removeClass('hidden');\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                        this.endAuth();\n                    } else {\n                        this.stepped_auth_complete = true\n                        if (this.first_features_received)\n                            this.successFeedback();\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\n\nxabber.UnregisterAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal unregister-account-modal',\n    template: templates.unregister_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-submit-unregister\": \"submitUnregister\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"change input[type=checkbox]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.account = options.model;\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function (options) {\n        this.authFeedback({});\n        this.data.set('step', 0);\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$('input[type=checkbox]').prop('checked', false);\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        Materialize.updateTextFields();\n    },\n\n    keyUpLogin: function (ev) {\n        let checked_count = this.$('input[type=checkbox]:checked').length;\n        if(this.$password_input.val() && checked_count === 2){\n            this.$('.btn-log-in').prop('disabled', false);\n        } else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        if(this.$jid_input.val() && this.$jid_input.val() === `delete ${this.account.get('jid')} account`){\n            this.$('.btn-submit-unregister').prop('disabled', false);\n        } else {\n            this.$('.btn-submit-unregister').prop('disabled', true);\n        }\n        this.authFeedback({});\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password && !options.password_not_error);\n        this.$('.login-form-jid .login-password-error').switchClass('non-error', options.password_not_error).text(options.password || '');\n    },\n\n    unregisterAccount: function (callback, errback) {\n        let iq = $iq({\n            type: 'set',\n            to: this.connection.domain,\n            from: this.get('jid')\n        }).c('query', {xmlns:Strophe.NS.REGISTER}).c('remove');\n        this.sendIQFast(iq, (success) => {\n                callback & callback(success);\n            },\n            function (error) {\n                errback && errback(error);\n            });\n    },\n\n    login: function (callback, errback) {\n        this.submit()\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\"), password_not_error: true});\n        if (!this.account.unregister_account_connection_manager) {\n            this.account.unregister_account_view = this;\n            this.account.unregister_account_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.unregister_account_connection = this.account.unregister_account_connection_manager.connection;\n            this.account.unregister_account_connection.account = this.account;\n            this.account.unregister_account_connection.register.connect_change_password(this.account.get('jid'), password, this.account.unregisterAccountCallback.bind(this.account))\n        }\n    },\n\n    submitUnregister: function () {\n        this.authFeedback({});\n        if (this.$jid_input.val() !== this.account.get('jid'))\n            return this.errorFeedback({jid: xabber.getString(\"settings_account__unregister_jid_mismatch\")});\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.register.submit_unregister();\n        } else {\n            this.data.set('step', 0);\n            return this.errorFeedback({password: xabber.getString(\"settings_account__connection_broken\")});\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step');\n        if (step === 0){\n            this.$('.login-form-step-wrap').removeClass('hidden');\n            this.$('.btn-log-in').removeClass('hidden');\n            this.$('.btn-submit-unregister').addClass('hidden');\n            this.$('.login-confirm-form-step-wrap').addClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__delete_account_modal_title'));\n            this.$('.modal-description-text').text(xabber.getString('settings_account__delete_account_modal_text'));\n        } else if (step === 1) {\n            this.$('.login-form-step-wrap').addClass('hidden');\n            this.$('.btn-log-in').addClass('hidden');\n            this.$('.btn-submit-unregister').removeClass('hidden');\n            this.$('.login-confirm-form-step-wrap').removeClass('hidden');\n            this.$('.modal-header span').text(xabber.getString('settings_account__confirm_delete_account_modal_title'));\n            this.$('.modal-description-text').html(xabber.getString('settings_account__confirm_delete_account_modal_text', [`<nobr>delete ${this.account.get('jid')} account</nobr>`]));\n        }\n    },\n\n    endAuth: function () {\n    },\n\n    checkFeaturesStepper: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (this.account && this.account.unregister_account_connection_manager && this.account.unregister_account_connection) {\n            this.account.unregister_account_connection.disconnect();\n        }\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings_modal = xabber.main_overlay_panel.addChild('account_settings_modal',\n        this.Container, {classlist: 'account-settings-panel'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.trigger('accounts_ready');\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_modal_view.addChild('accounts_modal', this.SettingsAccountsModalBlockView,\n        {model: this.accounts, el: this.settings_modal_view.$('.accounts-info-wrap')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    this.on(\"unregister_account\", function (account) {\n        if (!this.unregister_account_view)\n            this.unregister_account_view = new this.UnregisterAccountView();\n        this.unregister_account_view.show({model: account});\n    }, this);\n\n    this.on(\"change_account_password\", function (account) {\n        if (!this.change_account_password_view)\n            this.change_account_password_view = new this.ChangeAccountPasswordView();\n        this.change_account_password_view.show({model: account});\n    }, this);\n\n    this.on(\"show_delete_files\", function (options) {\n        if (!this.delete_files_view)\n            this.delete_files_view = new this.DeleteFilesFromGalleryView();\n        this.delete_files_view.show(options);\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-check-icon mdi mdi-24px\"/>')\n                .append('<div class=\"feature-name one-line\"/>');\n        this.$('.feature-check-icon').append(env.templates.svg['check-circle']());\n    },\n\n    _initialize: function (options, attrs) {\n        this.render();\n        this.model.collection.account.settings_account_modal && this.$el.appendTo(this.model.collection.account.settings_account_modal.$('.capabilities'));\n        if (options.single_account && options.single_account.$('.capabilities').length){\n            this.$el.appendTo(options.single_account.$('.capabilities'));\n        }\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.feature-check-icon').showIf(supports);\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            xabber.get('client_name'),\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.capabilities').html('');\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature, single_account: single_account});\n        });\n    },\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        });\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._main_interval_worker)\n        this._main_interval_worker.terminate();\n\n    this._main_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._main_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime main to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            this._main_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime main to ping: ' + downtime);\n            this.connection && this.connection.ping.ping(this.get('domain'));\n        }\n    };\n\n    this._main_interval_worker.postMessage({});\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    if (this._fast_interval_worker)\n        this._fast_interval_worker.terminate();\n\n    this._fast_interval_worker = new Worker(new URL('./worker.js', import.meta.url));\n\n    this._fast_interval_worker.onmessage = () => {\n        let downtime = (moment.now() - this.last_fast_stanza_timestamp) / 1000;\n        if (!navigator.onLine || downtime > (constants.DOWNTIME_RECONNECTION_TIMEOUT || 15)) {\n            if (!navigator.onLine){\n                console.log('navigator: ' + navigator.onLine)\n                console.log('this.connection.connected: ' + this.connection.connected)\n            }\n            console.log('downtime fast to disconnect: ' + downtime);\n            console.log(this.connection.connected);\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            this._fast_interval_worker.terminate();\n        }\n        if (downtime > (constants.PING_SENDING_INTERVAL || 10)) {\n            console.log('downtime fast to ping: ' + downtime);\n            this.fast_connection && this.fast_connection.ping.ping(this.get('domain'));\n        }\n    };\n    this._fast_interval_worker.postMessage({});\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    VanillaQR = env.VanillaQR,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.account && this.account.chat_settings && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:name\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated') && !attrs.is_deleted)\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            cached_info = cached_info || {};\n            let roster_info = {\n                jid: this.get('jid'),\n                in_roster: !_.isUndefined(this.get('in_roster')) ? this.get('in_roster') : cached_info.in_roster,\n                groups: this.get('groups'),\n                subscription: !_.isUndefined(this.get('subscription')) ? this.get('subscription') : cached_info.subscription,\n                roster_name: !_.isUndefined(this.get('roster_name')) ? this.get('roster_name') : cached_info.roster_name,\n                subscription_request_out: this.get('subscription_request_out'),\n                subscription_request_in: this.get('subscription_request_in'),\n                name: this.get('name'),\n                vcard_updated: this.get('vcard_updated')\n            }, full_jid = this.get('full_jid');\n            if (this.get('photo_hash') || this.get('image'))\n                _.extend(roster_info, {\n                    photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                    avatar_priority: this.get('avatar_priority'),\n                    avatar: this.get('image')\n                });\n            if (full_jid)\n                roster_info.resource = Strophe.getResourceFromJid(full_jid);\n            this.account.cached_roster.putInRoster(roster_info);\n        });\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat') && this.get('removed')) {\n            xabber.error(\"removed contact became groupchat\")\n        }\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    onDestroy: function () {\n        if (this.account && this.account.groupchat_settings && this.participants) {\n            this.participants.reset();\n            this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item, {my_info: true});\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let dfd = new $.Deferred();\n\n        dfd.done((data, http_avatar) => {\n            if (http_avatar) {\n                let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                data.thumbnails && data.thumbnails.forEach((thumbnail) => {\n                    iq_pub_metadata.c('thumbnail', {\n                        xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                        url: thumbnail.url,\n                        width: thumbnail.width,\n                        height: thumbnail.height,\n                    }).up()\n                })\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }\n            else {\n                let avatar_hash = image.hash || sha1(image.base64),\n                    iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                    iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                        .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                        .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                        .c('item', {id: avatar_hash})\n                        .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                        .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                this.account.sendIQFast(iq_pub_data, () => {\n                        this.account.sendIQFast(iq_pub_metadata, () => {\n                                callback && callback(avatar_hash);\n                            },\n                            function (data_error) {\n                                errback && errback(data_error);\n                            });\n                    },\n                    (data_error) => {\n                        errback && errback(data_error);\n                    });\n            }\n        });\n        if (image.uploaded){\n            dfd.resolve(image, true)\n        }\n        else if (this.account.get('gallery_token') && this.account.get('gallery_url') && !image.generated && !image.uploaded){\n            let file = image.name ? image : image.file;\n            this.account.uploadAvatar(file, (res) => {\n                if (res.thumbnails && res.thumbnails.length || res.file){\n                    res.type = file.type;\n                    dfd.resolve(res, true)\n                } else\n                    dfd.resolve(image.base64)\n            }, (res) => {\n                dfd.resolve(image.base64)\n            });\n        } else\n            dfd.resolve(image.base64)\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n            if (this.get('group_chat')){\n                this.set('group_chat', false);\n                this.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(this.get('jid'));\n            }\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        let chat = this.account.chats.getChat(this);\n                        this.removeFromRoster();\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    let chat = this.account.chats.getChat(this);\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    setActiveStateSendInterval: function () {\n        let stanza = $msg({to: this.get('jid'), type: 'chat'}).c('active', {xmlns: Strophe.NS.CHATSTATES});\n        clearTimeout(this._sending_active_chatstate_timeout);\n        clearInterval(this._sending_active_chatstate_interval);\n        this._sending_active_chatstate_timeout = setTimeout(() => {\n            this._sending_active_chatstate_interval = setInterval(() => {\n                this.account.sendMsg(stanza);\n            }, constants.PRESENT_INTERVAL);\n        }, constants.PRESENT_INTERVAL)\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                let chat = this.account.chats.getChat(this),\n                    sync_deleted = this.get('sync_deleted');\n                this.removeFromRoster();\n                if (!sync_deleted){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n    getMessageByStanzaId: function (stanza_id, callback, options) {\n        options = options || {};\n        let queryid = uuid(),\n            account = this.account,\n            is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            receiver = this.get('group_chat') ? this.get('full_jid') || this.get('jid') : this.account.get('jid'),\n            iq = $iq({type: 'set', to: receiver})\n                .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up()\n                .c('field', {'var': 'ids'})\n                .c('value').t(stanza_id).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        let handler = conn.addHandler((message) => {\n            let $msg = $(message);\n            if ($msg.find('result').attr('queryid') === queryid)\n                callback && callback($msg);\n            return true;\n        }, Strophe.NS.MAM);\n        this.account.sendIQFast(iq, () => {\n                conn.deleteHandler(handler);\n            }, () => {\n                conn.deleteHandler(handler);\n            }\n        );\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE))    {\n            iq.c('field', {'var': `conversation-type`});\n            if (options.encrypted){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n            iq.c('field', {'var': `with-tags`});\n            if (options.filter_image)\n                iq.c('value').t('image').up();\n            if (options.filter_video)\n                iq.c('value').t('video').up();\n            if (options.filter_voice)\n                iq.c('value').t('voice').up();\n            if (options.filter_files)\n                iq.c('value').t('document').up();\n            iq.up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = options && options.cached_message? $message.find('content') : $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [], cached_stanza_id;\n        options && options.cached_stanza_id && (cached_stanza_id = options.cached_stanza_id);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id') || cached_stanza_id ,\n                        id: $file.children('gallery-id').text(),\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let participant_info = this.participants.get(message.get('user_info')),\n                participant_nickname = participant_info && participant_info.get('nickname') ? participant_info.get('nickname') : null;\n            let user_info = message.get('user_info') || {},\n                chat_content = this.account.chats.get(this.hash_id).item_view.content,\n                is_scrolled = chat_content.isScrolledToBottom(),\n                msg_author = participant_nickname || user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            if (is_scrolled)\n                chat_content.scrollToBottom();\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160){\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n            200,\n            () => {\n                this.onScroll();\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .description-edit-wrap .btn-choose-image\": \"chooseAvatar\",\n        \"click .description-edit-wrap .btn-selfie\": \"makeSelfie\",\n        \"click .description-edit-wrap .btn-emoji-panel\": \"makeEmojiAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 250) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 160) {\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                let chat = this.account.chats.getChat(contact);\n                contact.removeFromRoster();\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.header-buttons').attr( 'style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.header-buttons .block-name').addClass('fade-out');\n        this.$('.btn-escape').removeClass('btn-top');\n        this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 120},\n                400,\n                () => {\n                    this.onScroll();\n                });\n            this.$('.header-buttons .block-name.second-text').text($target.text())\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    chooseAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    makeSelfie: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let webcam_panel_view = new xabber.WebcamProfileImageView();\n            webcam_panel_view.open({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    makeEmojiAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let emoji_panel_view = new xabber.EmojiProfileImageView();\n            emoji_panel_view.open({model: this.account, contact: this.model, parent: this});\n        } else\n            this.$('.circle-avatar input').click();\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.buttons-wrap.fixed-scroll').addClass('hidden2');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({}, () => {\n                this.$el.html(\"<div class='gallery-files'></div>\");\n                this.updateMedia();\n            });\n        }\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    getMediaFromDecryptedMessages: function () {\n\n        let dfd = new $.Deferred();\n\n        dfd.done(() => {\n            if (this.filter_type === 'filter_image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            else if (this.filter_type === 'filter_video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            else if (this.filter_type === 'filter_voice')\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n            else if (this.filter_type === 'filter_files')\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n            else\n                this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        }).fail(() => {\n            this.temporary_items = [];\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia()\n        });\n\n        if (this.account.omemo && this.account.omemo.cached_messages){\n\n            let cached_messages = this.account.omemo.cached_messages.getMessages(this.contact);\n\n            for (let [key, value] of Object.entries(cached_messages)) {\n                let msg_items = this.contact.getFilesFromStanza($(value), {cached_message: true, cached_stanza_id: key});\n                if (msg_items.length)\n                    this.temporary_items = this.temporary_items.concat(msg_items);\n            }\n\n            if (this.temporary_items.length){\n\n                let filtered_items = [],\n                    items_count = 0;\n\n                this.temporary_items.forEach((item, idx) => {\n                    if (this.filter_type === 'filter_image' && constants.MIME_TYPES.image.includes(item.media_type) ||\n                        this.filter_type === 'filter_video' && constants.MIME_TYPES.video.includes(item.media_type) ||\n                        this.filter_type === 'filter_voice' && constants.MIME_TYPES.audio.includes(item.media_type) ||\n                        this.filter_type === 'filter_files' &&\n                        !(\n                            constants.MIME_TYPES.image.includes(item.media_type) ||\n                            constants.MIME_TYPES.video.includes(item.media_type) ||\n                            constants.MIME_TYPES.audio.includes(item.media_type)\n                        )){\n                        if (this.filter_type === 'filter_image' && item.sources && item.sources[0]){\n                            this.chat.messages.decryptFile(item.sources[0], item.key).then((result) => {\n                                item.sources[0] = result;\n                                item.thumbnail = null;\n                                filtered_items = filtered_items.concat([item]);\n                                items_count++;\n                                if (items_count === this.temporary_items.length){\n                                    this.temporary_items = filtered_items;\n                                    dfd.resolve();\n                                }\n                            });\n\n                        } else {\n                            filtered_items = filtered_items.concat([item]);\n                            items_count++;\n                        }\n                    } else\n                        items_count++;\n                    if (items_count === this.temporary_items.length){\n                        this.temporary_items = filtered_items;\n                        dfd.resolve();\n                    }\n                });\n            } else {\n                dfd.reject();\n            }\n        } else {\n            dfd.reject();\n        }\n\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, is_encrypted: this.encrypted, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        if (this.filter_type === 'filter_image')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_images\")}`);\n        else if (this.filter_type === 'filter_video')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_videos\")}`);\n        else if (this.filter_type === 'filter_voice')\n            this.$('.gallery-files .gallery-empty-text').html(`${xabber.getString(\"no_voice_messages\")}`);\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                if (messages.length)\n                    $(templates.preloader()).appendTo(this.$('.gallery-files'));\n                else {\n                    this.loading_messages = false;\n                    callback && callback();\n                    return;\n                }\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length || $elem.closest('.audio-control-time').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').length && $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n                this.$el.html(\"<div class='gallery-files images grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n                this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n                this.$el.html(\"<div class='gallery-files files'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        if (this.encrypted) {\n            this.getMediaFromDecryptedMessages();\n        } else {\n            this.messagesFileRequest({[this.filter_type]: true}, () => {\n                this.temporary_items = this.temporary_items.filter(item => item.voice)\n                this.$el.html(\"<div class='gallery-files voice'></div>\");\n                this.updateMedia();\n                this.participant && this.updateForParticipant();\n            });\n        }\n        this.onUpdatedScreen();\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onUpdatedScreen, this);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        return this;\n    },\n\n    onUpdatedScreen: function () {\n        let block_height = xabber.body.$el.height() - 320;\n        this.$el.css('min-height', `${block_height}px`);\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n    },\n\n    onParticipantsUpdated: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        if (!participant || !participant.attributes || !participant.attributes.id){\n            participant && participant.destroy();\n            participant && participant.attributes && this.account.groupchat_settings.removeParticipantFromList(this.model.get('jid'), participant.attributes.id);\n            return;\n        }\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                this.account.chats.openChat(contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-selfie\": \"makeSelfie\",\n        \"click .btn-emoji-panel\": \"makeEmojiAvatar\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.participant.on(\"change:avatar_url\", this.updateMemberAvatar, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-y\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block').position().top + this.ps_container.scrollTop() - 120},\n            400,\n            () => {\n                this.onScroll();\n            });\n        this.$('.block-header .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name.second-text').addClass('fade-out');\n        this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        this.$('.btn-back').removeClass('btn-top');\n        this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n        this.$('.buttons-wrap').hideIf(false);\n        this.$('.btn-edit').hideIf(false);\n        this.$('.btn-qr-code').hideIf(false);\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,1) !important; -webkit-transition: none; -ms-transition: none;transition: none;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0.5) !important;');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').attr('style', 'background-color: rgba(255,255,255,0) !important;');\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (!_.isUndefined(bottom_block_scroll) && bottom_block_scroll <= 170) {\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').addClass('hidden2');\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.btn-edit-participant').hideIf(true);\n            this.$('.block-header .block-name.second-text').text(this.$('.tabs .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.participant-details-item .buttons-wrap').removeClass('hidden2');\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n            this.$('.participant-details-edit-wrap').hasClass('hidden') && this.$('.btn-edit-participant').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member, url_forced) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)) && !url_forced)\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    chooseAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    makeSelfie: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let webcam_panel_view = new xabber.WebcamProfileImageView();\n            webcam_panel_view.open({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    makeEmojiAvatar: function () {\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let emoji_panel_view = new xabber.EmojiProfileImageView();\n            emoji_panel_view.open({model: this.account, contact: this.contact, participant: this.participant, parent: this});\n        } else\n            this.clickAvatarInput();\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                            this.close();\n                            this.parent.participants._render();\n                        },\n                        (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                        this.parent.participants._render();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.set('known', true);\n                contact.set('removed', false);\n                setTimeout(() => {\n                    contact.pres('subscribe');\n                }, 500);\n                this.close();\n                contact.set('in_roster', true);\n                contact.trigger(\"open_chat\", contact);\n                contact.trigger('remove_invite', contact);\n                let chat = this.account.chats.getChat(contact);\n                chat.messages.createSystemMessage({\n                    from_jid: group_jid,\n                    message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.attr('id');\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.contact.get('jid'), id);\n                    this.trigger(\"participants_updated\");\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item, options) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n        (this.contact.get('incognito_chat') && options && options.my_info === true) && (attrs.jid = this.account.get('jid'));\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false, 'is_accepted': undefined});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.pres('subscribed');\n        contact.set('known', true);\n        contact.set('removed', false);\n        setTimeout(() => {\n            contact.pres('subscribe');\n        }, 500);\n        this.blockInvitation();\n        contact.getMyInfo();\n        this.openChat();\n        contact.trigger('remove_invite', contact);\n        let chat = this.account.chats.getChat(this.model);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n        contact.trigger('remove_invite', contact);\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add) {\n            this.$('.groups-wrap').hideIf(false)\n            this.$('.input-field input').focus();\n        }\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this._update_template = false;\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target).closest('.input-field'),\n            $input = $target.find('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n        this._update_template = true\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        this.$('.circle-avatar.dropdown-button').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field && this.group_name_field.updateValue(true);\n        this.group_description_field && this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                if (restrictions_count === 0)\n                    restrictions_count = '';\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            let inv_count = $(response).find('query').find('user').length;\n            if (inv_count === 0)\n                inv_count = '';\n            this.$('.invitations-variant .counted').html(inv_count);\n        });\n        this.model.getBlockedParticipants((response) => {\n            let blocked_count = $(response).find('query').children().length;\n            if (blocked_count === 0)\n                blocked_count = '';\n            this.$('.blocked-variant .counted').html(blocked_count);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                let inv_count = $(response).find('query').find('user').length;\n                if (inv_count === 0)\n                    inv_count = '';\n                this.$('.invitations-variant .counted').html(inv_count);\n            });\n            this.model.getBlockedParticipants((response) => {\n                let blocked_count = $(response).find('query').children().length;\n                if (blocked_count === 0)\n                    blocked_count = '';\n                this.$('.blocked-variant .counted').html(blocked_count);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings-modal', {account_block_name: null});\n        xabber.trigger('update_placeholder');\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n        this.account.on('render_single_settings', this.renderSingleAccount, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    onGroupAddedSingleAccount: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group, single_account: this.single_account});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    },\n\n    renderSingleAccount: function (single_account) {\n        single_account.$('.groups').html('');\n        !this.rendered_once && this.on(\"add\", this.onGroupAddedSingleAccount, this);\n        this.single_account = single_account\n        this.rendered_once = true\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group, single_account: single_account});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            if (attrs.group_chat && attrs.is_deleted) {\n                delete attrs.group_chat;\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = options.roster_version || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION},\n            cached_conversations_exclude = options.cached_conversations_exclude || [];\n        if (options.stamp)\n            request_attrs.stamp = options.stamp;\n        delete(options.stamp);\n        delete(options.cached_conversations_exclude);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync, cached_conversations_exclude).then(() => {\n            });\n        });\n    },\n\n    syncCachedConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(cached_conversations).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync, cached_conversations) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync, cached_conversations);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync, cached_conversations) {\n        if (!$(item).length){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (cached_conversations){\n            $(cached_conversations).each((idx, conv) => {\n                if (!(conv.account_conversation_type && conv.account_conversation_type.split))\n                    return;\n                let cached_conv_type_jid = conv.account_conversation_type.split('/')[0];\n                if ((cached_conv_type_jid === jid) && (conv.account_conversation_type !== ($(item).attr('jid') +  '/' + $(item).attr('type')))){\n                    if ($item.attr('type') === Strophe.NS.GROUP_CHAT || conv.account_conversation_type.includes(Strophe.NS.GROUP_CHAT)){\n                        this.account.cached_sync_conversations.removeFromCachedConversations(conv.account_conversation_type);\n                    }\n                };\n            });\n        }\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito, is_deleted: $item.attr('status') === 'deleted'}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,},\n            current_chat_timestamp = chat.get('last_sync_timestamp');\n        if (current_chat_timestamp && current_chat_timestamp > chat_timestamp){\n            console.log('old_sync_conv');\n            console.log(item);\n            return;\n        }\n        chat.set('last_sync_timestamp', chat_timestamp);\n        if (message.children('stanza-id').length\n            && message.children('stanza-id').attr('id')\n            && chat.retracted_msg_id_list.includes(message.children('stanza-id').attr('id'))){\n            return;\n        };\n        chat.set('sync_type', type);\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            if (!(chat.last_message && chat.last_message.get('message')))\n                chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            } else {\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n                contact.participants && contact.participants.reset();\n                this.account.groupchat_settings.resetParticipantsList(contact.get('jid'));\n            }\n        }\n        else\n            contact && contact.set('sync_deleted', false);\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.trigger('update_last_read_msg', {sync_update: true});\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (request_with_stamp && chat.retraction_version !== 0 && chat.retraction_version < msg_retraction_version)\n            chat.trigger(\"get_retractions_list\");\n        msg_retraction_version && (chat.retraction_version = msg_retraction_version);\n        if (request_with_stamp && chat.item_view && chat.item_view.content && !is_invite) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (!(encrypted && !this.account.omemo)){\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && !(msg.get('type') === 'system') && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))//TODO: change to timestamp checking\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                    msg.get('stanza_id') && chat.set('synced_msg', msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: async function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync, cached_conversations_exclude) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        this.account.set('last_sync', sync_timestamp);\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        xabber.chats_view.hideChatsFeedback();\n        if (!request_with_stamp)\n            this.account.chats.getSavedChat();\n        if (is_first_sync)\n            this.account.set('first_sync', sync_timestamp);\n        if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                if (!is_last_sync){\n                    cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                        return $(this).attr('jid') +  '/' + $(this).attr('type');\n                    }).toArray());\n                    res = res.filter(item => !cached_conversations_exclude.includes(item.account_conversation_type));\n                    this.syncCachedConversations(null, request_with_stamp, is_first_sync, res);\n                }\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                this.account.cached_sync_conversations.putInCachedConversations({\n                    account_conversation_type: 'last_sync_timestamp',\n                    timestamp: sync_timestamp,\n                });\n                if (!is_last_sync){\n                    this.account.sendPresence();\n                    let saved_chat = this.account.chats.getSavedChat();\n                    saved_chat.set('opened', true);\n                    saved_chat.item_view.updateLastMessage();\n                    this.account.getAllMessageRetractions((result) => {\n                        let retract_version = $(result).find(`query[xmlns=\"${Strophe.NS.REWRITE}\"]`).attr('version');\n                        if (retract_version > this.account.retraction_version)\n                            this.account.retraction_version = retract_version;\n                    })\n                    this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n                }\n            });\n        }\n        else if ($(iq).find('conversation').length) {\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                cached_conversations_exclude = cached_conversations_exclude.concat($(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray());\n                this.syncConversations(iq, request_with_stamp, is_first_sync, res);\n                let sync_options = {max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after};\n                if (request_with_stamp)\n                    sync_options.stamp = request_with_stamp;\n                if (is_last_sync)\n                    sync_options.last_version_sync = true;\n                if (cached_conversations_exclude && cached_conversations_exclude.length)\n                    sync_options.cached_conversations_exclude = cached_conversations_exclude;\n                this.syncFromServer(sync_options);\n            });\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n            this.account.dfd_presence.resolve();\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver');\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item);\n        });\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.cached_roster.putInRoster({\n                    jid: 'roster_version',\n                    is_version: true,\n                    version: this.roster_version\n                });\n            }\n        }\n        return true;\n    },\n\n    onRosterItem: function (item) {\n        let jid = item.getAttribute('jid');\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n        }\n        if (subscription === 'from')\n            attrs.subscription_request_in = false;\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        if (!this.roster)\n            this.roster = this.account.roster;\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.updateTabsLabel();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.$('.btn-unblock-selected').hideIf(!has_changes);\n        this.$('.btn-deselect-blocked').hideIf(!has_changes);\n        this.$('.btn-block').hideIf(has_changes);\n    },\n\n    unblockSelected: function (ev) {\n        let $current_tab = this.$('.settings-block-wrap:not(.hidden)'),\n            selected = $current_tab.find('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let $tab = $(item).closest('.settings-block-wrap');\n            $tab.find('.placeholder').removeClass('hidden');\n        });\n        this.updateUnblockButton();\n    },\n\n    onContactAdded: function (attrs) {\n        let rendered;\n        this.$('.blocked-contact').each((idx, item) => { //this construction avoids being destroyed by stupid domain and jid names in blocklist\n            ($(item).attr('data-jid') === attrs.jid) && (rendered = true);\n        });\n        if (rendered)\n            return;\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.blocked-invitations').append(tmp);\n            this.$('.settings-tab[data-block-name=\"blocklist-invitations\"]').removeClass('hidden');\n            this.$('.blocked-invitations-placeholder').addClass('hidden');\n        }\n        else if (attrs.domain) {\n            this.$('.blocked-domains').append(tmp);\n            this.$('.blocked-domains-placeholder').addClass('hidden');\n        }\n        else {\n            this.$('.blocked-contacts').append(tmp);\n            this.$('.blocked-contacts-placeholder').addClass('hidden');\n        }\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        $elem.detach();\n\n        if (this.parent && this.parent.updateHeight){\n            this.parent.updateBlockedLabel();\n            this.parent.updateHeight();\n            setTimeout(() => {\n                this.parent.updateScrollBar();\n            }, 250)\n        }\n        this.updateTabsLabel();\n        this.hideEmptyContainers();\n    },\n\n    updateTabsLabel: function () {\n        if (!(this.account.blocklist && this.account.blocklist.list))\n            return;\n        let contacts, domains, invitations;\n        contacts = domains = invitations = 0;\n\n        for (let jid in this.account.blocklist.list) {\n            let item = this.account.blocklist.list[jid];\n            if (item.resource)\n                invitations++;\n            else if (item.domain)\n                domains++;\n            else\n                contacts++;\n        }\n\n        let contact_label_text = contacts === 0 ? xabber.getString(\"blocked_contacts_empty\") : xabber.getQuantityString(\"blocked_contacts_number_tab_label\", contacts),\n            domains_label_text = domains === 0 ? xabber.getString(\"blocked_domains_empty\") : xabber.getQuantityString(\"blocked_domains_number\", domains),\n            invitations_label_text = invitations === 0 ? xabber.getString(\"blocked_invitations_empty\") : xabber.getQuantityString(\"blocked_invitations_number\", invitations);\n        this.$('.settings-tab[data-block-name=\"blocklist-contacts\"] .settings-block-label').text(contact_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-domains\"] .settings-block-label').text(domains_label_text);\n        this.$('.settings-tab[data-block-name=\"blocklist-invitations\"] .settings-block-label').text(invitations_label_text);\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options, attrs) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el;\n        if (options.single_account && options.single_account.model.get('jid') != this.model.account.get('jid'))\n            return;\n        if (options.single_account)\n            $parent_el = options.single_account.$('.groups');\n        else\n            $parent_el = this.model.account.settings_account_modal.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"contact_list__placeholder\"));\n        }\n    },\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            contact.trigger('presence', contact, 'subscribe_from');\n            contact.trigger(\"open_chat\", contact, {right_force_close: true, force_opened_state: true});\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-v108-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n\n    this.cached_roster.on(\"database_open_failed\", () => {\n        this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: 0}));\n        this.trigger('roster_created');\n    });\n\n    this.cached_roster.on(\"database_opened\", () => {\n        this.cached_roster.getFromRoster('roster_version', (res) => {\n            let roster_version = res && res.version ? res.version : 0;\n            this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this, roster_version: roster_version}));\n            this.trigger('roster_created');\n        });\n    });\n\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            this.resources.reset();\n            this.contacts.each(function (contact) {\n                contact.resources.reset();\n                contact.resetStatus();\n            });\n            this.cached_roster.getAllFromRoster((roster_items) => {\n                $(roster_items).each((idx, roster_item) => {\n                    if (roster_item.jid === 'roster_version'){\n                        return;\n                    }\n                    this.contacts.mergeContact(roster_item);\n                });\n                if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                    let options = {};\n                    this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                        let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                        !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                        last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                        this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                        this.roster.getRoster();\n                    });\n                }\n                else {\n                    this.roster.getRoster();\n                }\n                this.blocklist.getFromServer();\n            });\n        });\n        console.log(this.roster);\n        if (this.roster) {\n            dfd.resolve();\n        } else {\n            this.once('roster_created', () => {\n                dfd.resolve();\n            });\n        }\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    if (this.roster) {\n        this.roster.registerHandler();\n    } else {\n        this.once('roster_created', () => {\n            this.roster.registerHandler();\n        });\n    }\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id change:stanza_id change:archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id',  this.get('stanza_id') || this.get('archived_id') || this.get('origin_id') || this.get('msgid'));\n    },\n\n    destroyOnEcho: function () {\n        this.set('state', constants.MSG_DELIVERED);\n        if (this.collection && this.collection.chat && this.collection.chat.item_view && this.collection.chat.item_view.content)\n            this.collection.chat.item_view.content.removeMessage(this);\n        else\n            this.destroy();\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection && this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    }\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.chat = options.chat;\n        this.account = options.account;\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = options.stanza_id || archive_id || origin_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (!message && unique_id){\n            unique_id = origin_id || options.stanza_id || archive_id || msgid;\n            message = this.get(unique_id);\n        }\n        if (!message){\n            message = this.findWhere({'origin_id': origin_id});\n        }\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.is_unread_archived && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched)\n            return message;\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived,\n                is_unread_archived: options.is_unread_archived,\n                is_between_anchors: options.is_between_anchors,\n                not_encrypted: options.not_encrypted || null,\n                not_verified_device: options.not_verified_device || null,\n                not_verified_device_no_device: options.not_verified_device_no_device || null,\n                device_id: options.device_id || null,\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`);\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        id: $file.children('gallery-id').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.is_unread_archived && (attrs.type !== 'system')){\n            let last_read_msg = this.find(m => this.chat.get('last_read_msg') && (m.get('stanza_id') === this.chat.get('last_read_msg') || m.get('contact_stanza_id') === this.chat.get('last_read_msg')));\n            if (last_read_msg){\n                if (Number(moment(attrs.time)) > last_read_msg.get('timestamp'))\n                    attrs.is_unread = true\n            } else {\n                attrs.is_unread = true\n            }\n        }\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (options.carbon_copied && options.encrypted && this.chat && this.chat.item_view && !this.chat.item_view.content)\n            this.chat.item_view.content = new xabber.ChatContentView({chat_item: this.chat.item_view});\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if (options.echo_msg && message) {\n            message.destroyOnEcho();\n        }\n        if ((options.replaced || options.encrypted && options.is_unread_archived) && message) {\n            message.set(attrs);\n            return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.xabber.org:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n          });\n      },\n\n      createVideoStream: function () {\n          navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('no-store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account, chat: this});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.retracted_msg_id_list = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n        this.on(\"update_last_read_msg\", this.onChangedLastReadMsg, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n    onChangedLastReadMsg: function (options) {\n        if (this.get('prev_last_read_msg') && this.get('last_read_msg') && this.get('prev_last_read_msg') !== this.get('last_read_msg')){\n            if (this.item_view && !this.item_view.content){\n                this.item_view.content = new xabber.ChatContentView({chat_item: this.item_view});\n            }\n            this.item_view.content._no_scrolling_event = true;\n            let query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                is_first: true,\n                sync_update: options && options.sync_update ? true : false,\n                var: [\n                    {var: 'after-id', value: this.get('prev_last_read_msg')},\n                    {var: 'before-id', value: this.get('last_read_msg')},\n                ]\n            };\n            this.requestHistoryBetweenAnchors(query);\n\n        }\n        this.set('prev_last_read_msg', this.get('last_read_msg'));\n    },\n\n    requestHistoryBetweenAnchors: function (query) {\n        this.item_view.content.MAMRequest(query, (success, messages, rsm) => {\n            if (rsm.complete)\n                this.set('last_sync_unread_id', this.get('last_read_msg'));\n            if (query.is_first && !query.sync_update) {\n                let read_count = Number(rsm.count) + 1;\n                read_count = this.get('const_unread') - read_count;\n                (read_count < 0) && (read_count = 0);\n                this.set('const_unread', read_count);\n            }\n            if (!rsm.complete && (rsm.count > messages.length)){\n                query.after = rsm.last;\n                query.is_first = false;\n                this.requestHistoryBetweenAnchors(query);\n            }\n            _.each(messages, (message) => {\n                let message_item = this.account.chats.receiveChatMessage(message,\n                        {\n                            is_archived: true,\n                            is_between_anchors: true,\n                        }\n                    );\n                message_item && message_item.set('is_unread', false)\n            });\n            if (rsm.complete && this.get('last_read_msg')){\n                let last_read_msg = this.messages.find(m => this.get('last_read_msg') && (m.get('stanza_id') === this.get('last_read_msg') || m.get('contact_stanza_id') === this.get('last_read_msg'))),\n                    deferred = new $.Deferred();\n                deferred.done(() => {\n                    last_read_msg && last_read_msg.set('is_unread', false);\n                    if (this.item_view.content.isVisible()){\n                        this.item_view.content._long_reading_timeout = true;\n                        this.item_view.content.scrollToUnread();\n                    } else {\n                        this.set('show_new_unread', true);\n                    }\n                    this.item_view.content._no_scrolling_event = false;\n                });\n                if (!last_read_msg){\n                    this.contact.getMessageByStanzaId(this.get('last_read_msg'), ($message) => {\n                        last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        deferred.resolve()\n                    });\n                } else {\n                    deferred.resolve()\n                }\n            }\n        }, (err) => {\n            xabber.error('error');\n        });\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.messages_unread && this.messages_unread.reset();\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        if (this.item_view && this.item_view.content && stanza_id)\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${unique_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        message.set('stanza_id', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio') || !xabber.settings.jingle_calls) {\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy(status);\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQ(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.synced_msg){\n                if (this.get('saved'))\n                    return;\n                let view = xabber.chats_view.child(this.contact.hash_id);\n                $message.find('time').attr('stamp') && this.set('timestamp', $message.find('time').attr('stamp'));\n                if (!view.content)\n                    view.content = new xabber.ChatContentView({chat_item: view});\n                if (view && view.content)\n                    view.content.receiveNoTextMessage($message, carbon_copied);\n                return;\n            }\n            if (options.is_archived)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall('accepted_another_device');\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio(xabber.settings.sound_on_call_busy);\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else{\n            return this.messages.createFromStanza($message, options);\n        }\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && !options.encrypted && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id),\n            dfd = new $.Deferred;\n\n        dfd.done(() => {\n            if (message) {\n                if (options.searched_messages)\n                    message.set('searched_message', false);\n                let stanza_id = message.get('stanza_id');\n                this.messages_view = new xabber.MessageContextView({\n                    contact: this.contact,\n                    mention_context: options.mention,\n                    model: this,\n                    stanza_id_context: stanza_id,\n                    encrypted: options.encrypted\n                });\n                this.account.context_messages.add(message);\n                this.messages_view.messagesRequest({after: stanza_id}, () => {\n                    let screen = 'all-chats';\n                    if (options.mention)\n                        screen = 'mentions';\n                    else if (options.message)\n                        screen = xabber.body.screen.get('name');\n                    xabber.body.setScreen(screen, {\n                        right: 'message_context',\n                        model: this,\n                    }, {\n                        right_contact_save: true\n                    });\n                });\n            }\n\n        })\n        if (!message) {\n            message = messages.models.find(item => {\n                return item.get('origin_id') === unique_id;\n            })\n            if (!message) {\n                this.contact.getMessageByStanzaId(unique_id, ($message) => {\n                    if (options.encrypted && this.account.omemo) {\n                        let omemo_dfd = new $.Deferred;\n                        omemo_dfd.done(($msg, msg_options) => {\n                            msg_options = msg_options || {};\n                            msg_options.searched_message = true;\n                            message = this.account.chats.receiveChatMessage($msg[0], msg_options);\n                            dfd.resolve();\n                        }).fail(() => {\n                            dfd.resolve();\n                        });\n                        message = this.account.omemo.receiveChatMessage($message, {\n                            searched_message: true,\n                            gallery: true,\n                        }, omemo_dfd);\n\n                    } else {\n                        message = this.account.chats.receiveChatMessage($message, {\n                            searched_message: true,\n                        });\n                        dfd.resolve();\n                    }\n                }, {encrypted: options.encrypted});\n\n            } else {\n                dfd.resolve()\n            }\n        } else {\n            dfd.resolve()\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DISPLAYED));\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg){\n                enc_chat.receiveCarbonsMarker($marker);\n                return;\n            }\n        }\n        if (this.get('const_unread') && this.get('last_read_msg')){\n            let last_read_msg_id = this.get('last_read_msg'),\n                last_read_msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === last_read_msg_id || m.get('contact_stanza_id') === last_read_msg_id)),\n                deferred = new $.Deferred(),\n                second_deferred = new $.Deferred(),\n                new_last_read_msg = msg;\n            second_deferred.done(() => {\n                if (last_read_msg.get('timestamp') < new_last_read_msg.get('timestamp')){\n                    this.set('last_read_msg', new_last_read_msg.get('stanza_id'))\n                    this.trigger('update_last_read_msg');\n                }\n            });\n            deferred.done(() => {\n                if (!new_last_read_msg){\n                    this.contact.getMessageByStanzaId(stanza_id, ($message) => {\n                        new_last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                        second_deferred.resolve()\n                    });\n                } else {\n                    second_deferred.resolve()\n                }\n            });\n            if (!last_read_msg){\n                this.contact.getMessageByStanzaId(last_read_msg_id, ($message) => {\n                    last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                    deferred.resolve()\n                });\n            } else {\n                deferred.resolve()\n            }\n        }\n        if (msg_idx > -1) {\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {\n                        id: (this.get('group_chat') && contact_stanza_id || stanza_id),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: symmetric,\n                        type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {\n                id: user_id,\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: true\n            });\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this),\n                symmetric: symmetric\n        };\n        retract_attrs.conversation = this.get('jid');\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.content_placeholder = new xabber.ChatContentPlaceholderView();\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    render: function () {\n        if (this.model.get('saved') && (this.$('.chat-title').text() !== xabber.getString(\"saved_messages__header\"))) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n        }\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 && !(!msg.get('synced_from_server') && msg.get('encrypted') && this.model.get('encrypted'))){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n        this.updateLastMessage();\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        msg || (msg = this.model.last_message);\n        if (!this.model.get('active') && this.model.item_view && this.model.item_view.content && this.model.item_view.content.bottom && this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea().trim()){\n            let draft_message = this.model.item_view.content.bottom.$('.input-message .rich-textarea').getTextFromRichTextarea();\n            this.$('.last-msg').html(draft_message).prepend($(`<span class=\"text-color-700\">${xabber.getString(\"draft\")}: </span>`));\n            this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n            msg && this.model.set({timestamp: msg.get('timestamp')});\n            return;\n        }\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=\"text-color-700\"/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        if (msg.get('not_encrypted'))\n            this.$('.last-msg').html(this.$('.last-msg').html().italics());\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        type: Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT,\n                        symmetric: false,\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0], msg);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          this.account.context_messages.on(\"change:is_unread\", this.onChangedReadState, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n          this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n\n          clearTimeout(this._onscroll_read_messages_timeout);\n          this._onscroll_read_messages_timeout = setTimeout(() => {\n              this.chat_content.readVisibleMessages(true);\n          }, 100)\n      },\n\n      onChangedReadState: function (message) {\n          let is_unread = message.get('is_unread'),\n              $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n          if (is_unread) {\n              $msg.addClass('unread-message');\n              $msg.addClass('unread-message-background');\n          } else {\n              $msg.removeClass('unread-message');\n              setTimeout(() => {\n                  $msg.removeClass('unread-message-background');\n              }, 1000);\n          }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n\n          let msg_item = this.model.messages.find(msg => msg.get('stanza_id') == message.get('stanza_id') || msg.get('contact_stanza_id') == message.get('stanza_id'));\n          if (msg_item) {\n              msg_item.get('is_unread') && message.set('is_unread', msg_item.get('is_unread'));\n              msg_item.get('is_unread_archived') && message.set('is_unread_archived', msg_item.get('is_unread_archived'));\n          }\n\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max){\n                      if (this.parent &&  this.parent.data && !this.parent.data.get('visible') || this.parent.model.get('search_hidden'))\n                          return;\n                      else\n                          this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  }\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, msg, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.emptyChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\nxabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .back-to-unread:not(.back-to-bottom)\": \"scrollToUnreadWithButton\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .not-decrypted-tooltip .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if ((this.model.sync_created && this.model.last_message) || options.new_message && !options.new_message.get('synced_from_server') && options.new_message.get('encrypted') && this.model.get('encrypted')){\n            this.model.last_message && this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        this._is_scrolled_bottom = true;\n        this._long_reading_timeout = false;\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active change:idle\", this.onChangedActiveStatus, this);\n        xabber.on(\"change:idle change:focused\", this.onChangedIdleStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.contact.on(\"update_trusted\", this.updateMsgsMissingDevices, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.on(\"device_trusted\", this.updateMsgsDeviceTrusting, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n    render: function () {\n        this.cancelSearch();\n        if (this._prev_scrolltop)\n            this.scrollTo(this._prev_scrolltop);\n        else\n            this.scrollToBottom();\n        this.onScroll();\n        this.updateCounter();\n        this.updateContactStatus();\n        this.updateWaveforms();\n        this.onUpdatePlyr();\n        if (this.contact) {\n            this.contact.get('group_chat') && this.updatePinnedMessage();\n            this.subscription_buttons.render();\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateMsgsDeviceTrusting: function (device_id, jid) {\n        if (!this.model.get('encrypted') || !device_id || !this.contact || this.contact.get('jid') !== jid )\n            return;\n        this.$(`.not-decrypted-icon[data-device-id=\"${device_id}\"]`).each((idx, item) => {\n            let $msg = $(item).closest('.chat-message');\n            $msg.removeClass('not-verified');\n            $msg.addClass('not-verified-previously');\n        })\n    },\n\n    updateMsgsMissingDevices: function (trust, peer) {\n        if (!this.model.get('encrypted') || !peer || !this.contact)\n            return;\n\n        this.$(`.chat-message:not(.not-existing-device)`).each((idx, item) => {\n            let $item = $(item);\n            if ($item.attr('data-device-id') && !peer.devices[$item.attr('data-device-id')] && $item.attr('data-from') != this.account.get('jid')){\n                $item.hasClass('not-verified') && $item.addClass('not-verified-previously');\n                $item.removeClass('not-verified');\n                $item.addClass('not-existing-device');\n            }\n        })\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n    onTrustedChanged: function (message) {\n        let trusted = message.get('trusted'),\n            $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n        (trusted === null) && (trusted = 'none');\n        $message.attr('data-trust', trusted);\n    },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both' && this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n            this.model.get('active') && this.onChangedActiveStatus();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedIdleStatus: function (ev) {\n        if (!this.model.get('active'))\n            return;\n        this.model.set('idle', xabber.get('idle') || !xabber.get('focused'))\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        if (this.model.get('active') && this.model.get('idle'))\n            active = false;\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat') && !this.contact.get('invitation')) {\n            if (active){\n                this.contact.setActiveStateSendInterval();\n            }\n            else{\n                clearTimeout(this.contact._sending_active_chatstate_timeout);\n                clearInterval(this.contact._sending_active_chatstate_interval);\n            }\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readVisibleMessages: function (is_context) {\n        let self = is_context ? this.model.messages_view : this;\n        if (!self.isVisible())\n            return;\n        if (self.$('.chat-message.unread-message').length && xabber.get('focused') && !xabber.get('idle')){\n            let last_visible_unread_msg;\n            self.$('.chat-message.unread-message').each((idx, msg) => {\n                if ($(msg).isVisibleInContainer(self.$('.chat-content'))) {\n                    last_visible_unread_msg = msg;\n                }\n            });\n            if (last_visible_unread_msg){\n                this.readMessage(this.model.messages.get($(last_visible_unread_msg).data('uniqueid')), $(last_visible_unread_msg), is_context);\n            }\n        }\n    },\n\n    hideMessagesAfterSkipping: function () {\n        if (this.model.get('last_sync_unread_id') && this.model.get('synced_msg')){\n            let synced_message = this.model.get('synced_msg'),\n                $synced_message = this.$(`.chat-message[data-uniqueid=\"${synced_message.get('unique_id')}\"]`);\n            $synced_message.addClass('after-skip-message');\n            $synced_message.prevAll('.chat-message.after-skip-message').removeClass('after-skip-message');\n            $synced_message.nextAll('.chat-message:not(.after-skip-message)').addClass('after-skip-message');\n        } else {\n            this.$('.chat-message.after-skip-message').removeClass('after-skip-message');\n        }\n    },\n\n    readMessage: function (last_visible_msg, $last_visible_msg, is_context) {\n        clearTimeout(this._read_last_message_timeout);\n        this._read_last_message_timeout = setTimeout(() => {\n            this.model.sendMarker(last_visible_msg.get('msgid'), 'displayed', last_visible_msg.get('stanza_id'), last_visible_msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', last_visible_msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', last_visible_msg.get('stanza_id'));\n\n            if (is_context){\n                let unread_context_messages = _.clone(this.account.context_messages.models).filter(item => Boolean(item.get('is_unread')) || Boolean(item.get('is_unread_archived')));\n                _.each(unread_context_messages, (msg) => {\n                    let msg_item = this.model.messages.find(message => message.get('stanza_id') == msg.get('stanza_id') || message.get('contact_stanza_id') == msg.get('stanza_id'));\n                    if (msg_item) {\n                        msg.set('is_unread', msg_item.get('is_unread'));\n                        msg.set('is_unread_archived', msg_item.get('is_unread_archived'));\n                    }\n                });\n                setTimeout(() => {\n                    $last_visible_msg.removeClass('unread-message-background');\n                }, 1000);\n            }\n\n            xabber.toolbar_view.recountAllMessageCounter();\n        }, 1000)\n\n        if (last_visible_msg.get('is_unread_archived') || this.model.last_message && (last_visible_msg.get('unique_id') === this.model.last_message.get('unique_id')) || this.model.get('const_unread')){\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread'))),\n                read_count = 0;\n\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                    read_count++;\n                }\n            });\n            read_count = this.model.get('const_unread') - read_count;\n            (read_count < 0) && (read_count = 0);\n            this.model.set('const_unread', read_count);\n        } else {\n            let unread_messages = _.clone(this.model.messages_unread.models);\n            _.each(unread_messages, (msg) => {\n                if (msg.get('timestamp') <= last_visible_msg.get('timestamp')) {\n                    msg.set('is_unread', false);\n                }\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n\n        if (!is_context){\n            setTimeout(() => {\n                $last_visible_msg.removeClass('unread-message-background');\n            }, 1000);\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            this.model.set('last_read_msg', msg.get('stanza_id'));\n            this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        this.model.set('show_new_unread', false);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            msg.set('is_unread', false);\n            msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n            msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                msg.set('is_unread', false);\n                msg.get('stanza_id') && this.model.set('last_read_msg', msg.get('stanza_id'));\n                msg.get('stanza_id') && this.model.set('prev_last_read_msg', msg.get('stanza_id'));\n            }\n        }\n        if (!unread_messages.length) {\n            let unread_messages = _.clone(this.model.messages.models).filter(item => Boolean(item.get('is_unread')));\n            _.each(unread_messages, (msg) => {\n                msg.set('is_unread', false);\n            });\n        }\n    },\n\n    showUnreadMarker: function () {\n        this.$('.unread-marker').remove();\n        if (this.$(`.chat-message.unread-message`).length){\n            let text = xabber.getQuantityString(\"new_chat_messages_no_number\", this.model.get('const_unread') + this.model.get('unread')),\n                $template = $(templates.unread_marker({text: text}));\n            $template.insertBefore(this.$(`.chat-message.unread-message:first`));\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    scrollToUnread: function () {\n        let $last_read_msg = this.$(`.chat-message.unread-message:first`);\n        $last_read_msg.length && (this.scrollTo(this.getScrollTop()\n            - (this.$el.height() * 0.2) + $last_read_msg.offset().top));\n        if (this.model.get('last_sync_unread_id')) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    scrollToUnreadWithButton: function () {\n        this.scrollToUnread();\n        this.$('.back-to-unread').addClass('back-to-bottom');\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.back-to-unread-counter').text(unread || '');\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n    },\n\n    onScrollY: function () {\n        this._prev_scrolltop = this._scrolltop || this._prev_scrolltop || 0;\n        this._scrolltop = this.getScrollTop() || this._scrolltop || this._prev_scrolltop || 0;\n        this._is_scrolled_bottom = this.isScrolledToBottom();\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n    },\n\n    onScroll: function (ev, is_focused) {\n        if (!this.isVisible() || this._no_scrolling_event)\n            return;\n        this.$('.back-to-bottom:not(.back-to-unread)').hideIf(this.isScrolledToBottom() || this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').showIf(!this.isScrolledToBottom() && this.$(`.chat-message.unread-message`).length);\n        this.$('.back-to-unread').removeClass('back-to-bottom');\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        if (this.$('.unread-marker').length) {\n            let marker = this.$('.unread-marker');\n            if (marker[0].offsetTop < this._scrolltop)\n                marker.remove();\n        }\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        let scroll_read_timer = this._long_reading_timeout || is_focused ? 100 : 100;\n        clearTimeout(this._onscroll_read_messages_timeout);\n        this._onscroll_read_messages_timeout = setTimeout(() => {\n            this.readVisibleMessages();\n        }, scroll_read_timer)\n        this._long_reading_timeout = false;\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n        this.hideMessagesAfterSkipping();\n        if (this._scrolltop > this._prev_scrolltop && this.model.get('last_sync_unread_id') && this.getPercentScrolled() > 0.2) {\n            let mam_query = {\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                after: this.model.get('last_sync_unread_id'),\n            };\n            if (this.model.get('synced_msg')) {\n                mam_query.var = [\n                    {var: 'after-id', value: this.model.get('last_sync_unread_id')},\n                    {var: 'before-id', value: this.model.get('synced_msg').get('stanza_id')},\n                ];\n            }\n            this.getMessageArchive(mam_query, {\n                unread_history: true,\n            });\n        }\n    },\n\n    backToBottom: function () {\n        this.model.set('last_sync_unread_id', undefined);\n        this.hideMessagesAfterSkipping();\n        this._no_scrolling_event = true;\n        this.removeAllMessagesExceptLast();\n        this.readMessages();\n        this.model.resetUnread();\n        this.model.set('history_loaded', false);\n        this.loadPreviousHistory();\n        this._long_reading_timeout = false;\n        this._no_scrolling_event = false;\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq, _interval, handler;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE)) {\n            iq.c('field', {'var': `conversation-type`});\n            if (this.model.get('encrypted')){\n                iq.c('value').t(Strophe.NS.OMEMO).up().up();\n            } else {\n                iq.c('value').t(Strophe.NS.XABBER_CHAT).up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let sendMAMRequest = function(func_conn) {\n                handler = func_conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let _delete_handler_timeout = setTimeout(() => {\n                    console.log('handler deleted');\n                    func_conn.deleteHandler(handler);\n                }, 14000);\n                let callb = function (res) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        account.chats.onCompletedMAMRequest(deferred);\n                        let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                        if ($fin.length && $fin.attr('queryid') === queryid) {\n                            let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                            rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                            callback && callback(success, messages, rsm);\n                        }\n                    },\n                    errb = function (err) {\n                        func_conn.deleteHandler(handler);\n                        clearTimeout(_delete_handler_timeout);\n                        clearInterval(_interval);\n                        handler = null;\n                        xabber.error(\"MAM error\");\n                        xabber.error(err);\n                        account.chats.onCompletedMAMRequest(deferred);\n                        errback && errback(err);\n                    };\n                console.log('trying to send')\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            };\n            let is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection;\n\n            if (conn.connected){\n                sendMAMRequest(conn);\n            }\n            let send_counter = 0;\n            _interval = setInterval(() => {\n                is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting\n                    && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline';\n                conn = is_fast ? account.fast_connection : account.connection;\n                conn && console.log(conn.connected);\n                if (!conn || send_counter >= 1){\n                    clearInterval(_interval);\n                    errback && errback('No connection or too many attempts');\n                    return;\n                }\n                if (conn.connected && send_counter < 1){\n                    send_counter++;\n                    sendMAMRequest(conn);\n                }\n            }, 15000);\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history || options.unread_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n        this.MAMRequest(query, (success, messages, rsm) => {\n            clearTimeout(this._load_history_timeout);\n            this._loading_history = false;\n            this.hideHistoryFeedback();\n            if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                this.getMessageArchive({after: rsm.last}, {missed_history: true});\n            if (options.unread_history){\n                if (messages.length)\n                    this.model.set('last_sync_unread_id', $(messages[messages.length - 1]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id'));\n                else {\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n            }\n            if (options.unread_history_first && messages.length){\n                let first_unread_msg_stanza_id = $(messages[0]).find(`result[xmlns=\"${Strophe.NS.MAM}\"]`).attr('id')\n                this.model.set('first_unread_msg_stanza_id', first_unread_msg_stanza_id);\n                if (messages.length < query.max){\n                    this.model.set('last_sync_unread_id', undefined);\n                    this.hideMessagesAfterSkipping();\n                }\n                this.getMessageArchive({\n                    fast: true,\n                    max: xabber.settings.mam_messages_limit,\n                    before : first_unread_msg_stanza_id\n                }, {unread_history_before: true});\n            }\n            if (this.model.get('group_chat')) {\n                if (this.contact && !this.contact.my_info)\n                    this.contact.getMyInfo();\n            }\n            else {\n                if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                    this.contact.getLastSeen();\n            }\n            if (options.previous_history && (messages.length < query.max) && success) {\n                this.model.set('history_loaded', true);\n            }\n            if (options.previous_history || options.unread_history_before || !this.model.get('first_archive_id')) {\n                rsm.first && this.model.set('first_archive_id', rsm.first);\n            }\n            if (options.last_history || !this.model.get('last_archive_id')) {\n                rsm.last && this.model.set('last_archive_id', rsm.last);\n            }\n            _.each(messages, function (message) {\n                let loaded_message = account.chats.receiveChatMessage(message,\n                    _.extend({\n                        is_archived: true,\n                        is_unread_archived: options.unread_history ? true : undefined,\n                    }, options)\n                );\n                if (loaded_message) counter++;\n            });\n            if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                this.getMessageArchive(_.extend(query, {\n                    max: xabber.settings.mam_messages_limit,\n                    before: this.model.get('first_archive_id') || ''\n                }), {previous_history: true});\n            }\n            if (options.unread_history_before){\n                if (this.model.get('encrypted')){\n                    //TODO: make async func to start opening chat after all messages been handled in enc chat\n                    setTimeout(() => {\n                        this.model._wait_load_unread_history.resolve();\n                    }, 1000);\n                } else\n                    this.model._wait_load_unread_history.resolve();\n            }\n        }, (err) => {\n            if (options.previous_history) {\n                this._loading_history = false;\n                this.showHistoryFeedback(true);\n            }\n            if (options.unread_history_before || options.unread_history_first){\n                this.model._wait_load_unread_history.resolve();\n            }\n        });\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    loadUnreadHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.model.set('loading_unread_history', true)\n        this.getMessageArchive({\n            fast: true,\n            max: xabber.settings.mam_messages_limit,\n            after: this.model.get('last_read_msg'),\n        }, {\n            unread_history_first: true,\n            unread_history: true,\n        });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                participant_info = {};\n            pinned_message.get('user_info') && this.contact.participants && (participant_info = this.contact.participants.get(pinned_message.get('user_info').id));\n            participant_info && participant_info.attributes && pinned_message.set('user_info', participant_info.attributes);\n\n            let msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message, pinned: true});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg, pinned_message);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    OGPLinkOnload: function ($message, message) {\n        let $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && !message.get('is_unread_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (!(message.get('synced_from_server') || (message.get('is_archived') && !message.get('missed_msg')))) {\n            if (message.get('missed_msg')){\n                if (this.model.get('last_read_msg')){\n                    let last_read_msg = this.model.messages.find(m => this.model.get('last_read_msg') && (m.get('stanza_id') === this.model.get('last_read_msg') || m.get('contact_stanza_id') === this.model.get('last_read_msg'))),\n                        deferred = new $.Deferred();\n                    deferred.done(() => {\n                        if (last_read_msg && message.get('timestamp') > last_read_msg.get('timestamp')){\n                            message.set('is_unread', true);\n                            if (!xabber.get('focused')) {\n                                if (this.model.get('saved') || this.model.isMuted())\n                                    message.set('muted', true);\n                            }\n                            this.model.setMessagesDisplayed(message.get('timestamp'));\n                        }\n                    });\n                    if (!last_read_msg){\n                        this.contact.getMessageByStanzaId(this.model.get('last_read_msg'), ($message) => {\n                            last_read_msg = this.account.chats.receiveChatMessage($message, {is_archived: true});\n                            deferred.resolve();\n                        });\n                    } else {\n                        deferred.resolve();\n                    }\n                }\n            } else {\n                if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                    message.set('is_unread', true);\n                    if (message.get('is_unread') && xabber.get('focused') && !xabber.get('idle') && this.isVisible()){\n                        this.readVisibleMessages();\n                    }\n                    if (!xabber.get('focused')) {\n                        if (this.model.get('saved') || this.model.isMuted())\n                            message.set('muted', true);\n                        else if (!message.get('synced_invitation_from_server'))\n                            this.notifyMessage(message);\n                    }\n                    this.model.setMessagesDisplayed(message.get('timestamp'));\n                }\n            }\n            if (this.contact && this.model.get('archived')){\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (this.isVisible() && (!message.get('is_unread') || is_scrolled_to_bottom) && !message.get('is_between_anchors')) {\n            let is_scrolling_needed;\n            if (is_scrolled_to_bottom){\n                if (this.$(`.chat-message.unread-message`).length){\n                    if (this.$(`.chat-message.unread-message`)[0].offsetTop > (this._scrolltop + 140)) {\n                        is_scrolling_needed = true;\n                    }\n                } else\n                    is_scrolling_needed = true;\n            }\n            if ((is_scrolled_to_bottom && is_scrolling_needed) || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else if (!is_scrolled_to_bottom) {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (message.get('synced_from_server') && message.get('is_unread')) {\n            this.onChangedReadState(message);\n        }\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n\n        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context' && this.model.messages_view.last_history_loaded)\n            this.account.context_messages.add(message);\n\n    },\n\n\n    decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom();\n        if (this.model.get('encrypted') || message.get('encrypted') || force) {\n            let images = message.get('images') || [];\n            if (images.length) {\n                images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = [];\n                        if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                            $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        else\n                            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            }\n            let fwd_msgs = message.get('forwarded_message') || [];\n            fwd_msgs.forEach((fwd_msg) => {\n                let fwd_images = fwd_msg.get('images') || [];\n                fwd_images.forEach((img) => {\n                    let source = img.sources[0];\n                    if (!img.key)\n                        return;\n                    this.model.messages.decryptFile(source, img.key).then((result) => {\n                        if (result === null)\n                            return;\n                        let $msg = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"] .fwd-message[data-uniqueid=\"${fwd_msg.get('unique_id')}\"] img[src=\"${source}\"]`);\n                        if ($msg.length) {\n                            $msg[0].src = result;\n                            $msg[0].onload = () => {\n                                if (!scrolled_from_bottom)\n                                    this.scrollToBottom();\n                                else\n                                    this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                            };\n                            $msg.attr('data-mfp-src', result);\n                        }\n                    });\n                });\n            });\n        }\n    },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else if (this.model.messages.models.length && this.model.messages.models[index - 1]) {\n            let $prev_message = this.$(`.chat-message[data-uniqueid=\"${this.model.messages.models[index - 1].get('unique_id')}\"]`);\n            if (!$prev_message.length) {\n                $prev_message = this.addMessage(this.model.messages.models[index - 1]);\n            }\n            $message.insertAfter($prev_message);\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0], message);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0], item);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeAllMessagesExceptLast: function () {\n        let messages_to_save = [];\n        if (!this.model.messages)\n            return;\n        this.model.messages.forEach((message, idx) => {\n            if (idx === (this.model.messages.length - 1)){\n                messages_to_save.push(message);\n                this.model.set('first_archive_id', message.get('stanza_id'));\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message');\n                this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`).removeClass('unread-message-background');\n                return;\n            }\n            let $message, $message_in_chat;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`));\n            $message.prev('.chat-day-indicator').remove();\n            $message.remove();\n        });\n        this.model.messages.reset(messages_to_save);\n        this.updateScrollBar();\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n        attrs.not_encrypted = attrs.not_encrypted || null;\n        attrs.not_verified_device = attrs.not_verified_device || null;\n        attrs.not_verified_device_no_device = attrs.not_verified_device_no_device || null;\n        attrs.device_id = attrs.device_id || null;\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.is_unread && 'unread-message',\n            attrs.is_unread && 'unread-message-background',\n            attrs.not_encrypted && 'not-decrypted',\n            attrs.not_verified_device && !attrs.not_verified_device_no_device && 'not-verified',\n            attrs.not_verified_device_no_device && 'not-existing-device',\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('encrypted')){\n            if (attrs.hasOwnProperty('submitted_here')){\n                $message.attr('data-trust', true);\n                if (attrs.hasOwnProperty('is_contact_trusted')){\n                    $message.attr('data-trust', attrs.is_contact_trusted);\n                }\n            } else if (attrs.hasOwnProperty('is_trusted')){\n                $message.attr('data-trust', attrs.is_trusted);\n            } else {\n                $message.attr('data-trust', this.$el.attr('data-trust'));\n            }\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])),];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n            this.OGPLinkOnload($message, message);\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video, idx) => {\n                        let video_el = this.createVideo(video, idx);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                    this.OGPLinkOnload($message, message);\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        return $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [],\n            msg_videos = message && message.get('videos') && message.get('videos').length ? message.get('videos') : null;\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.video_id = $(item).attr('data-msg-video-id');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                if (msg_videos && msg_videos.length && player.video_id >= 0) {\n                    let video_file = msg_videos[player.video_id];\n                    video_file && (player.video_file = video_file);\n                }\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem, msg) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg, msg);\n        }\n        ($msg.find('.not-decrypted-icon').length) && $msg.find('.not-decrypted-icon').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        });\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, !xabber.settings.notifications_volume_enabled ? 0 : xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n    attentionMessage: function () {\n        let notification = xabber.popupNotification({\n            title: this.contact.get('name'),\n            text: xabber.getString(\"chats_attention\"),\n            icon: this.contact.cached_image.url\n        });\n        notification.onclick = () => {\n            window.focus();\n            this.model.trigger('open');\n        };\n        let sound = xabber.settings.sound_on_attention;\n        xabber.playAudio(sound);\n    },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                    message.set({xml: $(stanza.tree()).clone()[0]});\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n    msgCallback: function (msg_sending_timestamp, message) {\n        this.bottom.click_counter = 0;\n        this.bottom.setDefaultPlaceholder();\n        if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n            setTimeout(() => {\n                if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                    message.set('state', constants.MSG_SENT);\n                } else {\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {\n                        (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                    });\n                    setTimeout(() => {\n                        if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                            message.set('state', constants.MSG_ERROR);\n                    }, 5000);\n                }\n            }, 1000);\n        }\n        else {\n            let _pending_time = 5, was_reconnecting;\n            if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                was_reconnecting = true;\n            if (this.account.session.get('reconnecting'))\n                was_reconnecting = true;\n            this.account.session.once('change:reconnecting', () => {\n                console.log('change reconnecting');\n                console.log(this.account.session.get('reconnecting'));\n                was_reconnecting = true;\n            })\n            let _interval = setInterval(() => {\n                console.log(was_reconnecting);\n                if (was_reconnecting)\n                    clearInterval(_interval);\n                if (_pending_time >= 8 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                    console.log('ping on message pending');\n                    this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                        let downtime = (moment.now() - this.account.last_stanza_timestamp) / 1000;\n                        if (downtime >= 2){\n                            console.log('message initiated reconnection');\n                            console.log(message);\n                            this.account.connection.disconnect();\n                        } else {\n                            console.log('ping was sent and got no result after 2 seconds, but didnt reconnect because last stanza time was: ' + downtime + ' sec')\n                        }\n                    }, 2000);\n                }\n                if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 3;\n            }, 3000);\n        }\n    },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else if (this.model.get('encrypted')){\n            this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                attrs.is_contact_trusted = obj.trust;\n                _dfd_info.resolve();\n            });\n        } else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData(),\n                metadata = {};\n            file.duration && (metadata.duration = file.duration);\n            file.width && (metadata.width = file.width);\n            file.height && (metadata.height = file.height);\n            formData.append('file', file, file.name);\n            formData.append('metadata', JSON.stringify(metadata));\n            if (file.size)\n                formData.append('size', file.size);\n            if (file.voice)\n                formData.append('media_type', file.type + '+voice');\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.oncancel = xhr.onload = xhr.onerror = xhr.onabort = function () {\n                let xhr_status = this.fakeStatus || this.status;\n                if (xhr_status >= 200 && xhr_status < 300) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = this.response ? JSON.parse(this.response) : this.fakeResponse;\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                if (!is_error) {\n                                    if (slot_response && slot_response.quota){\n                                        if (slot_response.file && slot_response.hash){\n                                            xhr_requests[files_count].fakeStatus = 200;\n                                            xhr_requests[files_count].fakeResponse = {\n                                                file: slot_response.file,\n                                                id: slot_response.id,\n                                                name: slot_response.name,\n                                                thumbnail: slot_response.thumbnail,\n                                                created_at: slot_response.created_at,\n                                            };\n                                            xhr_requests[files_count].oncancel();\n                                        } else {\n                                            xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                            xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                            xhr_requests[files_count].is_uploading = true;\n                                            xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                        }\n                                    } else {\n                                        xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                        xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                        xhr_requests[files_count].oncancel();\n                                    }\n                                }\n                            });\n                        });\n                    }\n                } else {\n                    if (xhr_status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && xhr_status === 0){\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        let response_text, error_status;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (xhr_status === 500)\n                            response_text = this.fakeResponse || this.statusText;\n                        else if (xhr_status === 400 || this.fakeStatus){\n                            response_text = this.fakeResponse || JSON.parse(this.response).error;\n                            error_status = this.fakeStatus || JSON.parse(this.response).status;\n                            if (error_status && error_status == 429){\n                                setTimeout(() => {\n                                    self.account.testGalleryTokenExpire(() => {\n                                        self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                            if (!is_error) {\n                                                if (slot_response && slot_response.quota){\n                                                    if (slot_response.file && slot_response.hash){\n                                                        xhr_requests[files_count].fakeStatus = 200;\n                                                        xhr_requests[files_count].fakeResponse = {\n                                                            file: slot_response.file,\n                                                            id: slot_response.id,\n                                                            name: slot_response.name,\n                                                            thumbnail: slot_response.thumbnail,\n                                                            created_at: slot_response.created_at,\n                                                        };\n                                                        xhr_requests[files_count].oncancel();\n                                                    } else {\n                                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                        xhr_requests[files_count].is_uploading = true;\n                                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                    }\n                                                } else {\n                                                    xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                    xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                    xhr_requests[files_count].oncancel();\n                                                }\n                                            }\n                                        });\n                                    });\n                                }, 1000);\n                                return;\n                            }\n                        }\n                        else if (xhr_status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (xhr_status === 0) && (message.get('files')[idx] = null);\n                        if (!message.get('files').filter((element) => { return element != null}).length && !message.get('message')){\n                            self.bottom.setEditedMessageAttachments(message, true);\n                            self.bottom.setRedactedUploadMessage(message);\n                            self.removeMessage($message);\n                            return;\n                        }\n                        files_count++;\n                        if (xhr_status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    self.account.testGalleryFileSlot(xhr_requests[files_count].formData.get('file'), (slot_response) => {\n                                        if (!is_error) {\n                                            if (slot_response && slot_response.quota){\n                                                if (slot_response.file && slot_response.hash){\n                                                    xhr_requests[files_count].fakeStatus = 200;\n                                                    xhr_requests[files_count].fakeResponse = {\n                                                        file: slot_response.file,\n                                                        id: slot_response.id,\n                                                        name: slot_response.name,\n                                                        thumbnail: slot_response.thumbnail,\n                                                        created_at: slot_response.created_at,\n                                                    };\n                                                    xhr_requests[files_count].oncancel();\n                                                } else {\n                                                    xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                                    xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'));\n                                                    xhr_requests[files_count].is_uploading = true;\n                                                    xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                                }\n                                            } else {\n                                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                                xhr_requests[files_count].oncancel();\n                                            }\n                                        }\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    this.account.testGalleryFileSlot(xhr_requests[0].formData.get('file'), (slot_response) => {\n                        if (!is_error) {\n                            if (slot_response && slot_response.quota){\n                                if (slot_response.file && slot_response.hash){\n                                    xhr_requests[0].fakeStatus = 200;\n                                    xhr_requests[0].fakeResponse = {\n                                        file: slot_response.file,\n                                        id: slot_response.id,\n                                        name: slot_response.name,\n                                        thumbnail: slot_response.thumbnail,\n                                        created_at: slot_response.created_at,\n                                    };\n                                    xhr_requests[0].oncancel();\n                                } else {\n                                    xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                                    xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'));\n                                    xhr_requests[0].is_uploading = true;\n                                    xhr_requests[0].send(xhr_requests[0].formData);\n                                }\n                            } else {\n                                xhr_requests[files_count].fakeStatus = slot_response && slot_response.status ? slot_response.status : 400;\n                                xhr_requests[files_count].fakeResponse = slot_response && slot_response.error ? slot_response.error : 'Unknown error';\n                                xhr_requests[0].oncancel();\n                            }\n                        }\n                    });\n                }, (err_status) => {\n                    let response_text = err_status,\n                        file;\n                    message.get('files').length && (file = message.get('files')[0])\n                    if (file && !_.isUndefined(file.upload_id)){\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                    }\n                    message.get('files').length && (message.get('files')[0].is_errored = true);\n                    is_error = true;\n                    $(xhr_requests).each((idx, request) => {\n                        request.abort();\n                    })\n                    self.onFileNotUploaded(message, $message, response_text);\n                });\n            }\n        }\n\n    },\n\n    encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n    },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        message.set('videos', videos);\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video, idx) => {\n                let video_el = this.createVideo(video, idx);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video, idx) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let video_attrs = {video_src: video.sources[0], thumbnail: video.thumbnail, video_id: idx},\n            $video_wrap_template = $(templates.messages.video(video_attrs));\n        if (video.thumbnail){\n            setTimeout(() => {\n                $video_wrap_template.append($(`<img class=\"plyr-video-poster\" src=\"${video.thumbnail}\" onerror=\"this.style.display='none'\">`))\n            }, 1000);\n        }\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                this.bottom.setEditedMessageAttachments(message, true);\n                this.bottom.setRedactedUploadMessage(message);\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server'),\n            is_unread_archived = message.get('is_unread_archived'),\n            is_missed_msg = message.get('missed_msg'),\n            $msg = this.$(`.chat-message[data-uniqueid=\"${message.get(\"unique_id\")}\"]`);\n        if (is_unread) {\n            if (!is_unread_archived && !is_synced && !is_missed_msg)\n                this.model.messages_unread.add(message);\n            $msg.addClass('unread-message');\n            $msg.addClass('unread-message-background');\n            this.model.recountUnread();\n        } else {\n            if ((!is_unread_archived && !is_synced && !is_missed_msg) || this.model.messages_unread.indexOf(message) > -1)\n                this.model.messages_unread.remove(message);\n            $msg.removeClass('unread-message');\n            setTimeout(() => {\n                $msg.removeClass('unread-message-background');\n            }, 1000);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            link_references = msg.get('link_references'),\n            fwd_messages = [],\n            fwd_link_references = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n                message.get('link_references') && fwd_link_references.push(message.get('link_references'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(link_references).each(function(idx, link_reference) {\n            if (files_links != \"\")\n                files_links += '\\n';\n            files_links += link_reference.url;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        $(fwd_link_references).each(function (idx, message) {\n            $(message).each(function (i, link_reference) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += link_reference.url;\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            }, (err) => {\n                _.extend(options, {present: null, subscription: null});\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('not-decrypted-icon') || $elem.closest('.dropdown-content').length || $elem.closest('.not-decrypted-icon').length)\n            return;\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')) || this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') ||  $elem.hasClass('not-decrypted-tooltip') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.context_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg, this.account.forwarded_messages.get($elem.data('uniqueid')));\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id) || this.account.context_messages.get(unique_id) || this.account.searched_messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact && contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\n\nxabber.ChatContentPlaceholderView = xabber.BasicView.extend({\n    className: 'chat-body-content-placeholder-wrap',\n    template: templates.chat_content_placeholder,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        return this;\n    },\n\n    render: function () {\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            !msg && (msg = this.account.forwarded_messages.get($elem.closest('.chat-message').data('uniqueid')));\n            if (msg && msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg, this.account.forwarded_messages.get(unique_id));\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(), data, target;\n                if (paramValue.on_format){\n                    data = paramValue.data;\n                    target = paramValue.target;\n                } else {\n                    data = JSON.parse(paramValue);\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                    node.innerHTML = data.nickname;\n                }\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n\n            static formats(node) {\n                return {\n                    on_format: true,\n                    data: {\n                        nickname: node.innerHTML,\n                        is_me: node.classList.contains(\"ground-color-100\")\n                    },\n                    target: node.getAttribute('data-target')\n                };\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        if (options && options.force_opened_state){\n            chat.set('opened', true);\n            chat.set('timestamp', Date.now());\n        }\n        chat.trigger('open', {clear_search: options.clear_search, right_force_close: options.right_force_close});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    let avatar_url = $message.find('info').attr('url');\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    avatar_url && participant.set('avatar_url', avatar_url);\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (!pending_message)\n                    return;\n                let chat = this.account.chats.get(pending_message.chat_hash_id);\n                if (chat && chat.get('group_chat'))\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                chat.setStanzaId(pending_message.unique_id, stanza_id);\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if ($message.find('replace').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact && contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == Strophe.NS.OMEMO;\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            chat.retracted_msg_id_list.push(retracted_msg_id);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (!chat.get('group_chat') && retract_version > this.account.retraction_version) {\n                this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                if (!Object.keys(options).length)\n                    return;\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            if (!Object.keys(options).length && !forwarded_msgs.length)\n                return;\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n            }\n        }\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        all_servers = all_servers.sort((x,y) => { return x == this.account.domain ? -1 : y == this.account.domain ? 1 : 0; })\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n            let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                contact = this.account.contacts.mergeContact(group_jid);\n            contact.set('group_chat', true);\n            contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.set('known', true);\n            contact.set('removed', false);\n            setTimeout(() => {\n                contact.pres('subscribe');\n            }, 500);\n            this.close();\n            xabber.chats_view.updateScreenAllChats();\n            contact.trigger(\"open_chat\", contact);\n            if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                    .c('item', {jid: group_jid + '/' + moment.now()});\n                this.account.sendIQFast(iq_set_blocking);\n            }\n\n        }, () => {\n            this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n            this.$('input[name=\"chat_jid\"]').addClass('invalid');\n        });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"add_opened_chat\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').length);\n        if (options.right !== 'chat' && !options.no_unread && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats') && !xabber.toolbar_view.data.get('account_filtering')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo).active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.showChatPlaceholder();\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view && (item.get('timestamp') || item.get('saved'))) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        if (active_toolbar.hasClass('account-item') && view.account.get('jid') !== active_toolbar.attr('data-jid')){\n            return;\n        }\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        (active_toolbar.hasClass('all-chats') || active_toolbar.hasClass('settings-modal') || (xabber.accounts.enabled.length === 1 && active_toolbar.hasClass('saved-chats'))) && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('saved-chats') && (xabber.accounts.enabled.length !== 1) && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved'))));\n        active_toolbar.hasClass('mentions') && (view.model.get('saved') && this.replaceChatItem(item, this.model.filter(chat => (chat.get('jid') === chat.account.domain))));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false || (view.model.get('is_accepted') == true && view.contact.invitation))) {\n            if (view.model.get('is_accepted') == false){\n                view.model.set('display', true);\n                view.model.set('active', true);\n                xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n            } else if (view.model.get('is_accepted') == true && view.contact.invitation){\n                view.contact.invitation.join();\n            }\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded')) {\n                if (\n                    (view.model.get('const_unread') || view.model.get('unread'))\n                    && view.model.get('last_read_msg') &&\n                    (!view.content._prev_scrolltop || (view.content._prev_scrolltop && view.content._is_scrolled_bottom) || (view.model.get('show_new_unread') === true))\n                    && !view.model.get('loading_unread_history') && !options.force_bottom && xabber.body.screen.get('chat_item') !== view\n                ){\n                    view.model.set('show_new_unread', false);\n                    view.model._wait_load_unread_history = new $.Deferred();\n                    view.content._no_scrolling_event = true;\n                    view.content.loadUnreadHistory();\n                } else if (view.model.messages.length < 20)\n                    view.content.loadPreviousHistory();\n            }\n            if (!options.right_force_close && (\n                xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )\n            )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            if (!view.model.get('loading_unread_history')){\n                let current_scrolling = view.content.getScrollTop() || view.content._scrolltop,\n                    scrolled_to_bottom = view.content.isScrolledToBottom();\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                !scrolled_to_bottom && view.content.scrollTo(current_scrolling);\n            } else {\n                xabber.body.setScreen((options.screen || 'all-chats'), {\n                    right: 'chat',\n                    clear_search: options.clear_search,\n                    chat_item: view,\n                    show_placeholder: true,\n                    blocked: view.model.get('blocked')\n                },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                view.model.set('active', true);\n                view.model._wait_load_unread_history.done(() => {\n                    if (xabber.body.screen.get('chat_item') === view) {\n                        view.model.set('loading_unread_history', false)\n                        xabber.body.setScreen((options.screen || 'all-chats'), {\n                            right: 'chat',\n                            clear_search: options.clear_search,\n                            chat_item: view,\n                            blocked: view.model.get('blocked')\n                        },{right_contact_save: options.right_contact_save, right_force_close: options.right_force_close} );\n                        view.content.scrollToUnread();\n                        view.content._long_reading_timeout = true;\n                        view.content._no_scrolling_event = false;\n                        view.content.onScroll();\n                        if (options.scroll_to_chat) {\n                            xabber.chats_view.scrollToChild(view.$el);\n                        } else {\n                            xabber.chats_view.scrollTo(scrolled_top);\n                        }\n                    }\n                });\n            }\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        if (options.scroll_to_chat) {\n            xabber.chats_view.scrollToChild(view.$el);\n        } else {\n            xabber.chats_view.scrollTo(scrolled_top);\n        }\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            archive_chats = archive_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showSavedChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            saved_chats = chats.filter(chat => chat.get('saved'));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            saved_chats = saved_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        saved_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n            this.$(`.chat-list .chat-item[data-id=\"${chat.id}\"] .chat-title`).text(chat.get('jid'));\n        });\n    },\n\n    showNotifications: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            notificatons_chats = chats.filter(chat => (chat.get('jid') === chat.account.domain || chat.contact && chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both' ));\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (xabber.toolbar_view.data.get('account_filtering'))\n            notificatons_chats = notificatons_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')));\n        notificatons_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function (no_unread) {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = no_unread || xabber.toolbar_view.data.get('account_filtering') ? false : xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (xabber.toolbar_view.data.get('account_filtering') && !no_unread){\n            xabber.toolbar_view.data.set('account_filtering', null);\n            xabber.toolbar_view.$('.toolbar-item.account-item').removeClass('active');\n        }\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item:not(.toolbar-logo).unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        if (xabber.toolbar_view.data.get('account_filtering')){\n            all_chats = all_chats.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n            all_chats_pinned = all_chats_pinned.filter(chat => (chat.account.get('jid') === xabber.toolbar_view.data.get('account_filtering')))\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item:not(.account-item):not(.toolbar-logo)').removeClass('active')\n            .filter('.all-chats:not(.toolbar-logo)').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n      events: {\n          \"keyup .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\"\n      },\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap .pinned-chat-list').html(\"\");\n        this.$('.chat-list-wrap .chat-list').html(\"\");\n        this.$('.chat-list-wrap .contact-list').html(\"\");\n        this.saved_chat = false;\n        let chats = xabber.chats_view.model,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                if (chat.account.get('jid') === this.account.get('jid')) {\n                    if (chat.id == `${this.account.get('jid')}:saved`) {\n                        let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                        $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                        this.saved_chat = true;\n                        this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                    } else\n                        this.$('.chat-list-wrap .pinned-chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n                }\n            });\n        }\n        all_chats.forEach((chat) => {\n            if (chat.account.get('jid') === this.account.get('jid')) {\n                if (chat.id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = chat.item_view.$el.clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap .chat-list').append(chat.item_view.$el.clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap .pinned-chat-list').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap .pinned-chat-list').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap .chat-list').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap .contact-list').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.modal-content .error').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        this.$(`textarea[name=\"invitation_text\"]`).val('');\n        this.$('.invitation-reason-wrap').addClass('hidden');\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    showReasonWrap: function () {\n        this.$('.invitation-reason-wrap').switchClass('hidden');\n        if (this.$('.invitation-reason-wrap').hasClass('hidden'))\n            this.$(`textarea[name=\"invitation_text\"]`).val('');\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n        this.$('.btn-invitation-reason').click(() => {\n            this.showReasonWrap();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (!$target.hasClass('click-selected') && itemIdx > -1){\n            this.$(`.list-item[data-jid=\"${contact_jid}\"]`).removeClass('click-selected');\n            this.selected_contacts.splice(itemIdx, 1);\n            this.updateCounter();\n            return;\n        }\n        $target.toggleClass('click-selected');\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let reason_text = (this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]);\n        if (this.$(`textarea[name=\"invitation_text\"]`).val()){\n            reason_text = reason_text + '\\n\\n' + this.$(`textarea[name=\"invitation_text\"]`).val();\n        }\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t(reason_text);\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let reason_text = (this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to]);\n        if (this.$(`textarea[name=\"invitation_text\"]`).val()){\n            reason_text = reason_text + '\\n\\n' + this.$(`textarea[name=\"invitation_text\"]`).val();\n        }\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t(reason_text).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          this.model.on(\"hide_chat\", this.hideChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      hideChat: function () {\n          this.model.set({'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettingsModal();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"hide_chat\", this.hideChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber._settings.on(\"change:jingle_calls\", this.updateGroupChatHead, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (!xabber.settings.jingle_calls){\n            return;\n        }\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.btn-jingle-message').hideIf(!xabber.settings.jingle_calls);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    hideChat: function () {\n        this.model.set({'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    let scrolled_top = xabber.chats_view.getScrollTop() || 0;\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                    xabber.chats_view.scrollTo(scrolled_top);\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      contentType: \"application/json\",\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        (Math.max.apply(null, widths) !== 0) && this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((obj) => {\n                        let is_contact_trusted = obj.trust,\n                            unverified_counter = obj.unverified_counter;\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').attr('data-unverified-device-count', unverified_counter).html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                this.account.showSettings(null, 'devices');\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        this.quill.root.focus();\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root.lastElementChild\n            && this.quill.root.lastElementChild.lastChild ? this.quill.root.lastElementChild.lastChild : this.quill.root.lastElementChild;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        range.detach(); // optimization\n        this.quill.root.scrollTop = this.quill.root.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height(),\n            quill_textarea = $(this.quill.container).find('.rich-textarea'),\n            quill_current_height = quill_textarea.prop('scrollHeight');\n        if (quill_current_height !== this.text_input_height) {\n            if (this.text_input_height < quill_current_height){\n                quill_textarea.scrollTop(quill_current_height);\n            }\n            this.text_input_height = quill_current_height;\n        }\n        let quill_content = this.quill.getContents()\n        if (quill_content && quill_content.ops && quill_content.ops.length){\n            let text = quill_content.ops[0].insert;\n            if (text && text.trimStart) {\n                let trimmed_text = text.trimStart();\n                if (text.length != trimmed_text.length){\n                    quill_content.ops[0].insert = trimmed_text;\n                    this.quill.setContents(quill_content, 'user');\n                    this.quill.disable();\n                    setTimeout(() => {\n                        this.focusOnInput();\n                        this.quill.root.focus();\n                    },1)\n                }\n            }\n        }\n\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                if (!edit_msg)\n                    return;\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n            } else {\n                this.unsetForwardedMessages();\n            }\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        ev.preventDefault();\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        if (clipboard_data) {\n            if (clipboard_data.files.length > 0) {\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                else {\n                    let text = _.escape(clipboard_data.getData('text')),\n                        arr_text = Array.from(text);\n                    arr_text.forEach((item, idx) => {\n                        if (item == '\\n')\n                            arr_text.splice(idx, 1, '</p><p>');\n                        if (item == ' ')\n                            arr_text.splice(idx, 1, '&nbsp');\n                    });\n                    text = \"<p>\" + arr_text.join(\"\") + \"</p>\";\n                    let range = window.getSelection().getRangeAt(0);\n                    range.insertNode($('<div>' + text + '</div>')[0]);\n                }\n            }\n            else {\n                let text = _.escape(clipboard_data.getData('text')),\n                    arr_text = Array.from(text);\n                arr_text.forEach((item, idx) => {\n                    if (item == '\\n')\n                        arr_text.splice(idx, 1, '</p><p>');\n                    if (item == ' ')\n                        arr_text.splice(idx, 1, '&nbsp');\n                });\n                text = \"<p>\" + arr_text.join(\"\") + \"</p>\";\n                let range = window.getSelection().getRangeAt(0);\n                range.insertNode($('<div>' + text + '</div>')[0]);\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n        this.focusOnInput();\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted);\n        list = _.difference(list, this.currently_loaded_link_references);\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    } else {\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new opusRecorder({\n                        encoderPath: opusRecorderEncoderPath,\n                        encoderSampleRate: 16000,\n                        numberOfChannels: 1\n                }),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob([chunks], { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks = e;\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertText(caret_idx++, emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        if (!this.account.chat_settings)\n            return;\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target_text = $(ev.target).closest('.emoji-wrap').text();\n            this.typeEmoticon($target_text);\n        });\n    },\n\n    submit: function (ev, forced) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea(),\n            dfd = new $.Deferred();\n\n\n        if (this.model.get('encrypted') && this.view.$('.chat-notification').hasClass('encryption-warning') && !forced){\n            let unverified_counter = this.view.$('.encryption-warning').attr('data-unverified-device-count');\n            utils.dialogs.ask_extended(xabber.getQuantityString(\"dialog_unverified_devices__header\", unverified_counter || 1), xabber.getQuantityString(\"dialog_unverified_devices__text\", unverified_counter || 1),\n                {modal_class: 'modal-unverified-devices', no_dialog_options: true},\n                { ok_button_text: xabber.getString(\"omemo__alert_new_device__button_manage_devices\"), optional_button: 'send-anyway', optional_button_text: xabber.getString(\"dialog_unverified_devices__send\")})\n                .done((result) => {\n                if (result) {\n                    if (result === 'send-anyway'){\n                        this.submit(ev, true);\n                    }\n                    else{\n                        this.openDevicesWindow();\n                    }\n                }\n            });\n            return;\n        }\n\n        dfd.done(() => {\n            this.$('.mentions-list').html(\"\").hide();\n            $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n                let emoji = emoji_item.innerText;\n                this.account.chat_settings.updateLastEmoji(emoji);\n            });\n            let content_concat = [];\n            if (text.length >= constants.STANZA_MAX_SIZE) {\n                utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n                $rich_textarea.flushRichTextarea();\n                return;\n            }\n            if (text.length) {\n                this.quill.getContents().forEach((content) => {\n                    if (content.attributes) {\n                        let content_attrs = [],\n                            start_idx = content_concat.length,\n                            end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                        for (let attr in content.attributes)\n                            (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                        if (content_attrs.indexOf('mention') > -1) {\n                            let mention_idx = content_attrs.indexOf('mention'),\n                                is_gc = this.contact.get('group_chat'),\n                                target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                            content_attrs.splice(mention_idx, mention_idx + 1);\n                            target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                            mentions.push({\n                                start: start_idx,\n                                end: end_idx,\n                                target: target,\n                                is_gc: is_gc\n                            });\n                        }\n                        if (content.attributes.blockquote) {\n                            if (content_concat.length) {\n                                Array.from(content.insert).forEach((ins) => {\n                                    let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                        quote_end_idx = content_concat.length;\n                                    blockquotes.push({\n                                        marker: constants.QUOTE_MARKER,\n                                        start: quote_start_idx,\n                                        end: quote_end_idx + constants.QUOTE_MARKER.length\n                                    });\n                                    text = Array.from(_.escape(text));\n\n                                    if (quote_start_idx === quote_end_idx) {\n                                        text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                    }\n                                    else {\n                                        text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                        content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                    }\n                                    (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                    text[quote_end_idx - 1] += '\\n';\n\n                                    text = _.unescape(text.join(\"\"));\n                                    content_concat = Array.from(content_concat.join(\"\"));\n\n                                    markup_references.forEach((markup_ref) => {\n                                        if (markup_ref.start >= quote_start_idx) {\n                                            markup_ref.start += constants.QUOTE_MARKER.length;\n                                            markup_ref.end += constants.QUOTE_MARKER.length;\n                                        }\n                                    });\n\n                                    content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                                })\n                            }\n                        }\n                        content_attrs.length && markup_references.push({\n                            start: start_idx,\n                            end: end_idx,\n                            markup: content_attrs\n                        });\n                    }\n                    if (content.insert && content.insert.emoji) {\n                        content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                    }\n                    else if (content.attributes && content.attributes.blockquote) {\n                    }\n                    else\n                        content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n                });\n            }\n            let start_length = text.length;\n            text = text.trimStart();\n            if (start_length > text.length) {\n                let delta = start_length - text.length;\n                mentions.forEach((mention) => {\n                    mention.start -= delta;\n                    mention.end -= delta;\n                });\n                markup_references.forEach((markup_reference) => {\n                    markup_reference.start -= delta;\n                    markup_reference.end -= delta;\n                });\n                blockquotes.forEach((blockquote) => {\n                    blockquote.start -= delta;\n                    blockquote.end -= delta;\n                });\n            }\n            if (link_references && link_references.length) {\n                link_references = link_references.filter(item => item.original_text);\n                link_references.forEach((link_reference) => {\n                    if (link_reference && link_reference.original_text) {\n                        link_reference.start = text.indexOf(link_reference.original_text);\n                        if (link_reference.start != -1) {\n                            link_reference.start = 0;\n                            link_reference.end = 0;\n                        }\n                    }\n                });\n            }\n            this.removeAllLinkReferences();\n            this.link_reference_exempted = [];\n            this.removeAllFileSnippets();\n            text = text.trimEnd();\n            $rich_textarea.flushRichTextarea();\n            this.quill.focus();\n            this.displayMicrophone();\n            if (this.edit_message) {\n                this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n                $rich_textarea.placeCaretAtEnd();\n                return;\n            }\n            if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n                if (this.model.get('saved') && this.fwd_messages.length && !text)\n                    this.fwd_messages.forEach((message) => {\n                        this.view.onSubmit(\"\", [message]);\n                    });\n                else\n                    this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            }\n            this.unsetForwardedMessages();\n            xabber.chats_view.clearSearch();\n            if (this.model.messages_view)\n                if (this.model.messages_view.data.get('visible'))\n                    xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n            $rich_textarea.placeCaretAtEnd();\n        });\n        if (attached_files && attached_files.length) {\n            let failed_files = [],\n                files_count = 0,\n                file_check_dfd = new $.Deferred();\n            file_check_dfd.done(() => {\n                if (failed_files.length){\n                    failed_files.forEach((file) => {\n                        this.$(`.message-reference-preview-item-file[data-id=\"${file.uid}\"]`).remove();\n                        this.removeFileSnippetById(file.uid);\n                    });\n                    utils.dialogs.error(\n                        '' + _.pluck(failed_files, 'name').join(` — ${xabber.getString(\"message__file_was_deleted__file_label\")}. \\n`) + ` — ${xabber.getString(\"message__file_was_deleted__file_label\")}.`,\n                        {},\n                        xabber.getQuantityString(\"message__file_was_deleted\", failed_files.length)\n                    );\n                    dfd.reject();\n                } else {\n                    dfd.resolve();\n                }\n            });\n            if (!this.edit_message) {\n                attached_files.forEach((file) => {\n                    utils.tryReadingFile(file).then(()=> {\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    }, ()=> {\n                        failed_files = failed_files.concat([file]);\n                        files_count++;\n                        if (attached_files.length === files_count) {\n                            file_check_dfd.resolve();\n                        }\n                    });\n                });\n            } else {\n                file_check_dfd.resolve();\n            }\n        } else {\n            dfd.resolve();\n        }\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.forward-message-wrap').switchClass('non-active', this.model.get('encrypted'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content') || [],\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {\n                xmlns: Strophe.NS.REWRITE,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model),\n                id: stanza_id\n            }),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file['id'] && $message.c('gallery-id').t(file['id']).up();\n                file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message]);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, decrypted_msg);\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && my_msgs == $msgs.length && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active') || this.model.get('encrypted'))\n            return;\n        if (this.$('.forward-message-wrap').hasClass('non-active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.ChatBodyPlaceholderContainer = xabber.Container.extend({\n    className: 'chat-body-placeholder-container',\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"chat_list__placeholder\"));\n        }\n    },\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        //readds msg handler if it somehow dissapears\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            let options = {};\n            this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                this.roster && this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                this.roster && this.roster.getRoster();\n            });\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_body_placeholder = this.right_panel.addChild('chat_body_placeholder',\n            this.ChatBodyPlaceholderContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"change:idle\", function () {\n        if (!this.get('idle')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.onScroll(null, true);\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function (no_unread) {\n        this.chats_view.showAllChats(no_unread);\n    }, this);\n\n    this.on(\"show_archive_chats\", function (no_unread) {\n        this.chats_view.showArchiveChats(no_unread);\n    }, this);\n\n    this.on(\"show_saved_chats\", function (no_unread) {\n        this.chats_view.showSavedChats(no_unread);\n    }, this);\n\n    this.on(\"show_notification_chats\", function (no_unread) {\n        this.chats_view.showNotifications(no_unread);\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder,\n\n    _initialize: function (options) {\n        xabber.on('update_placeholder',this.onPlaceholderUpdate, this);\n    },\n\n    onPlaceholderUpdate: function () {\n        if (xabber.toolbar_view.$('.toolbar-item.jingle-calls.active').length || xabber.toolbar_view.$('.toolbar-item.geolocation-chats.active').length){\n            this.$('.text').text(xabber.getString(\"message_manager_error_not_implemented\"));\n        } else {\n            this.$('.text').text(xabber.getString(\"mentions_list__placeholder\"));\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (window.$('.message-actions-panel').length && !window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        this.updateContainersLayout();\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateContainersLayout = function () {\n        let width = this.body.$el.width(),\n            height = this.body.$el.height(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM;\n        let panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 64,\n            toolbar_accounts_heigth = height - 506,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow)) {\n            panel_width = 1536;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.toolbar_view.$el.find('.toolbar-bottom .accounts-wrap .accounts').css({\n            'max-height': toolbar_accounts_heigth,\n        });\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings-modal', {\n        main_overlay: {\n            settings_modal: null,\n        },\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_modal = new this.ViewPath('account.settings_account_modal');\n\n    this.body.addScreen('account_settings_modal', {\n        main_overlay: {\n            account_settings_modal: path_acc_settings_modal\n        },\n    });\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_body_placeholder = new this.ViewPath('chat_item.content_placeholder'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if (options.show_placeholder) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: null,\n                chat_body_placeholder: path_chat_body_placeholder,\n                chat_bottom: null\n            };\n        }\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_body_placeholder: null,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (!this.accounts.length)\n        this.body.setScreen('login');\n    else if (this.body.isScreen('blank'))\n        this.body.setScreen('all-chats');\n    xabber.trigger(\"start_accounts\");\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n            this.account.trigger('device_trusted', device.id, this.jid);\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_ignore'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                let f_count = this.$('div.fingerprints-content').find('div.row').length;\n                if (!f_count)\n                    this.$('div.fingerprints-content').html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                this.jid == this.account.get('jid') && f_count++;\n                this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.FingerprintsOwnDevices = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-devices-wrap',\n    template: templates.fingerprints_devices,\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.omemo = this.model;\n        this.jid = this.account.get('jid');\n        this.is_own_devices = true;\n    },\n\n    open: function (device_id, is_own) {\n        this.omemo = this.account.omemo;\n        this.data.set('visible', true);\n        this.updateColorScheme();\n        this.show();\n        this.renderOwnDevices(device_id, is_own);\n    },\n\n    updateTrustDevice: function (device_id, $container, context, callback) {\n        this.omemo.getMyDevices().then(() => {\n            let device = this.model.own_devices[device_id];\n            if (!device)\n                return;\n            if (device.get('ik')) {\n                let f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        this.renderTrustOnFingerprint(is_trusted, $container, context, callback);\n                    }\n                }, () => {\n                });\n            }\n        });\n    },\n\n    renderTrustOnFingerprint: function (is_trusted, $container, context, callback) {\n        $container.find('.device-encryption').attr('data-trust', is_trusted).addClass('active');\n        $container.attr('data-trust', is_trusted);\n        if (is_trusted === 'unknown'){\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__unverified_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__unverified_device\"));\n        } else if (is_trusted === 'trust') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__trusted_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__trusted_device\"));\n        } else if (is_trusted === 'ignore') {\n            $container.find('.device-encryption span').text(xabber.getString(\"settings_account__ignored_device\"));\n            $container.attr('data-trust-text', xabber.getString(\"settings_account__ignored_device\"));\n        }\n        if (is_trusted !== 'trust' && is_trusted !== 'ignore'){\n            let $warning_container = $container.closest('.devices-wrap').find('.device-encryption-warning'),\n                untrusted_count = parseInt($warning_container.attr('data-not-trusted-count')) + 1;\n            $warning_container.removeClass('hidden').attr('data-not-trusted-count', untrusted_count);\n            $warning_container.find('.device-encryption-warning-label').html(xabber.getString(\"settings_account__encryption_warning_text\", [untrusted_count]));\n        }\n        $container.find('.device-encryption .mdi-lock').removeClass('hidden');\n        context && context.updateHeight && context.updateHeight();\n        callback && callback();\n    },\n\n    renderOwnDevices: function (device_id, is_own) {\n        this.omemo.getMyDevices().then(() => {\n            this.device_id = device_id;\n            this.fingerprint = null;\n            if (is_own)\n                this.updateOwnFingerprint(device_id);\n            else{\n                this.updateOwnFingerprint(device_id);\n                this.updateFingerprints(device_id);\n            }\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateFingerprints: async function (device_id) {\n        let counter = 0,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content .other-device-content'),\n            device = this.model.own_devices[device_id];\n        $container.html('');\n        dfd.done((is_error) => {\n            console.log(is_error);\n            this.$('.dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                container: this.$('.fingerprints-content .other-device-content')[0],\n                alignment: 'left'\n            });\n        });\n        if (device.get('ik')) {\n            let options = {},\n                f = device.generateFingerprint(),\n                fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n            is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n            this.fingerprint = f;\n            $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n            dfd.resolve();\n        }\n        else {\n            this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                let $iq = $(iq),\n                    $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                    ik = $bundle.find(`ik`).text();\n                if (ik) {\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    let options = {},\n                        f = device.generateFingerprint(),\n                        fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                        is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                    is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                    this.fingerprint = f;\n                    $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                }\n                dfd.resolve();\n            }, () => {\n                dfd.resolve(true);\n            });\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').html(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').html(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, true);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content'),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust');\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        this.omemo.updateFingerprints(this.jid, this.device_id, this.fingerprint, false);\n        let device = this.account.omemo.own_devices[this.device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            device_icons = [\n                'device-cellphone',\n                'device-console',\n                'device-desktop',\n                'device-tablet',\n                'device-web',\n            ],\n            error, svg_icon;\n        if (fingerprint.match(/.{1,4}/g))\n            fingerprint = fingerprint.match(/.{1,4}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.account.omemo.own_devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,4}/g).join(\" \"));\n        svg_icon = edit_setting ? 'device-web' : device_icons[Math.floor(Math.random()*device_icons.length)]\n        let $row = templates.fingerprint_devices_item({id,label,trust, svg_icon, fingerprint, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.fingerprints-content');\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [this.device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                delete this.model.own_devices[this.device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[this.device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        this.account.trigger('trusting_updated');\n                        this.close();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, this.device_id);\n                }\n            }\n        });\n    },\n\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle(this.model.get('device_attrs'));\n           this.model.set('resend_bundle', false);\n           this.model.set('device_attrs', null);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.model.account.trigger('update_omemo_devices');\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            await this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey){\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            }\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            throw e;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.cached_messages && this.cached_messages.destroy();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                }\n                else {\n                    this.publishBundle();\n                }\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        this.publishBundle({device_id: device_id, label: label, omemo: omemo});\n                    }\n                    else {\n                        this.publishBundle();\n                    }\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, plaintext);\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('encryption', {\n                xmlns: Strophe.NS.EXPLICIT_MESSAGE_ENCRYPTION,\n                namespace: Strophe.NS.OMEMO\n            });\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied && options.carbon_direction && options.carbon_direction === 'sent')\n                return;\n\n            let device_id = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid');\n            options.device_id = device_id;\n\n            if (cached_msg) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                        if (options.gallery && deferred)\n                            deferred.resolve($message, options);\n\n                        if (!options.not_verified_device){\n                            let peer = this.getPeer(contact.get('jid')),\n                                device = peer.devices[device_id];\n                            if (device && device.get('fingerprint')) {\n                                let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                                if (_.isUndefined(trusted)){\n                                    options.not_verified_device = device_id;\n                                    options.not_verified_device_no_device = false;\n                                }\n                            } else if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid')){\n                                options.not_verified_device = device_id;\n                                options.not_verified_device_no_device = true;\n                            }\n                        }\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message, options);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n\n                    if (!options.not_verified_device){\n                        let peer = this.getPeer(contact.get('jid')),\n                            device = peer.devices[device_id];\n                        if (device && device.get('fingerprint')) {\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (_.isUndefined(trusted)){\n                                options.not_verified_device = device_id;\n                                options.not_verified_device_no_device = false;\n                            }\n                        } else if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid')){\n                            options.not_verified_device = device_id;\n                            options.not_verified_device_no_device = true;\n                        }\n                    }\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch((e) => {\n                    if (e.name === 'MessageCounterError')//for capturing double decryption of same message\n                        return;\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0, unverified_counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust, peer);\n                resolve({trust: trust, unverified_counter: unverified_counter});\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null){\n                            is_trusted = undefined;\n                            unverified_counter++;\n                        }\n                        if (trusted === null){\n                            is_trusted = null;\n                            unverified_counter++;\n                        }\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null){\n                                is_trusted = null;\n                                unverified_counter++;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null){\n                                is_trusted = undefined;\n                                unverified_counter++;\n                            }\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                else{\n                                    is_trusted = null;\n                                    unverified_counter++;\n                                }\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1){\n                                    is_trusted = 'nil';\n                                    unverified_counter++;\n                                }\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        contact_trusted = contact_trusted.trust;\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true' || $(keyElement).attr('kex') === '1',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey;\n        try {\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        }\n        catch (e) {\n            throw e;\n        }\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks, callback) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            }, callback);\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p && p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n\n        let prekeys_id_list = Object.keys(this.prekeys.getAll()),\n            prekeys_length = prekeys_id_list.length;\n\n        if (prekeys_length && prekeys_length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - prekeys_length,\n                last_id,\n                counter = 0,\n                used_last_id = 0;\n\n            last_id = Number(prekeys_id_list[prekeys_length - 1]);\n            if (last_id === NaN)\n                xabber.error('last_id is NaN!')\n\n            if (!_.isEmpty(this.own_used_prekeys.getAll())){\n                let used_prekeys_id_list = Object.keys(this.own_used_prekeys.getAll());\n\n                used_last_id = used_prekeys_id_list[used_prekeys_id_list.length - 1];\n                used_last_id = Number(used_last_id);\n\n                if (used_last_id && (used_last_id > last_id)){\n                    last_id = used_last_id;\n                }\n            }\n            for (let i = ++last_id; i < (last_id + missing_keys); i++){\n                xabber.error(i);\n                await this.bundle.generatePreKey(i).then((prekey) => {\n                    bundle.preKeys.push(prekey);\n                    counter++;\n                    if (counter === missing_keys)\n                        this.account.omemo.publishBundle();\n                });\n            }\n            if (missing_keys === 0)\n                this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function (device_attrs) {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        xabber.error(pks);\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            this.set('device_attrs', device_attrs);\n            return;\n        }\n        let dfd = new $.Deferred();\n        dfd.done(() => {\n            if (device_attrs){\n                device_attrs.omemo.publishDevice(device_attrs.device_id, device_attrs.label);\n            }\n        });\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, (res) => {\n            this.publish(spk, ik.pubKey, pks, () => {\n                dfd.resolve();\n            });\n        }, (err) => {\n            if (($(err).find('error').attr('code') == 404)){\n                this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                    this.publish(spk, ik.pubKey, pks, () => {\n                        dfd.resolve();\n                    });\n                });\n            }\n        });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    getMessages: function (contact) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages;\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/emojis.json\": 85304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 92444;","var map = {\n\t\"./accounts/account_settings_modal.html\": 59166,\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_account_password.html\": 15415,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item_modal.html\": 5766,\n\t\"./accounts/delete_files_media_gallery.html\": 72971,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item_modal.html\": 56001,\n\t\"./accounts/media_gallery_account.html\": 57872,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/single_account_settings_modal.html\": 86572,\n\t\"./accounts/status_message_input_widget.html\": 71326,\n\t\"./accounts/token_item_modal.html\": 84377,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/unregister_account.html\": 49485,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_devices_item.html\": 16969,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/fingerprints_devices.html\": 26376,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/setting_emoji_font_radio_input.html\": 73122,\n\t\"./base/setting_language_radio_input.html\": 49707,\n\t\"./base/setting_radio_input.html\": 94944,\n\t\"./base/settings.html\": 15887,\n\t\"./base/settings_modal.html\": 81012,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_content_placeholder.html\": 36209,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./chats/unread_marker.html\": 98875,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-cancel.html\": 53283,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/account.html\": 32721,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/address.html\": 94429,\n\t\"./svg/alarm-bell.html\": 47158,\n\t\"./svg/alert-circle.html\": 55133,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/birthday.html\": 74741,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/bug.html\": 89965,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/camera.html\": 26716,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chat.html\": 71714,\n\t\"./svg/check-circle.html\": 62633,\n\t\"./svg/check.html\": 26446,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circle-slice-1.html\": 45013,\n\t\"./svg/circle-slice-2.html\": 15460,\n\t\"./svg/circle-slice-3.html\": 56377,\n\t\"./svg/circle-slice-4.html\": 63363,\n\t\"./svg/circle-slice-5.html\": 53161,\n\t\"./svg/circle-slice-6.html\": 90100,\n\t\"./svg/circle-slice-7.html\": 47263,\n\t\"./svg/circle-slice-8.html\": 16472,\n\t\"./svg/circles-outline.html\": 47033,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/client-outline.html\": 52773,\n\t\"./svg/client.html\": 6625,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/cloud.html\": 55696,\n\t\"./svg/contact-add.html\": 63272,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/database-lock.html\": 17338,\n\t\"./svg/database.html\": 41473,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/description.html\": 63993,\n\t\"./svg/device-cellphone.html\": 79824,\n\t\"./svg/device-console.html\": 32111,\n\t\"./svg/device-desktop.html\": 5772,\n\t\"./svg/device-tablet.html\": 18955,\n\t\"./svg/device-web.html\": 16919,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/download.html\": 58712,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/email.html\": 22505,\n\t\"./svg/expires.html\": 21321,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/id.html\": 50807,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/information.html\": 66035,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/invite.html\": 75917,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/job.html\": 97579,\n\t\"./svg/key-variant.html\": 76499,\n\t\"./svg/key.html\": 46753,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/lock-alert.html\": 63234,\n\t\"./svg/lock-check.html\": 14833,\n\t\"./svg/lock-cross.html\": 8513,\n\t\"./svg/lock-open.html\": 1652,\n\t\"./svg/lock-question.html\": 67160,\n\t\"./svg/lock.html\": 6258,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/security.html\": 91467,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/star-face.html\": 1866,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/status.html\": 5000,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/trash.html\": 61686,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/web-cancel.html\": 26330,\n\t\"./svg/web.html\": 7094,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit_modal.html\": 43918,\n\t\"./vcard/vcard_modal.html\": 59265,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","let client_translation_progress = {\"en\":100,\"ar\":25,\"az\":2,\"be\":12,\"bg\":58,\"bs\":0,\"ca\":23,\"cs\":99,\"cy\":0,\"da\":0,\"de\":44,\"el\":27,\"es-ES\":31,\"es-latin\":61,\"et\":0,\"fa\":4,\"fi\":9,\"fil\":13,\"fr\":32,\"ga-IE\":0,\"he\":19,\"hi\":0,\"hr\":0,\"hu\":13,\"hy-AM\":8,\"id\":95,\"is\":0,\"it\":64,\"ja\":18,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":3,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":19,\"ne-NP\":0,\"nl\":18,\"no\":0,\"oc\":12,\"pa-IN\":0,\"pl\":59,\"pt-BR\":63,\"pt-PT\":13,\"qya-AA\":0,\"ro\":15,\"ru\":62,\"sat\":1,\"sco\":0,\"si-LK\":33,\"sk\":18,\"sl\":25,\"sq\":3,\"sr\":12,\"sr-Cyrl-ME\":0,\"sv-SE\":34,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":62,\"uk\":25,\"uz\":0,\"vi\":12,\"yo\":0,\"zh-CN\":99,\"zh-TW\":10,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.4.88\",\"version_description\":\"added emoji font attribution, added loading emoji warning, changed settings window sizing\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(51008)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","constants","ASSETS_URL_PREFIX","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_DEFAULT_GREY","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","DOWNTIME_RECONNECTION_TIMEOUT","PING_SENDING_INTERVAL","IDLING_MINIMAL_TIMEOUT","IDLING_MAXIMUM_TIMEOUT","IDLING_DEFAULT_TIMEOUT","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","urls","credential","username","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","USE_SOCIAL_AUTH","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","BACKGROUND_IMAGES_XML_URL","BACKGROUND_PATTERNS_XML_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","DEFAULT_EMOJI_FONT","EMOJI_FONTS_LIST","notoColor","name","value","url","hint","attribution_text","order","system","is_system","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","idleJs","opusRecorder","opusRecorderEncoderPath","xabber_i18next","xabber_i18next_sprintf","sha256","VanillaQR","magnificPopup","backgroundImagesXml","backgroundPatternsXml","Strophe","evaluate","interpolate","templates","_addTemplate","options","path","split","tpl","join","default","tpl_name","pop","res","attr","is_svg","data","html","$html","find","each","$el","this","svg_name","removeClass","addClass","svg","insertSvg","addTemplate","addSvgTemplate","addJSONTemplate","attention_json","attention","forEach","item","attention_sound","file_name","not_selectable","push","ringtones_json","ringtones","ringtone","dialtones_json","dialtones","dialtone","notifications_json","notifications","notification","system_json","system_sound_list","system_item","all_sounds","concat","raw_data","x","y","getEmoji","offset","lead","trail","emoji_data","emoji","emoji_regexp","prototype","emojify","emoji_size","title","replace","removeEmoji","replaceEmoji","selector","text","length","all","get","getByIndex","idx","hasher","_image_cache","COLORS","MAX_IMG_SIZE","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","window","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","includes","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","isArray","ok_button","cancel_button","optional_buttons","reverse","no_dialog_options","quoted_text","append","cancel_button_main","inverted_buttons","img_details","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","isVisibleInViewport","elementTop","top","elementBottom","outerHeight","viewportTop","scrollTop","viewportBottom","isVisibleInContainer","container","eleTop","offsetTop","eleBottom","clientHeight","containerTop","containerBottom","isFullyVisibleInContainer","isBottomVisibleInContainer","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","replaceAll","RegExp","utils","uuid","c","r","random","toString","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","Number","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","tryReadingFile","Promise","reject","console","log","getDomainFromUrl","a","test","href","hostname","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_name","substr","toLowerCase","getKeyByValue","object","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","repeat","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","sounds","client_translation_progress","bc","BroadcastChannel","onmessage","event","disabled_client","postMessage","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","client_name","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","check_config","_settings","Settings","storage_name","getStorageName","fetch","settings","location","host","pathname","_cache","ModelWithStorage","cache","save","extendFunction","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","ononline","disconnectWhenConnecting","lang","language","loadTranslations","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","msg","warn","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","cacheFavicons","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","idling","idling_time","notifications_private","notifications_group","jingle_calls","notifications_volume_enabled","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","emoji_font","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","sound_on_call_busy","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","configure","config","pick","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","emoji_dfd","emoji_url","emoji_obj","loadEmojiFont","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","updateFaviconConnected","is_disconnected","account","isConnected","session","updateAllMessageCounterOnDisconnect","is_fast","connection","activate","extendWith","reduce","instance","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","tree","close_settings","main_overlay","patchTree","has","className","isNull","new_view","events","keyUpOnSearch","stopPropagation","ids","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","query_transliterated","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","unbind","chat_item_view","new_attrs","stamp","uniqueId","isScreen","show_placeholder","right","right_force_close","right_contact","content","_prev_scrolltop","_scrolltop","previous_screen","changed","showChatPlaceholder","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","clickAllChats","showAllChats","no_unread","closest","is_active","showArchive","showSavedChats","right_contact_save","scroll_to_chat","once","showNotifications","showChatsByAccount","showContacts","showMentions","showSettings","account_block_name","showSettingsModal","showPlaceholder","screen_name","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","left","setFullScreen","fullscreenElement","exitFullscreen","requestFullscreen","cancelFullScreen","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","status_text","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","xPercent","innerWidth","yPercent","innerHeight","dfd","provider","updateColorScheme","player_item","message_unique_id","video_sources","video_src","source","sources","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","video_file","video_decrypted","decryptFile","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","renderVoiceMessage","toggleMute","settings_modal","updateLanguage","updateEmojiFontLabel","updateAvatarLabel","updateSoundsLabel","closeSettings","updateAccounts","updateSounds","updateLanguages","updateEmojiFonts","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","belowOrigin","updateHeight","updateSliders","block_name","$elem","jumpToBlock","settings_single_account_modal","first_account","single_account_has_rendered","forced_ps_container","single_account_modal","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","$tab","range_min","range_max","range_value","setting_radio_input","input_name","input_id","cid","group_element","element_no_sound","group_element_no_sound","default_element","setting_language_radio_input","progress","second_prog","second_prog_text","second_lang","second_locale","second_element","progress_text","emoji_fonts_list","b","item_name","setting_emoji_font_radio_input","current_sound","pause","backToMenu","backToSubMenu","elem_parent","goToWebNotifications","setIdling","setIdlingTimeout","$target","setNotificationsVolumeEnabled","setNotifications","requestPermission","setPrivateNotifications","setGroupNotifications","setJingleCalls","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","changeBackgroundImage","openColorPicker","colorPicker","chooseMainColor","changeBlur","changeNotificationsVolume","volume","sound","changeVignetting","switchVignetting","is_switched","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","platform_text","modal_classes","changeEmojiFont","font_load_dfd","load_emoji_dfd","is_outside_url","loadExternalEmojiFont","label_text","sound_private_text","sound_group_text","sound_on_attention_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","onGetPatternsCallback","onGetImagesCallback","thumbnail","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","updateScreen","$active_screen","non_active","current_count","img","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","request","headers","dataType","success","ajax","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","clearInterval","$icon","favicon","favicon_gray","favicon_message","stopBlinkingFavicon","FontFace","load","loaded_face","fonts","add","resetMessageCounter","onChangedFocusState","popupNotification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","initIdleJS","stop","idle","onIdle","onActive","keepTracking","startAtIdle","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","main_overlay_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_modal_view","SettingsModalView","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","account_settings_list","AccountSettingsList","order_timestamp","AccountsOrderTimestamp","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","password","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","connected","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","submit","_submit_cb","error_text","submit_unregister","_submit_unregister_cb","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","response","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","create","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","token","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","email","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit_modal","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","updateTextFields","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","_attrs","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","getLastOrder","deleteAccount","photo_hash","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","call","xml","isOnline","getPassword","isReconnecting","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","createFastConnection","login","token_invalidated","fast_conn_manager","disconnect","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onAuthFailed","CONNECTED","onTokenRevoked","DISCONNECTED","flush","_main_interval_worker","terminate","onConnectionConflict","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","change_password_view","successFeedback","errorFeedback","old_password","change_password_connection","$password_input","change_password_connection_manager","unregisterAccountCallback","unregister_account_view","unregister_account_connection","unregister_account_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","deactivate","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","omemo_id","last_auth","ip_address","ip","x_tokens_list","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_fast_interval_worker","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","retractions_query","Builder","is_msg","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","has_modal_settings","settings_account_modal","revokeXToken","token_num","revokeAllXTokens","show_settings","dont_change_screen","show_settings_after_delete","dont_change_screen_after_delete","omemo","groups_settings","clearStorage","groupchat_settings","chat_settings","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","from_jid","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","testGalleryFileSlot","onloadend","b64","responseJSON","gallery_feature","gallery_iq_answered","stringify","request_id","gallery_auth_errback","verifying_code","verifying_mess","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","testFile","err_text","getStorageStats","uploadFile","formData","FormData","metadata","voice","processData","deleteFile","file_id","getOpenGraphData","site","ogp","image_height","image_width","video_url","createMessageFromIQ","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","acc1","acc2","models","settings_list","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","vcard_modal","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getAvatars","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","filterType","sorting","order_by","onTabClick","tab_header","backToMain","showDeleteFilesView","gallery_view","sortFiles","sort_type","onClickFile","prev_audio_message","file_url","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","assign","obj_per_page","current_rendered_type","renderFiles","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","created_at","download_only","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","enableFilesSelect","onSelectFile","disableFilesSelect","selectFile","$target_input","selected_header","selected_count","deleteSelectedFiles","openStoragePanel","wheelPropagation","delete_files_media_gallery","onRender","deletePercent","percent","current_page_preview","getFilesForDeletion","renderForDeletion","date_lte_for_deletion","dropdown_settings","deleteFilesFiltered","date_lte","account_settings_modal","status_field","updateBlocks","updateGallery","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateXTokens","groups","updateGroupsLabel","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateOmemoDevices","updateEnabledOmemo","updateEncryptedChatstates","updateBlockedLabel","blocklist","blocked_count","jumpToBlockHandler","tabs","updateDeviceInformation","backToMenuHandler","backToSubMenuHandler","deselectBlocked","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","unregisterAccount","store","showResources","resource_id","hideResources","renderAllXTokens","sortBy","pretty_token","findWhere","toJSON","is_omemo","$cur_token_html","current_token_item_modal","$token_html","token_item_modal","omemo_own_devices","omemo_device_id","updateTrustDevice","_single_account","own_devices","fing","$this_device","generateFingerprint","getBundle","pk","spk","ik","fingerprint","openFingerprint","is_own","openFingerprintDevice","groups_count","mdiclass","$sync_icon","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","showQRCode","qrcode","noBorder","domElement","openBlockWindow","block","blockContact","unblockSelected","single_account_settings_modal","args","status_message_input_widget","global_settings_item_modal","updateNickname","onDragTo","onMoveAccount","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","participant","current_items","current_file","addAvatarSelecter","addNotOwnAvatar","addAvatar","img_from_gallery","createFileFromURL","participant_node","updateMemberAvatar","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","getUserMedia","stream","takePicture","clearPhoto","context","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveNotOwnAvatar","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","tab","pickEmoji","change_password","is_login","authFeedback","getActionName","setPassword","authentication","change_account_password","$old_password_input","$password_confirm_input","password_confirm","password_not_error","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","socialAuth","origin","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","splice","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","logout","unregister_account","checked_count","submitUnregister","xmpp_login_panel","XmppLoginPanel","Container","Accounts","ToolbarAccountsBlockView","SettingsAccountsModalBlockView","add_account_view","AddAccountView","UnregisterAccountView","change_account_password_view","ChangeAccountPasswordView","delete_files_view","DeleteFilesFromGalleryView","onbeforeunload","login_screen","xabber_login","single_account","supports","renderSingleAccount","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","Worker","downtime","onLine","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","b64_sha1","updateCachedInfo","is_deleted","out_request","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","resetParticipantsList","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","setActiveStateSendInterval","$msg","_sending_active_chatstate_timeout","_sending_active_chatstate_interval","handlePresence","$group_chat_info","updateGroupChatsList","group_chat_info","parseGroupInfo","prev_group_info","sync_deleted","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","receiver","XABBER_CHAT","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","cached_stanza_id","references","cached_message","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","user_info","participant_info","participant_nickname","chat_content","is_scrolled","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","details_view","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details_right","name_field","contact_edit_view","edit_groups_view","updateNotifications","updateJingleButtons","updateChilds","updateSubscriptions","setButtonsWidth","updateIndicator","keydownHandler","hideEdit","isOpen","openChat","scrollToTopSmooth","animate","widths","button","bottom_block_scroll","is_blocked","is_server","$label_outcoming","$label_incoming","prev","showEdit","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","muteChat","muted_seconds","mute_type","unmuteChat","$search_form","addContact","changeList","list_name","scrollLeft","addList","_render","constructor_func","requestAuthorization","group_chat_details_right","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit_right","hideRestrictions","showRestrictions","is_owner","change_group","clearHistory","head","editProperties","leaveGroupChat","inviteUser","edit_view","getInvitations","deleteGroup","makeSelfie","makeEmojiAvatar","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","temporary_items","all_messages_loaded","getMediaFromDecryptedMessages","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","block_height","updateForParticipant","delegateEvents","filter_type","fail","cached_messages","getMessages","entries","msg_items","filtered_items","items_count","filterEncryptedFiles","encryptedFilesHandler","files_count","updateEncryptedMedia","is_loaded","true_voice","media_item","is_encrypted","media_items_empty","messages_count","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","removeParticipantFromList","badge","is_me","pretty_present","present","isValid","fromNow","group_member_item","prependTo","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateRightsView","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","url_forced","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","sprite","tag_name","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","resetParticipants","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","inv_count","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","settings_view","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","where","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","updateExpanded","expanded","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","onGroupAddedSingleAccount","rendered_once","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","cached_conversations_exclude","onSyncIQ","last_version_sync","syncCachedConversations","request_with_stamp","cached_conversations","syncConversation","conversation","parseXML","saved","conv","account_conversation_type","removeFromCachedConversations","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","current_chat_timestamp","retracted_msg_id_list","putInCachedConversations","last_message","updateEncryptedChat","updateMutedList","$jingle_message","getCallingAvailability","reason","sendReject","initIncomingCall","sync_update","updateEmptyChat","is_unread","delay","messages_unread","isSenderMe","is_last_sync","sync_timestamp","sync_rsm_after","last_chat_msg_id","conversations_loaded","last_sync_timestamp","getAllFromCachedConversations","retract_version","sync_options","getRoster","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","onRosterItem","is_version","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","updateTabsLabel","selectUnblock","updateUnblockButton","unblockContactByJid","hideEmptyContainers","rendered","tmp","contact_blocked_item","domains","contact_label_text","domains_label_text","invitations_label_text","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","onPlaceholderUpdate","add_contact","group_data","updateGroups","renderAccountItem","bindAccount","renderGroupsForAccount","stepForward","add_contact_account_item","silent","groups_checkbox_list_contact","selectAccount","checkJid","force_opened_state","custom_notifications","message_preview","pinned","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clearDataBase","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","Boolean","_roster_settings","RosterSettings","contacts_view","RosterLeftView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","destroyOnEcho","removeMessage","forwarded_message","getState","getVerboseState","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_archived","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","is_unread_archived","participant_message","echo_msg","is_between_anchors","not_encrypted","not_verified_device","not_verified_device_no_device","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","GEOLOC","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","action","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","onChangedLastReadMsg","_no_scrolling_event","is_first","requestHistoryBetweenAnchors","read_count","message_item","_long_reading_timeout","scrollToUnread","recountUnread","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","receiveNoTextMessage","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","omemo_dfd","msg_options","$delivery_msg","msg_id","by","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","undelivered_messages","last_read_msg_id","second_deferred","new_last_read_msg","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","getConversationType","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","SYNCHRONIZATION_REGULAR_CHAT","message_counter","content_placeholder","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","bottom","draft_message","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","click_counter","setDefaultPlaceholder","onChatRemoved","loading_history","history_loaded","first_msg_id","last_msg_id","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onChangedReadState","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","_onscroll_read_messages_timeout","readVisibleMessages","msg_item","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","timer","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","_is_scrolled_bottom","onChangedActiveStatus","onChangedIdleStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMsgsMissingDevices","updateMyInfo","updateMsgsDeviceTrusting","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trust","peer","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","is_context","last_visible_unread_msg","readMessage","hideMessagesAfterSkipping","synced_message","$synced_message","last_visible_msg","$last_visible_msg","_read_last_message_timeout","unread_context_messages","showUnreadMarker","unread_marker","$last_read_msg","mam_query","getMessageArchive","unread_history","scrollToUnreadWithButton","showDayIndicator","is_focused","indicator_idx","opacity_value","$chatday_indicator","$messages","marker","indicator","scroll_read_timer","removeAllMessagesExceptLast","_interval","is_saved","sendMAMRequest","func_conn","_delete_handler_timeout","send_counter","previous_history","_load_history_timeout","unread_history_first","first_unread_msg_stanza_id","unread_history_before","last_history","_wait_load_unread_history","last_archive_id","loadUnreadHistory","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","OGPLinkOnload","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","is_scrolling_needed","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","$prev_message","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","messages_to_save","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","current_time","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","main","is_contact_trusted","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","date","day_date","msg_players","msg_videos","existing_player","message_id","video_id","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","_pending_time","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","checkContactFingerprints","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","oncancel","xhr_status","fakeStatus","fakeResponse","slot_response","setRequestHeader","response_text","error_status","statusText","err_status","files_","file_new_format","imgContent","video_attrs","$video_wrap_template","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","is_missed_msg","onTouchMessage","fwd_link_references","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","chat_content_placeholder","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","on_format","classList","blotName","optimize","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","settings_right","participant_version","active_right_screen","participant_msg_item","$retracted_msg","retracted_msg_id","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","force_bottom","current_scrolling","scrolled_to_bottom","showGroupChats","group_chats_pinned","showChats","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","archive_chats","saved_chats","notificatons_chats","all_chats","all_chats_pinned","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","showReasonWrap","addUser","itemIdx","reason_text","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","hideChat","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","resources_view","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","clear","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","unverified_counter","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","lastElementChild","lastChild","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","quill_textarea","quill_current_height","text_input_height","quill_content","getContents","ops","insert","trimmed_text","setContents","bottom_height","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","domNode","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","arr_text","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","encoderPath","encoderSampleRate","numberOfChannels","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","$target_text","forced","emoji_item","innerText","content_concat","content_attrs","mention_idx","ins","quote_start_idx","quote_end_idx","markup_ref","start_length","delta","markup_reference","editMessage","failed_files","file_check_dfd","pluck","setText","msg_author","image_preview","$img_html_preview","fwd_images","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","putMessage","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","deleteTimedHandler","_get_msg_handler","addTimedHandler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","chat_body_placeholder","ChatBodyPlaceholderContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateLayout","updateContainersLayout","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","is_wide","is_narrow","toolbar_accounts_heigth","right_contact_panel_styles","right_contact_panel_saveable","wide","placeholders","path_acc_settings_modal","ViewPath","path_chat_head","path_chat_body","path_chat_body_placeholder","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","devices_count","$container","f_count","old_fingerprint","addRow","getBundleInfo","getIdentityKeyPair","pubKey","padStart","trustDevice","is_session_initiated","ignoreDevice","delete_button","edit_setting","fingerprint_item","deleteDevice","fingerprints_devices","renderTrustOnFingerprint","$warning_container","untrusted_count","device_icons","fingerprint_devices_item","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","cacheRetractVersion","getRetractVersion","dev_id","rand","encryptedMessage","encryptedElement","myKeys","rid","kex","EXPLICIT_MESSAGE_ENCRYPTION","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","cached_msg","getMessage","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","prekeys_id_list","prekeys_length","last_id","missing_keys","used_last_id","NaN","isEmpty","used_prekeys_id_list","rec","device_attrs","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","api_service","discovery","ui","g","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}