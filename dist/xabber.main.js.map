{"version":3,"file":"xabber.main.js","mappings":"UAAIA,ECCAC,EADAC,ECAAC,EACAC,E,8DCDJ,isnH,6DCAA,muZ,6DCAA,oR,6DCAA,25D,6DCAA,igC,6DCAA,upE,6DCAA,0jD,6DCAA,2jF,6DCAA,iT,6DCAA,kuB,4DCAA,iY,6DCAA,8uB,4DCAA,uoH,6DCAA,k8E,6DCAA,k6B,2DCAA,o2B,6DCAA,miL,6DCAA,s8hB,6DCAA,+jD,6DCAA,mf,6DCAA,0sC,6DCAA,m7lB,6DCAA,4mG,4DCAA,qjC,6DCAA,wkC,6DCAA,kmB,6DCAA,8jI,6DCAA,ooE,6DCAA,k7B,6DCAA,8qJ,6DCAA,62D,6DCAA,i2C,6DCAA,gwI,6DCAA,y5C,6DCAA,0pE,4DCAA,w9B,6DCAA,4a,6DCAA,o2E,6DCAA,we,6DCAA,quC,6DCAA,i8xD,6DCAA,2hI,6DCAA,uS,6DCAA,qpO,6DCAA,mzC,4DCAA,6hD,6DCAA,orO,6DCAA,06D,4DCAA,yF,6DCAA,oxD,6DCAA,8K,6DCAA,6S,6DCAA,kT,6DCAA,qrB,6DCAA,ijM,4DCAA,2+B,6DCAA,8T,6DCAA,iE,6DCAA,sgB,6DCAA,6V,6DCAA,ivC,6DCAA,mkB,6DCAA,oR,6DCAA,mwB,6DCAA,of,6DCAA,oZ,6DCAA,28E,6DCAA,muC,6DCAA,2xB,6DCAA,+Z,6DCAA,kpB,6DCAA,20B,6DCAA,6jC,6DCAA,2jD,6DCAA,w8B,6DCAA,u/C,6DCAA,miE,6DCAA,6e,6DCAA,0J,6DCAA,0sE,6DCAA,4hB,6DCAA,uhC,6DCAA,oY,4DCAA,yjB,6DCAA,y3B,6DCAA,+nC,6DCAA,87C,6DCAA,slE,6DCAA,umB,6DCAA,iE,6DCAA,0yG,6DCAA,ghE,6DCAA,2hB,6DCAA,myB,6DCAA,6yB,6DCAA,q1E,6DCAA,yS,6DCAA,oR,6DCAA,iR,6DCAA,ujI,6DCAA,qpJ,6DCAA,2R,6DCAA,4F,6DCAA,oS,6DCAA,y3H,4DCAA,o/V,6DCAA,kX,6DCAA,6zB,6DCAA,yrB,6DCAA,g3C,6DCAA,0Q,6DCAA,0C,6DCAA,qjK,6DCAA,qgM,6DCAA,q4F,6DCAA,qoG,6DCAA,0tK,6DCAA,+wD,6DCAA,qxE,6DCAA,wmB,6DCAA,ga,6DCAA,6pB,6DCAA,y2B,6DCAA,qkB,6DCAA,8iB,6DCAA,q1I,6DCAA,0jO,4DCAA,+sF,6DCAA,wH,6DCAA,ulD,6DCAA,06C,6DCAA,i9B,6DCAA,4uD,6DCAA,mvE,6DCAA,iY,6DCAA,8jB,6DCAA,i0B,6DCAA,yL,6DCAA,qV,6DCAA,6R,6DCAA,q6E,6DCAA,kT,6DCAA,2d,6DCAA,46B,6DCAA,4X,6DCAA,+e,6DCAA,+qD,6DCAA,oQ,4DCAA,4Z,6DCAA,ygD,6DCAA,4mB,6DCAA,u6D,6DCAA,wwB,6DCAA,sgD,6DCAA,2F,6DCAA,+hE,6DCAA,kX,4DCAA,kH,6DCAA,ouG,6DCAA,49B,6DCAA,4iC,6DCAA,yiC,6DCAA,q/B,6DCAA,i5B,6DCAA,mrC,6DCAA,ksC,6DCAA,m+B,6DCAA,0rC,6DCAA,kpD,6DCAA,4/B,4DCAA,u8B,6DCAA,4qC,6DCAA,oqC,6DCAA,q5B,6DCAA,olB,6DCAA,qsB,6DCAA,2mB,6DCAA,oxC,6DCAA,85B,6DCAA,onB,6DCAA,6gC,6DCAA,6oC,6DCAA,i4B,6DCAA,2xB,6DCAA,k7B,6DCAA,6xB,6DCAA,yqB,6DCAA,2sB,4DCAA,gqB,6DCAA,svB,4DCAA,6yC,6DCAA,y5B,6DCAA,uyB,6DCAA,szB,6DCAA,mpB,6DCAA,qlC,6DCAA,siC,6DCAA,2kD,6DCAA,q0B,6DCAA,o7E,6DCAA,gkC,6DCAA,m6B,6DCAA,s8B,4DCAA,w0F,6DCAA,0gB,6DCAA,s/B,6DCAA,osB,4DCAA,otD,6DCAA,s5B,6DCAA,0rC,6DCAA,i8B,6DCAA,k4B,6DCAA,kjC,6DCAA,y6B,4DCAA,g7C,4DCAA,mvB,6DCAA,svB,6DCAA,siB,6DCAA,yqB,6DCAA,i4C,6DCAA,+jB,6DCAA,izB,6DCAA,k/B,6DCAA,yyB,6DCAA,i/B,4DCAA,q8B,6DCAA,4hB,6DCAA,w7B,6DCAA,ymC,6DCAA,qsB,6DCAA,gxB,6DCAA,ioB,6DCAA,6xL,6DCAA,g/B,6DCAA,q/C,6DCAA,y6B,6DCAA,qvC,6DCAA,6vC,6DCAA,gsC,6DCAA,uyB,6DCAA,88B,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,yBAEVK,WAAY,CACRN,IAAK,mCACLC,KAAM,0BAIdM,mBAAoB,CAChBC,IAAK,CACDR,IAAK,wCACLC,KAAM,yBAEVQ,IAAK,CACDT,IAAK,sCACLC,KAAM,mBAEVF,GAAI,CACAC,IAAK,0CACLC,KAAM,cAIdS,gBAAiB,SAAUC,GACvB,MAAO,CACH,kBAAqB,+CACrB,iBAAoB,8CACpB,mBAAsB,gDACtB,gBAAmB,6CACnB,kBAAqB,+CACrB,OAAU,oCACV,QAAW,qCACX,MAAS,oCACXA,EACN,EAEAC,aAAc,OACdC,YAAa,CAAC,OAAQ,YAAa,SAAU,SAAU,OAAQ,SAE/DC,YAAa,CACTC,IAAK,kwUACLC,IAAK,s6JACLC,KAAM,wyOAGVC,WAAY,CACRC,MAAO,CACH,YACA,aACA,cACA,YACA,gBACA,aACA,2BACA,qBACA,cAEJC,MAAO,CACH,cACA,YACA,YACA,YACA,aACA,YACA,yBACA,+BACA,eACA,iBACA,iBACA,yBACA,iBACA,aACA,eAEJC,MAAO,CACH,aACA,YACA,YACA,kBACA,aACA,iBACA,cACA,aACA,eAEJC,SAAU,CACN,WACA,WACA,WACA,YACA,6BACA,aACA,WACA,WACA,gBACA,sCACA,kBACA,0CACA,8CACA,sBAEJC,IAAK,CACD,mBAEJC,MAAO,CACH,iDACA,4BAEJC,QAAS,CACL,kBACA,mBACA,+BACA,oBACA,+BAEJC,aAAc,CACV,gCACA,oDAIRC,UAAW,CACP,GAAM,UACN,GAAI,sBACJ,QAAS,UACT,QAAS,eACT,QAAS,aACT,QAAS,YACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,UACT,QAAS,QACT,QAAS,UACT,QAAS,WACT,MAAS,wBACT,QAAS,UACT,QAAS,QACT,QAAS,QACT,QAAS,QACT,SAAU,WACV,QAAS,WACT,QAAS,UACT,GAAM,QACN,QAAS,SACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,mBACT,QAAS,WACT,QAAS,WACT,QAAS,MACT,QAAS,UACT,SAAU,mBACV,QAAS,MACT,QAAS,QACT,QAAS,WACT,QAAS,SACT,QAAS,g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C,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAC5+I,iBAAoB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IACtkF,mBAAsB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,MAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACzzF,gBAAmB,CAAC,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IACp7E,kBAAqB,CAAC,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAA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AG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EA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AQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,MAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,KAAOC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,GAAG,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,EAAEC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAAGC,EAAE,IAAI,CAACF,KAAK,OAAQC,EAAE,GAA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AE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,SAAS,EAAE,GAAK,GAAG,GAAK,GAAG,GAAK,EAAE,GAAK,GAAG,GAAK,EAAE,QAAQ,GAAG,QAAQ,GAAG,GAAK,QAAuF,KAAnD,OAAsBgX,GAA6B,6B,iBCApvB,IAAIgQ,EAAM,CACT,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,IAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,IACA,KAED,UAAW,CACV,MACA,MAED,cAAe,CACd,MACA,MAED,aAAc,CACb,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,eAAgB,CACf,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,MACA,MAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,MAED,cAAe,CACd,MACA,KAED,cAAe,CACd,KACA,MAED,cAAe,CACd,MACA,KAED,eAAgB,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","sources":["webpack://xabber.web/webpack/runtime/chunk loaded","webpack://xabber.web/webpack/runtime/create fake namespace object","webpack://xabber.web/webpack/runtime/load script","webpack://xabber.web/./templates/accounts/emojis.txt","webpack://xabber.web/./templates/accounts/add_account.html","webpack://xabber.web/./templates/accounts/audio_file_waveform.html","webpack://xabber.web/./templates/accounts/avatars_gallery.html","webpack://xabber.web/./templates/accounts/change_password.html","webpack://xabber.web/./templates/accounts/change_status.html","webpack://xabber.web/./templates/accounts/current_token_item.html","webpack://xabber.web/./templates/accounts/emoji_panel.html","webpack://xabber.web/./templates/accounts/emoji_picker.html","webpack://xabber.web/./templates/accounts/emoji_picker_tabs.html","webpack://xabber.web/./templates/accounts/existing_groupchat_item.html","webpack://xabber.web/./templates/accounts/global_settings_item.html","webpack://xabber.web/./templates/accounts/media_gallery_account.html","webpack://xabber.web/./templates/accounts/media_gallery_account_file.html","webpack://xabber.web/./templates/accounts/resource.html","webpack://xabber.web/./templates/accounts/resource_right.html","webpack://xabber.web/./templates/accounts/settings_left.html","webpack://xabber.web/./templates/accounts/settings_right.html","webpack://xabber.web/./templates/accounts/token_item.html","webpack://xabber.web/./templates/accounts/toolbar_item.html","webpack://xabber.web/./templates/accounts/webcam_panel.html","webpack://xabber.web/./templates/accounts/xmpp_login.html","webpack://xabber.web/./templates/api_service/add_xabber_account.html","webpack://xabber.web/./templates/api_service/linked_email_item.html","webpack://xabber.web/./templates/api_service/sync_settings.html","webpack://xabber.web/./templates/api_service/sync_settings_account_item.html","webpack://xabber.web/./templates/api_service/xabber_account.html","webpack://xabber.web/./templates/api_service/xabber_login.html","webpack://xabber.web/./templates/api_service/xabber_login_by_email.html","webpack://xabber.web/./templates/base/about.html","webpack://xabber.web/./templates/base/backgrounds_gallery.html","webpack://xabber.web/./templates/base/color_picker.html","webpack://xabber.web/./templates/base/color_scheme.html","webpack://xabber.web/./templates/base/dialog.html","webpack://xabber.web/./templates/base/fingerprint_item.html","webpack://xabber.web/./templates/base/fingerprints.html","webpack://xabber.web/./templates/base/input_widget.html","webpack://xabber.web/./templates/base/jingle_message_calling.html","webpack://xabber.web/./templates/base/omemo_enable.html","webpack://xabber.web/./templates/base/plyr_player_popup.html","webpack://xabber.web/./templates/base/settings.html","webpack://xabber.web/./templates/base/toolbar.html","webpack://xabber.web/./templates/chats/add_chat_account_item.html","webpack://xabber.web/./templates/chats/chat_bottom.html","webpack://xabber.web/./templates/chats/chat_content.html","webpack://xabber.web/./templates/chats/chat_content_contact.html","webpack://xabber.web/./templates/chats/chat_head.html","webpack://xabber.web/./templates/chats/chat_item.html","webpack://xabber.web/./templates/chats/chat_placeholder.html","webpack://xabber.web/./templates/chats/chats_panel.html","webpack://xabber.web/./templates/chats/checkbox.html","webpack://xabber.web/./templates/chats/content_encryption_warning.html","webpack://xabber.web/./templates/chats/encryption_warning.html","webpack://xabber.web/./templates/chats/forward_panel.html","webpack://xabber.web/./templates/chats/group_chats/add_group_chat.html","webpack://xabber.web/./templates/chats/group_chats/invitation_panel_view.html","webpack://xabber.web/./templates/chats/group_chats/mention_item.html","webpack://xabber.web/./templates/chats/group_chats/pinned_message_panel.html","webpack://xabber.web/./templates/chats/location_popup.html","webpack://xabber.web/./templates/chats/message_item.html","webpack://xabber.web/./templates/chats/messages/attached_file.html","webpack://xabber.web/./templates/chats/messages/audio_file.html","webpack://xabber.web/./templates/chats/messages/audio_file_waveform.html","webpack://xabber.web/./templates/chats/messages/auth_request.html","webpack://xabber.web/./templates/chats/messages/file.html","webpack://xabber.web/./templates/chats/messages/file_loading.html","webpack://xabber.web/./templates/chats/messages/file_upload.html","webpack://xabber.web/./templates/chats/messages/forwarded.html","webpack://xabber.web/./templates/chats/messages/group_request.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-2.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-3.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-4.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-5.html","webpack://xabber.web/./templates/chats/messages/hidden-template-for-6.html","webpack://xabber.web/./templates/chats/messages/images_details.html","webpack://xabber.web/./templates/chats/messages/link_reference.html","webpack://xabber.web/./templates/chats/messages/link_reference_chat.html","webpack://xabber.web/./templates/chats/messages/loading_circle.html","webpack://xabber.web/./templates/chats/messages/location.html","webpack://xabber.web/./templates/chats/messages/main.html","webpack://xabber.web/./templates/chats/messages/saved_main.html","webpack://xabber.web/./templates/chats/messages/searched.html","webpack://xabber.web/./templates/chats/messages/system.html","webpack://xabber.web/./templates/chats/messages/template-for-2.html","webpack://xabber.web/./templates/chats/messages/template-for-3.html","webpack://xabber.web/./templates/chats/messages/template-for-4.html","webpack://xabber.web/./templates/chats/messages/template-for-5.html","webpack://xabber.web/./templates/chats/messages/template-for-6.html","webpack://xabber.web/./templates/chats/messages/video.html","webpack://xabber.web/./templates/chats/messages/voice_message.html","webpack://xabber.web/./templates/chats/saved_chat_head.html","webpack://xabber.web/./templates/chats/send_media.html","webpack://xabber.web/./templates/chats/subscription_buttons.html","webpack://xabber.web/./templates/contacts/account_roster_left.html","webpack://xabber.web/./templates/contacts/account_roster_right.html","webpack://xabber.web/./templates/contacts/add_contact.html","webpack://xabber.web/./templates/contacts/add_contact_account_item.html","webpack://xabber.web/./templates/contacts/audio_file_waveform.html","webpack://xabber.web/./templates/contacts/contact_blocked_item.html","webpack://xabber.web/./templates/contacts/contact_details.html","webpack://xabber.web/./templates/contacts/contact_details_right.html","webpack://xabber.web/./templates/contacts/contact_left_item.html","webpack://xabber.web/./templates/contacts/contact_placeholder.html","webpack://xabber.web/./templates/contacts/contact_right_item.html","webpack://xabber.web/./templates/contacts/edit_contact.html","webpack://xabber.web/./templates/contacts/edit_group.html","webpack://xabber.web/./templates/contacts/group_chats/add_blocked_participant_form.html","webpack://xabber.web/./templates/contacts/group_chats/badge_edit_view.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions.html","webpack://xabber.web/./templates/contacts/group_chats/default_restrictions_right.html","webpack://xabber.web/./templates/contacts/group_chats/description_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/file_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_edit.html","webpack://xabber.web/./templates/contacts/group_chats/group_chat_properties_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/group_member_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/group_name_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/group_status.html","webpack://xabber.web/./templates/contacts/group_chats/group_status_right.html","webpack://xabber.web/./templates/contacts/group_chats/invitation.html","webpack://xabber.web/./templates/contacts/group_chats/invited_member_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_badge_input_widget.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_details_right.html","webpack://xabber.web/./templates/contacts/group_chats/participant_rights.html","webpack://xabber.web/./templates/contacts/group_chats/participants.html","webpack://xabber.web/./templates/contacts/group_chats/participants_right_panel.html","webpack://xabber.web/./templates/contacts/group_chats/pinned_message.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details.html","webpack://xabber.web/./templates/contacts/group_chats/private_participant_details_item_right.html","webpack://xabber.web/./templates/contacts/group_chats/restriction_item.html","webpack://xabber.web/./templates/contacts/group_chats/right_expire_variants.html","webpack://xabber.web/./templates/contacts/group_chats/set_status.html","webpack://xabber.web/./templates/contacts/group_chats/status_item.html","webpack://xabber.web/./templates/contacts/group_left.html","webpack://xabber.web/./templates/contacts/group_right.html","webpack://xabber.web/./templates/contacts/group_settings.html","webpack://xabber.web/./templates/contacts/groups.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list.html","webpack://xabber.web/./templates/contacts/groups_checkbox_list_contact.html","webpack://xabber.web/./templates/contacts/groups_list.html","webpack://xabber.web/./templates/contacts/groups_new_group.html","webpack://xabber.web/./templates/contacts/media_item.html","webpack://xabber.web/./templates/contacts/media_items_empty.html","webpack://xabber.web/./templates/contacts/preloader.html","webpack://xabber.web/./templates/contacts/roster_left.html","webpack://xabber.web/./templates/contacts/roster_right.html","webpack://xabber.web/./templates/contacts/roster_settings.html","webpack://xabber.web/./templates/mentions/mention_item.html","webpack://xabber.web/./templates/mentions/mentions_panel.html","webpack://xabber.web/./templates/mentions/mentions_placeholder.html","webpack://xabber.web/./templates/searching/existing_groupchat_details_view.html","webpack://xabber.web/./templates/searching/existing_groupchat_item.html","webpack://xabber.web/./templates/searching/searching_account_item.html","webpack://xabber.web/./templates/searching/searching_wide.html","webpack://xabber.web/./templates/svg/account-outline.html","webpack://xabber.web/./templates/svg/address-outline.html","webpack://xabber.web/./templates/svg/bell-off.html","webpack://xabber.web/./templates/svg/bell-sleep.html","webpack://xabber.web/./templates/svg/bell.html","webpack://xabber.web/./templates/svg/birthday-outline.html","webpack://xabber.web/./templates/svg/blocked-add.html","webpack://xabber.web/./templates/svg/blocked.html","webpack://xabber.web/./templates/svg/bot-variant.html","webpack://xabber.web/./templates/svg/bot.html","webpack://xabber.web/./templates/svg/call-outline.html","webpack://xabber.web/./templates/svg/call.html","webpack://xabber.web/./templates/svg/camera-retake.html","webpack://xabber.web/./templates/svg/cancel.html","webpack://xabber.web/./templates/svg/channel.html","webpack://xabber.web/./templates/svg/chevron-down.html","webpack://xabber.web/./templates/svg/chevron-left-variant.html","webpack://xabber.web/./templates/svg/chevron-right-variant.html","webpack://xabber.web/./templates/svg/circles.html","webpack://xabber.web/./templates/svg/clock-outline.html","webpack://xabber.web/./templates/svg/close.html","webpack://xabber.web/./templates/svg/crosshairs-gps.html","webpack://xabber.web/./templates/svg/crosshairs-question.html","webpack://xabber.web/./templates/svg/crosshairs.html","webpack://xabber.web/./templates/svg/description-outline.html","webpack://xabber.web/./templates/svg/devices.html","webpack://xabber.web/./templates/svg/edit-outline.html","webpack://xabber.web/./templates/svg/edit.html","webpack://xabber.web/./templates/svg/email-outline.html","webpack://xabber.web/./templates/svg/file-audio.html","webpack://xabber.web/./templates/svg/file-document.html","webpack://xabber.web/./templates/svg/file-pdf.html","webpack://xabber.web/./templates/svg/file-presentation.html","webpack://xabber.web/./templates/svg/file-video.html","webpack://xabber.web/./templates/svg/file-zip.html","webpack://xabber.web/./templates/svg/file.html","webpack://xabber.web/./templates/svg/fullname-outline.html","webpack://xabber.web/./templates/svg/fullname.html","webpack://xabber.web/./templates/svg/group-incognito.html","webpack://xabber.web/./templates/svg/group-invite.html","webpack://xabber.web/./templates/svg/group-private.html","webpack://xabber.web/./templates/svg/group-public.html","webpack://xabber.web/./templates/svg/history.html","webpack://xabber.web/./templates/svg/ic-at.html","webpack://xabber.web/./templates/svg/ic-jabber.html","webpack://xabber.web/./templates/svg/ic-searching.html","webpack://xabber.web/./templates/svg/id-outline.html","webpack://xabber.web/./templates/svg/image.html","webpack://xabber.web/./templates/svg/index.html","webpack://xabber.web/./templates/svg/information-outline.html","webpack://xabber.web/./templates/svg/invite-outline.html","webpack://xabber.web/./templates/svg/job-outline.html","webpack://xabber.web/./templates/svg/link.html","webpack://xabber.web/./templates/svg/map-marker-outline.html","webpack://xabber.web/./templates/svg/map-marker.html","webpack://xabber.web/./templates/svg/membership-outline.html","webpack://xabber.web/./templates/svg/message-bookmark-outline.html","webpack://xabber.web/./templates/svg/message-group.html","webpack://xabber.web/./templates/svg/minus.html","webpack://xabber.web/./templates/svg/mobile.html","webpack://xabber.web/./templates/svg/palette.html","webpack://xabber.web/./templates/svg/pause.html","webpack://xabber.web/./templates/svg/picture-in-picture-bottom-right.html","webpack://xabber.web/./templates/svg/picture-in-picture-minimize.html","webpack://xabber.web/./templates/svg/picture-in-picture-top-right.html","webpack://xabber.web/./templates/svg/pinned-circle-small.html","webpack://xabber.web/./templates/svg/pinned.html","webpack://xabber.web/./templates/svg/play.html","webpack://xabber.web/./templates/svg/player-float.html","webpack://xabber.web/./templates/svg/player-full.html","webpack://xabber.web/./templates/svg/player-mini-variant.html","webpack://xabber.web/./templates/svg/player-mini.html","webpack://xabber.web/./templates/svg/plus.html","webpack://xabber.web/./templates/svg/plyr.html","webpack://xabber.web/./templates/svg/qrcode.html","webpack://xabber.web/./templates/svg/restrictions-outline.html","webpack://xabber.web/./templates/svg/rss-variant.html","webpack://xabber.web/./templates/svg/rss.html","webpack://xabber.web/./templates/svg/saved-messages.html","webpack://xabber.web/./templates/svg/search.html","webpack://xabber.web/./templates/svg/server.html","webpack://xabber.web/./templates/svg/status-outline.html","webpack://xabber.web/./templates/svg/subscription-from.html","webpack://xabber.web/./templates/svg/subscription-to.html","webpack://xabber.web/./templates/svg/task.html","webpack://xabber.web/./templates/svg/translate.html","webpack://xabber.web/./templates/svg/video.html","webpack://xabber.web/./templates/svg/volume-high.html","webpack://xabber.web/./templates/svg/volume-off-variant.html","webpack://xabber.web/./templates/svg/volume-off.html","webpack://xabber.web/./templates/svg/xabber-offline.html","webpack://xabber.web/./templates/svg/xabber-online.html","webpack://xabber.web/./templates/svg/xmpp.html","webpack://xabber.web/./templates/vcard/vcard.html","webpack://xabber.web/./templates/vcard/vcard_edit.html","webpack://xabber.web/./templates/vcard/vcard_right.html","webpack://xabber.web/./src/constants.js","webpack://xabber.web/./src/dependencies.js","webpack://xabber.web/./src/templates.js","webpack://xabber.web/./src/utils/emoji.js","webpack://xabber.web/./src/utils/images.js","webpack://xabber.web/./src/utils/modals.js","webpack://xabber.web/./src/utils/textarea.js","webpack://xabber.web/./src/utils/utils.js","webpack://xabber.web/./src/environment.js","webpack://xabber.web/./src/core.js","webpack://xabber.web/./src/views.js","webpack://xabber.web/./src/api-service.js","webpack://xabber.web/./src/strophe.js","webpack://xabber.web/./src/vcard.js","webpack://xabber.web/./src/accounts.js","webpack://xabber.web/./src/discovery.js","webpack://xabber.web/./src/contacts.js","webpack://xabber.web/./src/chats.js","webpack://xabber.web/./src/searching.js","webpack://xabber.web/./src/mentions.js","webpack://xabber.web/./src/ui.js","webpack://xabber.web/./src/omemo.js","webpack://xabber.web/./src/xabber.js","webpack://xabber.web/ ^\\.\\/.*\\.html$","webpack://xabber.web/ ^\\.\\/.*\\.txt$","webpack://xabber.web/./translations/translation_progress.js","webpack://xabber.web/./translations/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://xabber.web/./version.js","webpack://xabber.web/webpack/bootstrap","webpack://xabber.web/webpack/runtime/amd options","webpack://xabber.web/webpack/runtime/compat get default export","webpack://xabber.web/webpack/runtime/define property getters","webpack://xabber.web/webpack/runtime/ensure chunk","webpack://xabber.web/webpack/runtime/get javascript chunk filename","webpack://xabber.web/webpack/runtime/get mini-css chunk filename","webpack://xabber.web/webpack/runtime/global","webpack://xabber.web/webpack/runtime/harmony module decorator","webpack://xabber.web/webpack/runtime/hasOwnProperty shorthand","webpack://xabber.web/webpack/runtime/make namespace object","webpack://xabber.web/webpack/runtime/node module decorator","webpack://xabber.web/webpack/runtime/publicPath","webpack://xabber.web/webpack/runtime/jsonp chunk loading","webpack://xabber.web/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"xabber.web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export default \"module.exports = \\\"[\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"😀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☺️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☹️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"😾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤲\\\\\\\",\\\\n                \\\\\\\"🤲🏻\\\\\\\",\\\\n                \\\\\\\"🤲🏼\\\\\\\",\\\\n                \\\\\\\"🤲🏽\\\\\\\",\\\\n                \\\\\\\"🤲🏾\\\\\\\",\\\\n                \\\\\\\"🤲🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👐\\\\\\\",\\\\n                \\\\\\\"👐🏻\\\\\\\",\\\\n                \\\\\\\"👐🏼\\\\\\\",\\\\n                \\\\\\\"👐🏽\\\\\\\",\\\\n                \\\\\\\"👐🏾\\\\\\\",\\\\n                \\\\\\\"👐🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙌\\\\\\\",\\\\n                \\\\\\\"🙌🏻\\\\\\\",\\\\n                \\\\\\\"🙌🏼\\\\\\\",\\\\n                \\\\\\\"🙌🏽\\\\\\\",\\\\n                \\\\\\\"🙌🏾\\\\\\\",\\\\n                \\\\\\\"🙌🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👏\\\\\\\",\\\\n                \\\\\\\"👏🏻\\\\\\\",\\\\n                \\\\\\\"👏🏼\\\\\\\",\\\\n                \\\\\\\"👏🏽\\\\\\\",\\\\n                \\\\\\\"👏🏾\\\\\\\",\\\\n                \\\\\\\"👏🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👍\\\\\\\",\\\\n                \\\\\\\"👍🏻\\\\\\\",\\\\n                \\\\\\\"👍🏼\\\\\\\",\\\\n                \\\\\\\"👍🏽\\\\\\\",\\\\n                \\\\\\\"👍🏾\\\\\\\",\\\\n                \\\\\\\"👍🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👎\\\\\\\",\\\\n                \\\\\\\"👎🏻\\\\\\\",\\\\n                \\\\\\\"👎🏼\\\\\\\",\\\\n                \\\\\\\"👎🏽\\\\\\\",\\\\n                \\\\\\\"👎🏾\\\\\\\",\\\\n                \\\\\\\"👎🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👊\\\\\\\",\\\\n                \\\\\\\"👊🏻\\\\\\\",\\\\n                \\\\\\\"👊🏼\\\\\\\",\\\\n                \\\\\\\"👊🏽\\\\\\\",\\\\n                \\\\\\\"👊🏾\\\\\\\",\\\\n                \\\\\\\"👊🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✊\\\\\\\",\\\\n                \\\\\\\"✊🏻\\\\\\\",\\\\n                \\\\\\\"✊🏼\\\\\\\",\\\\n                \\\\\\\"✊🏽\\\\\\\",\\\\n                \\\\\\\"✊🏾\\\\\\\",\\\\n                \\\\\\\"✊🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤛\\\\\\\",\\\\n                \\\\\\\"🤛🏻\\\\\\\",\\\\n                \\\\\\\"🤛🏼\\\\\\\",\\\\n                \\\\\\\"🤛🏽\\\\\\\",\\\\n                \\\\\\\"🤛🏾\\\\\\\",\\\\n                \\\\\\\"🤛🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤜\\\\\\\",\\\\n                \\\\\\\"🤜🏻\\\\\\\",\\\\n                \\\\\\\"🤜🏼\\\\\\\",\\\\n                \\\\\\\"🤜🏽\\\\\\\",\\\\n                \\\\\\\"🤜🏾\\\\\\\",\\\\n                \\\\\\\"🤜🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤞\\\\\\\",\\\\n                \\\\\\\"🤞🏻\\\\\\\",\\\\n                \\\\\\\"🤞🏼\\\\\\\",\\\\n                \\\\\\\"🤞🏽\\\\\\\",\\\\n                \\\\\\\"🤞🏾\\\\\\\",\\\\n                \\\\\\\"🤞🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✌\\\\\\\",\\\\n                \\\\\\\"✌🏻\\\\\\\",\\\\n                \\\\\\\"✌🏼\\\\\\\",\\\\n                \\\\\\\"✌🏽\\\\\\\",\\\\n                \\\\\\\"✌🏾\\\\\\\",\\\\n                \\\\\\\"✌🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤟\\\\\\\",\\\\n                \\\\\\\"🤟🏻\\\\\\\",\\\\n                \\\\\\\"🤟🏼\\\\\\\",\\\\n                \\\\\\\"🤟🏽\\\\\\\",\\\\n                \\\\\\\"🤟🏾\\\\\\\",\\\\n                \\\\\\\"🤟🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤘\\\\\\\",\\\\n                \\\\\\\"🤘🏻\\\\\\\",\\\\n                \\\\\\\"🤘🏼\\\\\\\",\\\\n                \\\\\\\"🤘🏽\\\\\\\",\\\\n                \\\\\\\"🤘🏾\\\\\\\",\\\\n                \\\\\\\"🤘🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👌\\\\\\\",\\\\n                \\\\\\\"👌🏻\\\\\\\",\\\\n                \\\\\\\"👌🏼\\\\\\\",\\\\n                \\\\\\\"👌🏽\\\\\\\",\\\\n                \\\\\\\"👌🏾\\\\\\\",\\\\n                \\\\\\\"👌🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👈\\\\\\\",\\\\n                \\\\\\\"👈🏻\\\\\\\",\\\\n                \\\\\\\"👈🏼\\\\\\\",\\\\n                \\\\\\\"👈🏽\\\\\\\",\\\\n                \\\\\\\"👈🏾\\\\\\\",\\\\n                \\\\\\\"👈🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👉\\\\\\\",\\\\n                \\\\\\\"👉🏻\\\\\\\",\\\\n                \\\\\\\"👉🏼\\\\\\\",\\\\n                \\\\\\\"👉🏽\\\\\\\",\\\\n                \\\\\\\"👉🏾\\\\\\\",\\\\n                \\\\\\\"👉🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👆\\\\\\\",\\\\n                \\\\\\\"👆🏻\\\\\\\",\\\\n                \\\\\\\"👆🏼\\\\\\\",\\\\n                \\\\\\\"👆🏽\\\\\\\",\\\\n                \\\\\\\"👆🏾\\\\\\\",\\\\n                \\\\\\\"👆🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👇\\\\\\\",\\\\n                \\\\\\\"👇🏻\\\\\\\",\\\\n                \\\\\\\"👇🏼\\\\\\\",\\\\n                \\\\\\\"👇🏽\\\\\\\",\\\\n                \\\\\\\"👇🏾\\\\\\\",\\\\n                \\\\\\\"👇🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☝\\\\\\\",\\\\n                \\\\\\\"☝🏻\\\\\\\",\\\\n                \\\\\\\"☝🏼\\\\\\\",\\\\n                \\\\\\\"☝🏽\\\\\\\",\\\\n                \\\\\\\"☝🏾\\\\\\\",\\\\n                \\\\\\\"☝🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✋\\\\\\\",\\\\n                \\\\\\\"✋🏻\\\\\\\",\\\\n                \\\\\\\"✋🏼\\\\\\\",\\\\n                \\\\\\\"✋🏽\\\\\\\",\\\\n                \\\\\\\"✋🏾\\\\\\\",\\\\n                \\\\\\\"✋🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤚\\\\\\\",\\\\n                \\\\\\\"🤚🏻\\\\\\\",\\\\n                \\\\\\\"🤚🏼\\\\\\\",\\\\n                \\\\\\\"🤚🏽\\\\\\\",\\\\n                \\\\\\\"🤚🏾\\\\\\\",\\\\n                \\\\\\\"🤚🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖐\\\\\\\",\\\\n                \\\\\\\"🖐🏻\\\\\\\",\\\\n                \\\\\\\"🖐🏼\\\\\\\",\\\\n                \\\\\\\"🖐🏽\\\\\\\",\\\\n                \\\\\\\"🖐🏾\\\\\\\",\\\\n                \\\\\\\"🖐🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖖\\\\\\\",\\\\n                \\\\\\\"🖖🏻\\\\\\\",\\\\n                \\\\\\\"🖖🏼\\\\\\\",\\\\n                \\\\\\\"🖖🏽\\\\\\\",\\\\n                \\\\\\\"🖖🏾\\\\\\\",\\\\n                \\\\\\\"🖖🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👋\\\\\\\",\\\\n                \\\\\\\"👋🏻\\\\\\\",\\\\n                \\\\\\\"👋🏼\\\\\\\",\\\\n                \\\\\\\"👋🏽\\\\\\\",\\\\n                \\\\\\\"👋🏾\\\\\\\",\\\\n                \\\\\\\"👋🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤙\\\\\\\",\\\\n                \\\\\\\"🤙🏻\\\\\\\",\\\\n                \\\\\\\"🤙🏼\\\\\\\",\\\\n                \\\\\\\"🤙🏽\\\\\\\",\\\\n                \\\\\\\"🤙🏾\\\\\\\",\\\\n                \\\\\\\"🤙🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💪\\\\\\\",\\\\n                \\\\\\\"💪🏻\\\\\\\",\\\\n                \\\\\\\"💪🏼\\\\\\\",\\\\n                \\\\\\\"💪🏽\\\\\\\",\\\\n                \\\\\\\"💪🏾\\\\\\\",\\\\n                \\\\\\\"💪🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖕\\\\\\\",\\\\n                \\\\\\\"🖕🏻\\\\\\\",\\\\n                \\\\\\\"🖕🏼\\\\\\\",\\\\n                \\\\\\\"🖕🏽\\\\\\\",\\\\n                \\\\\\\"🖕🏾\\\\\\\",\\\\n                \\\\\\\"🖕🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✍\\\\\\\",\\\\n                \\\\\\\"✍🏻\\\\\\\",\\\\n                \\\\\\\"✍🏼\\\\\\\",\\\\n                \\\\\\\"✍🏽\\\\\\\",\\\\n                \\\\\\\"✍🏾\\\\\\\",\\\\n                \\\\\\\"✍🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙏\\\\\\\",\\\\n                \\\\\\\"🙏🏻\\\\\\\",\\\\n                \\\\\\\"🙏🏼\\\\\\\",\\\\n                \\\\\\\"🙏🏽\\\\\\\",\\\\n                \\\\\\\"🙏🏾\\\\\\\",\\\\n                \\\\\\\"🙏🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👂\\\\\\\",\\\\n                \\\\\\\"👂🏻\\\\\\\",\\\\n                \\\\\\\"👂🏼\\\\\\\",\\\\n                \\\\\\\"👂🏽\\\\\\\",\\\\n                \\\\\\\"👂🏾\\\\\\\",\\\\n                \\\\\\\"👂🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👃\\\\\\\",\\\\n                \\\\\\\"👃🏻\\\\\\\",\\\\n                \\\\\\\"👃🏼\\\\\\\",\\\\n                \\\\\\\"👃🏽\\\\\\\",\\\\n                \\\\\\\"👃🏾\\\\\\\",\\\\n                \\\\\\\"👃🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👶\\\\\\\",\\\\n                \\\\\\\"👶🏻\\\\\\\",\\\\n                \\\\\\\"👶🏼\\\\\\\",\\\\n                \\\\\\\"👶🏽\\\\\\\",\\\\n                \\\\\\\"👶🏾\\\\\\\",\\\\n                \\\\\\\"👶🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👧\\\\\\\",\\\\n                \\\\\\\"👧🏻\\\\\\\",\\\\n                \\\\\\\"👧🏼\\\\\\\",\\\\n                \\\\\\\"👧🏽\\\\\\\",\\\\n                \\\\\\\"👧🏾\\\\\\\",\\\\n                \\\\\\\"👧🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧒\\\\\\\",\\\\n                \\\\\\\"🧒🏻\\\\\\\",\\\\n                \\\\\\\"🧒🏼\\\\\\\",\\\\n                \\\\\\\"🧒🏽\\\\\\\",\\\\n                \\\\\\\"🧒🏾\\\\\\\",\\\\n                \\\\\\\"🧒🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👦\\\\\\\",\\\\n                \\\\\\\"👦🏻\\\\\\\",\\\\n                \\\\\\\"👦🏼\\\\\\\",\\\\n                \\\\\\\"👦🏽\\\\\\\",\\\\n                \\\\\\\"👦🏾\\\\\\\",\\\\n                \\\\\\\"👦🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩\\\\\\\",\\\\n                \\\\\\\"👩🏻\\\\\\\",\\\\n                \\\\\\\"👩🏼\\\\\\\",\\\\n                \\\\\\\"👩🏽\\\\\\\",\\\\n                \\\\\\\"👩🏾\\\\\\\",\\\\n                \\\\\\\"👩🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧑\\\\\\\",\\\\n                \\\\\\\"🧑🏻\\\\\\\",\\\\n                \\\\\\\"🧑🏼\\\\\\\",\\\\n                \\\\\\\"🧑🏽\\\\\\\",\\\\n                \\\\\\\"🧑🏾\\\\\\\",\\\\n                \\\\\\\"🧑🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨\\\\\\\",\\\\n                \\\\\\\"👨🏻\\\\\\\",\\\\n                \\\\\\\"👨🏼\\\\\\\",\\\\n                \\\\\\\"👨🏽\\\\\\\",\\\\n                \\\\\\\"👨🏾\\\\\\\",\\\\n                \\\\\\\"👨🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👱‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"👱🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👱\\\\\\\",\\\\n                \\\\\\\"👱🏻\\\\\\\",\\\\n                \\\\\\\"👱🏼\\\\\\\",\\\\n                \\\\\\\"👱🏽\\\\\\\",\\\\n                \\\\\\\"👱🏾\\\\\\\",\\\\n                \\\\\\\"👱🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧔\\\\\\\",\\\\n                \\\\\\\"🧔🏻\\\\\\\",\\\\n                \\\\\\\"🧔🏼\\\\\\\",\\\\n                \\\\\\\"🧔🏽\\\\\\\",\\\\n                \\\\\\\"🧔🏾\\\\\\\",\\\\n                \\\\\\\"🧔🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👵\\\\\\\",\\\\n                \\\\\\\"👵🏻\\\\\\\",\\\\n                \\\\\\\"👵🏼\\\\\\\",\\\\n                \\\\\\\"👵🏽\\\\\\\",\\\\n                \\\\\\\"👵🏾\\\\\\\",\\\\n                \\\\\\\"👵🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧓\\\\\\\",\\\\n                \\\\\\\"🧓🏻\\\\\\\",\\\\n                \\\\\\\"🧓🏼\\\\\\\",\\\\n                \\\\\\\"🧓🏽\\\\\\\",\\\\n                \\\\\\\"🧓🏾\\\\\\\",\\\\n                \\\\\\\"🧓🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👴\\\\\\\",\\\\n                \\\\\\\"👴🏻\\\\\\\",\\\\n                \\\\\\\"👴🏼\\\\\\\",\\\\n                \\\\\\\"👴🏽\\\\\\\",\\\\n                \\\\\\\"👴🏾\\\\\\\",\\\\n                \\\\\\\"👴🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👲\\\\\\\",\\\\n                \\\\\\\"👲🏻\\\\\\\",\\\\n                \\\\\\\"👲🏼\\\\\\\",\\\\n                \\\\\\\"👲🏽\\\\\\\",\\\\n                \\\\\\\"👲🏾\\\\\\\",\\\\n                \\\\\\\"👲🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👳‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"👳🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👳️\\\\\\\",\\\\n                \\\\\\\"👳🏻\\\\\\\",\\\\n                \\\\\\\"👳🏼️\\\\\\\",\\\\n                \\\\\\\"👳🏽️\\\\\\\",\\\\n                \\\\\\\"👳🏾️\\\\\\\",\\\\n                \\\\\\\"👳🏿️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧕\\\\\\\",\\\\n                \\\\\\\"🧕🏻\\\\\\\",\\\\n                \\\\\\\"🧕🏼\\\\\\\",\\\\n                \\\\\\\"🧕🏽\\\\\\\",\\\\n                \\\\\\\"🧕🏾\\\\\\\",\\\\n                \\\\\\\"🧕🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👮‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"👮🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👮\\\\\\\",\\\\n                \\\\\\\"👮🏻\\\\\\\",\\\\n                \\\\\\\"👮🏼\\\\\\\",\\\\n                \\\\\\\"👮🏽\\\\\\\",\\\\n                \\\\\\\"👮🏾\\\\\\\",\\\\n                \\\\\\\"👮🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👷‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"👷🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👷\\\\\\\",\\\\n                \\\\\\\"👷🏻\\\\\\\",\\\\n                \\\\\\\"👷🏼\\\\\\\",\\\\n                \\\\\\\"👷🏽\\\\\\\",\\\\n                \\\\\\\"👷🏾\\\\\\\",\\\\n                \\\\\\\"👷🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💂‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"💂🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💂\\\\\\\",\\\\n                \\\\\\\"💂🏻\\\\\\\",\\\\n                \\\\\\\"💂🏼\\\\\\\",\\\\n                \\\\\\\"💂🏽\\\\\\\",\\\\n                \\\\\\\"💂🏾\\\\\\\",\\\\n                \\\\\\\"💂🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕵️‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🕵🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕵\\\\\\\",\\\\n                \\\\\\\"🕵🏻\\\\\\\",\\\\n                \\\\\\\"🕵🏼\\\\\\\",\\\\n                \\\\\\\"🕵🏽\\\\\\\",\\\\n                \\\\\\\"🕵🏾\\\\\\\",\\\\n                \\\\\\\"🕵🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏻‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏼‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏽‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏾‍⚕️\\\\\\\",\\\\n                \\\\\\\"👩🏿‍⚕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏻‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏼‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏽‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏾‍⚕️\\\\\\\",\\\\n                \\\\\\\"👨🏿‍⚕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🌾\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🌾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🌾\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🌾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🍳\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🍳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🍳\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🍳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🎓\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🎓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🎓\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🎓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🎤\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🎤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🎤\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🎤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🏫\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🏫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🏫\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🏫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🏭\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🏭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🏭\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🏭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏻‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏼‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏽‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏾‍💻\\\\\\\",\\\\n                \\\\\\\"👩🏿‍💻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏻‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏼‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏽‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏾‍💻\\\\\\\",\\\\n                \\\\\\\"👨🏿‍💻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏻‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏼‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏽‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏾‍💼\\\\\\\",\\\\n                \\\\\\\"👩🏿‍💼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏻‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏼‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏽‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏾‍💼\\\\\\\",\\\\n                \\\\\\\"👨🏿‍💼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🔧\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🔧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🔧\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🔧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🔬\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🔬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🔬\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🔬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🎨\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🎨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🎨\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🎨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🚒\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🚒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🚒\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🚒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏻‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏼‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏽‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏾‍✈️\\\\\\\",\\\\n                \\\\\\\"👩🏿‍✈️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏻‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏼‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏽‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏾‍✈️\\\\\\\",\\\\n                \\\\\\\"👨🏿‍✈️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏻‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏼‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏽‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏾‍🚀\\\\\\\",\\\\n                \\\\\\\"👩🏿‍🚀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏻‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏼‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏽‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏾‍🚀\\\\\\\",\\\\n                \\\\\\\"👨🏿‍🚀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏻‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏼‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏽‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏾‍⚖️\\\\\\\",\\\\n                \\\\\\\"👩🏿‍⚖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏻‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏼‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏽‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏾‍⚖️\\\\\\\",\\\\n                \\\\\\\"👨🏿‍⚖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👰\\\\\\\",\\\\n                \\\\\\\"👰🏻\\\\\\\",\\\\n                \\\\\\\"👰🏼\\\\\\\",\\\\n                \\\\\\\"👰🏽\\\\\\\",\\\\n                \\\\\\\"👰🏾\\\\\\\",\\\\n                \\\\\\\"👰🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤵\\\\\\\",\\\\n                \\\\\\\"🤵🏻\\\\\\\",\\\\n                \\\\\\\"🤵🏼\\\\\\\",\\\\n                \\\\\\\"🤵🏽\\\\\\\",\\\\n                \\\\\\\"🤵🏾\\\\\\\",\\\\n                \\\\\\\"🤵🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👸\\\\\\\",\\\\n                \\\\\\\"👸🏻\\\\\\\",\\\\n                \\\\\\\"👸🏼\\\\\\\",\\\\n                \\\\\\\"👸🏽\\\\\\\",\\\\n                \\\\\\\"👸🏾\\\\\\\",\\\\n                \\\\\\\"👸🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤴\\\\\\\",\\\\n                \\\\\\\"🤴🏻\\\\\\\",\\\\n                \\\\\\\"🤴🏼\\\\\\\",\\\\n                \\\\\\\"🤴🏽\\\\\\\",\\\\n                \\\\\\\"🤴🏾\\\\\\\",\\\\n                \\\\\\\"🤴🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤶\\\\\\\",\\\\n                \\\\\\\"🤶🏻\\\\\\\",\\\\n                \\\\\\\"🤶🏼\\\\\\\",\\\\n                \\\\\\\"🤶🏽\\\\\\\",\\\\n                \\\\\\\"🤶🏾\\\\\\\",\\\\n                \\\\\\\"🤶🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎅\\\\\\\",\\\\n                \\\\\\\"🎅🏻\\\\\\\",\\\\n                \\\\\\\"🎅🏼\\\\\\\",\\\\n                \\\\\\\"🎅🏽\\\\\\\",\\\\n                \\\\\\\"🎅🏾\\\\\\\",\\\\n                \\\\\\\"🎅🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧙‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧙🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧙‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧙🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧝‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧝🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧝‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧝🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧛‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧛🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧛‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧛🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧟‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧟‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧞‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧞‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧜‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧜🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧜‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧜🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧚‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧚🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧚‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧚🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👼\\\\\\\",\\\\n                \\\\\\\"👼🏻\\\\\\\",\\\\n                \\\\\\\"👼🏼\\\\\\\",\\\\n                \\\\\\\"👼🏽\\\\\\\",\\\\n                \\\\\\\"👼🏾\\\\\\\",\\\\n                \\\\\\\"👼🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤰\\\\\\\",\\\\n                \\\\\\\"🤰🏻\\\\\\\",\\\\n                \\\\\\\"🤰🏼\\\\\\\",\\\\n                \\\\\\\"🤰🏽\\\\\\\",\\\\n                \\\\\\\"🤰🏾\\\\\\\",\\\\n                \\\\\\\"🤰🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤱\\\\\\\",\\\\n                \\\\\\\"🤱🏻\\\\\\\",\\\\n                \\\\\\\"🤱🏼\\\\\\\",\\\\n                \\\\\\\"🤱🏽\\\\\\\",\\\\n                \\\\\\\"🤱🏾\\\\\\\",\\\\n                \\\\\\\"🤱🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙇‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🙇🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙇\\\\\\\",\\\\n                \\\\\\\"🙇🏻\\\\\\\",\\\\n                \\\\\\\"🙇🏼\\\\\\\",\\\\n                \\\\\\\"🙇🏽\\\\\\\",\\\\n                \\\\\\\"🙇🏾\\\\\\\",\\\\n                \\\\\\\"🙇🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💁\\\\\\\",\\\\n                \\\\\\\"💁🏻\\\\\\\",\\\\n                \\\\\\\"💁🏼\\\\\\\",\\\\n                \\\\\\\"💁🏽\\\\\\\",\\\\n                \\\\\\\"💁🏾\\\\\\\",\\\\n                \\\\\\\"💁🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💁‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"💁🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙅\\\\\\\",\\\\n                \\\\\\\"🙅🏻\\\\\\\",\\\\n                \\\\\\\"🙅🏼\\\\\\\",\\\\n                \\\\\\\"🙅🏽\\\\\\\",\\\\n                \\\\\\\"🙅🏾\\\\\\\",\\\\n                \\\\\\\"🙅🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙅‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙅🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙆\\\\\\\",\\\\n                \\\\\\\"🙆🏻\\\\\\\",\\\\n                \\\\\\\"🙆🏼\\\\\\\",\\\\n                \\\\\\\"🙆🏽\\\\\\\",\\\\n                \\\\\\\"🙆🏾\\\\\\\",\\\\n                \\\\\\\"🙆🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙆‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙆🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙋\\\\\\\",\\\\n                \\\\\\\"🙋🏻\\\\\\\",\\\\n                \\\\\\\"🙋🏼\\\\\\\",\\\\n                \\\\\\\"🙋🏽\\\\\\\",\\\\n                \\\\\\\"🙋🏾\\\\\\\",\\\\n                \\\\\\\"🙋🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙋‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙋🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤦‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤦🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤦‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤦🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤷\\\\\\\",\\\\n                \\\\\\\"🤷🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤷🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤷🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤷🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤷🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤷‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤷🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙎\\\\\\\",\\\\n                \\\\\\\"🙎🏻\\\\\\\",\\\\n                \\\\\\\"🙎🏼\\\\\\\",\\\\n                \\\\\\\"🙎🏽\\\\\\\",\\\\n                \\\\\\\"🙎🏾\\\\\\\",\\\\n                \\\\\\\"🙎🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙎‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙎🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙍\\\\\\\",\\\\n                \\\\\\\"🙍🏻\\\\\\\",\\\\n                \\\\\\\"🙍🏼\\\\\\\",\\\\n                \\\\\\\"🙍🏽\\\\\\\",\\\\n                \\\\\\\"🙍🏾\\\\\\\",\\\\n                \\\\\\\"🙍🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙍‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🙍🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💇\\\\\\\",\\\\n                \\\\\\\"💇🏻\\\\\\\",\\\\n                \\\\\\\"💇🏼\\\\\\\",\\\\n                \\\\\\\"💇🏽\\\\\\\",\\\\n                \\\\\\\"💇🏾\\\\\\\",\\\\n                \\\\\\\"💇🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💇‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"💇🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💆\\\\\\\",\\\\n                \\\\\\\"💆🏻\\\\\\\",\\\\n                \\\\\\\"💆🏼\\\\\\\",\\\\n                \\\\\\\"💆🏽\\\\\\\",\\\\n                \\\\\\\"💆🏾\\\\\\\",\\\\n                \\\\\\\"💆🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💆‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"💆🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧖‍♀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧖‍♂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💅\\\\\\\",\\\\n                \\\\\\\"💅🏻\\\\\\\",\\\\n                \\\\\\\"💅🏼\\\\\\\",\\\\n                \\\\\\\"💅🏽\\\\\\\",\\\\n                \\\\\\\"💅🏾\\\\\\\",\\\\n                \\\\\\\"💅🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤳\\\\\\\",\\\\n                \\\\\\\"🤳🏻\\\\\\\",\\\\n                \\\\\\\"🤳🏼\\\\\\\",\\\\n                \\\\\\\"🤳🏽\\\\\\\",\\\\n                \\\\\\\"🤳🏾\\\\\\\",\\\\n                \\\\\\\"🤳🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕴\\\\\\\",\\\\n                \\\\\\\"🕴🏻\\\\\\\",\\\\n                \\\\\\\"🕴🏼\\\\\\\",\\\\n                \\\\\\\"🕴🏼\\\\\\\",\\\\n                \\\\\\\"🕴🏾\\\\\\\",\\\\n                \\\\\\\"🕴🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💃\\\\\\\",\\\\n                \\\\\\\"💃🏻\\\\\\\",\\\\n                \\\\\\\"💃🏼\\\\\\\",\\\\n                \\\\\\\"💃🏽\\\\\\\",\\\\n                \\\\\\\"💃🏾\\\\\\\",\\\\n                \\\\\\\"💃🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕺\\\\\\\",\\\\n                \\\\\\\"🕺🏻\\\\\\\",\\\\n                \\\\\\\"🕺🏼\\\\\\\",\\\\n                \\\\\\\"🕺🏽\\\\\\\",\\\\n                \\\\\\\"🕺🏾\\\\\\\",\\\\n                \\\\\\\"🕺🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👯‍♀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👯‍♂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚶‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🚶🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚶\\\\\\\",\\\\n                \\\\\\\"🚶🏻\\\\\\\",\\\\n                \\\\\\\"🚶🏼\\\\\\\",\\\\n                \\\\\\\"🚶🏽\\\\\\\",\\\\n                \\\\\\\"🚶🏾\\\\\\\",\\\\n                \\\\\\\"🚶🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏃‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏃🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏃\\\\\\\",\\\\n                \\\\\\\"🏃🏻\\\\\\\",\\\\n                \\\\\\\"🏃🏼\\\\\\\",\\\\n                \\\\\\\"🏃🏽\\\\\\\",\\\\n                \\\\\\\"🏃🏾\\\\\\\",\\\\n                \\\\\\\"🏃🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍❤️‍👩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍❤️‍👨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍❤️‍💋‍👩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍❤️‍💋‍👨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👩‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👩‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👩‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👩‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👩‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👨‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👩‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👧‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👦‍👦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👨‍👧‍👧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌂\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"smileysAndPeople\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"🐶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🙊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🦔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🐲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☘️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⭐️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚡️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☄️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛅️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☁️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❄️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☃️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛄️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌫\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"animalsAndNature\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"🍏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🍽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥢\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"foodAndDrink\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"⚽️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚾️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛳️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏋️‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏋🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏋️‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🏋🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤼‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤼‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤸‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤸🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤸‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤸🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛹️‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"⛹🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛹️‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"⛹🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤺️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤾🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤾🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏌️‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏌🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏌️‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🏌🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏇\\\\\\\",\\\\n                \\\\\\\"🏇🏻\\\\\\\",\\\\n                \\\\\\\"🏇🏼\\\\\\\",\\\\n                \\\\\\\"🏇🏽\\\\\\\",\\\\n                \\\\\\\"🏇🏾\\\\\\\",\\\\n                \\\\\\\"🏇🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧘‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧘🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧘‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧘🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏄‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏄🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏄‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🏄🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏊‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🏊🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏊‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🏊🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤽🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤽🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚣‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🚣🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚣‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🚣🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧗‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🧗🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧗‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🧗🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚵‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🚵🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚵‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🚵🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚴‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🚴🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚴‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🚴🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤹‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏻‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏼‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏽‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏾‍♀️\\\\\\\",\\\\n                \\\\\\\"🤹🏿‍♀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🤹‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏻‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏼‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏽‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏾‍♂️\\\\\\\",\\\\n                \\\\\\\"🤹🏿‍♂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🥁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎰\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"activity\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"🚗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✈️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛵️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚓️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛽️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛲️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛺️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌁\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"travelAndPlaces\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"⌚️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⌨️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☎️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⌛️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚙️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚰️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚱️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚗️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛀🏿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✉️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖋\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✒️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✏️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔍\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔓\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"objects\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"❤️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🧡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🖤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❣️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☮️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✝️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☸️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✡️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☯️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☦️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♈️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♉️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♊️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♋️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♌️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♍️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♎️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♏️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♐️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♑️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♒️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♓️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚛️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🉑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☢️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☣️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈚️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈷️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✴️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🉐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"㊙️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"㊗️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🅰️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🅱️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🅾️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⭕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⛔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♨️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❗️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"‼️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⁉️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔆\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"〽️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚠️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚜️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♻️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈯️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❇️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✳️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"❎\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"Ⓜ️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🌀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♿️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🅿️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈂️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🛅\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🈁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"ℹ️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🆓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"0️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"1️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"2️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"3️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"4️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"5️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"6️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"7️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"8️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"9️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"#️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"*️⃣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏏️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"▶️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⏬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◀️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➡️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬅️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬆️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬇️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↗️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↘️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↙️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↕️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"↩️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⤴️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⤵️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔀\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔂\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔄\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔃\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✖️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"™️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"©️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"®️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"〰️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"➿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"✔️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"☑️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⚫️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"▪️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"▫️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◾️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◽️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◼️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"◻️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬛️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"⬜️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔇\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔉\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔊\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🔕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"📢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"👁‍🗨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"💭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🗯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♠️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♣️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♥️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"♦️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🃏\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🀄️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕐\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕑\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕒\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕓\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕔\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕕\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕖\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕗\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕘\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕙\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕚\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕛\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕜\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕝\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕞\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕟\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕠\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕡\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕢\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕣\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕤\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕥\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🕧\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"symbols\\\\\\\"\\\\n    },\\\\n    {\\\\n        \\\\\\\"emojis\\\\\\\": [\\\\n            [\\\\n                \\\\\\\"🏳️\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏁\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🚩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏳️‍🌈\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇩🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇭🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇮🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇯🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇯🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🎌\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇯🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇯🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇽🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇶\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇾🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇫🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇲🇵\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇳🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇴🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇶🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇼🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇷🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇽\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇿🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇧🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇰🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇱🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇵🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇩\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇨🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇸🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇼\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇯\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇱\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇰\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇴\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇹\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇷\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇨\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇹🇻\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇮\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇬\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇦🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇬🇧\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏴󠁧󠁢󠁥󠁮󠁧󠁿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏴󠁧󠁢󠁳󠁣󠁴󠁿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🏴󠁧󠁢󠁷󠁬󠁳󠁿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇸\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇾\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇺🇿\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇺\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇦\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇻🇳\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇼🇫\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇪🇭\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇾🇪\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇿🇲\\\\\\\"\\\\n            ],\\\\n            [\\\\n                \\\\\\\"🇿🇼\\\\\\\"\\\\n            ]\\\\n        ],\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"flags\\\\\\\"\\\\n    }\\\\n]\\\\n\\\";\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_add\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content login-panel-form\\\">\\n\\n        <div class=\\\"login-form-jid\\\">\\n            <div class=\\\"login-form-step-wrap\\\">\\n                <div class=\\\"input-field-wrap\\\">\\n                    <div class=\\\"input-field input-field-jid\\\">\\n                        <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                        <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                            <div class=\\\"select-auth-xmpp-server\\\">\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                                <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                    <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"sign_in_domain\\\">\\n                                </div>\\n                                <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                    <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                                </div>\\n                            </div>\\n                            <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                                <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"input-field\\\">\\n                        <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"login-form-step-error login-jid-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-error login-password-error hidden\\\"></div>\\n                <div class=\\\"login-form-step-description\\\"></div>\\n                <div class=\\\"login-step-wrap hidden\\\">\\n                    <div class=\\\"login-step connecting-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                    <div class=\\\"login-step credentials-step\\\">\\n                        <div class=\\\"login-step-text\\\">\\n                            {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                        </div>\\n                        <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"login-form-server-features hidden\\\">\\n            <div class=\\\"register-form-step-wrap\\\">\\n                <div class=\\\"register-form-step-header\\\"></div>\\n            </div>\\n            <div class=\\\"login-server-features-wrap\\\">\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n                </div>\\n                <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                    <div class=\\\"server-feature-text\\\">\\n                        {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                    <div class=\\\"feature-error-tooltip-triangle\\\">\\n                        <div class=\\\"triangle-inside\\\"></div>\\n                    </div>\\n                    <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n                </div>\\n            </div>\\n            <div class=\\\"server-features-error\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button disabled class=\\\"btn-flat btn-main btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main one-line hidden btn-finish-log-in\\\"></button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"settings_account__dialog_change_password__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row login-form-field\\\">\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"jid\\\" type=\\\"text\\\" class=\\\"input-glow\\\" name=\\\"jid\\\" disabled readonly>\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"input-glow\\\" placeholder=\\\"{[print(xabber.getString('account_password'))]}\\\" name=\\\"password\\\">\\n                <span class=\\\"errors fixed\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-change\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"status_editor\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <li data-value=\\\"chat\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"chat\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"chat\\\"></span>\\n        </li>\\n        <li data-value=\\\"online\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"online\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"online\\\"></span>\\n        </li>\\n        <li data-value=\\\"away\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"away\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"away\\\"></span>\\n        </li>\\n        <li data-value=\\\"xa\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"xa\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"xa\\\"></span>\\n        </li>\\n        <li data-value=\\\"dnd\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"dnd\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"dnd\\\"></span>\\n        </li>\\n        <li data-value=\\\"offline\\\">\\n            <span class=\\\"status-value one-line\\\">{[print(xabber.getString(\\\"unavailable\\\"))]}</span>\\n            <span class=\\\"status-bulb\\\" data-status=\\\"offline\\\"></span>\\n        </li>\\n    </ul>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"input-field status-message-wrap\\\">\\n                <span class=\\\"static-label\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_custom_status\\\"))]}</span>\\n                <input type=\\\"text\\\" class=\\\"status-message\\\">\\n                <i class=\\\"clear-input mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n            <div class=\\\"input-field checkbox-field no-padding\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in apply-to-all\\\" id=\\\"{{view.cid}}_apply_to_all\\\"/>\\n                <label for=\\\"{{view.cid}}_apply_to_all\\\">{[print(xabber.getString(\\\"dialog_status_editor__label_apply_to_all\\\"))]}</label>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"client one-line\\\">{{client}}</div>\\n    <div class=\\\"device one-line\\\">{{device}}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    <div class=\\\"last-auth resource text-color-700\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>{[print(xabber.getString(\\\"account_state_connected\\\"))]}</div>\\n    {[ if (resource_obj) {]}\\n        <table class=\\\"token-resource-wrap hidden\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>\\n            <tbody>\\n            <tr class=\\\"info status-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n                <td>\\n                    <div class=\\\"value status-message one-line\\\">{{resource_obj.status}}</div>\\n                    <div class=\\\"status\\\" data-status=\\\"{{resource_obj.status}}\\\"></div>\\n                </td>\\n            </tr>\\n            <tr class=\\\"info resource-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n                <td class=\\\"value resource one-line\\\">{{resource_obj.resource}}</td>\\n            </tr>\\n            <tr class=\\\"info priority-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n                <td class=\\\"value priority\\\">{{resource_obj.priority}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    {[}]}\\n    <div class=\\\"token-indicator\\\">{[print(xabber.getString(\\\"settings_account__label_this_device\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{[print(xabber.getString(\\\"account_emoji_profile_image_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"emoji-profile-image\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar ground-color-green-100\\\" data-value=\\\"green\\\">\\n                <div class=\\\"chosen-emoji\\\" data-value=\\\"🐈\\\">🐈</div>\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"emoji-profile-colors\\\">\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-green-500 outline-color-green-500 chosen-background-color\\\" data-value=\\\"green\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-deep-orange-500 outline-color-deep-orange-500\\\" data-value=\\\"deep-orange\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-red-500 outline-color-red-500\\\" data-value=\\\"red\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-light-blue-500 outline-color-light-blue-500\\\" data-value=\\\"light-blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-blue-500 outline-color-blue-500\\\" data-value=\\\"blue\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-purple-500 outline-color-purple-500\\\" data-value=\\\"purple\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"colors-line\\\">\\n            <div class=\\\"profile-image-background-color ground-color-lime-500 outline-color-lime-500\\\" data-value=\\\"lime\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-pink-500 outline-color-pink-500\\\" data-value=\\\"pink\\\">\\n            </div>\\n            <div class=\\\"profile-image-background-color ground-color-orange-500 outline-color-orange-500\\\" data-value=\\\"orange\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-save\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"account_emoji_profile_image_header\\\"))]}</span>\\n        <i class=\\\"close-modal mdi mdi-close mdi-24px\\\"></i>\\n    </div>\\n    <div class=\\\"emoji-picker-wrap no-select\\\">\\n\\n    </div>\\n</div>\\n\";","export default \"\\n{[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-tab{[if (i === 0){]} chosen-emoji-tab{[} else {]} hidden{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {[ for (var y = 0; y < tab.emojis.length; y++) { var emoji = tab.emojis[y] ]}\\n            <div class=\\\"emoji-picker-emoji\\\" data-value=\\\"{{emoji[0]}}\\\">\\n                <div>{{emoji[0]}}</div>\\n            </div>\\n        {[ } ]}\\n    </div>\\n{[ } ]}\\n<div class=\\\"emoji-picker-tabs\\\">\\n    {[ for (var i = 0; i < emojis.length; i++) { var tab = emojis[i] ]}\\n    <div class=\\\"emojis-bottom-tab-selector{[if (i === 0){]} chosen-emoji-selector{[}]}\\\" data-value=\\\"{{tab.type}}\\\">\\n        {{tab.emojis[0][0]}}\\n    </div>\\n    {[ } ]}\\n</div>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n    <button class=\\\"btn-join-existing-chat btn-flat btn-dark btn-main\\\">join</button>\\n</div>\";","export default \"<div class=\\\"move-account-to-this droppable\\\"></div>\\n<div class=\\\"account-info-wrap\\\">\\n    <i class=\\\"drag-item drag-handle mdi mdi-28px mdi-drag-vertical\\\"></i>\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"text-info-wrap\\\">\\n        <div class=\\\"jid-wrap\\\">\\n            <div class=\\\"jid text-color-700 one-line\\\"></div>\\n        </div>\\n        <div class=\\\"conn-status one-line\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"sync-marker-wrap hidden\\\">\\n    <i class=\\\"sync-marker mdi mdi-20px mdi-cloud-check\\\"></i>\\n</div>\\n<div class=\\\"field clickable-field enabled-state switch normal\\\">\\n    <label class=\\\"field-value\\\">\\n        <input type=\\\"checkbox\\\">\\n        <span class=\\\"lever\\\"></span>\\n    </label>\\n</div>\\n\";","export default \"<div class=\\\"gallery-wrap\\\">\\n    <!--<svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>-->\\n    <div class=\\\"gallery-storage-wrap\\\">\\n        <div class=\\\"storage-usage\\\"></div>\\n        <div class=\\\"storage-progress-bar\\\">\\n            <div class=\\\"storage-progress-images\\\"></div>\\n            <div class=\\\"storage-progress-videos\\\"></div>\\n            <div class=\\\"storage-progress-voices\\\"></div>\\n            <div class=\\\"storage-progress-files\\\"></div>\\n        </div>\\n        <div class=\\\"storage-labels\\\">\\n            <div class=\\\"storage-label storage-label-images\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"images\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-videos\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-voices\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</div></div>\\n            <div class=\\\"storage-label storage-label-files\\\"><div class=\\\"storage-label-icon\\\"></div><div class=\\\"storage-label-text\\\">{[print(xabber.getString(\\\"files\\\"))]}</div></div>\\n        </div>\\n        <div class=\\\"storage-usages\\\">\\n            <div class=\\\"storage-category-usage storage-usage-images\\\">\\n                {[print(xabber.getString(\\\"images\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-videos\\\">\\n                {[print(xabber.getString(\\\"videos\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-voices\\\">\\n                {[print(xabber.getString(\\\"vcard_type_voice\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n            <div class=\\\"storage-category-usage storage-usage-files\\\">\\n                {[print(xabber.getString(\\\"files\\\"))]}<span class=\\\"storage-usage-amount\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <ul class=\\\"tabs\\\">\\n        <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n        <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n        <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n        <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        <li data-value=\\\"avatars\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</a></li>\\n    </ul>\\n    <div class=\\\"list-managment-wrap\\\">\\n        <button class=\\\"btn-sorting dropdown-button btn-flat btn-main text-color-700 hover-ground-color-300\\\" data-activates=\\\"storage-file-sorting\\\">\\n            {[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}\\n        </button>\\n    </div>\\n    <ul id=\\\"storage-file-sorting\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-id\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_new\\\"))]}</span>\\n        </div>\\n        <div class=\\\"property-variant btn-gallery-sorting\\\" data-value=\\\"-size\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_media_gallery_sorting_size\\\"))]}</span>\\n        </div>\\n    </ul>\\n    <div class=\\\"gallery-files zoom-gallery\\\">\\n    </div>\\n</div>\\n\\n\";","export default \"<div class=\\\"gallery-file{[if (file.is_avatar === 'True'){]} gallery-avatar{[}]}\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-file=\\\"{{file.file}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || file.media_type.includes('video'))){]}\\n        <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\" data-mfp-src=\\\"{{file.file}}\\\" src=\\\"{{file.thumbnail}}\\\" {[if (file.media_type && file.media_type.includes('image')){]}onerror=\\\"this.src = '{{file.file}}'\\\" {[}]}>\\n    {[} else {]}\\n        {[if (svg_icon == 'file-audio' && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n                <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n            </div>\\n            <div class=\\\"gallery-file-audio-container\\\">\\n            </div>\\n        {[} else {]}\\n            <div class=\\\"gallery-file-placeholder-background\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n                <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n            </div>\\n        {[}]}\\n        <div class=\\\"gallery-file-title one-line\\\">\\n            {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span> <span class=\\\"gallery-file-date\\\">{{file.created_at}}</span>\\n        </div>\\n        {[if (duration && file.media_type.includes('+voice')){]}\\n            <div class=\\\"gallery-voice-file-duration\\\">\\n                0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n            </div>\\n        {[}]}\\n    {[}]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{file.id}}-more\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul id=\\\"{{file.id}}-more\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n        <a class=\\\"one-line\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{file.file}}\\\" download>\\n            <div class=\\\"property-variant btn-download\\\">\\n                {[print(xabber.getString(\\\"action_download\\\"))]}\\n            </div>\\n        </a>\\n        <div class=\\\"property-variant btn-delete\\\">\\n            <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete\\\"))]}</span>\\n        </div>\\n    </ul>\\n</div>\";","export default \"<svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"ic-jabber\\\"></svg>\\n<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"<table>\\n    <tbody>\\n    <tr class=\\\"info status-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n        <td>\\n            <div class=\\\"value status-message one-line\\\"></div>\\n            <div class=\\\"status\\\"></div>\\n        </td>\\n    </tr>\\n    <tr class=\\\"info client-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_client\\\"))]}:</td>\\n        <td class=\\\"value client one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info resource-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n        <td class=\\\"value resource one-line\\\"></td>\\n    </tr>\\n    <tr class=\\\"info priority-info\\\">\\n        <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n        <td class=\\\"value priority\\\"></td>\\n    </tr>\\n    </tbody>\\n</table>\";","export default \"    <div class=\\\"left-column ground-color-900 noselect\\\">\\n        <div class=\\\"main-info-wrap account-main-info-wrap\\\">\\n            <!--<i title=\\\"Back to settings\\\" class=\\\"mdi mdi-arrow-left mdi-28px back-to-settings\\\"></i>-->\\n            <div class=\\\"picture-wrap\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                        <img/>\\n                        <input type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"status\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name\\\"></div>\\n            </div>\\n            <div class=\\\"status-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">\\n                <i class=\\\"mdi mdi-24px mdi-settings\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_connection_settings\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"vcard_edit\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-box\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"color-scheme\\\">\\n                <i class=\\\"mdi mdi-24px mdi-palette\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"color\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"media-gallery\\\">\\n                <i class=\\\"mdi mdi-24px mdi-chart-arc\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"blocklist-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"blocked_contacts\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"groups-info\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"server-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-information\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings_account__section_header_server_info\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab omemo-info\\\" data-block-name=\\\"omemo-info\\\">\\n                <i class=\\\"mdi mdi-24px mdi-security\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_encryption\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"tokens\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"devices\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"account_settings_devices\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap ground-color-900\\\">\\n            <div class=\\\"settings-tab delete-account\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"settings_account__button_quit_account\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span class=\\\"settings-panel-head-title\\\">{[print(xabber.getString(\\\"account_editor\\\"))]}</span>\\n        <div class=\\\"buttons-wrap\\\">\\n            <button class=\\\"btn-block btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"settings_account__blocklist__button_block\\\"))]}</button>\\n            <button class=\\\"btn-deselect-blocked btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n            <button class=\\\"btn-unblock-selected btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"unblock_selected\\\"))]}</button>\\n        </div>\\n        <div class=\\\"btn-more media-gallery-button dropdown-button\\\" data-activates=\\\"storage-actions\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"storage-actions\\\" class=\\\"dropdown-content noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files-variants\\\" data-activates=\\\"storage-delete-files\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"account_delete_files\\\"))]}</span>\\n            </div>\\n        </ul>\\n        <ul id=\\\"storage-delete-files\\\" class=\\\"dropdown-content bootstrap-dropdown noselect\\\">\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_15_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"30\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_30_days\\\"))]}</span>\\n            </div>\\n            <div class=\\\"property-variant btn-delete-files\\\" data-date=\\\"60\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"delete_files_older_than_60_days\\\"))]}</span>\\n            </div>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content details-panel\\\">\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_connection_settings\\\"))]}' class=\\\"settings-block-wrap connection\\\">\\n                <div class=\\\"connection-wrap\\\">\\n                    <div class=\\\"readonly-setting\\\">\\n                        <i class=\\\"details-icon mdi mdi-24px mdi-account\\\"></i>\\n                        <div class=\\\"setting-wrap account-name\\\">\\n                            <div class=\\\"value one-line\\\"></div>\\n                            <div class=\\\"label conn-status\\\"></div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"change-password-container\\\">\\n                        <div class=\\\"change-password-fields\\\">\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_old_pass\\\"))]}' id=\\\"old_password\\\" type=\\\"password\\\" name=\\\"old_password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_new_pass\\\"))]}' id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                            <div class=\\\"input-field\\\">\\n                                <input class=\\\"input-glow\\\" placeholder='{[print(xabber.getString(\\\"hint_confirm_pass\\\"))]}' id=\\\"password_confirm\\\" type=\\\"password\\\" name=\\\"password_confirm\\\">\\n                                <span class=\\\"errors fixed\\\"></span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <button class=\\\"btn-change btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_change_pass\\\"))]}</button>\\n                            <button class=\\\"btn-change-password btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</button>\\n                            <button class=\\\"btn-reconnect btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"settings_account__button_reconnect\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"color\\\"))]}' class=\\\"settings-block-wrap color-scheme\\\">\\n                <div class=\\\"color-scheme-wrap\\\">\\n                    <div class=\\\"account-color\\\">\\n                        <div class=\\\"field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"red\\\" type=\\\"radio\\\" id=\\\"color-red\\\" />\\n                                    <label class=\\\"text-color-red-700\\\" for=\\\"color-red\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"pink\\\" type=\\\"radio\\\" id=\\\"color-pink\\\" />\\n                                    <label class=\\\"text-color-pink-700\\\" for=\\\"color-pink\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"purple\\\" type=\\\"radio\\\" id=\\\"color-purple\\\" />\\n                                    <label class=\\\"text-color-purple-700\\\" for=\\\"color-purple\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-purple\\\" type=\\\"radio\\\" id=\\\"color-deep-purple\\\" />\\n                                    <label class=\\\"text-color-deep-purple-700\\\" for=\\\"color-deep-purple\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"indigo\\\" type=\\\"radio\\\" id=\\\"color-indigo\\\" />\\n                                    <label class=\\\"text-color-indigo-700\\\" for=\\\"color-indigo\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue\\\" type=\\\"radio\\\" id=\\\"color-blue\\\" />\\n                                    <label class=\\\"text-color-blue-700\\\" for=\\\"color-blue\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-blue\\\" type=\\\"radio\\\" id=\\\"color-light-blue\\\" />\\n                                    <label class=\\\"text-color-light-blue-700\\\" for=\\\"color-light-blue\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"cyan\\\" type=\\\"radio\\\" id=\\\"color-cyan\\\" />\\n                                    <label class=\\\"text-color-cyan-700\\\" for=\\\"color-cyan\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"teal\\\" type=\\\"radio\\\" id=\\\"color-teal\\\" />\\n                                    <label class=\\\"text-color-teal-700\\\" for=\\\"color-teal\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"green\\\" type=\\\"radio\\\" id=\\\"color-green\\\" />\\n                                    <label class=\\\"text-color-green-700\\\" for=\\\"color-green\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"light-green\\\" type=\\\"radio\\\" id=\\\"color-light-green\\\" />\\n                                    <label class=\\\"text-color-light-green-700\\\" for=\\\"color-light-green\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"lime\\\" type=\\\"radio\\\" id=\\\"color-lime\\\" />\\n                                    <label class=\\\"text-color-lime-700\\\" for=\\\"color-lime\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"amber\\\" type=\\\"radio\\\" id=\\\"color-amber\\\" />\\n                                    <label class=\\\"text-color-amber-700\\\" for=\\\"color-amber\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"orange\\\" type=\\\"radio\\\" id=\\\"color-orange\\\" />\\n                                    <label class=\\\"text-color-orange-700\\\" for=\\\"color-orange\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"deep-orange\\\" type=\\\"radio\\\" id=\\\"color-deep-orange\\\" />\\n                                    <label class=\\\"text-color-deep-orange-700\\\" for=\\\"color-deep-orange\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"brown\\\" type=\\\"radio\\\" id=\\\"color-brown\\\" />\\n                                    <label class=\\\"text-color-brown-700\\\" for=\\\"color-brown\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</label>\\n                                </p>\\n                                <p>\\n                                    <input class=\\\"with-gap\\\" name=\\\"account_color\\\" value=\\\"blue-grey\\\" type=\\\"radio\\\" id=\\\"color-blue-grey\\\" />\\n                                    <label class=\\\"text-color-blue-grey-700\\\" for=\\\"color-blue-grey\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</label>\\n                                </p>\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_profile\\\"))]}' class=\\\"settings-block-wrap vcard\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_server_info_description\\\"))]}' class=\\\"settings-block-wrap server-info\\\">\\n                <div class=\\\"capabilities-wrap\\\">\\n                    <div class=\\\"capabilities\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"blocked_contacts\\\"))]}' class=\\\"settings-block-wrap blocklist-info\\\">\\n                <div class=\\\"blocklist-wrap\\\">\\n                    <div class=\\\"blocked-items\\\">\\n                        <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"blocked_contacts_empty\\\"))]}</div>\\n                        <div class=\\\"blocklist-tabs-wrap\\\">\\n                            <ul class=\\\"tabs\\\">\\n                                <li class=\\\"blocked-item contacts-item hidden\\\" data-tab-name=\\\"blocked-contacts-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__contacts\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item domains-item hidden\\\" data-tab-name=\\\"blocked-domains-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__domains\\\"))]}</a>\\n                                </li>\\n                                <li class=\\\"blocked-item invitations-item hidden\\\" data-tab-name=\\\"blocked-invitations-wrap\\\">\\n                                    <a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"blocked_tabs_name__invitations\\\"))]}</a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-contacts-wrap hidden\\\" data-tab-name=\\\"contacts-item\\\">\\n                            <div class=\\\"blocked-contacts blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-domains-wrap hidden\\\" data-tab-name=\\\"domains-item\\\">\\n                            <div class=\\\"blocked-domains blocked-list\\\"/>\\n                        </div>\\n                        <div class=\\\"blocked-items-container blocked-invitations-wrap hidden\\\" data-tab-name=\\\"invitations-item\\\">\\n                            <div class=\\\"blocked-invitations blocked-list\\\"/>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_cloud_storage\\\"))]}' class=\\\"settings-block-wrap media-gallery\\\">\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"settings_account__section_header_circles\\\"))]}' class=\\\"settings-block-wrap groups-info\\\">\\n                <div class=\\\"groups-wrap\\\">\\n                    <div class=\\\"groups\\\">\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_devices\\\"))]}' class=\\\"settings-block-wrap tokens\\\">\\n                <div class=\\\"tokens-wrap\\\">\\n                    <div class=\\\"current-token-wrap\\\">\\n                        <div class=\\\"sessions-wrap current-session selectable-text\\\"></div>\\n                        <div class=\\\"buttons-wrap\\\">\\n                            <p class=\\\"btn-revoke-all-tokens hover-text-color-500 text-color-700\\\">{[print(xabber.getString(\\\"account_terminate_all_sessions\\\"))]}</p>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"all-sessions-wrap\\\">\\n                        <div class=\\\"sessions-wrap all-sessions selectable-text\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n            <div data-header='{[print(xabber.getString(\\\"account_settings_encryption\\\"))]}' class=\\\"settings-block-wrap omemo-info\\\">\\n                <div class=\\\"omemo-settings-wrap\\\">\\n                    <div class=\\\"settings\\\">\\n                        <div class=\\\"setting-wrap omemo-enable\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_enable_encryption\\\"))]}</span>\\n                            <div class=\\\"field setting-use-omemo switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap send-chat-states\\\">\\n                            <span>{[print(xabber.getString(\\\"omemo__settings__toggle_send_typing_notifications\\\"))]}</span>\\n                            <div class=\\\"field setting-send-chat-states switch normal\\\">\\n                                <label class=\\\"field-value\\\">\\n                                    <input type=\\\"checkbox\\\">\\n                                    <span class=\\\"lever\\\"></span>\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-wrap manage-devices\\\">\\n                            <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_manage_devices\\\"))]}</button>\\n                        </div>\\n                        <div class=\\\"setting-wrap purge-keys\\\">\\n                            <button class=\\\"btn-purge-keys btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"omemo__settings__button_purge_keys\\\"))]}</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"token-wrap\\\" data-token-uid=\\\"{{token_uid}}\\\">\\n    <div class=\\\"client one-line\\\">{{client}}</div>\\n    <div class=\\\"device one-line\\\">{{device}}</div>\\n    <div class=\\\"ip-address\\\">{{ip}}</div>\\n    {[ if (resource_obj) {]}\\n    <div class=\\\"last-auth resource\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>{[print(xabber.getString(\\\"account_state_connected\\\"))]}</div>\\n        <table class=\\\"token-resource-wrap hidden\\\" {[ if (resource_obj) {]}data-resource-id=\\\"{{resource_obj.resource}}\\\"{[}]}>\\n            <tbody>\\n            <tr class=\\\"info status-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"settings_account__label_status\\\"))]}:</td>\\n                <td>\\n                    <div class=\\\"value status-message one-line\\\">{{resource_obj.status}}</div>\\n                    <div class=\\\"status\\\" data-status=\\\"{{resource_obj.status}}\\\"></div>\\n                </td>\\n            </tr>\\n            <tr class=\\\"info resource-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_resource\\\"))]}:</td>\\n                <td class=\\\"value resource one-line\\\">{{resource_obj.resource}}</td>\\n            </tr>\\n            <tr class=\\\"info priority-info\\\">\\n                <td class=\\\"label\\\">{[print(xabber.getString(\\\"account_priority\\\"))]}:</td>\\n                <td class=\\\"value priority\\\">{{resource_obj.priority}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    {[} else {]}\\n    <div class=\\\"last-auth\\\">{{last_auth}}</div>\\n    {[}]}\\n    <i class=\\\"btn-revoke-token mdi mdi-24px mdi-close\\\"></i>\\n</div>\";","export default \"<div class=\\\"border\\\"/>\\n<div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n    <div class=\\\"dropdown-button circle-avatar border-color ground-color-700 noselect\\\"/>\\n</div>\\n<div class=\\\"status\\\"/>\\n<i class=\\\"auth-failed mdi mdi-16px mdi-close\\\"></i>\\n<div class=\\\"account-actions-panel\\\">\\n    <div class=\\\"filter-chats\\\">\\n        <i class=\\\"mdi mdi-filter mdi-20px\\\"></i>\\n        <div class=\\\"text\\\">{[print(xabber.getString(\\\"account__toolbar_item__button_filter_chats\\\"))]}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"take_photo\\\"))]}</span>\\n    </div>\\n    <div class=\\\"webcam-profile-image-wrap\\\">\\n        <div class=\\\"camera\\\">\\n            <video class=\\\"webcam-video\\\">Video stream not available.</video>\\n        </div>\\n        <canvas id=\\\"canvas\\\" style=\\\"display: none;\\\">\\n        </canvas>\\n        <div class=\\\"output hidden\\\">\\n            <div class=\\\"webcam-photo-wrap\\\">\\n                <img class=\\\"webcam-photo\\\" alt=\\\"The screen capture will appear in this box.\\\">\\n            </div>\\n            <div class=\\\"circle-icon\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"camera-retake\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-take-photo\\\">{[print(xabber.getString(\\\"capture\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-save hidden\\\">{[print(xabber.getString(\\\"account_webcam_profile_image_btn_save\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        <div class=\\\"modal-preloader-wrap\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-intro\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n        <span class=\\\"client-description\\\">{{SHORT_CLIENT_DESCRIPTION}}</span>\\n    </div>\\n    <div class=\\\"login-buttons\\\">\\n        <div class=\\\"btn-flat btn-main btn-register-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</div>\\n        <div class=\\\"btn-flat btn-main btn-login-form one-line\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_in\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-form xmpp-login-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back-menu mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-jid\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"dialog_jingle_message__message_connect\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field input-field-jid\\\">\\n                    <input id=\\\"jid\\\" placeholder='{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}' type=\\\"text\\\" name=\\\"jid\\\">\\n                    <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                        <div class=\\\"select-auth-xmpp-server\\\">\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                            <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                                <input id=\\\"sign_in_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' value=\\\"111111\\\" name=\\\"sign_in_domain\\\">\\n                            </div>\\n                            <div data-activates=\\\"select-auth-xmpp-server\\\" class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-auth-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                            <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-error login-jid-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-error login-password-error hidden\\\"></div>\\n            <div class=\\\"register-form-step-description\\\"></div>\\n            <div class=\\\"login-step-wrap hidden\\\">\\n                <div class=\\\"login-step connecting-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_communicating\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n                <div class=\\\"login-step credentials-step\\\">\\n                    <div class=\\\"login-step-text\\\">\\n                        {[print(xabber.getString(\\\"dialog_jingle_message__status_checking_credentials\\\"))]}\\n                    </div>\\n                    <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <i class=\\\"mdi mdi-24px mdi-alert-circle hidden\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"login-form-server-features hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\"></div>\\n        </div>\\n        <div class=\\\"login-server-features-wrap\\\">\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.MAM)]}\\\" >\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_archive\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_archive_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.SYNCHRONIZATION)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_synchronization\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_quick_synchronization_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.REWRITE)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_message_editing\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_message_editing_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.AUTH_DEVICES)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_device_management\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_tokens_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.PUBSUB)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_publish_subscribe\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_pubsub_error'))]}</div>\\n            </div>\\n            <div class=\\\"server-feature\\\" data-xmlns=\\\"{[print(Strophe.NS.HTTP_UPLOAD)]}\\\">\\n                <div class=\\\"server-feature-text\\\">\\n                    {[print(xabber.getString(\\\"signin_file_upload\\\"))]}\\n                </div>\\n                <div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <i class=\\\"mdi mdi-24px mdi-alert hidden\\\"></i>\\n                <div class=\\\"feature-error-tooltip-triangle\\\">\\n                    <div class=\\\"triangle-inside\\\"></div>\\n                </div>\\n                <div class=\\\"feature-error-tooltip\\\">{[print(xabber.getString('signin_file_upload_error'))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"server-features-error\\\"></div>\\n    </div>\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"title_login_xabber_account\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-sign-up-instead\\\">{[print(xabber.getString(\\\"xmpp_login__button_sign_up\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main-filled one-line hidden btn-finish-log-in\\\"></button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n<div class=\\\"login-panel-form register-form noselect hidden\\\">\\n    <svg class=\\\"details-icon btn-go-back mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"chevron-left-variant\\\"></svg>\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_register_xabber_account\\\"))]}</div>\\n    <div class=\\\"login-form-skip hidden\\\">{[print(xabber.getString(\\\"skip\\\"))]}</div>\\n    <div class=\\\"register-form-nickname\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_nickname\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_nickname\\\" placeholder='{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}' type=\\\"text\\\" name=\\\"register_nickname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_nickname\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-jid hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_jid\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_jid\\\" placeholder='{[print(xabber.getString(\\\"hint_username\\\"))]}' type=\\\"text\\\" name=\\\"register_jid\\\">\\n                </div>\\n                <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                    <div class=\\\"select-xmpp-server\\\">\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                        <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                            <input id=\\\"new_account_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"register_domain\\\">\\n                        </div>\\n                        <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                            <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                            <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                        <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_jid\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-password hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_password\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"input-field\\\">\\n                    <input id=\\\"register_password\\\" placeholder='{[print(xabber.getString(\\\"hint_pass\\\"))]}' type=\\\"password\\\" name=\\\"register_password\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"register-form-step-description\\\">{[print(xabber.getString(\\\"xmpp_login__registration_description_password\\\"))]}</div>\\n            <div class=\\\"register-form-step-error hidden\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"register-form-picture hidden\\\">\\n        <div class=\\\"register-form-step-wrap\\\">\\n            <div class=\\\"register-form-step-header\\\">{[print(xabber.getString(\\\"xmpp_login__registration_title_avatar\\\"))]}</div>\\n            <div class=\\\"input-field-wrap\\\">\\n                <div class=\\\"avatar-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-profile-image\\\">\\n                    <div class=\\\"circle-avatar\\\">\\n                        <input id=\\\"register_picture\\\"  title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                        <ul id=\\\"{{view.cid}}-profile-image\\\" class=\\\"profile-image-dropdown dropdown-content noselect\\\">\\n                            <div class=\\\"btn-emoji-panel property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_emoji_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-selfie property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_webcam_profile_image_button\\\"))]}\\n                            </div>\\n                            <div class=\\\"btn-choose-image property-variant\\\">\\n                                {[print(xabber.getString(\\\"account_profile_image_button\\\"))]}\\n                            </div>\\n                        </ul>\\n                    </div>\\n                    <div class=\\\"circle-icon\\\">\\n                        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                        </svg>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    {[if (xabber.url_params && xabber.url_params.rkey){]}\\n        <div class=\\\"login-form-url\\\">\\n            <i class=\\\"mdi login-form-url-icon mdi-link-variant\\\"></i>\\n            <div class=\\\"login-form-url-text\\\">\\n                {[print(xabber.getString(\\\"xmpp_login__registration_via_link\\\"))]}\\n            </div>\\n        </div>\\n    {[}]}\\n    <div class=\\\"input-field buttons-wrap\\\">\\n        <button class=\\\"btn btn-flat btn-main-filled btn-next\\\">{[print(xabber.getString(\\\"xaccount_next\\\"))]}</button>\\n        <button class=\\\"btn btn-flat btn-main btn-skip\\\">{[print(xabber.getString(\\\"xmpp_login__registration_skip\\\"))]}</button>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\";","export default \"<div class=\\\"modal main-modal add-xabber-account-modal\\\">\\n    <div class=\\\"modal-content-wrap\\\">\\n        <div class=\\\"modal-header\\\">\\n            <span>{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</span>\\n        </div>\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"row account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            {[if (constants.USE_SOCIAL_AUTH){]}\\n            <div class=\\\"row social-auth-wrap\\\">\\n                <div class=\\\"social-header\\\">\\n                    <div class=\\\"divider\\\"></div>\\n                    <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"social_sign_in\\\"))]}</div>\\n                </div>\\n                <div class=\\\"social-buttons\\\">\\n                    <div class=\\\"btn-social google-color\\\" data-provider=\\\"google\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-google-plus\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social facebook-color\\\" data-provider=\\\"facebook\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-facebook\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social twitter-color\\\" data-provider=\\\"twitter\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div>\\n                    <div class=\\\"btn-social xabber-color\\\" data-provider=\\\"email\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-at\\\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n            {[}]}\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"login-panel-footer\\\">\\n    <div class=\\\"registration-footer\\\">\\n        <div class=\\\"registration-tip-wrap\\\">\\n            <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__text_no_account\\\"))]}</span>\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n        </div>\\n    </div>\\n    <div class=\\\"footer-text clearfix\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n</div>\\n\";","export default \"<div data-id=\\\"{{email_id}}\\\" data-email=\\\"{{email}}\\\" class=\\\"{[if (!verified){]}not-linked {[}]}social-linked-item-wrap email-linked\\\"><div style=\\\"background-color:{{color}}\\\" class=\\\"social-icon\\\">{[if (verified){]}<svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#FFF\\\" d=\\\"M21,13.34C20.37,13.12 19.7,13 19,13A6,6 0 0,0 13,19C13,19.34 13.03,19.67 13.08,20H3A2,2 0 0,1 1,18V6C1,4.89 1.89,4 3,4H19A2,2 0 0,1 21,6V13.34M23.5,17L18.5,22L15,18.5L16.5,17L18.5,19L22,15.5L23.5,17M3,6V8L11,13L19,8V6L11,11L3,6Z\\\" />\\n</svg>{[} else {]}<i class=\\\"mdi mdi-24px mdi-email\\\"></i>{[}]}</div><div class=\\\"synced-info\\\"><div class=\\\"name one-line\\\">{{email}}</div><div class=\\\"verified-status one-line\\\">{[if (verified){print(xabber.getString(\\\"title_verified_email\\\"));}else{print(xabber.getString(\\\"title_unverified_email\\\"));}]}</div></div>{[if (!verified){]}<div class=\\\"btn-main btn-flat btn-verify-email\\\">{[print(xabber.getString(\\\"button_confirm\\\"))]}</div>{[}]}<div class=\\\"btn-main btn-flat btn-link btn-unlink\\\">{[print(xabber.getString(\\\"action_disconnect\\\"))]}</div></div>\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"xabber_account__dialog_sync__header\\\"))]}</span>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"setting sync-all-wrap field-wrap\\\">\\n                <div class=\\\"field clickable-field switch normal\\\">\\n                    <span class=\\\"field-name\\\">{[print(xabber.getString(\\\"sync_all\\\"))]}</span>\\n                    <label class=\\\"field-value\\\">\\n                       <input type=\\\"checkbox\\\" class=\\\"sync-all\\\">\\n                       <span class=\\\"lever\\\"></span>\\n                    </label>\\n                </div>\\n            </div>\\n            <div class=\\\"accounts-wrap\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-sync\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <i class=\\\"sync-icon mdi mdi-24px\\\" data-mdiclass=\\\"\\\"></i>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name text-color-grey-900 one-line\\\">{{jid}}</div>\\n            <div class=\\\"sync-tip text-color-grey-500 one-line\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"input-field checkbox-field sync-one-wrap no-padding\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in sync-one\\\" id=\\\"{{view.cid}}_sync_{{jid}}\\\"/>\\n        <label for=\\\"{{view.cid}}_sync_{{jid}}\\\"></label>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"xabber-account-content-wrap\\\">\\n    <div class=\\\"account-info-wrap\\\">\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <div class=\\\"name-wrap\\\">\\n                <div class=\\\"name text-color-red-700 one-line\\\"></div>\\n            </div>\\n            <div class=\\\"last-sync-info\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"sync-wrap\\\">\\n        <div class=\\\"btn-sync\\\">\\n            <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-flat btn-main btn-login\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"account-action-more\\\">\\n            <i class=\\\"mdi mdi-20px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"account-action-more\\\" class=\\\"xabber-account-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-sync btn-sync-settings\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"xabber_account__dialog_sync__button_sync\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-set-password\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_set_pass\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-logout\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n<div class=\\\"xabber-account-tip\\\">{[print(xabber.getString(\\\"tutorial_description_6\\\"))]}</div>\\n<div class=\\\"linked-social-accounts-and-emails\\\">\\n    <div class=\\\"social-linked-header\\\"><div class=\\\"chevron-icon\\\"><i class=\\\"arrow mdi mdi-20px\\\"></i></div><div class=\\\"social-linked-header-text\\\">{[print(xabber.getString(\\\"title_linked_accounts\\\"))]}</div></div>\\n    <div class=\\\"social-linked-wrap\\\">\\n        <div id='google' class=\\\"not-linked social-account social-linked-item-wrap google-linked\\\"><div class=\\\"google-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-google-plus\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='facebook' class=\\\"not-linked social-account social-linked-item-wrap facebook-linked\\\"><div class=\\\"facebook-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-facebook\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='twitter' class=\\\"not-linked social-account social-linked-item-wrap twitter-linked\\\"><div class=\\\"twitter-color social-icon\\\"><i class=\\\"mdi mdi-24px mdi-twitter\\\"></i></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_not_linked_account\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n        <div id='email' class=\\\"not-linked social-linked-item-wrap\\\"><div class=\\\"email-color social-icon\\\"><svg style=\\\"width:24px;height:24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path fill=\\\"#FFF\\\" d=\\\"M3,4C1.89,4 1,4.89 1,6V18A2,2 0 0,0 3,20H14.09C14.03,19.67 14,19.34 14,19A6,6 0 0,1 20,13C20.34,13 20.67,13.03 21,13.09V6C21,4.89 20.1,4 19,4H3M3,6L11,11L19,6V8L11,13L3,8V6M19,15V18H16V20H19V23H21V20H24V18H21V15H19Z\\\" />\\n        </svg></div><div class=\\\"synced-info\\\">{[print(xabber.getString(\\\"title_add_email\\\"))]}</div><div class=\\\"btn-main btn-flat btn-link\\\">{[print(xabber.getString(\\\"action_connect\\\"))]}</div></div>\\n    </div>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"login-panel\\\">\\n    <div class=\\\"login-panel-head noselect\\\">\\n        <img src=\\\"{{CLIENT_LOGO}}\\\" class=\\\"client-logo\\\">\\n        <span class=\\\"client-name\\\">{{SHORT_CLIENT_NAME}}</span>\\n    </div>\\n    <div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__header\\\"))]}</div>\\n        <div class=\\\"input-field email-name\\\">\\n            <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n            <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field\\\">\\n            <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n            <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n            <span class=\\\"errors fixed one-line\\\"></span>\\n        </div>\\n        <div class=\\\"input-field buttons-wrap\\\">\\n            <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/forgot-password/\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-forgot-password\\\">{[print(xabber.getString(\\\"forgot_pass\\\"))]}</a>\\n            <button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button>\\n        </div>\\n        <div class=\\\"social-auth-wrap\\\"><div class=\\\"social-header\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"social-header-tip\\\">{[print(xabber.getString(\\\"xabber_login__new_account\\\"))]}</div>\\n        </div></div>\\n        <div class=\\\"registration-footer\\\">\\n            <div class=\\\"registration-tip-wrap\\\">\\n                <span class=\\\"registration-tip\\\">{[print(xabber.getString(\\\"xabber_account__login__text_no_xmpp_acc\\\"))]}</span>\\n                <a href=\\\"{{XABBER_ACCOUNT_URL}}/auth/signup/?source=Xabber Web\\\" target=\\\"_blank\\\" class=\\\"btn-flat btn-main btn-registration\\\">{[print(xabber.getString(\\\"dialog_add_xabber_account__button_registration\\\"))]}</a>\\n            </div>\\n        </div>\\n        <div class=\\\"clearfix\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"login-panel-form xmpp-login-form noselect\\\">\\n    <div class=\\\"login-form-header\\\">{[print(xabber.getString(\\\"title_login_email\\\"))]}</div>\\n    <div class=\\\"input-field email-name\\\">\\n        <input id=\\\"username\\\" type=\\\"text\\\" name=\\\"username\\\">\\n        <label for=\\\"username\\\">{[print(xabber.getString(\\\"email_hint\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\">\\n        <label for=\\\"password\\\">{[print(xabber.getString(\\\"hint_pass\\\"))]}</label>\\n        <span class=\\\"errors fixed one-line\\\"></span>\\n    </div>\\n    <div class=\\\"login-panel-footer buttons-wrap\\\"><button class=\\\"btn btn-flat btn-main-filled btn-log-in\\\">{[print(xabber.getString(\\\"xabber_account__social_links__button_log_in\\\"))]}</button><button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button></div>\\n</div>\";","export default \"<div class=\\\"left-column noselect\\\">\\n    <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n        <div class=\\\"picture-wrap\\\">\\n            <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n        </div>\\n        <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n        <div class=\\\"version\\\"></div>\\n    </div>\\n</div>\\n</div>\\n\\n<div class=\\\"right-column noselect\\\">\\n    <div class=\\\"settings-panel-head\\\">\\n        <span>{[print(xabber.getString(\\\"category_about\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"panel-content-wrap\\\">\\n        <div class=\\\"panel-content\\\">\\n            <div class=\\\"settings-block-wrap about\\\">\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_1\\\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__preamble_2\\\", [`<a href=\\\"${CLIENT_URL}\\\" target=\\\"_blank\\\">${CLIENT_URL}</a>`]))]}</div>\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_1__text\\\"))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_2__text\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_name\\\")}</a>`, constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_2\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_3__text_3\\\"))]}</div>\\n                <div class=\\\"block-content flex-content\\\">\\n                    <img class=\\\"logo\\\" src=\\\"images/redsolution-logo.png\\\"/>\\n                    <a href=\\\"https://twitter.com/Xabber_XMPP\\\" target=\\\"_blank\\\"><div class=\\\"btn-social twitter-color\\\">\\n                        <i class=\\\"mdi mdi-28px mdi-twitter\\\"></i>\\n                    </div></a>\\n                    <a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\"><img class=\\\"btn-social github-logo\\\" src=\\\"images/ic_github.png\\\"/></a>\\n                </div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_1\\\", [constants.SHORT_CLIENT_NAME]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_4__text_2\\\", [`<a href=\\\"${PROJECT_CROWDIN_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_4__text_2__link__text\\\", [constants.SHORT_CLIENT_NAME])}</a>`]))]}</div>\\n\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_1\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_1__link__text\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_2\\\"))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_3\\\", [constants.SHORT_CLIENT_NAME, xabber.getString(\\\"client_developer_company_name\\\"), `<a href=\\\"${DEVELOPER_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"client_developer_company_full_name\\\")}</a>`]))]}</div>\\n                <div class=\\\"block-content\\\">{[print(xabber.getString(\\\"web_client__screen_about__block_5__text_4\\\", [constants.CLIENT_NAME, `<a href=\\\"${CLIENT_LICENSE_GITHUB_URL}\\\" target=\\\"_blank\\\">${xabber.getString(\\\"web_client__screen_about__block_5__text_4__link__text\\\")}</a>`]))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"library\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_library\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"library\\\" class=\\\"screen-wrap library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"hidden screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__text\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_upload__button_upload\\\"))]}</button>\\n                <input type=\\\"file\\\">\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n<div class=\\\"material-color-picker-wrap\\\">\\n    <div class=\\\"material-color-picker\\\">\\n        {[materialColors.forEach(function (color) {]}\\n        <div data-color-name=\\\"{{color.color}}\\\" class=\\\"color-palette-wrapper\\\">\\n            {[var default_color = color.variations.find(v => v.weight == 500);]}\\n            <div data-weight=\\\"500\\\" data-hex=\\\"{{default_color.hex}}\\\" style=\\\"background-color: {{default_color.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[color.variations.forEach(function (variation) {]}\\n            <div data-weight=\\\"{{variation.weight}}\\\" data-hex=\\\"{{variation.hex}}\\\" style=\\\"background-color: {{variation.hex}}\\\" class=\\\"color-palette-item\\\">\\n            </div>\\n            {[})]}\\n        </div>\\n        {[})]}\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"hidden selected-color-wrap\\\">\\n        <div class=\\\"selected-color-item\\\"></div>\\n        <div class=\\\"selected-color-info\\\">\\n            <div class=\\\"selected-color-name\\\"></div>\\n            <div class=\\\"selected-color-hex\\\"></div>\\n            <input class=\\\"selected-color-hex-input hidden\\\"/>\\n        </div>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-set\\\">{[print(xabber.getString(\\\"set\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<ul class=\\\"color-values noselect\\\">\\n    <li class=\\\"color-value\\\" data-value=\\\"red\\\">\\n        <div class=\\\"color-name text-color-red-700\\\">{[print(xabber.getString(\\\"account_color_name_red\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-red-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"pink\\\">\\n        <div class=\\\"color-name text-color-pink-700\\\">{[print(xabber.getString(\\\"account_color_name_pink\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-pink-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"purple\\\">\\n        <div class=\\\"color-name text-color-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_purple\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-purple\\\">\\n        <div class=\\\"color-name text-color-deep-purple-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_purple\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-purple-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"indigo\\\">\\n        <div class=\\\"color-name text-color-indigo-700\\\">{[print(xabber.getString(\\\"account_color_name_indigo\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-indigo-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue\\\">\\n        <div class=\\\"color-name text-color-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_blue\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-blue\\\">\\n        <div class=\\\"color-name text-color-light-blue-700\\\">{[print(xabber.getString(\\\"account_color_name_light_blue\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-blue-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"cyan\\\">\\n        <div class=\\\"color-name text-color-cyan-700\\\">{[print(xabber.getString(\\\"account_color_name_cyan\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-cyan-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"teal\\\">\\n        <div class=\\\"color-name text-color-teal-700\\\">{[print(xabber.getString(\\\"account_color_name_teal\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-teal-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"green\\\">\\n        <div class=\\\"color-name text-color-green-700\\\">{[print(xabber.getString(\\\"account_color_name_green\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"light-green\\\">\\n        <div class=\\\"color-name text-color-light-green-700\\\">{[print(xabber.getString(\\\"account_color_name_light_green\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-light-green-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"lime\\\">\\n        <div class=\\\"color-name text-color-lime-700\\\">{[print(xabber.getString(\\\"account_color_name_lime\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-lime-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"amber\\\">\\n        <div class=\\\"color-name text-color-amber-700\\\">{[print(xabber.getString(\\\"account_color_name_amber\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-amber-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"orange\\\">\\n        <div class=\\\"color-name text-color-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_orange\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"deep-orange\\\">\\n        <div class=\\\"color-name text-color-deep-orange-700\\\">{[print(xabber.getString(\\\"account_color_name_deep_orange\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-deep-orange-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"brown\\\">\\n        <div class=\\\"color-name text-color-brown-700\\\">{[print(xabber.getString(\\\"account_color_name_brown\\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-brown-700\\\"></div>\\n    </li>\\n    <li class=\\\"color-value\\\" data-value=\\\"blue-grey\\\">\\n        <div class=\\\"color-name text-color-blue-grey-700\\\">{[print(xabber.getString(\\\"account_color_name_blue_grey\\\").replace(/-/g, \\\" \\\"))]}</div>\\n        <div class=\\\"color-pattern ground-color-blue-grey-700\\\"></div>\\n    </li>\\n</ul>\";","export default \"<div class=\\\"modal dialog-modal {{modal_class}}\\\">\\n    <div class=\\\"modal-header\\\">\\n        <div class=\\\"panel-header black-text\\\">{{header}}</div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"dialog-text\\\">{{text}}</div>\\n        <div class=\\\"dialog-options-wrap\\\">\\n        {[ for (var idx in dialog_options) { var option = dialog_options[idx]; ]}\\n            <div class=\\\"dialog-option\\\" data-name=\\\"{{option.name}}\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"dialog_option_{{option.name}}\\\" {[ if (option.checked) { ]}checked=\\\"checked\\\"{[ } ]}/>\\n                <label for=\\\"dialog_option_{{option.name}}\\\">{{option.text}}</label>\\n            </div>\\n        {[ } ]}\\n        </div>\\n        <div class=\\\"container-for-img hidden\\\"><img class=\\\"img-from-clipboard\\\"></div>\\n    </div>\\n    <div class=\\\"modal-footer {{flag}}\\\">\\n        {[ for (var idx in optional_buttons) { var button = optional_buttons[idx]; ]}\\n        <button class=\\\"optional-button btn-flat btn-main\\\" data-option=\\\"{{button.value}}\\\">{{button.name}}</button>\\n        {[ } ]}\\n        {[ if (ok_button) { ]}\\n        <button class=\\\"ok-button btn-flat btn-main\\\" data-option=true>{{ok_button.text}}</button>\\n        {[ } ]}\\n        {[ if (cancel_button) { ]}\\n        <button class=\\\"cancel-button btn-flat btn-main btn-dark btn-cancel\\\" data-option=false>{{cancel_button.text}}</button>\\n        {[ } ]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n    <div title=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__textfield_device_id_tooltip', [id, (label ? label : 'none')]))]}\\\" class=\\\"device-wrap\\\">\\n        {[if (edit_setting) {]}\\n        <input class=\\\"hidden set-label one-line\\\" {[if (label) {]}value=\\\"{{label}}\\\"{[}]}>{[}]}\\n        {[if (label) {]}<div class=\\\"one-line label\\\">{{label}}</div>{[}]}\\n        <div class=\\\"device-id one-line\\\">{{id}}</div>\\n        {[if (!label) {]}<div class=\\\"device-id-label\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_device_id\\\"))]}</div>{[}]}\\n        {[if (edit_setting) {]}<div class=\\\"set-label-label hidden\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__label_set_label\\\"))]}</div>{[}]}\\n    </div>\\n    <div class=\\\"fingerprint-wrap\\\">\\n        <div title=\\\"Device fingerprint\\\" class=\\\"fingerprint\\\">{{fingerprint}}</div>\\n        {[if (error) {]}\\n        <div class=\\\"fingerprint-error\\\">{{error}}</div>\\n        {[}]}\\n        {[if (old_fingerprint){]}<div title=\\\"Old device fingerprint\\\" class=\\\"old-fingerprint\\\">{{old_fingerprint}}</div>{[}]}\\n    </div>\\n    <div data-trust=\\\"{{trust}}\\\" class=\\\"buttons\\\">\\n        {[if (trust !== null && !error) {]}\\n        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-status-{{id}}\\\">\\n            <div class=\\\"trust-item-wrap btn-main btn-flat\\\">\\n                <div data-value=\\\"{{trust}}\\\">{[print(xabber.getString(`omemo__dialog_fingerprints__button_${trust}`))]}</div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-status-{{id}}\\\" class=\\\"dropdown-content noselect fingerprint-dropdown\\\">\\n            <div data-value=\\\"ignore\\\" class=\\\"btn-main text-color-grey-500 btn-ignore btn-flat\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_ignore\\\"))]}</div>\\n            <div data-value=\\\"trust\\\" class=\\\"btn-main btn-flat btn-trust text-color-green-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_trust\\\"))]}</div>\\n            {[if (delete_button){]}\\n            <div class=\\\"btn-main btn-flat btn-delete text-color-red-500\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__button_delete\\\"))]}</div>\\n            {[}]}\\n        </div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header fingerprints-header\\\">\\n    <div class=\\\"header\\\"></div>\\n    <div class=\\\"additional-info\\\"></div>\\n</div>\\n<div class=\\\"fingerprints-content\\\">\\n</div>\\n<div class=\\\"fingerprints-bottom\\\">\\n    <div class=\\\"this-device-wrap\\\">\\n        <div class=\\\"this-device-header-wrap\\\">\\n            <div class=\\\"divider\\\"></div>\\n            <div class=\\\"this-device-header\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_this_device\\\"))]}</div>\\n        </div>\\n        <div class=\\\"this-device-content\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"fingerprints-description-wrap\\\">\\n        <div class=\\\"fingerprints-description\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_description\\\"))]}</div>\\n        <div class=\\\"link-about-encryption\\\"><a href=\\\"{[print(xabber.getString('omemo__dialog_fingerprints__link_learn_more'))]}\\\" target=\\\"_blank\\\">{[print(xabber.getString(\\\"omemo__dialog_fingerprints__text_learn_more\\\"))]}</a></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}} field-text one-line\\\"></div>\\n    <div class=\\\"btn-rename\\\">\\n        <span>{[print(xabber.getString(\\\"input_widget__button_rename\\\"))]}</span>\\n    </div>\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input field-input hidden\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"collapsed-movable\\\"></div>\\n<i class=\\\"mdi mdi-phone btn-collapse\\\"></i>\\n<div class=\\\"call-header\\\">\\n    {[print(xabber.getString(\\\"dialog_jingle_message__header\\\", [SHORT_CLIENT_NAME]))]}\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"blur-background\\\"></div>\\n<div class=\\\"contact-info\\\">\\n    <div class=\\\"name one-line\\\"/>\\n    <div class=\\\"calling-status\\\"/>\\n</div>\\n<div class=\\\"video-wrap\\\">\\n    <video autoplay loop class=\\\"blank-video hidden\\\">\\n        <source src=\\\"{{BLANK_VIDEO.MP4}}\\\">\\n        <source src=\\\"{{BLANK_VIDEO.OGG}}\\\" type=\\\"video/ogg\\\">\\n        <source src=\\\"{{BLANK_VIDEO.WEBM}}\\\" type=\\\"video/webm\\\">\\n    </video>\\n    <audio autoplay class=\\\"webrtc-remote-audio hidden\\\"/>\\n    <video autoplay muted class=\\\"webrtc-local-video collapsed hidden\\\"/>\\n    <div class=\\\"default-screen\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <div class=\\\"name one-line\\\"/>\\n    </div>\\n</div>\\n<div class=\\\"buttons-panel\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"btn-wrap\\\" title=\\\"Collapse window\\\"><svg class=\\\"btn-collapse mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\\\"/>\\n        </svg></div>\\n        <div class=\\\"btn-wrap\\\" title=\\\"Fullscreen mode\\\"><svg class=\\\"btn-full-screen mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M11,21H3V13H5V17.59L17.59,5H13V3H21V11H19V6.41L6.41,19H11V21Z\\\" />\\n        </svg></div>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute_microphone__tooltip\\\"))]}' class=\\\"btn-microphone mdi mdi-24px mdi-microphone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_switch_video__tooltip\\\"))]}' class=\\\"btn-video mdi mdi-24px mdi-video\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_mute__tooltip\\\"))]}' class=\\\"btn-volume mdi mdi-24px mdi-volume-high\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_share_screen__tooltip\\\"))]}' class=\\\"btn-share-screen mdi mdi-24px mdi-monitor\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_accept_call__tooltip\\\"))]}' class=\\\"btn-accept mdi mdi-24px mdi-phone\\\"/>\\n        <i title='{[print(xabber.getString(\\\"dialog_jingle_message__button_decline_call__tooltip\\\"))]}' class=\\\"btn-cancel mdi mdi-24px mdi-phone-hangup\\\"/>\\n    </div>\\n</div>\";","export default \"<div class=\\\"msg-text ground-color-300\\\">\\n    <span title=\\\"{[print(xabber.getString('omemo__alert_enable__tooltip'))]}\\\" class=\\\"btn-enable\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</span> {[print(xabber.getString(\\\"omemo__alert_enable__text\\\", [jid]))]}</div>\\n<i class=\\\"mdi mdi-22px mdi-close btn-escape\\\"></i>\\n<button class=\\\"btn-enable btn-flat hover-ground-color-500 btn-dark btn-main\\\">{[print(xabber.getString(\\\"omemo__alert_enable__link_text\\\"))]}</button>\";","export default \"<div class=\\\"plyr-player-popup-container\\\">\\n    <div class=\\\"plyr-player-popup-draggable\\\">\\n        <video class=\\\"plyr-player-popup\\\"></video>\\n        <div class=\\\"plyr-player-min-controls-tab\\\">\\n            <div class=\\\"plyr-player-min-controls-buttons\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-minimize-full mdi-svg-template\\\" data-svgname=\\\"player-full\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-play mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-play mdi-plyr-pause mdi-svg-template\\\" data-svgname=\\\"pause\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-mute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-off\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-plyr-button-minimized mdi-toggle-mute mdi-unmute-plyr mdi-svg-template\\\" data-svgname=\\\"volume-high\\\"></svg>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"plyr-player-control-tab\\\">\\n    <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n    <svg class=\\\"mdi mdi-24px mdi-plyr-toolbar-item mdi-plyr-hide mdi-svg-template\\\" data-svgname=\\\"player-mini\\\"></svg>\\n</div>\";","export default \"    <div class=\\\"left-column noselect\\\">\\n        <div class=\\\"main-info-wrap xabber-info-wrap\\\">\\n            <div class=\\\"picture-wrap\\\">\\n                <img class=\\\"logo\\\" src=\\\"{{CLIENT_LOGO}}\\\"/>\\n            </div>\\n            <div class=\\\"name\\\">{{CLIENT_NAME}}</div>\\n            <div class=\\\"version\\\"></div>\\n        </div>\\n        <div class=\\\"settings-tabs-wrap\\\">\\n            {[if (ENABLE_XABBER_ACCOUNT) {]}\\n            <div class=\\\"settings-tab xabber-account-tab offline\\\" data-block-name=\\\"xabber-account\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-offline-icon\\\" data-svgname=\\\"xabber-offline\\\"></svg>\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template xabber-online-icon\\\" data-svgname=\\\"xabber-online\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</div>\\n            </div>\\n            {[}]}\\n            <div class=\\\"settings-tab active\\\" data-block-name=\\\"xmpp-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-lightbulb\\\"/>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"background\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"palette\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"category_interface\\\"))]}</div>\\n            </div>\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"notifications\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}</div>\\n            </div>\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"storage\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-database\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__data_and_storage\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"privacy\\\">\\n                <i class=\\\"mdi mdi-24px mdi-incognito\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}</div>\\n            </div>\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"connection\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-wan\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__connection_settings\\\"))]}</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"developer\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-bug\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__developer\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab\\\" data-block-name=\\\"interface_language\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"translate\\\"></svg>\\n                <div class=\\\"settings-block-name one-line\\\">{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}</div>\\n            </div>\\n            {[if (PERSONAL_AREA_URL && Object.keys(PERSONAL_AREA_URL).length) {]}\\n            <a href=\\\"{{PERSONAL_AREA_URL.url}}\\\" target=\\\"_blank\\\"><div class=\\\"link-button settings-tab\\\" data-block-name=\\\"{{PERSONAL_AREA_URL.label}}\\\">\\n                <i class=\\\"mdi mdi-24px mdi-{{PERSONAL_AREA_URL.icon_name}}\\\"></i>\\n                <div class=\\\"settings-block-name one-line\\\">{{PERSONAL_AREA_URL.label}}</div>\\n            </div>\\n            </a>\\n            {[}]}\\n        </div>\\n        <div class=\\\"settings-tabs-bottom-wrap settings-tabs-wrap\\\">\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"security\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-security\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__security\\\"))]}</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"settings-tab\\\" data-block-name=\\\"about\\\">-->\\n                <!--<i class=\\\"mdi mdi-24px mdi-information\\\"></i>-->\\n                <!--<div class=\\\"settings-block-name one-line line-through\\\">{[print(xabber.getString(\\\"settings__menu_item__about\\\"))]}</div>-->\\n            <!--</div>-->\\n            <div class=\\\"settings-tab delete-all-accounts\\\">\\n                <i class=\\\"mdi mdi-24px mdi-logout-variant\\\"></i>\\n                <div class=\\\"settings-block-name\\\">{[print(xabber.getString(\\\"button_quit\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"preference_editor\\\"))]}</span>\\n            <button class=\\\"btn-add-account btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</button>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content\\\">\\n                {[if (ENABLE_XABBER_ACCOUNT) {]}\\n                <div data-block-name=\\\"\\\" class=\\\"settings-block-wrap xabber-account\\\">\\n                    <div class=\\\"block-header\\\">\\n                        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__xabber_account\\\"))]}</span>\\n                    </div>\\n                </div>\\n                {[}]}\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__xmpp_account\\\"))]}' class=\\\"settings-block-wrap xmpp-accounts\\\">\\n                    <div class=\\\"setting xmpp-account-list\\\">\\n                        <div class=\\\"accounts-head-wrap\\\">\\n                            <div class=\\\"accounts-head xmppid-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_xmpp_id\\\"))]}</div>\\n                            <div class=\\\"accounts-head sync-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_sync\\\"))]}</div>\\n                            <div class=\\\"accounts-head enabled-head\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__table_header_enabled\\\"))]}</div>\\n                        </div>\\n                        <span class=\\\"no-accounts-tip\\\">{[print(xabber.getString(\\\"settings__section_xmpp_accounts__text_no_accounts\\\"))]}</span>\\n                        <div class=\\\"move-account-to-bottom droppable\\\"></div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"category_interface\\\"))]}' class=\\\"settings-block-wrap background hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__menu_item__appearance\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__palette\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"toolbar-main-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_main_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-main-color-setting field-wrap\\\">\\n                                <div class=\\\"current-main-color-wrap\\\">\\n                                    <div class=\\\"current-main-color ground-color-500\\\"></div>\\n                                    <div class=\\\"color-name\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"toolbar-color-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_toolbar_icons_color\\\"))]}</div>\\n                            <div class=\\\"setting toolbar-color-setting field-wrap\\\">\\n                                <div class=\\\"selected-color-wrap\\\">\\n                                    <div class=\\\"selected-color-item\\\"></div>\\n                                    <div class=\\\"selected-color-info\\\">\\n                                        <div class=\\\"selected-color-name\\\"></div>\\n                                        <div class=\\\"selected-color-hex\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"account_settings_background\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"background-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_background\\\"))]}</div>\\n                            <div class=\\\"setting background radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-default-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_default\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"repeating-pattern\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-repeating-pattern-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-repeating-pattern-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_pattern\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"background\\\" value=\\\"image\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-image-background\\\" />\\n                                            <label for=\\\"{{view.cid}}-image-background\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__label_image\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                                <div class=\\\"current-background-wrap\\\">\\n                                    <div class=\\\"dark-placeholder\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__button_update\\\"))]}</div>\\n                                    <div class=\\\"current-background\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"blur-setting-wrap\\\">\\n                                <div class=\\\"setting blur-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blur_switch\\\"/>\\n                                        <label for=\\\"blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"blur\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"vignetting-setting-wrap\\\">\\n                                <div class=\\\"setting vignetting-setting field-wrap\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"vignetting_switch\\\"/>\\n                                        <label for=\\\"vignetting_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_vignette\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"vignetting\\\" min=\\\"0\\\" max=\\\"200\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"side-panel-setting-wrap\\\">\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_appearance__header_side_panel\\\"))]}</div>\\n                            <div class=\\\"setting side-panel-setting radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"side-panel\\\" value=\\\"dark\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dark-side-panel\\\" />\\n                                            <label for=\\\"{{view.cid}}-dark-side-panel\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__label_dark\\\"))]}</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"side-panel\\\" value=\\\"light\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-light-side-panel\\\" />\\n                                            <label for=\\\"{{view.cid}}-light-side-panel\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__label_light\\\"))]}</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting side-panel-setting field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"side_panel_blur_switch\\\"/>\\n                                    <label for=\\\"side_panel_blur_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__background__checkbox_blur\\\"))]}</label>\\n                                </div>\\n                                <div class=\\\"transparency-setting\\\">\\n                                    <div class=\\\"input-field checkbox-field\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"transparency_switch\\\"/>\\n                                        <label for=\\\"transparency_switch\\\">{[print(xabber.getString(\\\"settings__section_appearance__side_panel__checkbox_transparency\\\"))]}</label>\\n                                    </div>\\n                                    <form action=\\\"#\\\">\\n                                        <div class=\\\"disabled hidden\\\"></div>\\n                                        <p class=\\\"range-field\\\">\\n                                            <input type=\\\"range\\\" id=\\\"transparency\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"chat_viewer\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_behavior\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting hotkeys radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"enter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-enter\\\" />\\n                                        <label for=\\\"{{view.cid}}-enter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_enter\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"hotkeys\\\" value=\\\"ctrlenter\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-ctrlenter\\\" />\\n                                        <label for=\\\"{{view.cid}}-ctrlenter\\\">{[print(xabber.getString(\\\"settings__section_keyboard__label_send_on_ctrlenter\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap contact-list\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"category_contact_list\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"circle-avatar noselect\\\"/>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"avatars\\\"))]}</div>\\n                        <div class=\\\"setting avatar-shape radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"circle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-circle\\\" />\\n                                        <label for=\\\"{{view.cid}}-circle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_circle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"squircle\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-squircle\\\" />\\n                                        <label for=\\\"{{view.cid}}-squircle\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_squircle\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"octagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-octagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-octagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_octagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"hexagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hexagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-hexagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_hexagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"pentagon\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-pentagon\\\" />\\n                                        <label for=\\\"{{view.cid}}-pentagon\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_pentagon\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"rounded\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-rounded\\\" />\\n                                        <label for=\\\"{{view.cid}}-rounded\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_rounded\\\"))]}</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"avatar_shape\\\" value=\\\"star\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-star\\\" />\\n                                        <label for=\\\"{{view.cid}}-star\\\">{[print(xabber.getString(\\\"settings__section_appearance__avatars_star\\\"))]}</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__notifications\\\"))]}'  class=\\\"settings-block-wrap notifications hidden\\\">\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__web_notifications\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"notifications\\\"/>\\n                                <label for=\\\"notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_desktop_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__volume\\\"))]}</div>\\n                        <div class=\\\"setting volume-setting\\\">\\n                            <i class=\\\"mdi mdi-24px mdi-volume-low\\\"></i>\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"disabled hidden\\\"></div>\\n                                <p class=\\\"range-field\\\">\\n                                    <input type=\\\"range\\\" id=\\\"notifications_volume\\\" min=\\\"0\\\" max=\\\"100\\\" />\\n                                </p>\\n                            </form>\\n                            <i class=\\\"mdi mdi-24px mdi-volume-high\\\"></i>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting private-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"private-notifications\\\"/>\\n                                <label for=\\\"private-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__private_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview private-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_private\\\"/>\\n                                    <label for=\\\"preview_private\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"private_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-private-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-private-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"block-subheader\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting group-notifications field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"group-notifications\\\"/>\\n                                <label for=\\\"group-notifications\\\">{[print(xabber.getString(\\\"settings__section_notifications__group_chats_notifications\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"settings-shifted-block\\\">\\n                            <div class=\\\"setting message-preview group-preview field-wrap\\\">\\n                                <div class=\\\"input-field checkbox-field\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"preview_group\\\"/>\\n                                    <label for=\\\"preview_group\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_message_preview\\\"))]}</label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__menu_item__sounds\\\"))]}</div>\\n                            <div class=\\\"setting sound radio-button field-wrap\\\">\\n                                <div class=\\\"field radio-field clickable-field\\\">\\n                                    <form action=\\\"#\\\">\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-no\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-no\\\">No sound</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-up\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-up\\\">Beep Up</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-tiny-noize\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-tiny-noize\\\">Tiny Noize</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-retro-game\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-retro-game\\\">Retro Game</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pixel-beep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pixel-beep\\\">Pixel Beep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-beep-positive\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-beep-positive\\\">Beep Positive</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-good-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-good-chime\\\">Good Chime</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-cellular-click\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-cellular-click\\\">Cellular Click</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-bleep\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-bleep\\\">Bleep</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-mono-u\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-mono-u\\\">Mono U</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-plop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-plop\\\">Plop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-ether\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-ether\\\">Ether</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-pop\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-pop\\\">Pop</label>\\n                                        </p>\\n                                        <p>\\n                                            <input class=\\\"with-gap\\\" name=\\\"group_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-group-sound-computer-chime\\\" />\\n                                            <label for=\\\"{{view.cid}}-group-sound-computer-chime\\\">Computer Chime</label>\\n                                        </p>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-call\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-call\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"call_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-call-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-call-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__dialtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"call\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-connecting\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-connecting\\\">Call</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"dialtone_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-dialtone-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"settings-subblock-wrap\\\">\\n                        <div class=\\\"block-header\\\">\\n                            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__attention_calls\\\"))]}</span>\\n                        </div>\\n                        <div class=\\\"setting call-attention field-wrap\\\">\\n                            <div class=\\\"input-field checkbox-field\\\">\\n                                <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"call_attention\\\"/>\\n                                <label for=\\\"call_attention\\\">{[print(xabber.getString(\\\"settings__section_notifications__toggle_call_attention\\\"))]}</label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_notifications__ringtone\\\"))]}</div>\\n                        <div class=\\\"setting sound radio-button field-wrap\\\">\\n                            <div class=\\\"field radio-field clickable-field\\\">\\n                                <form action=\\\"#\\\">\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"attention\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-attention\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-attention\\\">Attention</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_up\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-up\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-up\\\">Beep Up</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"tiny_noize\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-tiny-noize\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-tiny-noize\\\">Tiny Noize</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"retro_game\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-retro-game\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-retro-game\\\">Retro Game</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pixel_beep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pixel-beep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pixel-beep\\\">Pixel Beep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"beep_positive\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-beep-positive\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-beep-positive\\\">Beep Positive</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"good_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-good-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-good-chime\\\">Good Chime</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"cellular_click\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-cellular-click\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-cellular-click\\\">Cellular Click</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"bleep\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-bleep\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-bleep\\\">Bleep</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"mono_u\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-mono-u\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-mono-u\\\">Mono U</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"plop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-plop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-plop\\\">Plop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"ether\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-ether\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-ether\\\">Ether</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"pop\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-pop\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-pop\\\">Pop</label>\\n                                    </p>\\n                                    <p>\\n                                        <input class=\\\"with-gap\\\" name=\\\"attention_sound\\\" value=\\\"computer_chime\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-attention-sound-computer-chime\\\" />\\n                                        <label for=\\\"{{view.cid}}-attention-sound-computer-chime\\\">Computer Chime</label>\\n                                    </p>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__privacy\\\"))]}'  class=\\\"settings-block-wrap privacy hidden\\\">\\n                    <div class=\\\"setting load-media field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"load-media\\\"/>\\n                            <label for=\\\"load-media\\\">{[print(xabber.getString(\\\"settings__section_privacy__load_media\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting typing-notifications field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"typing-notifications\\\"/>\\n                            <label for=\\\"typing-notifications\\\">{[print(xabber.getString(\\\"settings__section_privacy__typing_notifications\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"setting mapping-service field-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"mapping-service\\\"/>\\n                            <label for=\\\"mapping-service\\\">{[print(xabber.getString(\\\"settings__section_privacy__mapping_service\\\"))]}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div data-header='{[print(xabber.getString(\\\"settings__menu_item__interface_language\\\"))]}'  class=\\\"settings-block-wrap interface_language hidden\\\">\\n                    <div class=\\\"setting interface-language-setting\\\">\\n                        <div class=\\\"languages-list field radio-field clickable-field\\\">\\n                            <form action=\\\"#\\\">\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-default\\\" />\\n                                    <label for=\\\"{{view.cid}}-default\\\">{[print(xabber.getString(\\\"settings__languages_list___item_default\\\", [languages[xabber.get(\\\"default_language\\\") || 'en']]))]}</label>\\n                                </div>\\n                                {[if (window.navigator.language.indexOf(xabber.get(\\\"default_language\\\")) < 0) {]}\\n                                {[}]}\\n                                {[for (let lang in constants.languages) { if (!lang || lang == xabber.get(\\\"default_language\\\")) continue;]}\\n                                <div class=\\\"language-item\\\">\\n                                    <input class=\\\"with-gap\\\" name=\\\"language\\\" value=\\\"{{lang}}\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-{{lang}}\\\" />\\n                                    <label for=\\\"{{view.cid}}-{{lang}}\\\">{[print(constants.languages[lang]);]}</label>\\n                                    {[let locale = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));]}\\n                                    {[if (locale) { let progress = client_translation_progress[locale];]}<div class=\\\"translation-progress\\\">{[print((progress == 100) ? xabber.getString(\\\"settings__section_interface_language__translation_progress_fully\\\") : xabber.getString(\\\"settings__section_interface_language__translation_progress\\\", [`${progress}%`]))]}</div>{[}]}\\n                                </div>\\n                                {[}]}\\n                            </form>\\n                        </div>\\n                        <div class=\\\"description\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"toolbar-item all-chats active\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__all_chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <img class=\\\"logo\\\" src=\\\"{{TOOLBAR_LOGO}}\\\">\\n    <span class=\\\"all-msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-message-text\\\"></i>\\n    <span class=\\\"msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item group-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__groups\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"message-group\\\"></svg>\\n    <span class=\\\"group-msg-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item mentions\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__mentions\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"ic-at\\\"></svg>\\n    <span class=\\\"mentions-indicator\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item archive-chats\\\" title='{[print(xabber.getString(\\\"toolbar__menu_item__archive_chats\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-archive\\\"></i>\\n    <span class=\\\"archive-msg-indicator hidden\\\"></span>\\n</div>\\n\\n<div class=\\\"toolbar-item contacts\\\" title='{[print(xabber.getString(\\\"category_title_contacts\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <i class=\\\"toolbar-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n</div>\\n\\n<div class=\\\"toolbar-item search hidden\\\" title='{[print(xabber.getString(\\\"search\\\"))]}'>\\n    <div class=\\\"border\\\"></div>\\n    <svg class=\\\"toolbar-icon mdi mdi-24px mdi-svg-template\\\" viewBox=\\\"0 0 24 24\\\" data-svgname=\\\"ic-searching\\\"></svg>\\n</div>\\n\\n<div class=\\\"add-something-wrap\\\">\\n    <div class=\\\"toolbar-item dropdown-button add-something\\\" data-activates=\\\"{{view.cid}}-add\\\" title='{[print(xabber.getString(\\\"toolbar__button_add_tooltip\\\"))]}'>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-plus\\\"></i>\\n    </div>\\n\\n    <div id=\\\"{{view.cid}}-add\\\" class=\\\"add-variants dropdown-content noselect\\\">\\n        <div class=\\\"add-variant contact\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-plus\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"add_contact\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant public-groupchat\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-multiple-plus\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_group\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant incognito-groupchat\\\">\\n            <svg class=\\\"mdi mdi-20px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M13 11A3 3 0 1 0 10 8A3 3 0 0 0 13 11M13 7A1 1 0 1 1 12 8A1 1 0 0 1 13 7M17.11 10.86A5 5 0 0 0 17.11 5.14A2.91 2.91 0 0 1 18 5A3 3 0 0 1 18 11A2.91 2.91 0 0 1 17.11 10.86M13 13C7 13 7 17 7 17V19H19V17S19 13 13 13M9 17C9 16.71 9.32 15 13 15C16.5 15 16.94 16.56 17 17M24 17V19H21V17A5.6 5.6 0 0 0 19.2 13.06C24 13.55 24 17 24 17M8 12H5V15H3V12H0V10H3V7H5V10H8Z\\\" />\\n            </svg>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"create_incognito_group\\\"))]}</span>\\n        </div>\\n        <div class=\\\"add-variant account\\\">\\n            <i class=\\\"mdi mdi-20px mdi-account-circle\\\"></i>\\n            <span class=\\\"text one-line\\\">{[print(xabber.getString(\\\"dialog_add__label_add_account\\\"))]}</span>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"divider noselect\\\"></div>\\n\\n<div class=\\\"accounts-wrap\\\">\\n    <div class=\\\"accounts\\\">\\n    </div>\\n</div>\\n\\n<div class=\\\"toolbar-bottom\\\">\\n    {[if (SCREEN_ABOUT) {]}\\n    <div class=\\\"toolbar-item about\\\" title='{[print(xabber.getString(\\\"about\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-information\\\"></i>\\n    </div>\\n    {[}]}\\n    <div class=\\\"toolbar-item settings\\\" title='{[print(xabber.getString(\\\"settings\\\"))]}'>\\n        <div class=\\\"border\\\"></div>\\n        <i class=\\\"toolbar-icon mdi mdi-24px mdi-settings\\\"></i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"    <div class=\\\"message-input-panel noselect\\\">\\n        <div class=\\\"my-avatar circle-avatar circle-image-fix\\\"></div>\\n        <div class=\\\"message-form\\\">\\n            <div class=\\\"fwd-messages-preview noselect hidden\\\">\\n                <div class=\\\"msg-border ground-color-700\\\">\\n                </div>\\n                <div class=\\\"msg-content\\\">\\n                    <p class=\\\"msg-author text-color-700 one-line\\\"></p>\\n                    <p class=\\\"msg-text one-line\\\"></p>\\n                </div>\\n                <div class=\\\"close-forward\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"message-reference-preview hidden\\\">\\n                <div class=\\\"message-reference-preview-container\\\">\\n                </div>\\n                <div class=\\\"close-attachments\\\">\\n                    <i class=\\\"mdi mdi-20px mdi-close hover-text-color-500\\\"></i>\\n                </div>\\n            </div>\\n            <div class=\\\"input-field input-message\\\">\\n                <div class=\\\"mentions-list\\\"></div>\\n                <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                </div>\\n                <div class=\\\"scrollbar-cover\\\"></div>\\n                <div class=\\\"insert-emoticon\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n                </div>\\n                <div class=\\\"preview-preloader-container hidden\\\" title='{[print(xabber.getString(\\\"chat_bottom__preview_preloader_cancel\\\"))]}'>\\n                    <svg class=\\\"preview-cancel-preloader mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"link\\\"></svg>\\n                </div>\\n                <div class=\\\"emoticons-panel-wrap\\\">\\n                    <div class=\\\"emoticons-panel\\\"></div>\\n                    <div class=\\\"emoji-menu\\\"></div>\\n                    <div class=\\\"uploading-emoticons\\\">\\n                    <div class=\\\"preloader-wrapper preloader-20px active visible\\\">\\n                        <div class=\\\"spinner-layer\\\">\\n                            <div class=\\\"circle-clipper left\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"gap-patch\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                            <div class=\\\"circle-clipper right\\\">\\n                                <div class=\\\"circle\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"input-voice-message\\\">\\n                <div class=\\\"voice-visualizer\\\"></div>\\n                <div class=\\\"timer\\\">0:00</div>\\n                <div class=\\\"voice-msg-status\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__cancel_write_voice\\\"))]}</div>\\n            </div>\\n            <div class=\\\"input-toolbar\\\">\\n                <div class=\\\"attach attach-file\\\">\\n                    <input type=\\\"file\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_file\\\"))]}' multiple>\\n                    <i class=\\\"mdi mdi-24px mdi-paperclip\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-media\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_media\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-file-image\\\"></i>\\n                </div>\\n                <div class=\\\"attach attach-location\\\" title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <input type=\\\"text\\\" hidden title='{[print(xabber.getString(\\\"chat_bottom__tooltip_send_location\\\"))]}'>\\n                    <i class=\\\"mdi mdi-24px mdi-map-marker\\\"></i>\\n                </div>\\n                <div title=\\\"Format text\\\" class=\\\"format-text\\\">\\n                    <i class=\\\"mdi mdi-24px mdi-format-text\\\"></i>\\n                </div>\\n                <div class=\\\"last-emoticons\\\">\\n                </div>\\n                <div class=\\\"account-info-wrap\\\">\\n                    <div class=\\\"account-jid text-color-700\\\"></div>\\n                    <div class=\\\"account-nickname text-color-700\\\"></div>\\n                    <div class=\\\"account-badge\\\"></div>\\n                    <div class=\\\"account-role ground-color-700\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"send-area\\\">\\n            <i class=\\\"send-message mdi mdi-32px mdi-send text-color-700 hover-text-color-500 hidden\\\"></i>\\n            <i class=\\\"mdi mdi-32px mdi-microphone attach-voice-message text-color-700 hover-text-color-500\\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\\"blocked-msg hidden\\\">{[print(xabber.getString(\\\"chat_bottom__placeholder__blocked\\\"))]}</div>\\n    <div class=\\\"message-actions-panel noselect hidden\\\">\\n        <div class=\\\"button-wrap reply-message-wrap\\\">\\n            <i class=\\\"action-button reply-message mdi ground-color-700 mdi-reply mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_reply\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_reply\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap forward-message-wrap\\\">\\n            <i class=\\\"action-button forward-message mdi ground-color-700 mdi-forward mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"chat_froward\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"chat_froward\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap copy-message-wrap\\\">\\n            <i class=\\\"action-button copy-message mdi ground-color-700 mdi-content-copy mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_copy\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_copy\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap delete-message-wrap\\\">\\n            <i class=\\\"action-button delete-message mdi ground-color-700 mdi-delete mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"delete\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"delete\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap edit-message-wrap\\\">\\n            <i class=\\\"action-button edit-message mdi ground-color-700 mdi-pencil mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_edit\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_edit\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap pin-message-wrap\\\">\\n            <svg class=\\\"action-button pin-message ground-color-700\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path fill=\\\"#FFF\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n            </svg>\\n            <div class=\\\"button-name\\\"><span class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"message_pin\\\").slice(0,1))]}</span>{[print(xabber.getString(\\\"message_pin\\\").slice(1))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap cancel-message-wrap\\\">\\n            <i class=\\\"action-button close-message-panel mdi mdi-close mdi-24px\\\"></i>\\n            <div class=\\\"button-name\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n        </div>\\n    </div>\\n\";","export default \"  <div class=\\\"search-form-header\\\">\\n    <div class=\\\"messages-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n    </div>\\n    <div class=\\\"text-color-700 btn-cancel-searching\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div>\\n</div>\\n<div class=\\\"pinned-message\\\"></div>\\n<div class=\\\"elements-in-top\\\">\\n    <div class=\\\"subscription-buttons-wrap hidden\\\"/>\\n    <div class=\\\"chat-day-indicator fixed-day-indicator-wrap hidden\\\"><div class=\\\"fixed-day-indicator\\\"></div></div>\\n</div>\\n<div class=\\\"load-history-feedback hidden\\\"></div>\\n<div class=\\\"participant-messages-header hidden\\\"><div class=\\\"messages-by-header\\\">{[print(xabber.getString(\\\"chat__placeholder_participant_messages__messages_by\\\"))]} <div class=\\\"participant-nickname text-color-700\\\"></div></div><div class=\\\"btn-cancel-selection\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</div><div class=\\\"text-color-700 btn-retract-messages\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</div></div>\\n<div class=\\\"chat-content\\\">\\n</div>\\n<div class=\\\"chat-notification hidden one-line\\\"></div>\\n<i class=\\\"mdi mdi-36px back-to-bottom mdi-chevron-down\\\"></i>\\n\";","export default \"<div class=\\\"search-wrap\\\">\\n    <div class=\\\"search-content\\\">\\n        <div class=\\\"search-form-header block-header\\\">\\n            <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n            <div class=\\\"messages-search-form search-form \\\">\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"chat__search_messages_panel__placeholder\\\"))]}' autofocus>\\n            </div>\\n            <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n        </div>\\n        <div class=\\\"search-messages-content-wrap\\\">\\n            <div class=\\\"search-results\\\">\\n                {[print(xabber.getString(\\\"nothing_was_searched\\\"))]}\\n            </div>\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"messages-count\\\">\\n            </div>\\n            <div class=\\\"chat-content\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-head-details\\\"></div>\\n<div class=\\\"circle-avatar\\\"/>\\n<div class=\\\"contact-status hide-offline\\\"/>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <div class=\\\"contact-name-wrap\\\">\\n            <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n            <p class=\\\"contact-name one-line\\\"></p>\\n        </div>\\n        <p class=\\\"contact-status-message one-line\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-show-fingerprints\\\">\\n            <i class=\\\"mdi mdi-lock mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <!--<div class=\\\"chat-tool btn-set-status\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <g stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\">\\n                    <rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"/>\\n                    <path d=\\\"M20,4 C21.1045695,4 22,4.8954305 22,6 L22,16 C22,17.1045695 21.1045695,18 20,18 L16,18 L12,22 L8,18 L4,18 C2.8954305,18 2,17.1045695 2,16 L2,6 C2,4.8954305 2.8954305,4 4,4 L20,4 Z M16,12 L6,12 L6,14 L16,14 L16,12 Z M18,8 L6,8 L6,10 L18,10 L18,8 Z\\\" id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\"/>\\n                </g>\\n            </svg>\\n        </div>-->\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-chat-pin\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-archive-chat\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <li class=\\\"btn-notifications active-hover\\\" data-activates=\\\"{{view.cid}}-mute-more\\\">\\n                <span class=\\\"one-line\\\"></span>\\n            </li>\\n            <!--<li class=\\\"btn-contact-details\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>-->\\n            <!--</li>-->\\n            <li class=\\\"btn-call-attention\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"call_attention\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-export-history\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"export_chat\\\"))]}</span>\\n            </li>-->\\n            <li class=\\\"btn-invite-users\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-start-encryption\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_start_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-encrypted-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_encrypted_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-open-regular-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"omemo__chat_settings__button_open_regular_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"delete_chat\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-clear-history\\\">\\n                <span class=\\\"one-line text-color-500\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </li>\\n            <!--<li class=\\\"btn-delete-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-block-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_block\\\"))]}</span>-->\\n            <!--</li>-->\\n            <!--<li class=\\\"btn-unblock-contact\\\">-->\\n            <!--<span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_unblock_contact\\\"))]}</span>-->\\n            <!--</li>-->\\n        </ul>\\n        <ul id=\\\"{{view.cid}}-mute-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n            </li>\\n            <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <i class=\\\"mdi encrypted-icon mdi-14px mdi-lock\\\"></i>\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <i class=\\\"mdi muted-icon mdi-14px mdi-bell-off\\\"></i>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n<div class=\\\"chat-states\\\">\\n    <div class=\\\"chat-item-notifications-wrap\\\">\\n        <span class=\\\"msg-chat-error hidden\\\">!</span>\\n        <span class=\\\"msg-incoming-subscription hidden\\\">\\n            <svg class=\\\"mdi mdi-12px mdi-svg-template\\\" data-svgname=\\\"plus\\\"></svg>\\n        </span>\\n        <span class=\\\"msg-counter hidden\\\"></span>\\n        <i class=\\\"msg-delivering-state mdi mdi-16px hidden\\\"></i>\\n        <i class=\\\"pinned-icon\\\">\\n            <svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n                <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n                    <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n                </g>\\n            </svg>\\n        </i>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"chat_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"recent-chats-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"pinned-chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"chat-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"load-chats-feedback hidden\\\">{[print(xabber.getString(\\\"placeholder_loading\\\"))]}</div>\\n    </div>\\n    <div class=\\\"read-all-button hidden\\\">{[print(xabber.getString(\\\"mark_all_as_read_button\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"field clickable-field {{className}} switch normal\\\">\\n    <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{id}}\\\">\\n    <label for=\\\"{{id}}\\\"></label>\\n</div>\";","export default \"<div>\\n    <i class=\\\"mdi mdi-36px mdi-alert-circle\\\"></i>\\n</div>\\n<div class=\\\"warning-message\\\">{{message}}</div>\\n<button class=\\\"btn-manage-devices btn-flat btn-main btn-dark hover-ground-color-amber-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\";","export default \"<div class=\\\"warning-wrap\\\">\\n    <p class=\\\"warning-message\\\">{{message}}</p>\\n    <button class=\\\"btn-manage-devices btn-flat btn-main btn-dark ground-color-{{color}}-100 hover-ground-color-{{color}}-300\\\">{[print(xabber.getString(\\\"omemo__alert_new_device__button_manage_devices\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"dialog_forward_message__header\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"chat-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n\";","export default \"<div class=\\\"modal-header\\\">\\n    <span>{[print(xabber.getString(\\\"create_groupchat\\\"))]}</span>\\n    <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-creating-groupchat\\\">\\n        <div class=\\\"dropdown-button\\\">\\n            <div class=\\\"account-item-wrap\\\">\\n                <div class=\\\"circle-avatar noselect\\\">\\n                    <img>\\n                </div>\\n            </div>\\n        </div>\\n        <div id=\\\"select-account-for-creating-groupchat\\\" class=\\\"dropdown-content noselect\\\">\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"row name-field\\\">\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <label for=\\\"new_chat_name\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</label>\\n            <input id=\\\"new_chat_name\\\" type=\\\"text\\\" name=\\\"chat_name\\\" placeholder='{[print(xabber.getString(\\\"group_is_empty\\\"))]}' required>\\n        </div>\\n    </div>\\n    <div class=\\\"row jid-field\\\">\\n        <label for=\\\"new_chat_jid\\\">{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}</label>\\n        <div class=\\\"input-field input-group-chat-jid\\\">\\n            <input id=\\\"new_chat_jid\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat_xmpp_jid\\\"))]}' name=\\\"chat_jid\\\">\\n            <div class=\\\"property-field xmpp-server-dropdown-wrap\\\">\\n                <div class=\\\"select-xmpp-server\\\">\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"xmpp-server-item-wrap property-wrap\\\"><div class=\\\"jid-at\\\">@</div><div class=\\\"field-jid one-line property-value\\\"></div></div>\\n                    <div class=\\\"input-field input-group-chat-domain hidden\\\">\\n                        <input id=\\\"new_chat_domain\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"groupchat__hint_domain\\\"))]}' name=\\\"chat_domain\\\">\\n                    </div>\\n                    <div data-activates=\\\"select-xmpp-server\\\" class=\\\"caret\\\">\\n                        <i class=\\\"mdi mdi-20px mdi-menu-up\\\"></i>\\n                        <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                    </div>\\n                </div>\\n                <div id=\\\"select-xmpp-server\\\" class=\\\"dropdown-content noselect\\\">\\n                    <div class=\\\"property-variant set-custom-domain\\\">{[print(xabber.getString(\\\"groupchat_custom_server\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        <span class=\\\"errors\\\"></span>\\n    </div>\\n    <div class=\\\"row incognito-field hidden\\\">\\n        <i class=\\\"field-icon mdi mdi-24px mdi-incognito\\\"></i>\\n        <div class=\\\"property-field incognito-dropdown-wrap\\\">\\n           <div class=\\\"public-item-wrap property-wrap\\\"><div data-value=\\\"public\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_public\\\"))]}</div></div>\\n           <div class=\\\"incognito-item-wrap property-wrap\\\"><div data-value=\\\"incognito\\\" class=\\\"property-value\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div></div>\\n        </div>\\n    </div>\\n    <div class=\\\"row group-radio-fields\\\">\\n        <div class=\\\"property-radio-field membership-dropdown-wrap\\\">\\n            <div class=\\\"membership-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"membership_open\\\" data-value=\\\"open\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"membership_member_only\\\" data-value=\\\"member-only\\\" name=\\\"group_membership\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"membership-label\\\" for=\\\"membership_member_only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"property-radio-field global-dropdown-wrap\\\">\\n            <div class=\\\"global-item-wrap property-wrap\\\">\\n                <div class=\\\"property-radio-label\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</div>\\n            </div>\\n            <div class=\\\"property-radio-wrap\\\">\\n                <div class=\\\"property-radio\\\">\\n                    <input checked id=\\\"index_none\\\" data-value=\\\"none\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_local\\\" data-value=\\\"local\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n                </div>\\n                <div class=\\\"property-radio\\\">\\n                    <input id=\\\"index_global\\\" data-value=\\\"global\\\" name=\\\"group_index\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                    <label class=\\\"index-label\\\" for=\\\"index_global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row description-field\\\">\\n        <div class=\\\"input-field input-message\\\">\\n            <label class=\\\"description-label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</label>\\n            <div class=\\\"rich-textarea-wrap notranslate\\\">\\n                <div class=\\\"rich-textarea\\\" tabindex=\\\"2\\\" contenteditable=\\\"\\\"></div>\\n                <div class=\\\"placeholder\\\">{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"create\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-header noselect\\\">\\n    <div class=\\\"panel-header\\\">\\n        <span class=\\\"header\\\">{[print(xabber.getString(\\\"groupchat_invite_users\\\"))]}</span>\\n    </div>\\n</div>\\n<div class=\\\"modal-content noselect\\\">\\n    <div class=\\\"chats-search-form search-form\\\">\\n        <i class=\\\"search-icon mdi mdi-20px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"contacts-list-wrap\\\">\\n    </div>\\n    <div class=\\\"error hidden\\\">{[print(xabber.getString(\\\"placeholder_no_matches\\\"))]}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main btn-add\\\"><span class=\\\"counter hidden\\\"></span>{[print(xabber.getString(\\\"groupchat_invite\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-dark btn-main btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <span class=\\\"errors\\\"></span>\\n</div>\";","export default \"<div class=\\\"list-item mention-item\\\" data-jid=\\\"{{jid}}\\\" data-id=\\\"{{id}}\\\" data-nickname=\\\"{{nickname}}\\\">\\n    <div class=\\\"circle-avatar\\\"></div>\\n    <div class=\\\"participant-info\\\">\\n        <span class=\\\"one-line nickname\\\">{{nickname}}</span>\\n        <span class=\\\"one-line jid\\\">{{jid}}</span>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-content full-pinned-message\\\"></div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div id=\\\"map\\\" class=\\\"text-color-700\\\" style=\\\"width:800px; height:490px;\\\" data-type='map'></div>\\n        <div class=\\\"form-group\\\">\\n                <textarea id=\\\"output\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lat\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n                <textarea id=\\\"lon\\\" class=\\\"form-control\\\" disabled rows=\\\"20\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n<div class=\\\"recent-chat-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n</div>\\n\";","export default \"{[ if (blob) {]}\\n<div class=\\\"attached-image-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-size one-line\\\">{{filesize}}</div>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (blob) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{blob}}\\\" src=\\\"{{blob}}\\\">\\n    {[}]}\\n</div>\\n{[} else {]}\\n<div class=\\\"attached-file-preview message-reference-preview-attached message-reference-preview-item-file{[ if (file.is_errored) {]} attached-errored{[}]}\\\" title='{[ if (file.is_errored) {]}{[print(xabber.getString(\\\"chat_bottom__attached_file_error_hint\\\"))]}{[}]}' data-id=\\\"{{uid}}\\\">\\n    <div class=\\\"attached-file-text\\\">\\n        <div class=\\\"attached-file-name one-line\\\">{{file.name}}</div>\\n        <div class=\\\"attached-file-size one-line\\\">{{filetype}}, {{filesize}}</div>\\n    </div>\\n    <i class=\\\"mdi attached-file-icon {{typeicon}}\\\"></i>\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n</div>\\n{[}]}\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi mdi-play no-uploaded\\\"></i>\\n    <i class=\\\"mdi mdi-pause\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n        <a class=\\\"voice-message-play\\\">Play</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"><img></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<span class=\\\"accept-request\\\">Accept</span><span class=\\\"decline-request\\\">Decline</span><span class=\\\"block-request\\\">Block</span></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"one-file-wrap link-file\\\">\\n    <i class=\\\"mdi {{mdi_icon}}\\\"></i>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>{[ if (is_audio && duration) { ]}, {{duration}}{[ } ]},  <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"{{sources[0]}}\\\" class=\\\"file-link-download\\\">{[print(xabber.getString(\\\"action_download\\\"))]}</a>\\n    </div>\\n</div>\";","export default \"<div class=\\\"one-file-wrap link-file unuploaded-file\\\" data-upload-file-id=\\\"{{upload_id}}\\\">\\n    <div class=\\\"file-loading-container\\\"></div>\\n    <div class=\\\"file-container\\\">\\n        <div class=\\\"file-info one-line\\\">\\n            <span class=\\\"file-name\\\">{{name}}</span>, <span class=\\\"file-size\\\">{{size}}</span>\\n        </div>\\n        <div class=\\\"circle-percent-text\\\">0%</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"chat-message main {{classlist}} file-upload noselect\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content chat-main-upload-media\\\">\\n        </div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 repeat-upload\\\">{[print(xabber.getString(\\\"resend\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 edit-upload\\\">{[print(xabber.getString(\\\"edit\\\"))]}</div>\\n            <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-delete-message\\\">{[print(xabber.getString(\\\"delete\\\"))]}</div>\\n        </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"fwd-message\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-from-id=\\\"{{from_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"fwd-msg-author-wrap\\\">\\n            <div class=\\\"fwd-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if ((role)&&(role != 'Member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n            <div class=\\\"msg-time selectable-text one-line\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system auth-request\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}<div><span class=\\\"accept-request-group\\\">Accept</span><span class=\\\"decline-request-group\\\">Decline</span><span class=\\\"block-request-group\\\">Block</span></div></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\"><img title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\"><img title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\"><img title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\"><img title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"images-details\\\">\\n    <div class=\\\"images-details-header\\\">\\n        {[print(xabber.getString(\\\"privacy_risk_images_header\\\"))]}\\n    </div>\\n    {[img_information.images.forEach((image) => {]}\\n        <div class=\\\"image-details\\\">\\n            {{image.name}} <span>{{image.pretty_size}}, {{image.height}}x{{image.width}}</span>\\n        </div>\\n    {[})]}\\n</div>\\n<div class=\\\"image-servers-details\\\">\\n    {[if (img_information.servers.length === 1) {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_server_header\\\", [img_information.servers[0]]))]}\\n        </div>\\n    {[} else {]}\\n        <div class=\\\"images-details-header\\\">\\n            {[print(xabber.getString(\\\"privacy_risk_servers_header\\\"))]}\\n        </div>\\n        {[img_information.servers.forEach((server) => {]}\\n            <div class=\\\"server-details\\\">\\n                {{server}}\\n            </div>\\n        {[})]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"link-message-reference message-reference-preview-attached message-reference-preview-item {[ if (item.image && item.video_url) {]}link-message-reference-video{[}]}\\\" data-original-url=\\\"{{item.original_text}}\\\">\\n    <svg class=\\\"details-icon mdi mdi-18px mdi-close mdi-svg-template\\\" data-svgname=\\\"close\\\"></svg>\\n    {[ if (item.image && item.video_url) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-site-name one-line\\\">{{item.site}}</div>\\n    {[} else if (item.image) {]}\\n    <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{item.image}}\\\" src=\\\"{{item.image}}\\\">\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 25) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 25) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"attached-text-block\\\">\\n        <div class=\\\"link-site one-line\\\">{{domain}}</div>\\n        {[if (item.description) {]}\\n            <div class=\\\"link-title{[if (item.description.length <= 29) {]} link-title-short{[}]}\\\">{{item.description}}</div>\\n        {[} else {]}\\n            <div class=\\\"link-title{[if (item.title.length <= 29) {]} link-title-short{[}]}\\\">{{item.title}}</div>\\n        {[}]}\\n    </div>\\n    {[}]}\\n</div>\";","export default \"{[ if (is_video) {]}\\n        <div class=\\\"link-message-reference message-reference-preview-item message-reference-preview-item-big-image\\\">\\n            <div class=\\\"embed-video\\\">\\n                <div class=\\\"plyr-video-container\\\" data-provider=\\\"{{provider}}\\\" data-src=\\\"{{video_url}}\\\">\\n                    <div class=\\\"plyr-video-play\\\">\\n                        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n                    </div>\\n                    <div class=\\\"plyr-video-playing\\\">\\n                        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n                        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n                    </div>\\n                    {[ if (image) {]}\\n                    <img class=\\\"plyr-video-poster\\\" src=\\\"{{image}}\\\" onerror=\\\"this.style.display='none'\\\">\\n                    {[}]}\\n                </div>\\n            </div>\\n            <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n                <div class=\\\"attached-text-block\\\">\\n                    <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                    <div class=\\\"link-site-title\\\">{{title}}</div>\\n                    <div class=\\\"link-description\\\">{{description}}</div>\\n                </div>\\n            </a>\\n        </div>\\n{[} else {]}\\n    <a href=\\\"{{original_text}}\\\" target=”_blank” class=\\\"msg-hyperlink\\\">\\n        <div class=\\\"link-message-reference message-reference-preview-item{[if (image_width && image_width >= 590) {]} message-reference-preview-item-big-image{[}]}\\\">\\n            {[ if (image) {]}\\n            <img class=\\\"attached-image\\\" data-mfp-src=\\\"{{image}}\\\" src=\\\"{{image}}\\\">\\n            {[}]}\\n            <div class=\\\"attached-text-block\\\">\\n                <div class=\\\"link-title one-line\\\">{{domain}}</div>\\n                <div class=\\\"link-site-title\\\">{{title}}</div>\\n                <div class=\\\"link-description\\\">{{description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n{[}]}\";","export default \"<div class=\\\"circle-wrap\\\">\\n    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"preloader-circular\\\" viewBox=\\\"27 27 54 54\\\">\\n        <circle class=\\\"preloader-path-new\\\" cx=\\\"54\\\" cy=\\\"54\\\" r=\\\"24\\\" fill=\\\"none\\\" stroke-miterlimit=\\\"10\\\"></circle>\\n    </svg>\\n    <div class=\\\"inside-circle\\\">\\n        <i class=\\\"mdi mdi-center-loading-indicator mdi-close mdi-20px\\\"></i>\\n        <i class=\\\"mdi mdi-alert-circle mdi-32px hidden\\\"></i>\\n    </div>\\n    <div class=\\\"circle-percent-text\\\">0%</div>\\n</div>\";","export default \"<div id=\\\"{{id}}\\\" class=\\\"text-color-700\\\" style=\\\"width:350px; height:300px;pointer-events: none;\\\" data-type='map'><img id=\\\"img_{{ id }}\\\" ></div>\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"fwd-msgs-block\\\"></div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n        <div class=\\\"chat-msg-link-reference-content\\\"></div>\\n        <div class=\\\"chat-msg-media-content\\\"></div>\\n        <div class=\\\"chat-msg-location-content no-title\\\" title=\\\"{[print(xabber.getString('location_fragment__address_error__title'))]}\\\"></div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n        {[ if (is_sender) { ]}\\n            <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n            <div id=\\\"retry-send-msg-{{msgid}}\\\" class=\\\"dropdown-content retry-send-message noselect\\\">\\n                <div class=\\\"msg-retry-dropdown-btn active-ground-color-600 btn-retry-send-message\\\">{[print(xabber.getString(\\\"chat_screen__message__button_retry_send\\\"))]}</div>\\n            </div>\\n        {[ } ]}\\n        <div class=\\\"msg-copy-link\\\" title='{[print(xabber.getString(\\\"action_copy_link\\\"))]}'><i class=\\\"mdi mdi-link-variant\\\" data-image=\\\"{{is_image}}\\\"></i></div>\\n        <div class=\\\"msg-copy-location\\\"  title='{[print(xabber.getString(\\\"action_copy_location\\\"))]}'><div class=\\\"msg-copy-location-content\\\" data-location=\\\"false\\\"></div></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message saved-main main {{classlist}}\\\" data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"fwd-msgs-block\\\"></div>\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n        <i class=\\\"msg-delivering-state mdi mdi-14px\\\" data-state=\\\"{{state}}\\\" title=\\\"{{verbose_state}}\\\" data-activates=\\\"retry-send-msg-{{msgid}}\\\"></i>\\n        <div class=\\\"edited-info one-line hidden\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message main {{classlist}}\\\"  {[if (avatar_id) {]} data-avatar=\\\"{{avatar_id}}\\\" {[}]} {[if (avatar_url) {]} data-avatar-url=\\\"{{avatar_url}}\\\" {[}]} data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" {[if (from_id) {]} data-from-id=\\\"{{from_id}}\\\" {[}]} data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"left-side noselect\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n    </div>\\n\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-author-wrap\\\">\\n            <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{username}}</div>\\n            {[if (badge) {]} <div class=\\\"chat-msg-author-badge one-line\\\">{{badge}}</div>\\n            {[ } if (role && (role.toLowerCase() != 'member')) {]} <div class=\\\"chat-msg-author-role ground-color-700 one-line\\\">{{role}}</div> {[}]}\\n        </div>\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{msg_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"chat-message system\\\"  data-time=\\\"{{timestamp}}\\\" data-uniqueid=\\\"{{unique_id}}\\\" data-from=\\\"{{from_jid}}\\\">\\n    <div class=\\\"msg-wrap\\\">\\n        <div class=\\\"chat-msg-content chat-text-content\\\">{{message}}</div>\\n    </div>\\n\\n    <div class=\\\"right-side noselect\\\">\\n        <div class=\\\"msg-time selectable-text\\\" title=\\\"{{time}}\\\">{{short_time}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-2\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-3 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div>\\n<div class=\\\"template-for-3 minor-images\\\"><div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-3 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery\\\"><div class=\\\"img-content-template template-for-4 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-4 minor-images\\\">\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-4 minor\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-5\\\"><div class=\\\"img-content-wrap template-for-5 main\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div></div>\\n<div class=\\\"img-content-wrap template-for-5 minor-images\\\"><div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-5\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div></div></div>\";","export default \"<div class=\\\"image-collection zoom-gallery template-for-6\\\"><div class=\\\"img-content-wrap template-for-6 main-row\\\"><div class=\\\"img-content-template template-for-6 main\\\" data-upload-file-id=\\\"{{images[0].upload_id}}\\\"><img src=\\\"{{images[0].sources[0]}}\\\" title=\\\"{{images[0].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[0].sources[0]}}\\\"></div><div class=\\\"template-for-6 minor-1\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[1].upload_id}}\\\"><img src=\\\"{{images[1].sources[0]}}\\\" title=\\\"{{images[1].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[1].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[2].upload_id}}\\\"><img src=\\\"{{images[2].sources[0]}}\\\" title=\\\"{{images[2].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[2].sources[0]}}\\\"></div></div></div>\\n<div class=\\\"template-for-6 minor-2\\\"><div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[3].upload_id}}\\\"><img src=\\\"{{images[3].sources[0]}}\\\" title=\\\"{{images[3].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[3].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6\\\" data-upload-file-id=\\\"{{images[4].upload_id}}\\\"><img src=\\\"{{images[4].sources[0]}}\\\" title=\\\"{{images[4].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[4].sources[0]}}\\\"></div>\\n<div class=\\\"img-content-template template-for-6 last-image\\\" data-upload-file-id=\\\"{{images[5].upload_id}}\\\"><img src=\\\"{{images[5].sources[0]}}\\\" title=\\\"{{images[5].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[5].sources[0]}}\\\">\\n{[ if (images.length > 6) { ]}<span class=\\\"image-counter\\\"></span>{[ for (var i=6; i < images.length; i++) {]} <div class=\\\"img-content-template hidden\\\" data-upload-file-id=\\\"{{images[i].upload_id}}\\\"><img src=\\\"{{images[i].sources[0]}}\\\" title=\\\"{{images[i].description}}\\\" class=\\\"uploaded-img-for-collage popup-img\\\" data-mfp-src=\\\"{{images[i].sources[0]}}\\\"></div> {[}} ]}</div></div></div>\\n\";","export default \"<div class=\\\"plyr-video-container\\\"  data-provider=\\\"html5\\\" data-src=\\\"{{video_src}}\\\">\\n    <div class=\\\"plyr-video-play\\\">\\n        <svg class=\\\"mdi mdi-32px mdi-svg-template\\\" data-svgname=\\\"play\\\"></svg>\\n    </div>\\n    <div class=\\\"plyr-video-playing\\\">\\n        <svg class=\\\"mdi mdi-48px mdi-svg-template\\\" data-svgname=\\\"player-float\\\"></svg>\\n        <div class=\\\"plyr-video-playing-hint\\\">{[print(xabber.getString(\\\"chat_message_video_playing_hint\\\"))]}</div>\\n    </div>\\n    {[ if (thumbnail) {]}\\n        <img class=\\\"plyr-video-poster\\\" src=\\\"{{thumbnail}}\\\" onerror=\\\"this.style.display='none'\\\">\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"chat-message\\\"> {[alert({file_url})]} </div>\";","export default \"<div class=\\\"circle-avatar ground-color-700\\\"></div>\\n<div class=\\\"chat-head-info-buttons-container\\\">\\n    <div class=\\\"contact-info\\\">\\n        <p class=\\\"contact-name one-line\\\">{[print(xabber.getString(\\\"saved_messages__header\\\"))]}</p>\\n        <p class=\\\"one-liner\\\"></p>\\n    </div>\\n    <div class=\\\"chat-tools-wrap\\\">\\n        <div class=\\\"chat-tool chat-tool-player\\\">\\n            <div class=\\\"chat-tool-player-containter\\\">\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-previous-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-previous mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-play-pause-plyr\\\">\\n                    <i class=\\\"mdi mdi-play mdi-24px\\\"></i>\\n                    <i class=\\\"mdi mdi-pause mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-next-plyr\\\">\\n                    <i class=\\\"mdi mdi-skip-next mdi-24px\\\"></i>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-popup-plyr\\\">\\n                    <img class=\\\"player-poster hidden\\\">\\n                    <svg class=\\\"mdi mdi-32px mdi-player-type-icon mdi-svg-template\\\" data-svgname=\\\"video\\\"></svg>\\n                    <div class=\\\"voice-message-player-avatar circle-avatar hidden\\\"/>\\n                </div>\\n                <div class=\\\"chat-tool chat-player-duration chat-tool-plyr-controls\\\">\\n                    <div class=\\\"chat-head-player-title one-line\\\"><div class=\\\"chat-head-player-title-text\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</div></div>\\n                    <div class=\\\"chat-head-player-title-bottom-container\\\">\\n                        <span class=\\\"chat-head-player-type one-line\\\">{[print(xabber.getString(\\\"chat_message_video\\\"))]}</span><span class=\\\"chat-head-player-type-dot\\\"> •</span>\\n                        <span class=\\\"chat-head-player-current-time\\\">0:00</span> /\\n                        <span class=\\\"chat-head-player-total-time\\\">0:00</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"chat-tool chat-tool-plyr-controls btn-stop-plyr\\\">\\n                    <i class=\\\"mdi mdi-close mdi-16px\\\"></i>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"chat-tool btn-jingle-message\\\">\\n            <i class=\\\"mdi mdi-phone mdi-24px\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-chat-pin\\\">\\n            <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path id=\\\"tooltip-variant\\\" fill=\\\"#9E9E9E\\\" fill-rule=\\\"nonzero\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\"/>\\n                </svg>\\n            </svg>\\n        </div>\\n        <div class=\\\"chat-tool btn-search-messages\\\">\\n            <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        </div>\\n        <div class=\\\"chat-tool btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-more\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul id=\\\"{{view.cid}}-more\\\" class=\\\"chat-head-menu dropdown-content noselect\\\">\\n            <li class=\\\"btn-delete-chat\\\">\\n                <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"chat_settings__button_delete_all\\\"))]}</span>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\">\\n    <span></span>\\n    <div class=\\\"menu-wrap\\\">\\n        <div data-screen-name=\\\"image\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"images\\\"))]}</div>\\n        <div data-screen-name=\\\"video\\\" class=\\\"menu-btn btn-library\\\">{[print(xabber.getString(\\\"videos\\\"))]}</div>\\n        <div data-screen-name=\\\"upload\\\" class=\\\"menu-btn btn-upload\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_upload\\\"))]}</div>\\n        <div data-screen-name=\\\"web-address\\\" class=\\\"menu-btn btn-web-address\\\">{[print(xabber.getString(\\\"settings__dialog_background__menu_item_url\\\"))]}</div>\\n    </div>\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div data-screen=\\\"image\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"video\\\" class=\\\"screen-wrap hidden library-wrap\\\"></div>\\n    <div data-screen=\\\"upload\\\" class=\\\"screen-wrap\\\">\\n        <div class=\\\"upload-wrap\\\">\\n            <div class=\\\"upload-text\\\">{[print(xabber.getString(\\\"chat_bottom__drag_and_drop__text_drop_files_here\\\"))]}</div>\\n            <div class=\\\"upload-button\\\">\\n                <button type=\\\"file\\\">{[print(xabber.getString(\\\"send_media__btn_upload\\\"))]}</button>\\n                <input type=\\\"file\\\" multiple>\\n            </div></div>\\n    </div>\\n    <div data-screen=\\\"web-address\\\" class=\\\"hidden screen-wrap web-address-wrap\\\">\\n        <div class=\\\"web-address\\\">\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"settings__dialog_background__section_url__label\\\"))]}</div>\\n            <input class=\\\"url\\\"/>\\n        </div>\\n        <div class=\\\"image-preview\\\">\\n            <img class=\\\"hidden\\\">\\n            <p>{[print(xabber.getString(\\\"settings__dialog_background__section_url__placeholder_preview\\\"))]}</p>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn-flat btn-main text-color-700 non-active btn-add\\\">{[print(xabber.getString(\\\"add\\\"))]}</button>\\n    <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    <div class=\\\"modal-preloader-wrap\\\"></div>\\n</div>\";","export default \"<div class=\\\"subscription-buttons\\\">\\n    <div class=\\\"subscription-info\\\"></div>\\n    <div class=\\\"button text-color-500 btn-add\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</div>\\n    <div class=\\\"button btn-block\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-allow\\\">{[print(xabber.getString(\\\"chat_allow\\\"))]}</div>\\n    <div class=\\\"button text-color-500 btn-subscribe\\\">{[print(xabber.getString(\\\"chat_subscribe\\\"))]}</div>\\n    <i class=\\\"mdi-close btn-decline mdi mdi-24px\\\"/>\\n</div>\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info ground-color-100\\\">\\n        <div class=\\\"account-indicator ground-color-700\\\"></div>\\n        <div class=\\\"circle-avatar noselect\\\"></div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-900 one-line\\\"></p>\\n            <p class=\\\"jid one-line\\\"></p>\\n        </div>\\n        <div class=\\\"button-divider\\\"></div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer2 ground-color-50\\\">\\n        <div class=\\\"account-indicator ground-color-300\\\"></div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"roster-account-info-wrap\\\">\\n    <div class=\\\"roster-account-info\\\">\\n        <div class=\\\"circle-avatar-wrap ground-color-500\\\">\\n            <div class=\\\"circle-avatar border-color ground-color-700 noselect\\\"></div>\\n        </div>\\n        <div class=\\\"text-info-wrap\\\">\\n            <p class=\\\"name text-color-700 one-line\\\"></p>\\n            <p class=\\\"status-message text-color-700 one-line\\\"></p>\\n            <div class=\\\"roster-info\\\">\\n                <i class=\\\"mdi mdi-account-multiple-outline\\\"></i>\\n                <span class=\\\"counter\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"status-button\\\">\\n        <div class=\\\"status\\\"></div>\\n    </div>\\n    <div class=\\\"roster-account-shrank-footer1\\\"></div>\\n    <div class=\\\"roster-account-shrank-footer2\\\"></div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_add_contact__header\\\"))]}</span>\\n        <div class=\\\"account-dropdown-wrap\\\" data-activates=\\\"select-account-for-add-contact\\\">\\n            <div class=\\\"dropdown-button\\\">\\n                <div class=\\\"account-item-wrap\\\">\\n                    <div class=\\\"circle-avatar noselect\\\">\\n                        <img>\\n                    </div>\\n                </div>\\n            </div>\\n            <div id=\\\"select-account-for-add-contact\\\" class=\\\"dropdown-content noselect\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"add-contact-jid-step\\\">\\n            <div class=\\\"row name-field\\\">\\n                <div class=\\\"input-field\\\">\\n                    <!--<label for=\\\"new_contact_username\\\">{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}</label>-->\\n                    <input id=\\\"new_contact_username\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"dialog_add_contact__label_jid\\\"))]}' name=\\\"username\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n        </div>\\n        <!--<div class=\\\"add-contact-contact-step\\\">-->\\n            <!--<div class=\\\"row name-field\\\">-->\\n                <!--<div class=\\\"input-field\\\">-->\\n                    <!--<label for=\\\"new_contact_name\\\">{[print(xabber.getString(\\\"contact_user\\\"))]}</label>-->\\n                    <!--<input id=\\\"new_contact_name\\\" type=\\\"text\\\" placeholder='{[print(xabber.getString(\\\"contact_user\\\"))]}' name=\\\"contact_name\\\" required>-->\\n                <!--</div>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"row groups-field\\\">-->\\n                <!--<div class=\\\"field-header\\\">{[print(xabber.getString(\\\"contact_circle\\\"))]}</div>-->\\n                <!--<div class=\\\"groups checkbox-list\\\">-->\\n                <!--</div>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-add\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_add\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"dialog_add_contact__button_cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"account-item-wrap property-variant\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"circle-avatar noselect\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"name-wrap\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"waveform\\\" id=\\\"{{waveform_id}}\\\"></div>\\n<div class=\\\"audio-control-panel\\\">\\n    <span class=\\\"voice-msg-current-time\\\">0:00</span> /\\n    <span class=\\\"voice-msg-total-time\\\">0:00</span>\\n    <input value=\\\"50\\\" type=\\\"range\\\" class=\\\"voice-message-volume\\\">\\n</div>\";","export default \"<div data-jid=\\\"{{jid}}\\\" class=\\\"blocked-contact\\\">\\n    <div class=\\\"input-field checkbox-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"blocked-jid-switch-{{jid}}\\\"/>\\n        <label for=\\\"blocked-jid-switch-{{jid}}\\\">{{jid}}</label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"status hide-offline\\\"></div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"btn-more  dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-auth-request\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_request_authorization\\\"))]}</span></li>\\n            <li class=\\\"btn-add\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_add\\\"))]}</span></li>\\n            <li class=\\\"btn-delete\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"remove_contact\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-phone btn-voice-call\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-block-helper btn-block\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"left-column\\\">\\n            <div class=\\\"block-wrap subscription-block-wrap\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_subscription_settings\\\"))]}</span>\\n                </div>\\n                <div class=\\\"subscription-info-wrap\\\">\\n                    <div class=\\\"incoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"incoming-subscription\\\"/>\\n                            <label for=\\\"incoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"outcoming-subscription-wrap\\\">\\n                        <div class=\\\"input-field checkbox-field incoming-subscription-wrap\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"outcoming-subscription\\\"/>\\n                            <label for=\\\"outcoming-subscription\\\"></label>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap vcard\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"right-column\\\">\\n            <div class=\\\"block-wrap resources-block-wrap hidden\\\">\\n                <div class=\\\"block-header\\\">\\n                    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_info_connected_clients_header\\\"))]}</span>\\n                </div>\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap contact-details-name-wrap one-line\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_viewer\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-voice-call-wrap\\\">\\n                <div class=\\\"contact-btn btn-voice-call  fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_call\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-unmute-dropdown\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"unmute_chat\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-block-wrap\\\">\\n                <div class=\\\"contact-btn btn-block fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content private-chat\\\">\\n        <div class=\\\"block-wrap vcard\\\">\\n        </div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <div class=\\\"name-wrap\\\">\\n        <p class=\\\"name one-line\\\"></p>\\n    </div>\\n    <p class=\\\"jid one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"contact_list__placeholder\\\"))]}</div>\\n\";","export default \"<div class=\\\"circle-avatar noselect\\\"></div>\\n<div class=\\\"text-info-wrap\\\">\\n    <p class=\\\"name one-line\\\"></p>\\n    <p class=\\\"jid one-line hidden\\\"></p>\\n    <p class=\\\"status-message one-line\\\"></p>\\n</div>\\n<div class=\\\"status hide-offline\\\"></div>\\n<div class=\\\"chat-icon hidden\\\"></div>\\n\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</span>\\n    </div>\\n    <div class=\\\"edit-contact\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"name-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"subscription-statuses\\\">\\n        <div class=\\\"status-out subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-out\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-to\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-out\\\" class=\\\"status-out-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_request_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-out property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscribe\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-in subscription-status-wrap dropdown-button\\\" data-activates=\\\"{{view.cid}}-status-in\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"subscription-from\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value dotted-underline one-line\\\"></div>\\n            </div>\\n        </div>\\n        <div id=\\\"{{view.cid}}-status-in\\\" class=\\\"status-in-dropdown dropdown-content noselect\\\">\\n            <div class=\\\"btn-allow property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-allow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_allow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-request property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"decline\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-disallow-preapproved property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_disallow_subscription\\\"))]}</div>\\n            </div>\\n            <div class=\\\"btn-cancel-subscription-in property-variant hidden\\\">\\n                <div class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_subscription_cancel_subscription\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"status-description subscription-status-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg></div>\\n            <div class=\\\"info\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-delete\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text \\\">\\n                <span class=\\\"text-color-500 dotted-underline text-decoration-color-300 one-line\\\">{[print(xabber.getString(\\\"contact_delete_full\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n<div class=\\\"edit-wrap\\\">\\n    <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n        <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-header main-edit-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <div class=\\\"btn-edit\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-group vcard\\\">\\n        <div class=\\\"info-wrap description-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info description\\\">\\n                    <div class=\\\"edit-group-name value\\\"></div>\\n                    <div class=\\\"edit-group-description value\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"description-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header description-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_properties\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-group\\\">\\n            <div class=\\\"edit-group-name-wrap\\\"></div>\\n            <div class=\\\"edit-group-description-wrap\\\"></div>\\n        </div>\\n    </div>\\n    <div class=\\\"edit-properties\\\">\\n        <div class=\\\"group-property membership-property\\\">\\n            <div class=\\\"details-icon-wrap\\\" ><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"membership-outline\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_membership\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"group-property index-property\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"index\\\"></svg></div>\\n            <div class=\\\"group-property-text dotted-underline\\\">\\n                {[print(xabber.getString(\\\"groupchat_index\\\"))]}\\n                <span></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n        <div class=\\\"edit-button btn-default-restrictions\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"restrictions-outline\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n                <span class=\\\"edit-button-value\\\"></span>\\n            </div>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n        </div>\\n    </div>\\n    <div class=\\\"membership-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap membership-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"open\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"open\\\">{[print(xabber.getString(\\\"groupchat_membership_type_open\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"member-only\\\" name=\\\"membership-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"member-only\\\">{[print(xabber.getString(\\\"groupchat_membership_type_members_only\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_membership_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"index-property-edit-wrap hidden\\\">\\n        <div class=\\\"edit-header property-header block-header\\\">\\n            <i class=\\\"details-icon btn-property-back btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_index\\\"))]}</span>\\n            <span class=\\\"block-name second-text fade-out\\\"></span>\\n            <button class=\\\"btn-save btn-flat text-color-500 btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        </div>\\n        <div class=\\\"property-wrap index-field\\\">\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"none\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"none\\\">{[print(xabber.getString(\\\"groupchat_index_type_none\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"local\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"local\\\">{[print(xabber.getString(\\\"groupchat_index_type_local\\\"))]}</label>\\n            </div>\\n            <div class=\\\"property-radio\\\">\\n                <input id=\\\"global\\\" name=\\\"index-property-input\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n                <label class=\\\"property-label\\\" for=\\\"global\\\">{[print(xabber.getString(\\\"groupchat_index_type_global\\\"))]}</label>\\n            </div>\\n        </div>\\n        <div class=\\\"property-description\\\">{[print(xabber.getString(\\\"groupchat_index_description\\\"))]}</div>\\n    </div>\\n    <div class=\\\"bottom-block edit-bottom-block\\\">\\n        <div class=\\\"edit-pictured-buttons\\\">\\n            <div data-value=\\\"invitations\\\" class=\\\"list-variant invitations-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"invite-outline\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n            <div data-value=\\\"blocked\\\" class=\\\"list-variant blocked-variant\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"cancel\\\"></svg></div>\\n                <div class=\\\"variant-text dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}<span class=\\\"counted\\\"></span></div>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon-right mdi mdi-28px mdi-svg-template\\\" data-svgname=\\\"chevron-right-variant\\\"></svg></div>\\n            </div>\\n        </div>\\n        <i class=\\\"details-icon participants-edit-back btn-back-panel mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name-panel\\\"></span>\\n        <span class=\\\"block-name-panel second-text fade-out\\\">{[print(xabber.getString(\\\"groupchat_selected\\\"))]} <span></span></span>\\n        <div class=\\\"btn-add-block\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"blocked-add\\\"></svg>\\n        </div>\\n        <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n        <button class=\\\"btn-remove-selected btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}</button>\\n        <div class=\\\"block-wrap participants-edit-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"edit-buttons\\\">\\n        <div class=\\\"edit-button btn-clear-history-chat\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"history\\\"></svg></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"one-line dotted-underline\\\">{[print(xabber.getString(\\\"clear_history\\\"))]}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"edit-button btn-delete-group\\\">\\n            <div class=\\\"details-icon-wrap\\\"><i class=\\\"details-icon mdi mdi-24px mdi-delete text-color-500\\\"></i></div>\\n            <div class=\\\"edit-button-text\\\">\\n                <span class=\\\"text-color-500 one-line text-decoration-color-300 dotted-underline\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-form\\\">\\n    <div class=\\\"input-field\\\">\\n        <input id=\\\"blocking_id\\\" class=\\\"rich-textarea field-input\\\" placeholder=\\\"{[print(xabber.getString('vcard_jabber_id'))]}\\\" type=\\\"text\\\" name=\\\"title\\\">\\n    </div>\\n    <button class=\\\"btn-block-id btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"contact_bar_block\\\"))]}</button>\\n</div>\";","export default \"<div class=\\\"modal-content\\\">\\n    <div class=\\\"textarea-header\\\">{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}</div>\\n    <div class=\\\"rich-textarea badge-text\\\" tabindex=\\\"1\\\" contenteditable></div>\\n    <div class=\\\"error\\\"></div>\\n</div>\\n<div class=\\\"panel-footer noselect\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n        <button class=\\\"btn-save btn-flat btn-main\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</div></div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n    <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions__placeholder\\\"))]}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        <button class=\\\"btn-default-restrictions-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <button class=\\\"btn-default-restrictions-cancel btn-flat btn-main btn-dark\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"restrictions-wrap\\\">\\n    <div class=\\\"restrictions-header block-header\\\">\\n        <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span>\\n        <span class=\\\"block-name second-text fade-out\\\"></span>\\n        <button class=\\\"btn-default-restrictions-save text-color-500 btn-flat btn-main fade-out\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        <div class=\\\"edit-save-preloader preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"restrictions-content edit-default-restrictions\\\">\\n        <div class=\\\"default-restrictions-list-wrap\\\"></div>\\n        <p class=\\\"default-restrictions-info\\\">{[print(xabber.getString(\\\"dialog_default_restrictions_right__placeholder\\\"))]}</p>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <textarea class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\"></textarea>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"media-item\\\">\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                </svg>\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n            <div class=\\\"status-message one-line\\\"></div>\\n        </div>\\n        <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{view.cid}}-buttons-wrap\\\">\\n            <li class=\\\"btn-qr-code\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"contact_settings__button_show_qr_code\\\"))]}</span></li>\\n            <li class=\\\"btn-edit-settings\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_settings\\\"))]}</span></li>\\n            <li class=\\\"btn-default-restrictions\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_default_restrictions\\\"))]}</span></li>\\n            <li class=\\\"btn-delete-group\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"group_settings__button_delete_group\\\"))]}</span></li>\\n        </ul>\\n        <div class=\\\"btn-escape\\\">\\n            <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n            <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-chat-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_chat\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-bell btn-mute\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"btn-leave\\\"><svg viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                </svg>\\n                </div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"head-block\\\">\\n            <div class=\\\"left-column\\\">\\n                <div class=\\\"block-wrap group-chat-properties-wrap\\\"></div>\\n            </div>\\n            <div class=\\\"right-column\\\">\\n                <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n                <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"invitations\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"groupchat_invitations\\\"))]}</a></li>\\n                <li data-value=\\\"blocked\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__block_list__header\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"panel-background-clickable\\\"></div>\\n<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"avatar-wrap\\\">\\n            <div class=\\\"circle-avatar\\\">\\n                <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap\\\"></div>\\n        </div>\\n        <div class=\\\"header-buttons\\\">\\n            <div class=\\\"btn-escape\\\">\\n                <i class=\\\"mdi mdi-24px mdi-close\\\"></i>\\n                <span class=\\\"btn-text\\\">{[print(xabber.getString(\\\"button_esc\\\"))]}</span>\\n            </div>\\n            <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_group\\\"))]}</span>\\n            <span class=\\\"block-name second-text\\\"></span>\\n            <div class=\\\"btn-qr-code\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"qrcode\\\"></svg>\\n            </div>\\n            <div class=\\\"btn-edit\\\">\\n                <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"information-outline\\\"></svg>\\n            </div>\\n            <div class=\\\"group-edit-preloader\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"button-wrap btn-invite-wrap\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-multiple-plus btn-invite text-color-500\\\"></i>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_bar_invite\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-search-messages\\\">\\n                <div class=\\\"contact-btn btn-search fill-color-500\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"search\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"search\\\"))]}</div>\\n            </div>\\n            <div class=\\\"button-wrap btn-mute-wrap\\\">\\n                <div class=\\\"contact-btn btn-mute dropdown-button fill-color-500\\\" data-activates=\\\"{{view.cid}}-more\\\"><svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"bell\\\"></svg></div>\\n                <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"contact_bar_notifications\\\"))]}</div>\\n\\n                <ul id=\\\"{{view.cid}}-more\\\" class=\\\"contact-mute-dropdown dropdown-content noselect\\\">\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"minutes15\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_15_min\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours1\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_hour\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"hours2\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_2_hours\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"day\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_1_day\\\"))]}</span>\\n                    </li>\\n                    <li class=\\\"btn-mute-dropdown\\\" data-mute=\\\"forever\\\">\\n                        <span class=\\\"one-line\\\">{[print(xabber.getString(\\\"mute_forever\\\"))]}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n            <div class=\\\"button-wrap btn-leave-wrap\\\">\\n                <div class=\\\"contact-btn btn-leave fill-color-500\\\">\\n                    <svg viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M13.34,8.17C12.41,8.17 11.65,7.4 11.65,6.47A1.69,1.69 0 0,1 13.34,4.78C14.28,4.78 15.04,5.54 15.04,6.47C15.04,7.4 14.28,8.17 13.34,8.17M10.3,19.93L4.37,18.75L4.71,17.05L8.86,17.9L10.21,11.04L8.69,11.64V14.5H7V10.54L11.4,8.67L12.07,8.59C12.67,8.59 13.17,8.93 13.5,9.44L14.36,10.79C15.04,12 16.39,12.82 18,12.82V14.5C16.14,14.5 14.44,13.67 13.34,12.4L12.84,14.94L14.61,16.63V23H12.92V17.9L11.14,16.21L10.3,19.93M21,23H19V3H6V16.11L4,15.69V1H21V23M6,23H4V19.78L6,20.2V23Z\\\" />\\n                    </svg>\\n                </div>\\n                <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_bar_leave\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"block-wrap group-chat-properties-wrap vcard\\\"></div>\\n        <div class=\\\"block-wrap status-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap edit-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap restrictions-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap groups-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap search-messages-block-wrap\\\"></div>\\n        <div class=\\\"block-wrap participant-view-wrap\\\"></div>\\n        <div class=\\\"bottom-block\\\">\\n            <ul class=\\\"tabs not-edit\\\">\\n                <li data-value=\\\"participants\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"group_settings__members_list__header\\\"))]}</a></li>\\n                <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n                <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n                <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n                <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n            </ul>\\n            <div class=\\\"block-wrap participants-wrap\\\"></div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon-wrap\\\">\\n            <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        </div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap searchable-info-wrap\\\">\\n        <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n        </svg>\\n        <div class=\\\"info searchable\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"modal-header\\\"><div class=\\\"panel-header black-text\\\">{[if (privacy) { print(xabber.getString(\\\"incognito_group_settings__header\\\"))} else { print(xabber.getString(\\\"public_group_settings__header\\\"))}]}</div></div>\\n<div class=\\\"modal-content group-chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"property-wrap jid-info-wrap\\\">\\n        <div class=\\\"property-header\\\">{[print(xabber.getString(\\\"hint_xmpp_id\\\"))]}</div>\\n        <div class=\\\"jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n        </div>\\n        <p id=\\\"anonymous-public\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_public\\\"))]}</p>\\n        <p id=\\\"anonymous-incognito\\\" class=\\\"property-description hidden\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_privacy__text_incognito\\\"))]}</p>\\n    </div>\\n    {[fields.forEach(function (field) { if (field.type === 'hidden' || field.type === 'jid-multi') return;]}\\n    <div class=\\\"property-wrap {{field.var}}-field\\\">\\n        {[if (!(field.type == 'fixed' && field.values[0] === \\\"\\\")) {]}\\n        <div class=\\\"property-header\\\">{{field.label}}</div>\\n        {[}]}\\n        {[if (field.type === 'text-single') {]}\\n        <div class=\\\"input-field input-group-chat-name\\\">\\n            <input value=\\\"{{field.values[0]}}\\\" id=\\\"new_{{field.var}}_value\\\" type=\\\"text\\\" name=\\\"{{field.var}}\\\" placeholder='{[print(xabber.getString(\\\"group_settings_edit__setting_name__hint\\\"))]}' class=\\\"text-field\\\">\\n        </div>\\n        {[} else if (field.type === 'text-multi') {]}\\n        <textarea placeholder='{[print(xabber.getString(\\\"groupchat_example_description\\\"))]}' id=\\\"{{field.var}}\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea rich-textarea\\\">{{field.values[0]}}</textarea>\\n        {[} else if (field.type === 'list-single') { field.options.forEach(function (option) {]}\\n        <div class=\\\"property-radio\\\">\\n            <input {[if (option.value === field.values[0]){]}checked{[}]} id=\\\"{{option.value}}\\\" name=\\\"{{field.var}}\\\" type=\\\"radio\\\" class=\\\"with-gap\\\" required=\\\"\\\">\\n            <label class=\\\"{{option.value}}-label\\\" for=\\\"{{option.value}}\\\">{{option.label}}</label>\\n        </div>\\n        {[});} else  if (field.type === 'fixed' && field.values[0] !== \\\"\\\") {]}\\n        <div class=\\\"fixed-field{[if (field.var === 'description'){]} description{[}]}\\\">\\n            <div class=\\\"value\\\">{{field.values[0]}}</div>\\n        </div>\\n        {[}]}\\n        {[if (field.var === 'index'){]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_index__text\\\"))]}</p>\\n        {[} else if (field.var === 'membership') {]}\\n        <p class=\\\"property-description\\\">{[print(xabber.getString(\\\"group_settings_edit__setting_membership__text\\\"))]}</p>\\n        {[}]}\\n    </div>\\n    {[})]}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (!all_fixed){]}\\n        <button class=\\\"btn-save btn-flat btn-main non-active\\\">{[print(xabber.getString(\\\"save\\\"))]}</button>\\n        {[}]}\\n        <button class=\\\"btn-cancel btn-flat btn-dark btn-main\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <span class=\\\"btn-edit-settings\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-properties vcard-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info description short\\\">\\n                <div class=\\\"value\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap name-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap\\\">\\n                <div class=\\\"details-icon-wrap\\\">\\n                    <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap searchable-info-wrap\\\">\\n                <svg class=\\\"details-icon toolbar-icon mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\"></path>\\n                </svg>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info searchable\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_indexed\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap model-info-wrap\\\">\\n                <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-lock\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info model\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\"><div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>{[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}</div>\\n            {[if (jid) {]}<p class=\\\"jid one-line\\\">{{jid}}</p>{[}]}\\n            </div>\\n        </div>\\n    </td>\\n    <td class=\\\"last-seen\\\">{[if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}</td>\\n    <td class=\\\"role\\\">{[if (role !== 'member') {]}{{role}}{[}]}</td>\\n    <td>\\n        {[if (is_me) {]}\\n        <span style=\\\"font-size:12px\\\" class=\\\"text-color-500\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</span>\\n        {[} else {]}\\n        <div class=\\\"buttons-wrap\\\">\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n            </div>\\n            <div title='{[print(xabber.getString(\\\"groupchat_kick_and_block\\\"))]}' class=\\\"btn-block\\\">\\n                <svg class=\\\"mdi mdi-24px\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path fill=\\\"#9e9e9e\\\" d=\\\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12C4,13.85 4.63,15.55 5.68,16.91L16.91,5.68C15.55,4.63 13.85,4 12,4M12,20A8,8 0 0,0 20,12C20,10.15 19.37,8.45 18.32,7.09L7.09,18.32C8.45,19.37 10.15,20 12,20Z\\\" />\\n                </svg>\\n            </div>\\n        </div>\\n        {[}]}\\n    </td>\\n</tr>\";","export default \"<tr class=\\\"participant-wrap\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <td class=\\\"list-item group-chat-participant\\\">\\n        <div class=\\\"member-item\\\">\\n            <div class=\\\"circle-avatar\\\"/>\\n            <div class=\\\"participant-info\\\">\\n            <div class=\\\"top-line\\\">\\n                <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n                {[if (badge) {]}<div class=\\\"badge one-line\\\">{{badge}}</div>{[}]}\\n            </div>\\n                <div class=\\\"bottom-line\\\">\\n                    {[ if (is_me) {]}\\n                    <div class=\\\"online-status text-color-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                    {[}else if (!present) {]}<span class=\\\"online-status text-color-green-700\\\">{[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}</span>{[} else {]}<span title=\\\"{{present}}\\\">{{pretty_present}}</span>{[}]}\\n                </div>\\n            </div>\\n            {[if (role === 'owner' || role === 'admin') {]}\\n            <div class=\\\"participant-buttons-wrap\\\">\\n                <div class=\\\"participant-role\\\">\\n                    {[if (role === 'owner') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star\\\"></i>\\n                    {[}else if (role === 'admin') {]}\\n                        <i class=\\\"mdi participant-role-image mdi-24px mdi-star-outline\\\"></i>\\n                    {[}]}\\n                </div>\\n            </div>\\n            {[} else if (!is_me) {]}\\n                <div class=\\\"buttons-wrap\\\">\\n                    <div title='{[print(xabber.getString(\\\"groupchat_edit_member\\\"))]}' class=\\\"btn-edit-member\\\">\\n                        <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n                    </div>\\n                    <!--<div title='{[print(xabber.getString(\\\"mute_chat\\\"))]}' class=\\\"btn-mute\\\">-->\\n                        <!--<i class=\\\"mdi mdi-24px mdi-microphone-off\\\"></i>-->\\n                    <!--</div>-->\\n                    <div title='{[print(xabber.getString(\\\"groupchat_kick\\\"))]}' class=\\\"btn-kick\\\">\\n                        <i class=\\\"mdi mdi-24px mdi-account-remove\\\"></i>\\n                    </div>\\n                </div>\\n            {[}]}\\n        </div>\\n    </td>\\n</tr>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"{{field_name}}-input-wrap\\\">\\n        <input class=\\\"{{field_name}}-input rich-textarea field-input\\\" type=\\\"{{field_type}}\\\" placeholder=\\\"{{placeholder}}\\\">\\n        <div class=\\\"buttons-wrap\\\">\\n            <div class=\\\"insert-emoticon\\\">\\n                <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n            </div>\\n            <div class=\\\"emoticons-panel-wrap\\\">\\n                <div class=\\\"emoticons-panel\\\"></div>\\n                <div class=\\\"emoji-menu\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</span>\\n</div>\\n<div class=\\\"group-chat-status\\\">\\n    <div class=\\\"status-wrap\\\">\\n        <div class=\\\"status status-bulb\\\"></div>\\n        <div class=\\\"status-message\\\"></div>\\n    </div>\\n    <div class=\\\"btn-edit-status\\\">{[print(xabber.getString(\\\"group_settings__properties__button_edit\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"group-chat-status-wrap\\\" title=\\\"{[print(xabber.getString('group_settings__properties__tooltip_click_to_set_status'))]}\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"status-outline\\\"></svg></div>\\n    <div class=\\\"group-chat-status-border\\\">\\n        <div class=\\\"group-chat-status\\\">\\n            <div class=\\\"status-wrap\\\">\\n                <div class=\\\"status-message dotted-underline\\\"></div>\\n                <div class=\\\"status status-bulb\\\"></div>\\n            </div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_status\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"panel-content-wrap noselect\\\">\\n    <div class=\\\"main-info\\\">\\n        <div class=\\\"circle-avatar\\\"></div>\\n        <div class=\\\"text-info\\\">\\n            <div class=\\\"name-wrap one-line\\\"></div>\\n            <div class=\\\"jid one-line\\\"></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"panel-content\\\">\\n        <div class=\\\"msg-wrap\\\"><p class=\\\"msg-text\\\"></p></div>\\n        <div class=\\\"panel-footer noselect\\\">\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-join btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n                <button class=\\\"btn-decline btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_decline\\\"))]}</button>\\n                <button class=\\\"btn-block btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"list-item {{status}}-user\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"member-item\\\">\\n        <div class=\\\"circle-avatar\\\"/>\\n        <p title=\\\"{{jid}}\\\" class=\\\"one-line\\\">{{jid}}</p>\\n        {[if (status == 'invitations') {]}\\n        <div title='{[print(xabber.getString(\\\"groupchat_revoke\\\"))]}' class=\\\"revoke-invitation\\\">\\n            {[}else{]}\\n            <div title='{[print(xabber.getString(\\\"groupchat_unblock\\\"))]}' class=\\\"unblock-user\\\">\\n                {[}]}\\n                <i class=\\\"mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"input-widget-wrap {{field_name}}-wrap\\\">\\n    <div class=\\\"rich-textarea field-input badge-text\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_member_badge\\\"))]}' contenteditable></div>\\n    <div class=\\\"buttons-wrap\\\">\\n        <div class=\\\"insert-emoticon\\\">\\n            <i class=\\\"mdi mdi-24px mdi-emoticon hover-text-color-500\\\"></i>\\n        </div>\\n        <div class=\\\"emoticons-panel-wrap\\\">\\n            <div class=\\\"emoticons-panel\\\"></div>\\n            <div class=\\\"emoji-menu\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    {[if (subscription !== null) {]}\\n    <div class=\\\"btn-more dropdown-button\\\" data-activates=\\\"{{id}}-buttons-wrap\\\">\\n        <i class=\\\"mdi mdi-24px mdi-dots-vertical\\\"></i>\\n    </div>\\n    <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n        <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n    </ul>\\n    {[}]}\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n            <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n            </svg>\\n            <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>{[}]}\\n            <div title=\\\"{{nickname}}\\\" class=\\\"nickname one-line\\\">{{nickname}}</div>\\n            <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            {[if (jid) {]}<p title=\\\"{{jid}}\\\" class=\\\"jid selectable-text one-line\\\">{{jid}}</p>{[}]}\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n            {[ if (is_blocked_contact) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"action_contact_blocked\\\"))]}</div>\\n            {[}]}\\n            {[if (subscription === null) {]}<p class=\\\"role selectable-text one-line\\\">{[if (blocked) { print(xabber.getString(\\\"groupchat_blocked\\\")); }else{print(xabber.getString(\\\"settings_group_member__placeholder_not_a_member\\\"));}]}</p>{[}]}\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-incognito btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-message-text btn-chat\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-set-badge-wrap\\\">\\n            <svg class=\\\"btn-set-badge\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path d=\\\"M17,3H14V6H10V3H7A2,2 0 0,0 5,5V21A2,2 0 0,0 7,23H17A2,2 0 0,0 19,21V5A2,2 0 0,0 17,3M12,8A2,2 0 0,1 14,10A2,2 0 0,1 12,12A2,2 0 0,1 10,10A2,2 0 0,1 12,8M16,16H8V15C8,13.67 10.67,13 12,13C13.33,13 16,13.67 16,15V16M13,5H11V1H13V5M16,19H8V18H16V19M12,21H8V20H12V21Z\\\" />\\n            </svg>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_badge\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi mdi-24px mdi-account-remove btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item {[if (subscription === null) {]}unsubscribed{[}]}\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        {[if (subscription !== null) {]}\\n            <div class=\\\"preloader-wrap\\\">\\n                <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                    <div class=\\\"spinner-layer\\\">\\n                        <div class=\\\"circle-clipper left\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"gap-patch\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                        <div class=\\\"circle-clipper right\\\">\\n                            <div class=\\\"circle\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        {[}]}\\n    </div>\\n        <div class=\\\"participant-info\\\">\\n            {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n            <div class=\\\"participant-edit-badge hidden\\\"></div>\\n            <div class=\\\"participant-info-text\\\">\\n                <div class=\\\"nickname\\\">\\n                    {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n                </div>\\n                {[ if (is_myself) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n                {[}]}\\n                {[ if (subscription === null && blocked) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_blocked\\\"))]}</div>\\n                {[} else if (subscription === null) {]}\\n                <div class=\\\"my-flag one-line\\\">{[print(xabber.getString(\\\"groupchat_kicked\\\"))]}</div>\\n                {[}]}\\n\\n            </div>\\n        </div>\\n    <div class=\\\"buttons-wrap\\\">\\n        {[if (incognito_chat) {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-incognito btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_private_chat\\\"))]}</div>\\n        </div>\\n        {[} else {]}\\n        <div class=\\\"button-wrap non-active btn-chat-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-message-text btn-chat-participant\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_direct_chat\\\"))]}</div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"button-wrap btn-participant-messages-wrap\\\">\\n            <i class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-view-list btn-participant-messages\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_member_messages\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap non-active btn-set-visibility-wrap\\\">\\n            <i title=\\\"Feature not yet implemented\\\" class=\\\"mdi contact-btn text-color-500 mdi-24px mdi-eye btn-set-visibility\\\"></i>\\n            <div class=\\\"btn-name\\\">{[print(xabber.getString(\\\"groupchat_set_member_visibility_visible\\\"))]}</div>\\n        </div>\\n        <div class=\\\"button-wrap btn-kick-participant-wrap\\\">\\n            <i class=\\\"mdi contact-btn mdi-24px mdi-account-remove text-color-500 btn-kick-participant\\\"></i>\\n            <div class=\\\"btn-name text-color-500\\\">{[print(xabber.getString(\\\"groupchat_kick\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"vcard-wrap vcard\\\">\\n        {[if (jid) {]}\\n        <div class=\\\"info-wrap jid-info-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n            <div class=\\\"info-hover\\\">\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">{{jid}}</div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        {[if (role === 'owner' || role === 'admin') {]}\\n        <div class=\\\"info-wrap role-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\">\\n                {[if (role === 'owner') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star\\\"></i>\\n                {[}else if (role === 'admin') {]}\\n                    <i class=\\\"details-icon mdi mdi-24px mdi-star-outline\\\"></i>\\n                {[}]}\\n            </div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (role === 'owner') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_owner\\\"))]}\\n                            {[}else if (role === 'admin') {]}\\n                                {[print(xabber.getString(\\\"groupchat_role_admin\\\"))]}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_role\\\"))]}</div>\\n                </div>\\n            </div>\\n        </div>\\n        {[}]}\\n        <div class=\\\"info-wrap present-info-wrap\\\">\\n            <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" {[if (!present) {]}data-svgname=\\\"status-outline\\\"{[} else {]}data-svgname=\\\"clock-outline\\\"{[}]}></svg></div>\\n            <div>\\n                <div class=\\\"info jabber-id\\\">\\n                    <div class=\\\"value one-line\\\">\\n                        <span>\\n                            {[if (!present) {]}\\n                                {[print(xabber.getString(\\\"group_settings__members__status_online\\\"))]}\\n                            {[} else {]}\\n                            {{pretty_present}}\\n                            {[}]}\\n                        </span>\\n                    </div>\\n                    <div class=\\\"label\\\">{[if (!present) {]}{[print(xabber.getString(\\\"groupchat_status\\\"))]}{[} else {]}{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}{[}]}</div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-wrap\\\">\\n    <div class=\\\"participant-details-info-wrap\\\">\\n    </div>\\n    <div class=\\\"bottom-block participant-bottom-block\\\">\\n        <ul class=\\\"tabs participant-tabs\\\">\\n            <li data-value=\\\"image\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"images\\\"))]}</a></li>\\n            <li data-value=\\\"video\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"videos\\\"))]}</a></li>\\n            <li data-value=\\\"files\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"files\\\"))]}</a></li>\\n            <li data-value=\\\"voice\\\" class=\\\"list-variant tab\\\"><a class=\\\"text-color-700\\\">{[print(xabber.getString(\\\"vcard_type_voice\\\"))]}</a></li>\\n        </ul>\\n        <div class=\\\"block-wrap participants-details-media-wrap\\\"></div>\\n    </div>\\n    <div class=\\\"participant-details-edit-wrap edit-wrap\\\">\\n        <div class=\\\"main-info\\\">\\n            <div class=\\\"avatar-wrap\\\">\\n                <div class=\\\"circle-avatar\\\">\\n                    <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\"/>\\n                    <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n                        <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n                    </svg>\\n                    <div class=\\\"preloader-wrap\\\">\\n                        <div class=\\\"preloader-wrapper preloader-32px visible\\\">\\n                            <div class=\\\"spinner-layer\\\">\\n                                <div class=\\\"circle-clipper left\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"gap-patch\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                                <div class=\\\"circle-clipper right\\\">\\n                                    <div class=\\\"circle\\\"></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"set-groupchat-avatar-text\\\">{[print(xabber.getString(\\\"groupchat_set_avatar\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"participant-details-edit-inputs\\\">\\n            <div class=\\\"edit-participant-name-wrap\\\">\\n            </div>\\n            <div class=\\\"edit-participant-badge-wrap\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"rights-wrap\\\">\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"header\\\">\\n</div>\\n<div class=\\\"modal-content\\\">\\n    <div class=\\\"rights-wrap\\\">\\n    </div>\\n</div>\\n\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n        <th>{[print(xabber.getString(\\\"group_settings__members__label_last_seen\\\"))]}</th>\\n        <th>{[print(xabber.getString(\\\"groupchat_role\\\"))]}</th>\\n        <th></th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<table class=\\\"members-list-wrap\\\">\\n    <thead>\\n    <tr>\\n        <th>\\n            <div class=\\\"participants-search-form search-form\\\">\\n                <svg class=\\\"search-icon\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M10,4A4,4 0 0,1 14,8C14,8.91 13.69,9.75 13.18,10.43C12.32,10.75 11.55,11.26 10.91,11.9L10,12A4,4 0 0,1 6,8A4,4 0 0,1 10,4M2,20V18C2,15.88 5.31,14.14 9.5,14C9.18,14.78 9,15.62 9,16.5C9,17.79 9.38,19 10,20H2Z\\\" />\\n                </svg>\\n                <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"groupchat_search_members\\\"))]}'>\\n                <i class=\\\"close-search-icon mdi mdi-20px mdi-close\\\"></i>\\n            </div>\\n        </th>\\n    </tr>\\n    </thead>\\n    <tbody></tbody>\\n</table>\\n<div class=\\\"preloader-wrapper preloader-17px active\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<svg class=\\\"pin\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path fill=\\\"#757575\\\" d=\\\"M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z\\\" />\\n</svg>\\n<div class=\\\"msg-wrap\\\">\\n    <div class=\\\"chat-msg-author-wrap\\\">\\n        <div class=\\\"chat-msg-author text-color-700 one-line\\\">{{author}}</div>{[if (fwd_author){]}<svg class=\\\"fwd-chevron\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"#9E9E9E\\\" d=\\\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\\\"/></svg><div class=\\\"chat-msg-author text-color-700 one-line\\\">{{fwd_author}}</div>{[}]}\\n        <div class=\\\"msg-time\\\">{{time}}</div>\\n    </div>\\n    <div class=\\\"chat-msg-content chat-text-content one-line\\\">\\n        {{message}}\\n    </div>\\n</div>\\n<svg title='{[print(xabber.getString(\\\"group_chat__pinned_message__tooltip_unpin\\\"))]}' class=\\\"close\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path class=\\\"close\\\" fill=\\\"#9E9E9E\\\" d=\\\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\\\" />\\n</svg>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"circle-avatar\\\">\\n        {[ if (is_myself) {]}\\n        <input title='{[print(xabber.getString(\\\"groupchat_member_edit_change_avatar\\\"))]}' type=\\\"file\\\">\\n        {[}]}\\n        {[ if (is_myself) {]}\\n        <svg class=\\\"set-groupchat-avatar\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path d=\\\"M4,4H7L9,2H15L17,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9Z\\\" />\\n        </svg>\\n        <div class=\\\"preloader-wrap\\\"><div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        {[}]}\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[ if (is_myself) {]}\\n        <div id=\\\"edit-nickname\\\" class=\\\"rich-textarea\\\" tabindex=\\\"1\\\" contenteditable></div>\\n        {[}]}\\n        <div title=\\\"{{nickname}}\\\" class=\\\"{{is_myself && 'is-myself'}} nickname one-line\\\">{{nickname}}</div>\\n        <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n        {[ if (is_myself) {]}\\n        <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n        {[}]}\\n    </div>\\n</div>\";","export default \"<div class=\\\"participant-details-item\\\" data-id=\\\"{{id}}\\\" data-jid=\\\"{{jid}}\\\" data-role=\\\"{{role}}\\\">\\n    <div class=\\\"block-header\\\">\\n        <i class=\\\"details-icon btn-back parent-btn mdi mdi-24px mdi-arrow-right\\\"></i>\\n        <i class=\\\"details-icon btn-back-name child-btn mdi mdi-24px mdi-arrow-right hidden\\\"></i>\\n        <span class=\\\"block-name\\\"></span>\\n        <span class=\\\"block-name second-text\\\"></span>\\n        <button class=\\\"btn-save-user-rights non-active fade-out btn-flat btn-main\\\">{[print(xabber.getString(\\\"groupchat_save_member_settings\\\"))]}</button>\\n        {[if (subscription !== null) {]}\\n        <div class=\\\"btn-edit-participant\\\">\\n            <svg class=\\\"mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"edit-outline\\\"></svg>\\n        </div>\\n        <ul class=\\\"buttons-menu-wrap dropdown-content noselect\\\" id=\\\"{{id}}-buttons-wrap\\\">\\n            <li class=\\\"btn-block-participant\\\"><span class=\\\"one-line\\\">{[print(xabber.getString(\\\"groupchat_block\\\"))]}</span></li>\\n        </ul>\\n        {[}]}\\n    </div>\\n    <div class=\\\"circle-avatar\\\">\\n        <div class=\\\"preloader-wrap\\\">\\n            <div class=\\\"preloader-wrapper preloader-16px visible\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"participant-info\\\">\\n        {[if (subscription !== null) {]}<div class=\\\"participant-edit-nickname hidden\\\"></div>{[}]}\\n        <div class=\\\"participant-edit-badge hidden\\\"></div>\\n        <div class=\\\"participant-info-text\\\">\\n            <div class=\\\"nickname\\\">\\n                {{nickname}} <div class=\\\"badge one-line {[if (!badge) {]}hidden{[}]}\\\">{{badge}}</div>\\n            </div>\\n            {[ if (is_myself) {]}\\n            <div class=\\\"my-flag one-line text-color-red-700\\\">{[print(xabber.getString(\\\"groupchat_this_is_you\\\"))]}</div>\\n            {[}]}\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"right-item restriction restriction-{{name}}\\\">\\n    <div class=\\\"right-name\\\">{{pretty_name}}</div>\\n    <div class=\\\"field clickable-field restriction-{{name}}-state switch normal\\\">\\n        <input type=\\\"checkbox\\\" {[if (type === 'fixed') {]} onclick=\\\"return false;\\\" {[}]} class=\\\"filled-in\\\" id=\\\"{{name}}\\\">\\n        <label for=\\\"{{name}}\\\"></label>\\n    </div>\\n</div>\";","export default \"<div class=\\\"select-timer\\\">\\n    <div class=\\\"dropdown-button\\\" data-activates=\\\"select-timer-{{right_name}}\\\">\\n        <div class=\\\"timer-item-wrap\\\"><div data-value=\\\"0\\\" class=\\\"default-value property-value\\\">{[print(xabber.getString(\\\"dialog_rights__button_set_timer\\\"))]}</div></div>\\n    </div>\\n    <div id=\\\"select-timer-{{right_name}}\\\" class=\\\"dropdown-content noselect\\\">\\n        {[expire_options.forEach(function (option) {]}\\n        <div data-value=\\\"{{option.value}}\\\" class=\\\"property-variant\\\">{{option.label}}</div>\\n        {[}.bind(this));]}\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_set_status__header\\\"))]}</span>\\n    </div>\\n    <ul class=\\\"status-values noselect\\\">\\n        <div class=\\\"loading-status\\\">\\n            <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n                <div class=\\\"spinner-layer\\\">\\n                    <div class=\\\"circle-clipper left\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"gap-patch\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                    <div class=\\\"circle-clipper right\\\">\\n                        <div class=\\\"circle\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ul>\\n</div>\\n\";","export default \"<li data-value=\\\"{{status.value}}\\\">\\n    <span class=\\\"status-value one-line\\\">{{status.label}}</span>\\n    <span class=\\\"status-bulb\\\" data-status=\\\"{{status.show}}\\\"></span>\\n</li>\";","export default \"<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"group-head\\\">\\n    <i class=\\\"arrow mdi mdi-20px\\\"></i>\\n    <div class=\\\"group-title\\\">\\n        <span class=\\\"group-name one-line\\\"></span>\\n        <span class=\\\"member-counter one-line\\\"></span>\\n    </div>\\n    <i class=\\\"group-icon mdi mdi-20px hidden\\\"></i>\\n</div>\\n\";","export default \"<div class=\\\"modal-content-wrap settings-panel\\\">\\n    <div class=\\\"modal-header\\\">\\n        <span>{[print(xabber.getString(\\\"dialog_circle_settings__header\\\"))]}</span>\\n    </div>\\n\\n    <div class=\\\"modal-content\\\">\\n            <div class=\\\"field-wrap group-name\\\">\\n                <div class=\\\"input-field\\\">\\n                    <label for=\\\"{{view.cid}}-group-name\\\">{[print(xabber.getString(\\\"circle_name\\\"))]}</label>\\n                    <input id=\\\"{{view.cid}}-group-name\\\" type=\\\"text\\\" name=\\\"group_name\\\">\\n                    <span class=\\\"errors fixed\\\"></span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"category_offline_contacts\\\"))]}</div>\\n            <div class=\\\"setting-wrap\\\">\\n                <div class=\\\"setting offline radio-button field-wrap\\\">\\n                    <div class=\\\"field radio-field clickable-field\\\">\\n                        <form action=\\\"#\\\">\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                                <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"show_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                                <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"hide_offline_always\\\"))]}</label>\\n                            </p>\\n                            <p>\\n                                <input class=\\\"with-gap\\\" name=\\\"offline\\\" value=\\\"default\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show-offline-default\\\" />\\n                                <label for=\\\"{{view.cid}}-show-offline-default\\\">{[print(xabber.getString(\\\"dialog_circle_settings__label_common_settings\\\"))]}</label>\\n                            </p>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button class=\\\"btn-flat btn-main btn-dark btn-delete left\\\">{[print(xabber.getString(\\\"circle_remove\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-apply\\\">{[print(xabber.getString(\\\"dialog_circle_settings__button_apply\\\"))]}</button>\\n        <button class=\\\"btn-flat btn-main btn-dark btn-cancel\\\">{[print(xabber.getString(\\\"cancel\\\"))]}</button>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"groups-list-wrap\\\">\\n    <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"circles\\\"></svg></div>\\n    <div class=\\\"groups\\\">\\n    </div>\\n    </div>\\n</div>\\n<div class=\\\"groups-wrap\\\">\\n    <div class=\\\"checkbox-list\\\">\\n    </div>\\n</div>\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (!checked) {]}\\n        <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n            <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n        </div>\\n    {[}]}\\n{[ } ]}\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    <div class=\\\"input-field checkbox-field existing-group-field\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"filled-in\\\" id=\\\"{{group_id}}\\\" data-groupname=\\\"{{name}}\\\" {[ if (checked) { ]}checked=\\\"checked\\\"{[ } ]} />\\n        <label for=\\\"{{group_id}}\\\">{{name}}</label>\\n    </div>\\n{[ } ]}\\n    <div class=\\\"new-group-field-wrap\\\">\\n        <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n            <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n            <label for=\\\"new_group_checkbox\\\"></label>\\n        </div>\\n        <div class=\\\"input-field new-group-name\\\">\\n            <input class=\\\"rich-textarea xabber-input\\\" id=\\\"new-group-name\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n        </div>\\n    </div>\\n\";","export default \"{[ for (var i = 0; i < groups.length; i++) { var name = groups[i].name, checked = groups[i].checked, group_id = groups[i].id; ]}\\n    {[ if (checked) {]}\\n        <div data-groupname=\\\"{{name}}\\\" title=\\\"{[print(xabber.getString('contact_tooltip_remove_by_click'))]}\\\" class=\\\"group ground-color-50\\\">\\n            <div>{{name}}</div>\\n        </div>\\n    {[}]}\\n\\n{[ } ]}\\n\";","export default \"<div class=\\\"new-group-field-wrap\\\">\\n    <div class=\\\"input-field checkbox-field new-group-checkbox\\\">\\n        <input type=\\\"checkbox\\\" disabled class=\\\"filled-in\\\" id=\\\"new_group_checkbox\\\"/>\\n        <label for=\\\"new_group_checkbox\\\"></label>\\n    </div>\\n    <div class=\\\"input-field new-group-name\\\">\\n        <input class=\\\"xabber-input\\\" id=\\\"new-group-name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"new_group_name\\\" placeholder='{[print(xabber.getString(\\\"add_new_circle\\\"))]}'>\\n    </div>\\n</div>\";","export default \"<div class=\\\"gallery-file\\\" title=\\\"{{file.name}}\\\" data-id=\\\"{{file.id}}\\\" data-uniqueid=\\\"{{file.uniqueid}}\\\"  data-file=\\\"{{file.sources[0]}}\\\" data-name=\\\"{{file.name}}\\\" data-size=\\\"{{file.size}}\\\" data-width=\\\"{{file.width}}\\\" data-height=\\\"{{file.height}}\\\" data-media-type=\\\"{{file.media_type}}\\\" >\\n    {[if (file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files))){]}\\n    <img class=\\\"{[if (file.media_type.includes('video')){]}uploaded-video{[} else {]}uploaded-img popup-img{[}]}\\\"\\n         data-mfp-src=\\\"{{file.sources[0]}}\\\"\\n         src=\\\"{[if (file.thumbnail){]}{{file.thumbnail}}{[} else {]}{{file.sources[0]}}{[}]}\\\"\\n         onError=\\\"this.parentElement.className = this.parentElement.className + ' hidden';\\\"\\n    >\\n    {[} else {]}\\n    {[if (svg_icon == 'file-audio' && file.true_voice){]}\\n    <div class=\\\"gallery-file-placeholder-background gallery-audio-file-not-uploaded\\\">\\n        <i class=\\\"details-icon mdi mdi-play no-uploaded\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-file-audio-container\\\">\\n    </div>\\n    {[} else {]}\\n    <div class=\\\"gallery-file-placeholder-background\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"{{svg_icon}}\\\"></svg>\\n        <div class=\\\"gallery-file-title-grid\\\">{{filesize}}</div>\\n    </div>\\n    {[}]}\\n    <div class=\\\"gallery-file-title one-line\\\">\\n        {{file.name}},  <span class=\\\"gallery-file-size\\\">{{filesize}}</span>\\n    </div>\\n    {[if (duration && file.true_voice){]}\\n    <div class=\\\"gallery-voice-file-duration\\\">\\n        0:00 / <span class=\\\"gallery-voice-file-total-duration\\\">{{duration}}</span>\\n    </div>\\n    {[}]}\\n    {[}]}\\n</div>\";","export default \"<div class=\\\"gallery-empty\\\">\\n    <div class=\\\"gallery-empty-icon-wrap\\\">\\n        <i class=\\\"gallery-empty-icon mdi mdi-24px mdi-package-variant\\\"></i>\\n    </div>\\n    <div class=\\\"gallery-empty-text\\\">{[print(xabber.getString(\\\"no_files\\\"))]}</div>\\n</div>\";","export default \"<div class=\\\"preloader-wrapper preloader-17px active visible\\\">\\n    <div class=\\\"spinner-layer\\\">\\n        <div class=\\\"circle-clipper left\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"gap-patch\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n        <div class=\\\"circle-clipper right\\\">\\n            <div class=\\\"circle\\\"></div>\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"contacts-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n\\n    <div class=\\\"contact-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"contact-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"contacts-panel noselect\\\">\\n    <div class=\\\"collapsed-wrap\\\">\\n        <i class=\\\"collapsed-contacts-icon mdi mdi-24px mdi-account-multiple\\\"></i>\\n        <div class=\\\"all-contacts-counter\\\"></div>\\n    </div>\\n    <div class=\\\"expanded-wrap\\\">\\n        <div class=\\\"roster-head panel-head\\\">\\n            <div class=\\\"contacts-header\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n            <div class=\\\"roster-button btn-pin\\\"></div>\\n        </div>\\n\\n        <div class=\\\"contact-list-wrap\\\">\\n            <div class=\\\"contact-list\\\">\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_offline_contacts\\\"))]}</div>\\n    <div class=\\\"setting offline-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"yes\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-show\\\" />\\n                    <label for=\\\"{{view.cid}}-show\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_show\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"offline-contacts\\\" value=\\\"no\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-hide\\\" />\\n                    <label for=\\\"{{view.cid}}-hide\\\">{[print(xabber.getString(\\\"settings__section_contact_list__offline_contacts__label_hide\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"setting-name\\\">{[print(xabber.getString(\\\"settings__section_contact_list__header_sorting\\\"))]}</div>\\n    <div class=\\\"setting sorting-contacts radio-button field-wrap\\\">\\n        <div class=\\\"field radio-field clickable-field\\\">\\n            <form action=\\\"#\\\">\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"online-first\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-online-first\\\" />\\n                    <label for=\\\"{{view.cid}}-online-first\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_online_first\\\"))]}</label>\\n                </p>\\n                <p>\\n                    <input class=\\\"with-gap\\\" name=\\\"sorting-contacts\\\" value=\\\"by-alphabet\\\" type=\\\"radio\\\" id=\\\"{{view.cid}}-by-alphabet\\\" />\\n                    <label for=\\\"{{view.cid}}-by-alphabet\\\">{[print(xabber.getString(\\\"settings__section_contact_list__sorting__label_alphabet\\\"))]}</label>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"group-chat-title-wrap hidden\\\">\\n    <div class=\\\"account-indicator ground-color-700\\\"></div>\\n    <div class=\\\"contact-icon\\\">\\n        <img class=\\\"server-icon hidden\\\" src=\\\"./assets/images/BotIcon20x20@2x.png\\\">\\n        <img class=\\\"group-chat-icon hidden\\\" src=\\\"./assets/images/GroupchatIcon20x20@2x.png\\\">\\n    </div>\\n    <div class=\\\"group-chat-name one-line\\\"></div>\\n</div>\\n<div class=\\\"mention-info-wrap\\\">\\n<div class=\\\"account-indicator ground-color-700\\\"></div>\\n<div class=\\\"circle-avatar\\\"></div>\\n<div class=\\\"mention-info\\\">\\n    <div class=\\\"chat-title-wrap\\\">\\n        <p class=\\\"chat-title one-line\\\"></p>\\n        <p class=\\\"last-msg-date\\\"></p>\\n    </div>\\n    <p class=\\\"last-msg one-line\\\"></p>\\n    <span class=\\\"msg-counter hidden\\\"></span>\\n</div>\\n</div>\";","export default \"<div class=\\\"mentions-panel noselect\\\">\\n    <div class=\\\"chats-search-form search-form panel-head\\\">\\n        <div class=\\\"account-indicator\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"search\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"mentions-list-wrap left-panel-list-wrap\\\">\\n        <div class=\\\"mentions-list item-list\\\">\\n        </div>\\n        <div class=\\\"searched-lists-wrap\\\">\\n            <div class=\\\"chats-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"chats-title\\\">{[print(xabber.getString(\\\"search__header_chats\\\"))]}</div>\\n                <div class=\\\"chats-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"contacts-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"contacts-title\\\">{[print(xabber.getString(\\\"category_title_contacts\\\"))]}</div>\\n                <div class=\\\"contacts-list roster-left-container\\\"></div>\\n            </div>\\n            <div class=\\\"messages-list-wrap hidden\\\">\\n                <div class=\\\"account-indicator\\\"></div>\\n                <div class=\\\"messages-title\\\">{[print(xabber.getString(\\\"search__header_messages\\\"))]}</div>\\n                <div class=\\\"messages-list roster-left-container\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"text\\\">{[print(xabber.getString(\\\"mentions_list__placeholder\\\"))]}</div>\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"searching__chat_properties__header\\\"))]}</span>\\n</div>\\n<div class=\\\"chat-properties-wrap selectable-text\\\">\\n    <div class=\\\"info-wrap jid-info-wrap\\\">\\n        <svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\">{{jid}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"group_settings__properties__label_jid\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap name-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info name\\\">\\n            <div class=\\\"value one-line\\\">{{name}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value one-line\\\">{{description}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_description\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap anonymous-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-comment-question-outline\\\"></i>\\n        <div class=\\\"info anonymous\\\">\\n            <div class=\\\"value one-line\\\">{{privacy}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_privacy_type_incognito\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap model-info-wrap\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-lock-open-outline\\\"></i>\\n        <div class=\\\"info model\\\">\\n            <div class=\\\"value one-line\\\">{{membership}}</div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"groupchat_membership\\\"))]}</div>\\n        </div>\\n    </div>\\n</div>\\n<button class=\\\"btn-join-chat btn-flat btn-main btn-dark ground-color-100 hover-ground-color-300\\\">{[print(xabber.getString(\\\"groupchat_join\\\"))]}</button>\\n\";","export default \"<div class=\\\"existing-chat-wrap\\\" data-name=\\\"{{name}}\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"account-indicator ground-color-{{color}}-500\\\"></div>\\n    <div class=\\\"circle-avatar\\\">\\n        <img>\\n    </div>\\n    <div class=\\\"existing-chat-item\\\">\\n        <div class=\\\"name one-line\\\">{{name}}</div>\\n        <div class=\\\"jid one-line\\\">{{jid}}</div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"account-item-wrap\\\" data-jid=\\\"{{jid}}\\\">\\n    <div class=\\\"name one-line\\\">{{jid}}</div>\\n</div>\";","export default \"<div class=\\\"searching-panel\\\">\\n    <div class=\\\"search-wide search-form\\\">\\n        <div class=\\\"account-indicator ground-color-500\\\"></div>\\n        <i class=\\\"search-icon mdi mdi-24px mdi-magnify\\\"></i>\\n        <input type=\\\"text\\\" class=\\\"search-input simple-input-field\\\" tabindex=\\\"1\\\" placeholder='{[print(xabber.getString(\\\"searching__placeholder_search_by_domain\\\"))]}'>\\n        <i class=\\\"close-search-icon mdi mdi-24px mdi-close\\\"></i>\\n    </div>\\n    <div class=\\\"searching-properties-field\\\">\\n        <div class=\\\"dropdown-button\\\" data-visible=\\\"false\\\">\\n            <i class=\\\"mdi mdi-24px mdi-chevron-down arrow\\\"></i>\\n        </div>\\n    </div>\\n    <ul id=\\\"select-searching-properties\\\" class=\\\"selectable-text\\\">\\n        <div class=\\\"account-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_account\\\"))]}</p>\\n            <div class=\\\"account-field\\\">\\n                <div class=\\\"multiple-acc\\\">\\n                    <div class=\\\"account-dropdown-wrap\\\">\\n                        <div class=\\\"dropdown-button\\\" data-activates=\\\"select-account-for-searching\\\">\\n                            <div class=\\\"account-item-wrap\\\">\\n                            </div>\\n                            <div class=\\\"caret\\\">\\n                                <i class=\\\"mdi mdi-20px mdi-menu-down\\\"></i>\\n                            </div>\\n                        </div>\\n                        <div id=\\\"select-account-for-searching\\\" class=\\\"dropdown-content\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"single-acc\\\">\\n                    <div class=\\\"dropdown-button\\\">\\n                        <div class=\\\"account-item-wrap\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"title-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_title\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_title\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"sorting-property\\\">\\n            <p class=\\\"property-name\\\">{[print(xabber.getString(\\\"searching__search_panel__label_sort_by\\\"))]}</p>\\n            <div class=\\\"input-field\\\">\\n                <input id=\\\"searching_property_sort_by\\\" type=\\\"text\\\" name=\\\"title\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn-search btn btn-main-filled ground-color-700\\\">{[print(xabber.getString(\\\"search\\\"))]}</button>\\n    </ul>\\n</div>\\n<div class=\\\"searching-result-wrap\\\">\\n    <div class=\\\"chats-list-wrap\\\">\\n        <div class=\\\"result-string\\\"></div>\\n        <div class=\\\"preloader-wrapper preloader-17px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div></div>\\n        <div class=\\\"chats-list\\\"></div></div>\\n    <div class=\\\"searching-more\\\"></div>\\n</div>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/account-outline</title>\\n    <g id=\\\"icon/material/account-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,19 L5,19 L5,5 L19,5 M19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 M16.5,16.25 C16.5,14.75 13.5,14 12,14 C10.5,14 7.5,14.75 7.5,16.25 L7.5,17 L16.5,17 M12,12.25 C13.2426407,12.25 14.25,11.2426407 14.25,10 C14.25,8.75735931 13.2426407,7.75 12,7.75 C10.7573593,7.75 9.75,8.75735931 9.75,10 C9.75,11.2426407 10.7573593,12.25 12,12.25 Z\\\" id=\\\"mdi:account-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/address-outline</title>\\n    <g id=\\\"icon/material/address-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell-off</title>\\n    <g id=\\\"icon/material/bell-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.84,22.73 L18.11,20 L3,20 L3,19 L5,17 L5,11 C5.00430327,9.85524651 5.28929416,8.72901748 5.83,7.72 L1.11,3 L2.39,1.73 L22.11,21.46 L20.84,22.73 Z M19.0000002,15.8 L19.0000002,11 C19.0007944,7.90366232 16.9672665,5.17466784 14,4.29 C14.0049007,4.19339544 14.0049007,4.09660456 14,4 C14,2.8954305 13.1045695,2 12,2 C10.8954305,2 10,2.8954305 10,4 C9.99507868,4.09660403 9.99507868,4.19339597 10,4.29 C9.385,4.474 8.8,4.743 8.26,5.09 L19.0000002,15.8 Z M12,23 C13.1045695,23 14,22.1045695 14,21 L10,21 C10,22.1045695 10.8954305,23 12,23 Z\\\" id=\\\"mdi:bell-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell-sleep</title>\\n    <g id=\\\"icon/material/bell-sleep\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M10,21 L14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 Z M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M15,9 L9,9 L9,11 L12.24,11 L9,13.7 L9,16 L15,16 L15,14 L11.76,14 L15,11.3 L15,9 Z\\\" id=\\\"mdi:bell-sleep\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/bell</title>\\n    <g id=\\\"icon/material/bell\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,19 L21,20 L3,20 L3,19 L5,17 L5,11 C4.99920557,7.90366232 7.0327335,5.17466784 10,4.29 C9.99507868,4.19339597 9.99507868,4.09660403 10,4 C10,2.8954305 10.8954305,2 12,2 C13.1045695,2 14,2.8954305 14,4 C14.005,4.097 14.005,4.193 14,4.29 C16.9672665,5.17466784 19.0007944,7.90366232 19,11 L19,17 L21,19 L21,19 Z M14,21 C14,22.1045695 13.1045695,23 12,23 C10.8954305,23 10,22.1045695 10,21 L14,21 Z\\\" id=\\\"mdi:bell\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/birthday-outline</title>\\n    <g id=\\\"icon/material/birthday-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6 C13.1045695,6 14,5.1045695 14,4 C14,3.62 13.9,3.27 13.71,2.97 L12,0 L10.29,2.97 C10.1,3.27 10,3.62 10,4 C10,5.1 10.9,6 12,6 M18,9 L13,9 L13,7 L11,7 L11,9 L6,9 C4.34,9 3,10.34 3,12 L3,21 C3,21.55 3.45,22 4,22 L20,22 C20.55,22 21,21.55 21,21 L21,12 C21,10.34 19.66,9 18,9 M19,20 L5,20 L5,17 C5.9,17 6.76,16.63 7.4,16 L8.5,14.92 L9.56,16 C10.87,17.3 13.15,17.29 14.45,16 L15.53,14.92 L16.6,16 C17.24,16.63 18.1,17 19,17 L19,20 M19,15.5 C18.5,15.5 18,15.3 17.65,14.93 L15.5,12.8 L13.38,14.93 C12.64,15.67 11.35,15.67 10.61,14.93 L8.5,12.8 L6.34,14.93 C6,15.29 5.5,15.5 5,15.5 L5,12 C5,11.45 5.45,11 6,11 L18,11 C18.55,11 19,11.45 19,12 L19,15.5 Z\\\" id=\\\"mdi:cake-variant-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/blocked-add</title>\\n    <g id=\\\"icon/material/blocked-add\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15 L20,18 L23,18 L23,20 L20,20 L20,23 L18,23 L18,20 L15,20 L15,18 L18,18 L18,15 L20,15 Z M12,2 C17.5,2 22,6.5 22,12 C22,12.5859564 21.9489239,13.1605626 21.851004,13.7195862 C21.2621133,13.4007388 20.6141835,13.1778427 19.9277796,13.0712956 C19.9754227,12.7216453 20,12.3635535 20,12 C20,10.1 19.4,8.4 18.3,7.1 L7.1,18.3 C8.5,19.3 10.2,20 12,20 C12.3635535,20 12.7216453,19.9754227 13.0726961,19.9278476 C13.1778427,20.6141835 13.4007388,21.2621133 13.719191,21.8507762 C13.1605626,21.9489239 12.5859564,22 12,22 C6.5,22 2,17.5 2,12 C2,6.5 6.5,2 12,2 Z M12,4 C7.6,4 4,7.6 4,12 C4,13.7882353 4.53148789,15.399308 5.51109302,16.6664767 L5.7,16.9 L16.9,5.7 C15.6,4.6 13.9,4 12,4 Z\\\" id=\\\"xabber:block-add\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/blocked</title>\\n    <g id=\\\"badge/icon/blocked\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,1 C11.8659932,1 15,4.13400675 15,8 C15,11.8659932 11.8659932,15 8,15 C4.13400675,15 1,11.8659932 1,8 C1,4.13400675 4.13400675,1 8,1 Z M12.3574649,4.64359326 L4.64359326,12.3574649 C5.57228864,13.073866 6.73637986,13.5 8,13.5 C11.0375661,13.5 13.5,11.0375661 13.5,8 C13.5,6.73637986 13.073866,5.57228864 12.3574649,4.64359326 Z M8,2.5 C4.96243388,2.5 2.5,4.96243388 2.5,8 C2.5,9.26408031 2.92644441,10.4285592 3.64331784,11.3574212 L11.3574212,3.64331784 C10.4285592,2.92644441 9.26408031,2.5 8,2.5 Z\\\" id=\\\"blocked\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/bot-variant</title>\\n    <g id=\\\"badge/icon/bot-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8,3.5 C9.93299662,3.5 11.5,5.06700338 11.5,7 L11.5,9.5 C11.5,11.1568542 9.93299662,12.5 8,12.5 C6.06700338,12.5 4.5,11.1568542 4.5,9.5 L4.5,7 L4.50517886,6.8079648 C4.60487355,4.9642776 6.1314366,3.5 8,3.5 Z M8,5 C6.9456382,5 6.08183488,5.81587779 6.00548574,6.85073766 L6,7 L6,8 C6,8.82842712 6.8954305,9.5 8,9.5 C9.1045695,9.5 10,8.82842712 10,8 L10,7 C10,5.8954305 9.1045695,5 8,5 Z M3.5,6 C3.77614237,6 4,6.22385763 4,6.5 L4,9.5 C4,9.77614237 3.77614237,10 3.5,10 C3.22385763,10 3,9.77614237 3,9.5 L3,6.5 C3,6.22385763 3.22385763,6 3.5,6 Z M12.5,6 C12.7761424,6 13,6.22385763 13,6.5 L13,9.5 C13,9.77614237 12.7761424,10 12.5,10 C12.2238576,10 12,9.77614237 12,9.5 L12,6.5 C12,6.22385763 12.2238576,6 12.5,6 Z\\\" id=\\\"Bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/bot</title>\\n    <g id=\\\"badge/icon/bot\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M8.5,2.9 C8.83137085,2.9 9.1,3.16862915 9.1,3.5 C9.1,3.6775201 9.02290618,3.83703397 8.9003726,3.94688754 L8.899,4.999 L11,5 C11.5522847,5 12,5.44771525 12,6 L12,7 C12.2761424,7 12.5,7.22385763 12.5,7.5 L12.5,8.5 C12.5,8.77614237 12.2761424,9 12,9 L12,11 C12,11.5522847 11.5522847,12 11,12 L5,12 C4.44771525,12 4,11.5522847 4,11 L4,9 C3.72385763,9 3.5,8.77614237 3.5,8.5 L3.5,7.5 C3.5,7.22385763 3.72385763,7 4,7 L4,6 C4,5.44771525 4.44771525,5 5,5 L8.1,4.999 L8.0996274,3.94688754 C7.97709382,3.83703397 7.9,3.6775201 7.9,3.5 C7.9,3.16862915 8.16862915,2.9 8.5,2.9 Z M9.5,10 L6.5,10 C6.22385763,10 6,10.2238576 6,10.5 C6,10.7761424 6.22385763,11 6.5,11 L9.5,11 C9.77614237,11 10,10.7761424 10,10.5 C10,10.2238576 9.77614237,10 9.5,10 Z M6.5,6 C6.22385763,6 6,6.22385763 6,6.5 L6,7 L5.5,7 C5.22385763,7 5,7.22385763 5,7.5 C5,7.77614237 5.22385763,8 5.5,8 L6,8 L6,8.5 C6,8.77614237 6.22385763,9 6.5,9 C6.77614237,9 7,8.77614237 7,8.5 L7,8 L7.5,8 C7.77614237,8 8,7.77614237 8,7.5 C8,7.22385763 7.77614237,7 7.5,7 L7,7 L7,6.5 C7,6.22385763 6.77614237,6 6.5,6 Z M9.5,7 C9.22385763,7 9,7.22385763 9,7.5 C9,7.77614237 9.22385763,8 9.5,8 C9.77614237,8 10,7.77614237 10,7.5 C10,7.22385763 9.77614237,7 9.5,7 Z\\\" id=\\\"bot\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/call-outline</title>\\n    <g id=\\\"icon/material/call-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,15.5 C18.8,15.5 17.5,15.3 16.4,14.9 C16.3,14.9 16.2,14.9 16.1,14.9 C15.8,14.9 15.6,15 15.4,15.2 L13.2,17.4 C10.4,15.9 8,13.6 6.6,10.8 L8.8,8.6 C9.1,8.3 9.2,7.9 9,7.6 C8.7,6.5 8.5,5.2 8.5,4 C8.5,3.5 8,3 7.5,3 L4,3 C3.5,3 3,3.5 3,4 C3,13.4 10.6,21 20,21 C20.5,21 21,20.5 21,20 L21,16.5 C21,16 20.5,15.5 20,15.5 L20,15.5 Z M5,5 L6.5,5 C6.6,5.9 6.8,6.8 7,7.6 L5.8,8.8 C5.4,7.6 5.1,6.3 5,5 L5,5 Z M19,19 C17.7,18.9 16.4,18.6 15.2,18.2 L16.4,17 C17.2,17.2 18.1,17.4 19,17.4 L19,19 Z\\\" id=\\\"mdi:phone-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/call</title>\\n    <g id=\\\"icon/material/call\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M6.62,10.79 C8.06,13.62 10.38,15.94 13.21,17.38 L15.41,15.18 C15.69,14.9 16.08,14.82 16.43,14.93 C17.55,15.3 18.75,15.5 20,15.5 C20.5522847,15.5 21,15.9477153 21,16.5 L21,20 C21,20.5522847 20.5522847,21 20,21 C10.6111593,21 3,13.3888407 3,4 C3,3.73478351 3.10535684,3.4804296 3.29289322,3.29289322 C3.4804296,3.10535684 3.73478351,3 4,3 L7.5,3 C8.05228475,3 8.5,3.44771525 8.5,4 C8.5,5.25 8.7,6.45 9.07,7.57 C9.18,7.92 9.1,8.31 8.82,8.59 L6.62,10.79 Z\\\" id=\\\"mdi:phone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/camera-retake</title>\\n    <g id=\\\"icon/material/camera-retake\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,5 L17,5 L15,3 L9,3 L7,5 L4,5 C2.8954305,5 2,5.8954305 2,7 L2,19 C2,20.1045695 2.8954305,21 4,21 L20,21 C21.1045695,21 22,20.1045695 22,19 L22,7 C22,5.8954305 21.1045695,5 20,5 M12,18.0000026 C10.92,18.0000026 9.86,17.65 9,17 L10.44,15.56 C10.91,15.85 11.45,16 12,16 C13.6568542,16 15,14.6568542 15,13 C15,11.3431458 13.6568542,10 12,10 C10.74,10 9.6,10.8 9.18,12 L11,12 L8,15 L5,12 L7.1,12 C7.36424064,10.6999079 8.13463224,9.5582575 9.24136868,8.82668596 C10.3481051,8.09511441 11.7003328,7.83367752 13,8.1 C15.5173928,8.61117175 17.2378687,10.9467344 16.9797109,13.5024961 C16.7215532,16.0582577 14.5687655,18.0025816 12,18.0000026 L12,18.0000026 Z\\\" id=\\\"mdi:camera-retake\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/cancel</title>\\n    <g id=\\\"icon/material/cancel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C9.3478351,22 6.80429597,20.9464316 4.92893219,19.0710678 C3.0535684,17.195704 2,14.6521649 2,12 C2,9.3478351 3.0535684,6.80429597 4.92893219,4.92893219 C6.80429597,3.0535684 9.3478351,2 12,2 M12,3.99999926 C7.581722,3.99999926 4,7.581722 4,11.9999993 C4,13.85 4.63,15.55 5.68,16.91 L16.91,5.68 C15.505295,4.59031127 13.7778124,3.99923779 12,3.99999926 M12,20.0000007 C16.418278,20.0000007 20,16.418278 20,12 C20,10.15 19.37,8.45 18.32,7.09 L7.09,18.32 C8.49470497,19.4096887 10.2221876,20.0007622 12,20.0000007 L12,20.0000007 Z\\\" id=\\\"mdi:cancel\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/channel</title>\\n    <g id=\\\"badge/icon/channel\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M6.5,12.5 C6.5,12.7761424 6.27614237,13 6,13 L5,13 C4.72385763,13 4.5,12.7761424 4.5,12.5 L4.5,9.997 L4.02563513,9.99796942 C3.49695533,9.99796942 3.06170233,9.63379568 3.00601829,9.10979782 L3,8.99514074 L3,7 C3,6.44278422 3.50172034,6 4.02563513,6 L8,6 L11,4 L11,12 L8,9.99796942 L6.5,9.997 L6.5,12.5 Z M12,6 C12.7835446,6.37375602 13.2808221,7.14951331 13.2820439,8 C13.2882682,8.85255761 12.7887168,9.63186239 12,10 L12,6 Z\\\" id=\\\"Horn\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-down</title>\\n    <g id=\\\"icon/material/chevron-down\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:chevron-down\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"7.41 8.58 12 13.17 16.59 8.58 18 10 12 16 6 10\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-left-variant</title>\\n    <g id=\\\"icon/material/chevron-left-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" transform=\\\"translate(11.500000, 12.000000) scale(-1, 1) translate(-11.500000, -12.000000) \\\" points=\\\"7 18.5 13.5 12 7 5.5 8.25 4.25 16 12 8.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/chevron-right-variant</title>\\n    <g id=\\\"icon/material/chevron-right-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"xabber:chevron-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 18.5 14.5 12 8 5.5 9.25 4.25 17 12 9.25 19.75\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/circles</title>\\n    <g id=\\\"icon/material/circles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.61510772,4.31938417 C8.28417501,5.13922603 8.07752033,6.02134442 8.01792471,6.94352205 L7.91776678,6.99321105 C5.73983381,8.11301495 4.25,10.3825228 4.25,13 C4.25,16.7279221 7.27207794,19.75 11,19.75 C13.6571359,19.75 15.9556781,18.2146777 17.0568945,15.9827652 C17.9787775,15.9224511 18.8608306,15.7158021 19.6796219,15.3853225 C18.6352051,19.1981743 15.1448033,22 11,22 C6.02943725,22 2,17.9705627 2,13 C2,8.85508685 4.80197429,5.36460986 8.61510772,4.31938417 Z M16.5,1 C20.0898509,1 23,3.91014913 23,7.5 C23,11.0898509 20.0898509,14 16.5,14 C12.9101491,14 10,11.0898509 10,7.5 C10,3.91014913 12.9101491,1 16.5,1 Z M16.5,3 C14.0147186,3 12,5.01471863 12,7.5 C12,9.98528137 14.0147186,12 16.5,12 C18.9852814,12 21,9.98528137 21,7.5 C21,5.01471863 18.9852814,3 16.5,3 Z\\\" id=\\\"xabber:circles\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/clock-outline</title>\\n    <g id=\\\"icon/material/clock-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 M12,2 C14.6521649,2 17.195704,3.0535684 19.0710678,4.92893219 C20.9464316,6.80429597 22,9.3478351 22,12 C22,17.5228475 17.5228475,22 12,22 C6.47,22 2,17.5 2,12 C2,6.4771525 6.4771525,2 12,2 M12.5,7 L12.5,12.25 L17,14.92 L16.25,16.15 L11,13 L11,7 L12.5,7 Z\\\" id=\\\"mdi:clock-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/close</title>\\n    <g id=\\\"icon/material/close\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:close\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs-gps</title>\\n    <g id=\\\"icon/material/crosshairs-gps\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs-gps\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs-question</title>\\n    <g id=\\\"icon/material/crosshairs-question\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\\\" id=\\\"mdi:crosshairs-question\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/crosshairs</title>\\n    <g id=\\\"icon/material/crosshairs\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\\\" id=\\\"mdi:crosshairs\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/description-outline</title>\\n    <g id=\\\"icon/material/description-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.11 3.89,21 5,21 L19,21 C20.11,21 21,20.11 21,19 L21,5 C21,3.89 20.11,3 19,3 L5,3 M5,5 L19,5 L19,19 L5,19 L5,5 M7,7 L7,9 L17,9 L17,7 L7,7 M7,11 L7,13 L17,13 L17,11 L7,11 M7,15 L7,17 L14,17 L14,15 L7,15 Z\\\" id=\\\"mdi:text-box-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/devices</title>\\n    <g id=\\\"icon/material/devices\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M23,11 L18,11 C17.4477153,11 17,11.4477153 17,12 L17,21 C17,21.5522847 17.4477153,22 18,22 L23,22 C23.5522847,22 24,21.5522847 24,21 L24,12 C24,11.4477153 23.5522847,11 23,11 M23,20 L18,20 L18,13 L23,13 L23,20 M20,2 L2,2 C0.89,2 0,2.89 0,4 L0,16 C0,17.1045695 0.8954305,18 2,18 L9,18 L9,20 L7,20 L7,22 L15,22 L15,20 L13,20 L13,18 L15,18 L15,16 L2,16 L2,4 L20,4 L20,9 L22,9 L22,4 C22,2.8954305 21.1045695,2 20,2 Z\\\" id=\\\"mdi:monitor-cellphone\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/edit-outline</title>\\n    <g id=\\\"icon/material/edit-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.06,9 L15,9.94 L5.92,19 L5,19 L5,18.08 L14.06,9 M17.66,3 C17.41,3 17.15,3.1 16.96,3.29 L15.13,5.12 L18.88,8.87 L20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18.17,3.09 17.92,3 17.66,3 M14.06,6.19 L3,17.25 L3,21 L6.75,21 L17.81,9.94 L14.06,6.19 Z\\\" id=\\\"mdi:pencil-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/edit</title>\\n    <g id=\\\"icon/material/edit\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20.71,7.04 C21.1,6.65 21.1,6 20.71,5.63 L18.37,3.29 C18,2.9 17.35,2.9 16.96,3.29 L15.12,5.12 L18.87,8.87 M3,17.25 L3,21 L6.75,21 L17.81,9.93 L14.06,6.18 L3,17.25 Z\\\" id=\\\"mdi:pencil\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/email-outline</title>\\n    <g id=\\\"icon/material/email-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,6 C22,4.9 21.1,4 20,4 L4,4 C2.9,4 2,4.9 2,6 L2,18 C2,19.1 2.9,20 4,20 L20,20 C21.1,20 22,19.1 22,18 L22,6 M20,6 L12,11 L4,6 L20,6 M20,18 L4,18 L4,8 L12,13 L20,8 L20,18 Z\\\" id=\\\"mdi:email-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-audio</title>\\n    <g id=\\\"icon/material/file-audio\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 L12,13.55 C11.41,13.21 10.73,13 10,13 C7.79,13 6,14.79 6,17 C6,19.21 7.79,21 10,21 C12.21,21 14,19.21 14,17 L14,7 L18,7 L18,3 L12,3 Z\\\" id=\\\"mdi:music-note\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-document</title>\\n    <g id=\\\"icon/material/file-document\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L18.5,9 L13,3.5 L13,9 M6,2 L14,2 L20,8 L20,20 C20,21.1045695 19.1045695,22 18,22 L6,22 C4.8954305,22 4,21.1045695 4,20 L4,4 C4,2.89 4.89,2 6,2 M15,18 L15,16 L6,16 L6,18 L15,18 M18,14 L18,12 L6,12 L6,14 L18,14 Z\\\" id=\\\"mdi:file-document\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-pdf</title>\\n    <g id=\\\"icon/material/file-pdf\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,3 C20.1045695,3 21,3.8954305 21,5 L21,19 C21,20.1045695 20.1045695,21 19,21 L5,21 C3.89,21 3,20.1 3,19 L3,5 C3,3.89 3.89,3 5,3 L19,3 M10.59,10.08 C10.57,10.13 10.3,11.84 8.5,14.77 C8.5,14.77 5,16.58 5.83,17.94 C6.5,19 8.15,17.9 9.56,15.27 C9.56,15.27 11.38,14.63 13.79,14.45 C13.79,14.45 17.65,16.19 18.17,14.34 C18.69,12.5 15.12,12.9 14.5,13.09 C14.5,13.09 12.46,11.75 12,9.89 C12,9.89 13.13,5.95 11.38,6 C9.63,6.05 10.29,9.12 10.59,10.08 M11.4,11.13 C11.43,11.13 11.87,12.33 13.29,13.58 C13.29,13.58 10.96,14.04 9.9,14.5 C9.9,14.5 10.9,12.75 11.4,11.13 M15.32,13.84 C15.9,13.69 17.64,14 17.58,14.32 C17.5,14.65 15.32,13.84 15.32,13.84 M8.26,15.7 C7.73,16.91 6.83,17.68 6.6,17.67 C6.37,17.66 7.3,16.07 8.26,15.7 M11.4,8.76 C11.39,8.71 11.03,6.57 11.4,6.61 C11.94,6.67 11.4,8.71 11.4,8.76 Z\\\" id=\\\"mdi:file-pdf-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-presentation</title>\\n    <g id=\\\"icon/material/file-presentation\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,2 L13,2 L13,3 L19,3 C20.1045695,3 21,3.8954305 21,5 L21,16 C21,17.1045695 20.1045695,18 19,18 L13,18 L13,21 L17,21 L17,23 L7,23 L7,21 L11,21 L11,18 L5,18 C3.8954305,18 3,17.1045695 3,16 L3,5 C3,3.8954305 3.8954305,3 5,3 L11,3 L11,2 Z M19,5 L5,5 L5,16 L19,16 L19,5 Z M9,9 L9,14 L7,14 L7,9 L9,9 Z M13,7 L13,14 L11,14 L11,7 L13,7 Z M17,11 L17,14 L15,14 L15,11 L17,11 Z\\\" id=\\\"xabber:presentation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-video</title>\\n    <g id=\\\"icon/material/file-video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18,9 L16,9 L16,7 L18,7 M18,13 L16,13 L16,11 L18,11 M18,17 L16,17 L16,15 L18,15 M8,9 L6,9 L6,7 L8,7 M8,13 L6,13 L6,11 L8,11 M8,17 L6,17 L6,15 L8,15 M18,3 L18,5 L16,5 L16,3 L8,3 L8,5 L6,5 L6,3 L4,3 L4,21 L6,21 L6,19 L8,19 L8,21 L16,21 L16,19 L18,19 L18,21 L20,21 L20,3 L18,3 Z\\\" id=\\\"mdi:filmstrip\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file-zip</title>\\n    <g id=\\\"icon/material/file-zip\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,17 L12,17 L12,15 L10,15 L10,13 L12,13 L12,15 L14,15 M14,9 L12,9 L12,11 L14,11 L14,13 L12,13 L12,11 L10,11 L10,9 L12,9 L12,7 L10,7 L10,5 L12,5 L12,7 L14,7 M19,3 L5,3 C3.89,3 3,3.89 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 L21,5 C21,3.89 20.1,3 19,3 Z\\\" id=\\\"mdi:zip-box\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/file</title>\\n    <g id=\\\"icon/material/file\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,9 L13,3.5 L18.5,9 M6,2 C4.89,2 4,2.89 4,4 L4,20 C4,21.1045695 4.8954305,22 6,22 L18,22 C19.1045695,22 20,21.1045695 20,20 L20,8 L14,2 L6,2 Z\\\" id=\\\"mdi:file\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/fullname-outline</title>\\n    <g id=\\\"icon/material/fullname-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,8 L14,8 L14,10 L20,10 L20,8 M20,12 L14,12 L14,14 L20,14 L20,12 M20,16 L14,16 L14,18 L20,18 L20,16 M22,4 L14,4 L14,6 L22,6 L22,20 L2,20 L2,6 L10,6 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/fullname</title>\\n    <g id=\\\"icon/material/fullname\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M22,4 L14,4 L14,7 L10,7 L10,4 L2,4 C0.8954305,4 0,4.8954305 0,6 L0,20 C0,21.1045695 0.8954305,22 2,22 L22,22 C23.1045695,22 24,21.1045695 24,20 L24,6 C24,4.8954305 23.1045695,4 22,4 M8,9 C9.1045695,9 10,9.8954305 10,11 C10,12.1045695 9.1045695,13 8,13 C6.8954305,13 6,12.1045695 6,11 C6,9.8954305 6.8954305,9 8,9 M12,17 L4,17 L4,16 C4,14.67 6.67,14 8,14 C9.33,14 12,14.67 12,16 L12,17 M20,18 L14,18 L14,16 L20,16 L20,18 M20,14 L14,14 L14,12 L20,12 L20,14 M20,10 L14,10 L14,8 L20,8 L20,10 M13,6 L11,6 L11,2 L13,2 L13,6 Z\\\" id=\\\"mdi:badge-account-horizontal\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-incognito</title>\\n    <g id=\\\"badge/icon/group-incognito\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,8.00704958 C10.9597902,8.00704958 12.8474987,8.64533875 12.9912872,9.91524601 L13,10.0706662 L13,11.0070496 L10.7492023,11.0070496 L10.75,9.875 C10.75,9.10242267 10.3751421,8.46914598 9.75414509,8.01828756 L9.88054216,8.01011295 L10,8.00704958 Z M7,8 C8.71428571,8 10,8.75 10,9.875 L10,11 L4,11 L4,9.875 C4,8.75 5.28571429,8 7,8 Z M7,8.75 C5.68529006,8.75 4.83790401,9.22876096 4.75645218,9.78636102 L4.75,9.875 L4.75,10.25 L9.25,10.25 L9.25,9.875 C9.25,9.31020891 8.46834945,8.80320839 7.20365867,8.75392032 L7,8.75 Z M10.5,4 C11.3284271,4 12,4.67157288 12,5.5 C12,6.32842712 11.3284271,7 10.5,7 C10.0309641,7 9.61220865,6.78472342 9.33715065,6.44758714 C9.59948544,6.02690214 9.75,5.53102835 9.75,5 C9.75,4.7455993 9.71545544,4.49926692 9.65080116,4.2654377 C9.89064982,4.09777196 10.183907,4 10.5,4 Z M7,3 C8.1045695,3 9,3.8954305 9,5 C9,6.1045695 8.1045695,7 7,7 C5.8954305,7 5,6.1045695 5,5 C5,3.8954305 5.8954305,3 7,3 Z M7,3.75 C6.30964406,3.75 5.75,4.30964406 5.75,5 C5.75,5.69035594 6.30964406,6.25 7,6.25 C7.69035594,6.25 8.25,5.69035594 8.25,5 C8.25,4.30964406 7.69035594,3.75 7,3.75 Z\\\" id=\\\"incognito\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-invite</title>\\n    <g id=\\\"badge/icon/group-invite\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.8,5 L11.2,5 C11.64,5 12,5.33981818 12,5.76363636 L12,10.2363636 C12,10.6581084 11.6418278,11 11.2,11 L4.8,11 C4.3581722,11 4,10.6581084 4,10.2363636 L4,5.76363636 C4,5.33981818 4.356,5 4.8,5 Z M4.57142857,5.81818182 L4.57142857,6.90909091 L8,9.09090909 L11.4285714,6.90909091 L11.4285714,5.81818182 L8,8 L4.57142857,5.81818182 Z\\\" id=\\\"invitation\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-private</title>\\n    <g id=\\\"badge/icon/group-private\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5.54386908,9.00001406 C4.74833179,9.00015914 4.03626356,9.50273575 3.75677818,10.2613541 C3.4772928,11.0199725 3.68898239,11.8755937 4.28805949,12.4087226 C4.88713659,12.9418515 5.74800895,13.0407214 6.44860686,12.6568582 C7.14920477,12.272995 7.54265288,11.4868729 7.43605089,10.683913 C7.61005089,10.6450242 7.79823271,10.6139132 7.99841453,10.6144687 C8.19859635,10.6155798 8.38677817,10.6450242 8.56077817,10.683913 C8.45417618,11.4868729 8.84762429,12.272995 9.5482222,12.6568582 C10.2488201,13.0407214 11.1096925,12.9418515 11.7087696,12.4087226 C12.3078467,11.8755937 12.5195363,11.0199725 12.2400509,10.2613541 C11.9605655,9.50273575 11.2484973,9.00015914 10.45296,9.00001406 C9.6733377,8.99699984 8.97079939,9.47872777 8.68023271,10.2155808 C8.45968538,10.1448214 8.22964016,10.109582 7.99841453,10.1111366 C7.69841453,10.1111366 7.49059635,10.1616921 7.31659635,10.2155808 C7.02602967,9.47872777 6.32349136,8.99699984 5.54386908,9.00001406 L5.54386908,9.00001406 Z M5.54386908,9.55558244 C6.29698464,9.55558244 6.90750544,10.1774076 6.90750544,10.9444679 C6.90750544,11.7115282 6.29698464,12.3333534 5.54386908,12.3333534 C4.79075351,12.3333534 4.18023271,11.7115282 4.18023271,10.9444679 C4.18023271,10.1774076 4.79075351,9.55558244 5.54386908,9.55558244 Z M10.45296,9.55558244 C11.2060756,9.55558244 11.8165963,10.1774076 11.8165963,10.9444679 C11.8165963,11.7115282 11.2060756,12.3333534 10.45296,12.3333534 C9.69984442,12.3333534 9.08932362,11.7115282 9.08932362,10.9444679 C9.08932362,10.1774076 9.69984442,9.55558244 10.45296,9.55558244 Z M8,7 C6.512,7 4.39345455,7.268 4.25,7.297 C3.78243762,7.41026088 3.32163107,7.54577794 2.86945455,7.703 C2.31418182,7.877 2,8 2,8 L14,8 C14,8 13.6858182,7.877 13.1305455,7.703 C12.6727414,7.54549536 12.2062901,7.40997808 11.7330909,7.297 C11.7330909,7.297 9.54036364,7 8,7 Z M8,3 C6.53163636,3.0015 5.49418182,3.6095 5.49418182,3.6095 L4.72727273,6 L11.2727273,6 L10.5058182,3.6095 C10.5058182,3.6095 9.46836364,3.001 8,3 Z\\\" id=\\\"private\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/group-public</title>\\n    <g id=\\\"badge/icon/group-public\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.500501,8 C11.3287776,8 11.995,7.328 11.995,6.5 C11.995,5.672 11.3287776,5 10.500501,5 C9.67222445,5 9,5.672 9,6.5 C9,7.328 9.67222445,8 10.500501,8 Z M6.5,7 C7.33,7 7.995,6.33 7.995,5.5 C7.995,4.67 7.33,4 6.5,4 C5.67,4 5,4.67 5,5.5 C5,6.33 5.67,7 6.5,7 Z M10.5,9 C9.66818182,9 8,9.46 8,10.375 L8,10.9989178 L13,10.9989178 L13,10.375 C13,9.46 11.3318182,9 10.5,9 Z M6.50474946,7.99186821 C4.77490105,7.99186821 3,8.585 3,9.75 L3,11 L7,11 L7,10 C7,9.24841871 7.73828683,8.72461975 8.70884076,8.35916117 C8.08932051,8.04219075 6.85693708,7.99186821 6.50474946,7.99186821 Z\\\" id=\\\"xabber:group-public\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/history</title>\\n    <g id=\\\"icon/material/history\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.5,8 L12,8 L12,13 L16.28,15.54 L17,14.33 L13.5,12.25 L13.5,8 M13,3 C8.02943725,3 4,7.02943725 4,12 L1,12 L4.96,16.03 L9,12 L6,12 C6,8.13400675 9.13400675,5 13,5 C16.8659932,5 20,8.13400675 20,12 C20,15.8659932 16.8659932,19 13,19 C11.07,19 9.32,18.21 8.06,16.94 L6.64,18.36 C8.31963558,20.0581063 10.6115589,21.0094707 13,21.00007 C17.9705627,21.00007 22,16.9705627 22,12 C22,7.02943725 17.9705627,3 13,3\\\" id=\\\"mdi:history\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\\\" />\";","export default \"<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path5\\\"\\n     d=\\\"m 5.2462478,6.4309194 c 0,0 0.2534497,0.5323027 1.6195791,-0.2126538 C 9.2126105,5.0708821 11.67437,4.0095 14.785441,5.5382202 17.009904,6.7924 17.27733,10.360371 13.864368,13.369134 c -1.679464,1.609494 -1.887868,4.226006 -1.825254,4.993295 -0.128246,1.561168 0.259655,1.837265 0.594912,1.938246 0.335257,0.100981 1.461445,-0.04379 1.305934,-1.000087 -0.193265,-1.461227 -0.06192,-2.413209 0.855267,-4.044829 0.758763,-1.162942 2.123721,-1.871086 3.273016,-4.211889 C 18.840748,9.1444158 18.891207,6.503336 17.479328,4.894053 16.152845,3.3821059 14.670099,2.4131656 12.422552,2.4210559 9.8716741,2.446853 8.13424,2.8374168 6.751418,3.5206351 4.5012489,4.730324 4.2973099,4.8714754 5.2462478,6.4309194 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cccccscccsccc\\\" />\\n<path\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path7\\\"\\n     d=\\\"M 10.393116,10.546893 C 10.179036,9.8582024 9.6418168,9.5037588 9.1268128,9.5037588 c -0.686671,0 -1.6386388,0.1373222 -1.6546508,1.5832442 0,0 0.5308711,2.944458 1.5235151,2.93234 0.364542,-0.004 0.7403587,-0.28287 0.017892,-1.856769 0,0 -0.4395592,-0.974022 -0.1380497,-1.193301 0.5440269,-0.394487 0.5911749,0.418754 0.9156116,1.069105 0.674692,0.328471 1.06244,-0.702948 1.201092,-0.722298 1.026124,-0.142524 -0.130551,1.372622 -0.2386,1.539241 -0.467844,0.515308 -1.3020963,1.251877 -0.614252,1.612091 0.864686,0.205725 1.292561,-0.492065 1.464229,-0.658684 0.2663,-0.37565 0.549622,-0.820112 0.721289,-1.133153 0.877971,-1.468145 0.834305,-2.8722146 -0.558429,-2.9011876 -0.515004,0 -0.814918,0.2302366 -1.373344,0.7725056 z\\\"\\n     clip-rule=\\\"evenodd\\\"\\n     sodipodi:nodetypes=\\\"cscccccccccccc\\\" />\\n<path\\n     sodipodi:nodetypes=\\\"cssccsccccssccssc\\\"\\n     style=\\\"fill-rule:evenodd\\\"\\n     inkscape:connector-curvature=\\\"0\\\"\\n     id=\\\"path9\\\"\\n     d=\\\"m 6.8360046,14.735541 c -0.2526865,-0.134842 -0.341246,-0.148685 -0.556785,-0.125105 -0.4758127,0.05205 -0.712045,0.475393 -0.6165306,0.901178 0.2727696,1.215955 1.0359093,1.641989 2.25985,2.132257 1.2530682,0.41756 2.475738,0.396638 3.398493,-0.0757 0.298412,-0.05064 0.287556,-0.683612 0.292618,-1.034981 0.006,-0.414484 -0.327129,-0.528727 -0.651454,-0.493243 -0.82369,0.222079 -0.891361,0.338578 -1.882259,0.248554 -1.1996954,-0.369888 -1.6284239,-0.589257 -2.2439324,-1.55296 z m -0.596727,2.884244 c -0.1641271,-0.121 -0.2921232,-0.08347 -0.442594,-0.06701 -0.3893935,0.0426 -0.727761,0.382603 -0.6463412,0.81143 0.2795655,1.472433 3.2776659,2.179707 4.6014193,2.113323 1.0831623,-0.05044 1.6865703,-0.273231 1.7646093,-1.16247 -0.03364,-0.366114 -0.266964,-0.659232 -0.720411,-0.609623 -0.432095,0.04727 -0.373883,0.118182 -1.0438868,0.191485 C 8.563559,19.026954 7.5842504,18.723225 6.2392776,17.619785 z\\\"\\n     clip-rule=\\\"evenodd\\\" />\\n\";","export default \"<path fill=\\\"#9E9E9E\\\" d=\\\"M15.5,12C18,12 20,14 20,16.5C20,17.38 19.75,18.21 19.31,18.9L22.39,22L21,23.39L17.88,20.32C17.19,20.75 16.37,21 15.5,21C13,21 11,19 11,16.5C11,14 13,12 15.5,12M15.5,14A2.5,2.5 0 0,0 13,16.5A2.5,2.5 0 0,0 15.5,19A2.5,2.5 0 0,0 18,16.5A2.5,2.5 0 0,0 15.5,14M19.35,8.03C21.95,8.22 24,10.36 24,13C24,14.64 23.21,16.1 22,17V16.5A6.5,6.5 0 0,0 15.5,10A6.5,6.5 0 0,0 9,16.5C9,17 9.06,17.5 9.17,18H6A6,6 0 0,1 0,12C0,8.9 2.34,6.36 5.35,6.03C6.6,3.64 9.11,2 12,2C15.64,2 18.67,4.59 19.35,8.03Z\\\" />\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/id-outline</title>\\n    <g id=\\\"icon/material/id-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C15.8659932,2 19,5.13400675 19,9 C19,11.38 17.81,13.47 16,14.74 L16,17 C16,17.5522847 15.5522847,18 15,18 L9,18 C8.44771525,18 8,17.5522847 8,17 L8,14.74 C6.19,13.47 5,11.38 5,9 C5,5.13400675 8.13400675,2 12,2 M9,21 L9,20 L15,20 L15,21 C15,21.5522847 14.5522847,22 14,22 L10,22 C9.44771525,22 9,21.5522847 9,21 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,11.05 8.23,12.81 10,13.58 L10,16 L14,16 L14,13.58 C15.77,12.81 17,11.05 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:lightbulb-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/image</title>\\n    <g id=\\\"icon/material/image\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M8.5,13.5 L11,16.5 L14.5,12 L19,18 L5,18 M21,19 L21,5 C21,3.89 20.1,3 19,3 L5,3 C3.8954305,3 3,3.8954305 3,5 L3,19 C3,20.1045695 3.8954305,21 5,21 L19,21 C20.1045695,21 21,20.1045695 21,19 Z\\\" id=\\\"mdi:image\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/index</title>\\n    <g id=\\\"icon/material/index\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C7.581722,2 4,5.581722 4,10 C4,14.03 7,17.42 11,17.93 L11,19 L10,19 C9.44771525,19 9,19.4477153 9,20 L2,20 L2,22 L9,22 C9,22.5522847 9.44771525,23 10,23 L14,23 C14.5522847,23 15,22.5522847 15,22 L22,22 L22,20 L15,20 C15,19.4477153 14.5522847,19 14,19 L13,19 L13,17.93 C17,17.43 20,14.03 20,10 C20,5.581722 16.418278,2 12,2 M12,4 C12,4 12.74,5.28 13.26,7 L10.74,7 C11.26,5.28 12,4 12,4 M9.77,4.43 C9.5,4.93 9.09,5.84 8.74,7 L6.81,7 C7.5,5.84 8.5,4.93 9.77,4.43 M14.23,4.44 C15.5,4.94 16.5,5.84 17.19,7 L15.26,7 C14.91,5.84 14.5,4.93 14.23,4.44 M6.09,9 L8.32,9 C8.28,9.33 8.25,9.66 8.25,10 C8.25,10.34 8.28,10.67 8.32,11 L6.09,11 C5.96891098,10.3388318 5.96891098,9.66116821 6.09,9 M10.32,9 L13.68,9 C13.72,9.33 13.75,9.66 13.75,10 C13.75,10.34 13.72,10.67 13.68,11 L10.32,11 C10.28,10.67 10.25,10.34 10.25,10 C10.25,9.66 10.28,9.33 10.32,9 M15.68,9 L17.91,9 C18.031089,9.66116821 18.031089,10.3388318 17.91,11 L15.68,11 C15.72,10.67 15.75,10.34 15.75,10 C15.75,9.66 15.72,9.33 15.68,9 M6.81,13 L8.74,13 C9.09,14.16 9.5,15.07 9.77,15.56 C8.5,15.06 7.5,14.16 6.81,13 M10.74,13 L13.26,13 C12.74,14.72 12,16 12,16 C12,16 11.26,14.72 10.74,13 M15.26,13 L17.19,13 C16.5,14.16 15.5,15.07 14.23,15.57 C14.5,15.07 14.91,14.16 15.26,13 Z\\\" id=\\\"mdi:wan\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/information-outline</title>\\n    <g id=\\\"icon/material/information-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M11,9 L13,9 L13,7 L11,7 M12,20 C7.59,20 4,16.41 4,12 C4,7.59 7.59,4 12,4 C16.41,4 20,7.59 20,12 C20,16.41 16.41,20 12,20 M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M11,17 L13,17 L13,11 L11,11 L11,17 Z\\\" id=\\\"mdi:information-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/invite-outline</title>\\n    <g id=\\\"icon/material/invite-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 L15.77,4.36 L19,4.36 L19,6.36 L21.03,7.65 C21.5653846,7.97307692 21.9388757,8.53473373 21.993168,9.19339554 L22,9.36 L22,19.36 C22,20.4195455 21.1890702,21.2786364 20.1499371,21.3545464 L20,21.36 L4,21.36 C2.9456382,21.36 2.08183488,20.5441222 2.00548574,19.5092623 L2,19.36 L2,9.36 C2,8.68615385 2.33230769,8.09751479 2.83961766,7.73565772 L5,6.36 L5,4.36 L8.23,4.36 L12,2 Z M20,11.36 L12,16.36 L4,11.36 L4,19.36 L20,19.36 L20,11.36 Z M17,6.36 L7,6.36 L7,11.24 L12,14.36 L17,11.24 L17,6.36 Z M16,9.86 L16,11.36 L8,11.36 L8,9.86 L16,9.86 Z M19,8.74 L19,9.99 L20,9.36 L19,8.74 Z M5,8.74 L4,9.36 L5,9.99 L5,8.74 Z M16,7.36 L16,8.86 L8,8.86 L8,7.36 L16,7.36 Z\\\" id=\\\"xabber:invite-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/job-outline</title>\\n    <g id=\\\"icon/material/job-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,6 C20.58,6 21.05,6.2 21.42,6.59 C21.8,7 22,7.45 22,8 L22,19 C22,19.55 21.8,20 21.42,20.41 C21.05,20.8 20.58,21 20,21 L4,21 C3.42,21 2.95,20.8 2.58,20.41 C2.2,20 2,19.55 2,19 L2,8 C2,7.45 2.2,7 2.58,6.59 C2.95,6.2 3.42,6 4,6 L8,6 L8,4 C8,3.42 8.2,2.95 8.58,2.58 C8.95,2.2 9.42,2 10,2 L14,2 C14.58,2 15.05,2.2 15.42,2.58 C15.8,2.95 16,3.42 16,4 L16,6 L20,6 M4,8 L4,19 L20,19 L20,8 L4,8 M14,6 L14,4 L10,4 L10,6 L14,6 Z\\\" id=\\\"mdi:briefcase-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/link</title>\\n    <g id=\\\"icon/material/link\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3.9,12 C3.9,10.29 5.29,8.9 7,8.9 L11,8.9 L11,7 L7,7 C4.23857625,7 2,9.23857625 2,12 C2,14.7614237 4.23857625,17 7,17 L11,17 L11,15.1 L7,15.1 C5.29,15.1 3.9,13.71 3.9,12 M8,13 L16,13 L16,11 L8,11 L8,13 M17,7 L13,7 L13,8.9 L17,8.9 C18.71,8.9 20.1,10.29 20.1,12 C20.1,13.71 18.71,15.1 17,15.1 L13,15.1 L13,17 L17,17 C19.7614237,17 22,14.7614237 22,12 C22,9.23857625 19.7614237,7 17,7 Z\\\" id=\\\"mdi:link\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/map-marker-outline</title>\\n    <g id=\\\"icon/material/map-marker-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 M12,2 C15.8659932,2 19,5.13400675 19,9 C19,14.25 12,22 12,22 C12,22 5,14.25 5,9 C5,5.13400675 8.13400675,2 12,2 M12,4 C9.23857625,4 7,6.23857625 7,9 C7,10 7,12 12,18.71 C17,12 17,10 17,9 C17,6.23857625 14.7614237,4 12,4 L12,4 Z\\\" id=\\\"mdi:map-marker-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/map-marker</title>\\n    <g id=\\\"icon/material/map-marker\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\\\" id=\\\"mdi:map-marker\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/membership-outline</title>\\n    <g id=\\\"icon/material/membership-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C6.4771525,2 2,6.4771525 2,12 C2,14.6521649 3.0535684,17.195704 4.92893219,19.0710678 C6.80429597,20.9464316 9.3478351,22 12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 M7.07,18.28 C7.5,17.38 10.12,16.5 12,16.5 C13.88,16.5 16.5,17.38 16.93,18.28 C15.5293835,19.3960251 13.7908746,20.0025637 12,20 C10.14,20 8.43,19.36 7.07,18.28 M18.36,16.83 C16.93,15.09 13.46,14.5 11.9999999,14.5 C10.54,14.5 7.07,15.09 5.64,16.83 C4.57618516,15.4446232 3.99966563,13.7467029 3.99999985,12 C3.99999985,7.59 7.59,4 11.9999999,4 C16.41,4 19.9999999,7.59 19.9999999,12 C19.9999999,13.82 19.38,15.5 18.36,16.83 M12,6 C10.06,6 8.5,7.56 8.5,9.5 C8.5,11.44 10.06,13 12,13 C13.94,13 15.5,11.44 15.5,9.5 C15.5,7.56 13.94,6 12,6 M12,11 C11.1715729,11 10.5,10.3284271 10.5,9.5 C10.5,8.67157288 11.1715729,8 12,8 C12.8284271,8 13.5,8.67157288 13.5,9.5 C13.5,10.3284271 12.8284271,11 12,11 Z\\\" id=\\\"mdi:account-circle-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/message-bookmark-outline</title>\\n    <g id=\\\"icon/material/message-bookmark-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M20,2 L4,2 C2.9,2 2,2.9 2,4 L2,22 L6,18 L20,18 C21.1,18 22,17.1 22,16 L22,4 C22,2.9 21.1,2 20,2 M20,16 L5.2,16 L4,17.2 L4,4 L20,4 L20,16 M18,14 L18,6 L13,6 L13,14 L15.5,12.5 L18,14\\\" id=\\\"mdi:message-bookmark-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"message-group-variant2\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M14.2526206,6 L21.4947588,6 C22.3260806,6 23,6.6752491 23,7.49824524 L23,24 L19,20 L8.50524116,20 C7.67391942,20 7,19.3247509 7,18.5017548 L7,17 L17.0005775,17 C18.6556493,17 20,15.6542582 20,13.9942017 L20,6 L14.2526206,6 Z\\\" id=\\\"Message2\\\"></path>\\n        <path d=\\\"M1,2.49824524 C1,1.67078724 1.66642015,1 2.50863659,1 L16.4913634,1 C17.3245604,1 18,1.6752491 18,2.49824524 L18,13.5017548 C18,14.3292128 17.3335799,15 16.4913634,15 L5,15 L1,19 L1,2.49824524 Z M4,10 L4,12 L12,12 L12,10 L4,10 Z M4,7 L4,9 L15,9 L15,7 L4,7 Z M4,4 L4,6 L15,6 L15,4 L4,4 Z\\\" id=\\\"Combined-Shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/minus</title>\\n    <g id=\\\"icon/material/minus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:minus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 13 5 13 5 11 19 11\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/mobile</title>\\n    <g id=\\\"badge/icon/mobile\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10,1 C11.1045695,1 12,1.8954305 12,3 L12,12 C12,13.1045695 11.1045695,14 10,14 L6,14 C4.8954305,14 4,13.1045695 4,12 L4,3 C4,1.8954305 4.8954305,1 6,1 L10,1 Z M10,4 L6,4 L6,10 L10,10 L10,4 Z\\\" id=\\\"Mobile\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/palette</title>\\n    <g id=\\\"icon/material/palette\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.5,12 C16.6715729,12 16,11.3284271 16,10.5 C16,9.67157288 16.6715729,9 17.5,9 C18.3284271,9 19,9.67157288 19,10.5 C19,11.3284271 18.3284271,12 17.5,12 M14.5,8 C13.6715729,8 13,7.32842712 13,6.5 C13,5.67157288 13.6715729,5 14.5,5 C15.3284271,5 16,5.67157288 16,6.5 C16,7.32842712 15.3284271,8 14.5,8 M9.5,8 C8.67157288,8 8,7.32842712 8,6.5 C8,5.67157288 8.67157288,5 9.5,5 C10.3284271,5 11,5.67157288 11,6.5 C11,7.32842712 10.3284271,8 9.5,8 M6.5,12 C5.67157288,12 5,11.3284271 5,10.5 C5,9.67157288 5.67157288,9 6.5,9 C7.32842712,9 8,9.67157288 8,10.5 C8,11.3284271 7.32842712,12 6.5,12 M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C12.8284271,21 13.5,20.3284271 13.5,19.5 C13.5,19.11 13.35,18.76 13.11,18.5 C12.88,18.23 12.73,17.88 12.73,17.5 C12.73,16.6715729 13.4015729,16 14.23,16 L16,16 C18.7614237,16 21,13.7614237 21,11 C21,6.58 16.97,3 12,3 L12,3 Z\\\" id=\\\"mdi:palette\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pause</title>\\n    <g id=\\\"icon/material/pause\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,19 L18,19 L18,5 L14,5 M6,19 L10,19 L10,5 L6,5 L6,19 Z\\\" id=\\\"mdi:pause\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-bottom-right</title>\\n    <g id=\\\"icon/material/picture-in-picture-bottom-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,11 L11,11 L11,17 L19,17 L19,11 M23,19 L23,5 C23,3.88 22.1,3 21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 M21,19 L3,19 L3,4.97 L21,4.97 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-bottom-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-minimize</title>\\n    <g id=\\\"icon/material/picture-in-picture-minimize\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M21,3 C22.1,3 23,3.88 23,5 L23.0008195,11.8103588 C22.4253055,11.2578757 21.7483079,10.8103075 21.000576,10.4984036 L21,4.97 L3,4.97 L3,19 L12.4984036,19.000576 C12.8103075,19.7483079 13.2578757,20.4253055 13.8103588,21.0008195 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L21,3 Z M21,13 L21,14.5 L17.5,14.5 L22,19 L21,20 L16.5,15.5 L16.5,19 L15,19 L15,13 L21,13 Z M13,7 L13,13 L5,13 L5,7 L13,7 Z\\\" id=\\\"xabber:picture-in-picture-minimize\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/picture-in-picture-top-right</title>\\n    <g id=\\\"icon/material/picture-in-picture-top-right\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19,7 L11,7 L11,13 L19,13 L19,7 M21,3 L3,3 C1.8954305,3 1,3.8954305 1,5 L1,19 C1,20.1045695 1.8954305,21 3,21 L21,21 C22.1045695,21 23,20.1045695 23,19 L23,5 C23,3.8954305 22.1045695,3 21,3 M21,19 L3,19 L3,5 L21,5 L21,19 Z\\\" id=\\\"mdi:picture-in-picture-top-right\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pinned-circle-small</title>\\n    <g id=\\\"icon/material/pinned-circle-small\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,3 C16.9705627,3 21,7.02943725 21,12 C21,16.9705627 16.9705627,21 12,21 C7.02943725,21 3,16.9705627 3,12 C3,7.02943725 7.02943725,3 12,3 Z M12,4 C7.581722,4 4,7.581722 4,12 C4,16.418278 7.581722,20 12,20 C16.418278,20 20,16.418278 20,12 C20,7.581722 16.418278,4 12,4 Z M14,6.5 L17.5,9.5 L16.5,10.5 L16,10 L14.25,13.25 L15.25,14.75 L14,16 L11.5,13.5 L8.75,16.25 L7.75,16.25 L7.75,15.25 L10.5,12.5 L8,10 L9.25,8.75 L10.75,9.75 L13.5,8 L13,7.5 L14,6.5 Z\\\" id=\\\"xabber:pinned-small\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/pinned</title>\\n    <g id=\\\"icon/material/pinned\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M14.5,6 L18,9.5 L17,10.5 L16.5,10 L14.5,13 L15.5,14.5 L14,16 L11.5,13.5 L8.5,16.5 L7.5,16.5 L7.5,15.5 L10.5,12.5 L8,10 L9.5,8.5 L11,9.5 L14,7.5 L13.5,7 L14.5,6 Z\\\" id=\\\"xabber:pinned\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/play</title>\\n    <g id=\\\"icon/material/play\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:play\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"8 5 8 19 19 12\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-float</title>\\n    <g id=\\\"icon/material/player-float\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13,3 L13,5 L3,5 L3,19 L20,19 L20,11 L22,11 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L13,3 Z M13,9 L13,15 L11.5,15 L11.5,11.5 L6.5,16.5 L5.5,15.5 L10.5,10.5 L7,10.5 L7,9 L13,9 Z M22,2 C23.1045695,2 24,2.8954305 24,4 L24,7 C24,8.1045695 23.1045695,9 22,9 L17,9 C15.8954305,9 15,8.1045695 15,7 L15,4 C15,2.8954305 15.8954305,2 17,2 L22,2 Z\\\" id=\\\"xabber:player-float\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-full</title>\\n    <g id=\\\"icon/material/player-full\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14.8101336,2.99941507 C14.2575941,3.5750451 13.8100058,4.25218587 13.4981326,5.00007375 L3,5 L3,19 L20,19 L20.000332,13.9810299 C20.7043777,13.9274362 21.3770687,13.7616821 22.000576,13.5015964 L22,19 C22,20.1045695 21.1045695,21 20,21 L3,21 C1.8954305,21 1,20.1045695 1,19 L1,5 C1,3.8954305 1.8954305,3 3,3 L14.8101336,2.99941507 Z M12,10 C13.1045695,10 14,10.8954305 14,12 L14,15 C14,16.1045695 13.1045695,17 12,17 L7,17 C5.8954305,17 5,16.1045695 5,15 L5,12 C5,10.8954305 5.8954305,10 7,10 L12,10 Z M22,4 L23,5 L18.5,9.5 L22,9.5 L22,11 L16,11 L16,5 L17.5,5 L17.5,8.5 L22,4 Z\\\" id=\\\"xabber:picture-in-picture-full\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-mini-variant</title>\\n    <g id=\\\"icon/material/player-mini-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini-variant\\\" fill=\\\"#000000\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/player-mini</title>\\n    <g id=\\\"icon/material/player-mini\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,8 L17,9.5 L13.5,9.5 L18,14 L17,15 L12.5,10.5 L12.5,14 L11,14 L11,8 L17,8 Z M19.5,4.5 C19.5,5.32842712 18.8284271,6 18,6 L6,6 C5.17157288,6 4.5,5.32842712 4.5,4.5 C4.5,3.67157288 5.17157288,3 6,3 L18,3 C18.8284271,3 19.5,3.67157288 19.5,4.5 Z\\\" id=\\\"xabber:player-mini\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/plus</title>\\n    <g id=\\\"icon/material/plus\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <polygon id=\\\"mdi:plus\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" points=\\\"19 12.998 13 12.998 13 18.998 11 18.998 11 12.998 5 12.998 5 10.998 11 10.998 11 4.998 13 4.998 13 10.998 19 10.998\\\"></polygon>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <symbol id=\\\"plyr-airplay\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16 1H2a1 1 0 00-1 1v10a1 1 0 001 1h3v-2H3V3h12v8h-2v2h3a1 1 0 001-1V2a1 1 0 00-1-1z\\\"></path><path d=\\\"M4 17h10l-5-6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-off\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\" fill-opacity=\\\".5\\\"></path></symbol>\\n    <symbol id=\\\"plyr-captions-on\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h4.6l2.7 2.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3l2.7-2.7H17c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1H1zm4.52 10.15c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41C8.47 4.96 7.46 3.76 5.5 3.76c-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69zm7.57 0c1.99 0 3.01-1.32 3.28-2.41l-1.29-.39c-.19.66-.78 1.45-1.99 1.45-1.14 0-2.2-.83-2.2-2.34 0-1.61 1.12-2.37 2.18-2.37 1.23 0 1.78.75 1.95 1.43l1.3-.41c-.28-1.15-1.29-2.35-3.25-2.35-1.9 0-3.61 1.44-3.61 3.7 0 2.26 1.65 3.69 3.63 3.69z\\\" fill-rule=\\\"evenodd\\\"></path></symbol>\\n    <symbol id=\\\"plyr-download\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9 13c.3 0 .5-.1.7-.3L15.4 7 14 5.6l-4 4V1H8v8.6l-4-4L2.6 7l5.7 5.7c.2.2.4.3.7.3zm-7 2h14v2H2z\\\"></path></symbol><symbol id=\\\"plyr-enter-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10 3h3.6l-4 4L11 8.4l4-4V8h2V1h-7zM7 9.6l-4 4V10H1v7h7v-2H4.4l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-exit-fullscreen\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M1 12h3.6l-4 4L2 17.4l4-4V17h2v-7H1zM16 .6l-4 4V1h-2v7h7V6h-3.6l4-4z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-fast-forward\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M7.875 7.171L0 1v16l7.875-6.171V17L18 9 7.875 1z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-vimeo\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M17 5.3c-.1 1.6-1.2 3.7-3.3 6.4-2.2 2.8-4 4.2-5.5 4.2-.9 0-1.7-.9-2.4-2.6C5 10.9 4.4 6 3 6c-.1 0-.5.3-1.2.8l-.8-1c.8-.7 3.5-3.4 4.7-3.5 1.2-.1 2 .7 2.3 2.5.3 2 .8 6.1 1.8 6.1.9 0 2.5-3.4 2.6-4 .1-.9-.3-1.9-2.3-1.1.8-2.6 2.3-3.8 4.5-3.8 1.7.1 2.5 1.2 2.4 3.3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-logo-youtube\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.8 5.8c-.2-1.3-.8-2.2-2.2-2.4C12.4 3 9 3 9 3s-3.4 0-5.6.4C2 3.6 1.3 4.5 1.2 5.8 1 7.1 1 9 1 9s0 1.9.2 3.2c.2 1.3.8 2.2 2.2 2.4C5.6 15 9 15 9 15s3.4 0 5.6-.4c1.4-.3 2-1.1 2.2-2.4.2-1.3.2-3.2.2-3.2s0-1.9-.2-3.2zM7 12V6l5 3-5 3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-muted\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pause\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M6 1H3c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm6 0c-.6 0-1 .4-1 1v14c0 .6.4 1 1 1h3c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1h-3z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-pip\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M13.293 3.293L7.022 9.564l1.414 1.414 6.271-6.271L17 7V1h-6z\\\"></path><path d=\\\"M13 15H3V5h5V3H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1v-6h-2v5z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-play\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.562 8.1L3.87.225c-.818-.562-1.87 0-1.87.9v15.75c0 .9 1.052 1.462 1.87.9L15.563 9.9c.584-.45.584-1.35 0-1.8z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-restart\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M9.7 1.2l.7 6.4 2.1-2.1c1.9 1.9 1.9 5.1 0 7-.9 1-2.2 1.5-3.5 1.5-1.3 0-2.6-.5-3.5-1.5-1.9-1.9-1.9-5.1 0-7 .6-.6 1.4-1.1 2.3-1.3l-.6-1.9C6 2.6 4.9 3.2 4 4.1 1.3 6.8 1.3 11.2 4 14c1.3 1.3 3.1 2 4.9 2 1.9 0 3.6-.7 4.9-2 2.7-2.7 2.7-7.1 0-9.9L16 1.9l-6.3-.7z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-rewind\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M10.125 1L0 9l10.125 8v-6.171L18 17V1l-7.875 6.171z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-settings\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M16.135 7.784a2 2 0 01-1.23-2.969c.322-.536.225-.998-.094-1.316l-.31-.31c-.318-.318-.78-.415-1.316-.094a2 2 0 01-2.969-1.23C10.065 1.258 9.669 1 9.219 1h-.438c-.45 0-.845.258-.997.865a2 2 0 01-2.969 1.23c-.536-.322-.999-.225-1.317.093l-.31.31c-.318.318-.415.781-.093 1.317a2 2 0 01-1.23 2.969C1.26 7.935 1 8.33 1 8.781v.438c0 .45.258.845.865.997a2 2 0 011.23 2.969c-.322.536-.225.998.094 1.316l.31.31c.319.319.782.415 1.316.094a2 2 0 012.969 1.23c.151.607.547.865.997.865h.438c.45 0 .845-.258.997-.865a2 2 0 012.969-1.23c.535.321.997.225 1.316-.094l.31-.31c.318-.318.415-.781.094-1.316a2 2 0 011.23-2.969c.607-.151.865-.547.865-.997v-.438c0-.451-.26-.846-.865-.997zM9 12a3 3 0 110-6 3 3 0 010 6z\\\"></path></symbol>\\n    <symbol id=\\\"plyr-volume\\\" viewBox=\\\"0 0 18 18\\\"><path d=\\\"M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z\\\"></path><path d=\\\"M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z\\\"></path></symbol>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/qrcode</title>\\n    <g id=\\\"icon/material/qrcode\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M3,11 L5,11 L5,13 L3,13 L3,11 M11,5 L13,5 L13,9 L11,9 L11,5 M9,11 L13,11 L13,15 L11,15 L11,13 L9,13 L9,11 M15,11 L17,11 L17,13 L19,13 L19,11 L21,11 L21,13 L19,13 L19,15 L21,15 L21,19 L19,19 L19,21 L17,21 L17,19 L13,19 L13,21 L11,21 L11,17 L15,17 L15,15 L17,15 L17,13 L15,13 L15,11 M19,19 L19,15 L17,15 L17,19 L19,19 M15,3 L21,3 L21,9 L15,9 L15,3 M17,5 L17,7 L19,7 L19,5 L17,5 M3,3 L9,3 L9,9 L3,9 L3,3 M5,5 L5,7 L7,7 L7,5 L5,5 M3,15 L9,15 L9,21 L3,21 L3,15 M5,17 L5,19 L7,19 L7,17 L5,17 Z\\\" id=\\\"mdi:qrcode\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/restrictions-outline</title>\\n    <g id=\\\"icon/material/restrictions-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M18.5,8 C18.33,8 18.16,8 18,8.05 L18,4.5 C18,3.11928813 16.8807119,2 15.5,2 C15.31,2 15.13,2 14.96,2.06 C14.7461874,0.868716938 13.7103179,0.0012815407 12.5,0 C11.44,0 10.54,0.66 10.17,1.59 C9.41693202,1.38051444 8.60922719,1.53531349 7.98697307,2.00838366 C7.36471894,2.48145383 6.99954575,3.21833807 7,4 L7,4.55 C6.84,4.5 6.67,4.5 6.5,4.5 C5.11928813,4.5 4,5.61928813 4,7 L4,15.5 C4,20.19 7.81,24 12.5,24 C17.19,24 21,20.19 21,15.5 L21,10.5 C21,9.11928813 19.8807119,8 18.5,8 M19,15.5 C19,19.0898509 16.0898509,22 12.5,22 C8.91014913,22 6,19.0898509 6,15.5 L6,7 C6,6.72 6.22,6.5 6.5,6.5 C6.78,6.5 7,6.72 7,7 L7,12 L9,12 L9,4 C9,3.72 9.22,3.5 9.5,3.5 C9.78,3.5 10,3.72 10,4 L10,11 L12,11 L12,2.5 C12,2.22 12.22,2 12.5,2 C12.78,2 13,2.22 13,2.5 L13,11 L15,11 L15,4.5 C15,4.22 15.22,4 15.5,4 C15.78,4 16,4.22 16,4.5 L16,13.42 C14.23,14.19 13,15.95 13,18 L15,18 C15,16.34 16.34,15 18,15 L18,10.5 C18,10.22 18.22,10 18.5,10 C18.78,10 19,10.22 19,10.5 L19,15.5 Z\\\" id=\\\"mdi:hand-front-right-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/rss-variant</title>\\n    <g id=\\\"badge/icon/rss-variant\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M5,10 C5.55228475,10 6,10.4477153 6,11 C6,11.5412844 5.55045872,12 5,12 C4.4587156,12 4,11.5412844 4,11 C4,10.4477153 4.44771525,10 5,10 M4,4 C8.418278,4 12,7.581722 12,12 L10.5449871,12 C10.5449871,8.38530341 7.61469659,5.45501285 4,5.45501285 L4,4 M4,7 C6.76142375,7 9,9.23857625 9,12 L7.57070707,12 C7.57070707,11.0529896 7.19450866,10.1447663 6.52487118,9.47512882 C5.85523371,8.80549134 4.9470104,8.42929293 4,8.42929293 L4,7 Z\\\" id=\\\"rss-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/rss</title>\\n    <g id=\\\"badge/icon/rss\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M4.75,10 C5.44035594,10 6,10.5596441 6,11.25 C6,11.9403559 5.44035594,12.5 4.75,12.5 C4.05964406,12.5 3.5,11.9403559 3.5,11.25 C3.5,10.5596441 4.05964406,10 4.75,10 Z M5.11116669,7.54639605 C6.82660407,7.80940186 8.1830606,9.16218778 8.45158391,10.8758014 L7.23152342,11.1795044 C7.08441894,9.91212418 6.07561709,8.9075227 4.80628203,8.7668642 L5.11116669,7.54639605 Z M5.72009926,5.11432766 C8.32885675,5.60976503 10.3855062,7.6642481 10.8841422,10.2718714 L9.66858256,10.5739265 C9.28406621,8.41337145 7.57799724,6.7100586 5.41602734,6.32963962 L5.72009926,5.11432766 Z M6.32787101,2.68573625 C9.83044069,3.40831848 12.5892971,6.16611302 13.3134345,9.66811414 L12.0989255,9.96960741 C11.4871421,6.91510726 9.07973668,4.50930363 6.02438684,3.89987406 L6.32787101,2.68573625 Z\\\" id=\\\"Channel-variant\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/saved-messages</title>\\n    <g id=\\\"icon/material/saved-messages\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17.1666667,1 C17.9487847,1 18.6165365,1.26855469 19.1699219,1.80566406 C19.7233073,2.34277344 20,2.99088542 20,3.75 L20,21.625 C20,21.9973958 19.8634983,22.3196615 19.5904948,22.5917969 C19.3174913,22.8639323 18.9817708,23 18.5833333,23 L12,18.1875 L5.41666667,23 C5.01822917,23 4.68250868,22.8639323 4.40950521,22.5917969 C4.13650174,22.3196615 4,21.9973958 4,21.625 L4,3.75 C4,2.99088542 4.27669271,2.34277344 4.83007812,1.80566406 C5.38346354,1.26855469 6.05121528,1 6.83333333,1 L17.1666667,1 Z M12.0016667,4.4375 L10.2972396,8.1328125 L6.335,8.6484375 L9.256875,11.4199219 L8.50427083,15.4375 L12.0016667,13.4609375 L15.4990625,15.4375 L14.7464583,11.4199219 L17.6683333,8.6484375 L13.7060938,8.1328125 L12.0016667,4.4375 Z\\\" id=\\\"xabber:saved-messages\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/search</title>\\n    <g id=\\\"icon/material/search\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <mask id=\\\"mask-2\\\" fill=\\\"white\\\">\\n            <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n        </mask>\\n        <path d=\\\"M15.5,14 L14.71,14 L14.43,13.73 C15.41,12.59 16,11.11 16,9.5 C16,5.91 13.09,3 9.5,3 C5.91,3 3,5.91 3,9.5 C3,13.09 5.91,16 9.5,16 C11.11,16 12.59,15.41 13.73,14.43 L14,14.71 L14,15.5 L19,20.49 L20.49,19 L15.5,14 Z M9.5,14 C7.01,14 5,11.99 5,9.5 C5,7.01 7.01,5 9.5,5 C11.99,5 14,7.01 14,9.5 C14,11.99 11.99,14 9.5,14 Z\\\" id=\\\"path-1\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/icon/server</title>\\n    <g id=\\\"badge/icon/server\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <path d=\\\"M10.1428571,13 L5.85714286,13 C5.38571429,13 5,12.625 5,12.1666667 L5,3.83333333 C5,3.375 5.38571429,3 5.85714286,3 L10.1428571,3 C10.6142857,3 11,3.375 11,3.83333333 L11,12.1666667 C11,12.625 10.6142857,13 10.1428571,13 Z M10,5 L6,5 L6,6 L10,6 L10,5 Z M10,7 L6,7 L6,8 L10,8 L10,7 Z M10,11 L9,11 L9,12 L10,12 L10,11 Z\\\" id=\\\"Server\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/status-outline</title>\\n    <g id=\\\"icon/material/status-outline\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M16.06,2.2 L17.74,6.26 L21.8,7.94 L20.12,12 L21.8,16.06 L17.74,17.74 L16.06,21.8 L12,20.12 L7.94,21.8 L6.26,17.74 L2.2,16.06 L3.88,12 L2.2,7.94 L6.26,6.26 L7.94,2.2 L12,3.88 L16.06,2.2 Z M15,4.81 L12,6.05 L9,4.81 L7.79,7.79 L4.81,9 L6.05,12 L4.81,15 L7.79,16.21 L9,19.19 L12,17.95 L15,19.19 L16.21,16.21 L19.19,15 L17.95,12 L19.19,9 L16.21,7.79 L15,4.81 Z M13.5,7 L12,11 L15,11 L11.5,17 L10.5,17 L12,13 L9,13 L12.5,7 L13.5,7 Z\\\" id=\\\"xabber:status-outline\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/subscription-from</title>\\n    <g id=\\\"icon/material/subscription-from\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,8 C17.3137085,8 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.6862915,20 8,17.3137085 8,14 C8,13.462632 8.07064283,12.9417636 8.20314833,12.4461748 L9.67168223,13.9143229 C9.77459988,14.0172246 9.8859413,14.1065666 10.0034864,14.1823489 L10.0048953,14.1996403 C10.1089211,16.3160315 11.8578046,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.851413 16.3059677,10.0984884 14.180685,10.0040081 C14.1065666,9.8859413 14.0172246,9.77459988 13.9143229,9.67168223 L12.4461748,8.20314833 C12.9417636,8.07064283 13.462632,8 14,8 Z M11,4 L11,6 L7.415,6 L12.5,11.0857864 L11.0857864,12.5 L6,7.415 L6,11 L4,11 L4,4 L11,4 Z\\\" id=\\\"xabber:subscribe-from\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/subscription-to</title>\\n    <g id=\\\"icon/material/subscription-to\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M13.9994979,8.00000002 C17.3137085,8.00000002 20,10.6862915 20,14 C20,17.3137085 17.3137085,20 14,20 C10.7616031,20 8.12242824,17.4344251 8.00413847,14.2249383 L8,13.999 L10,14 L10,14 C10,16.209139 11.790861,18 14,18 C16.209139,18 18,16.209139 18,14 C18,11.8578046 16.3160315,10.1089211 14.1996403,10.0048953 L13.999,10 L13.9994979,8.00000002 Z M4.91421356,3.5 L10,8.585 L10,5 L12,5 L12,12 L5,12 L5,10 L8.585,10 L3.5,4.91421356 L4.91421356,3.5 Z\\\" id=\\\"xabber:subscribe-to\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>badge/circle/task</title>\\n    <g id=\\\"badge/circle/task\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n        <circle id=\\\"Circle\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\" cx=\\\"8\\\" cy=\\\"8\\\" r=\\\"7\\\"></circle>\\n        <g id=\\\"icon16/bot-variant\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"16\\\" height=\\\"16\\\"></rect>\\n            <polygon id=\\\"Path\\\" fill=\\\"#FFFFFF\\\" fill-rule=\\\"nonzero\\\" points=\\\"7 12.5 2.75 8.25 4 7 7 10 12 5 13.25 6.25\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/translate</title>\\n    <g id=\\\"icon/material/translate\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12.87,15.07 L10.33,12.56 L10.36,12.53 C12.0541502,10.6471017 13.3198948,8.41925464 14.07,6 L17,6 L17,4 L10,4 L10,2 L8,2 L8,4 L1,4 L1,6 L12.17,6 C11.5,7.92 10.44,9.75 9,11.35 C8.07,10.32 7.3,9.19 6.69,8 L4.69,8 C5.42,9.63 6.42,11.17 7.67,12.56 L2.58,17.58 L4,19 L9,14 L12.11,17.11 L12.87,15.07 M18.5,10 L16.5,10 L12,22 L14,22 L15.12,19 L19.87,19 L21,22 L23,22 L18.5,10 M15.88,17 L17.5,12.67 L19.12,17 L15.88,17 L15.88,17 Z\\\" id=\\\"mdi:translate\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/video</title>\\n    <g id=\\\"icon/material/video\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M17,10.5 L17,7 C17,6.44771525 16.5522847,6 16,6 L4,6 C3.44771525,6 3,6.44771525 3,7 L3,17 C3,17.5522847 3.44771525,18 4,18 L16,18 C16.5522847,18 17,17.5522847 17,17 L17,13.5 L21,17.5 L21,6.5 L17,10.5 Z\\\" id=\\\"mdi:video\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/volume-high</title>\\n    <g id=\\\"icon/material/volume-high\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 C19,15.17 16.89,17.84 14,18.7 L14,20.77 C18,19.86 21,16.28 21,12 C21,7.72 18,4.14 14,3.23 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,16 C15.5,15.29 16.5,13.76 16.5,12 M3,9 L3,15 L7,15 L12,20 L12,4 L7,9 L3,9 Z\\\" id=\\\"mdi:volume-high\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Mobile-Portrait\\\" transform=\\\"translate(-41.000000, -4.000000)\\\">\\n        <g id=\\\"volume-off-variant\\\" transform=\\\"translate(34.000000, 0.000000)\\\">\\n            <rect id=\\\"Bounds\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n            <polygon id=\\\"Path-2\\\" points=\\\"7 9 7 15 11 15 16 20 16 16.5 8.5 9\\\"></polygon>\\n            <polygon id=\\\"Path-3\\\" points=\\\"7 6 18.5 17.5 19.5 16.5 16 13 16 4 11.5 8.5 8 5\\\"></polygon>\\n        </g>\\n    </g>\\n</g>\\n\";","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"24px\\\" height=\\\"24px\\\" viewBox=\\\"0 0 24 24\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>icon/material/volume-off</title>\\n    <g id=\\\"icon/material/volume-off\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect id=\\\"ViewBox\\\" fill-rule=\\\"nonzero\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"24\\\" height=\\\"24\\\"></rect>\\n        <path d=\\\"M12,4 L9.91,6.09 L12,8.18 M4.27,3 L3,4.27 L7.73,9 L3,9 L3,15 L7,15 L12,20 L12,13.27 L16.25,17.53 C15.58,18.04 14.83,18.46 14,18.7 L14,20.77 C15.38,20.45 16.63,19.82 17.68,18.96 L19.73,21 L21,19.73 L12,10.73 M19,12 C19,12.94 18.8,13.82 18.46,14.64 L19.97,16.15 C20.62,14.91 21,13.5 21,12 C21,7.72 18,4.14 14,3.23 L14,5.29 C16.89,6.15 19,8.83 19,12 M16.5,12 C16.5,10.23 15.5,8.71 14,7.97 L14,10.18 L16.45,12.63 C16.5,12.43 16.5,12.21 16.5,12 Z\\\" id=\\\"mdi:volume-off\\\" fill=\\\"#000000\\\" fill-rule=\\\"nonzero\\\"></path>\\n    </g>\\n</svg>\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Offline\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8015103 C17.1966102,15.1049344 17.0013821,15.5296633 17,16 C17,16.5522847 16.5443356,17 16.0046024,17 L7.99539757,17 C7.44565467,17 7,16.5561352 6.99998649,16 C6.99861167,15.5296664 6.80338616,15.10494 6.49000549,14.8015163 L6.49000549,14.8000192 C4.95622884,13.3424727 4,11.282906 4,9 C4,4.581722 7.581722,1 12,1 C16.418278,1 20,4.581722 20,9 C20,11.282906 19.0437712,13.3424727 17.5099945,14.8000192 L17.5099945,14.8015103 Z M8.86088543,15 L15.1391084,15 C15.3021338,14.4253123 15.6014858,13.895093 16,13.472213 C17.2274987,12.3735719 18,10.7769996 18,9 C18,5.6862915 15.3137085,3 12,3 C8.6862915,3 6,5.6862915 6,9 C6,10.7769996 6.77250128,12.3735719 8,13.472213 C8.39851111,13.8950917 8.69786083,14.4253152 8.86088543,15 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n    <g id=\\\"Xabber-Online\\\" fill=\\\"#000000\\\">\\n        <path d=\\\"M13.4146471,22.5 L14.009222,22.5 C14.5490248,22.5 15,22.0522847 15,21.5 C15,20.9438648 14.5564136,20.5 14.009222,20.5 L9.99077797,20.5 C9.45097518,20.5 9,20.9477153 9,21.5 C9,22.0561352 9.44358641,22.5 9.99077797,22.5 L10.5853529,22.5 C10.7912711,23.0825962 11.3468906,23.5 12,23.5 C12.6531094,23.5 13.2087289,23.0825962 13.4146471,22.5 Z\\\" id=\\\"Base\\\"></path>\\n        <rect id=\\\"Middle-base\\\" x=\\\"8\\\" y=\\\"17.75\\\" width=\\\"8\\\" height=\\\"2\\\" rx=\\\"1\\\"></rect>\\n        <path d=\\\"M17.5099945,14.8015103 L17.5099945,14.8000192 C19.0437712,13.3424727 20,11.282906 20,9 C20,4.581722 16.418278,1 12,1 C7.581722,1 4,4.581722 4,9 C4,11.282906 4.95622884,13.3424727 6.49000549,14.8000192 L6.49000549,14.8015163 C6.80338616,15.10494 6.99861167,15.5296664 6.99998649,16 C7,16.5561352 7.44565467,17 7.99539757,17 L16.0046024,17 C16.5443356,17 17,16.5522847 17,16 C17.0013821,15.5296633 17.1966102,15.1049344 17.5099945,14.8015103 L17.5099945,14.8015103 Z\\\" id=\\\"Bulb-shape\\\"></path>\\n    </g>\\n</g>\\n\";","export default \"<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 17.765357,5.9248618 c 0.009,0.1518861 -0.206601,0.1119764 -0.206601,0.2652514 0,4.4595198 -5.17314,11.2012628 -10.3933633,12.5152538 v 0.136731 C 14.101125,18.204712 21.825325,11.114777 22,4.2839629 l -4.233831,1.6413619 z\\\"\\n     id=\\\"path4-5\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 15.907561,6.3610856 c 0.009,0.1518861 0.014,0.3045804 0.014,0.4578554 0,4.459522 -3.55133,10.468554 -8.7715528,11.783009 v 0.189367 C 13.982554,18.349079 19.389945,11.500913 19.389945,6.1592263 c 0,-0.2747361 -0.01446,-0.5470438 -0.04292,-0.8162264 l -3.439122,1.017508 z\\\"\\n     id=\\\"path6\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 6.2332547,5.9248618 c -0.00886,0.1518861 0.2067174,0.1119764 0.2067174,0.2652514 0,4.4595198 5.3857609,11.2631498 10.6063279,12.5777208 V 18.95743 C 10.11103,18.318886 2.1746761,11.11443 2,4.2836157 l 4.2337177,1.6413618 z\\\"\\n     id=\\\"path8\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"M 8.3307389,6.473525 C 8.3219828,6.6254111 8.31686,6.7777591 8.31686,6.9312646 c 0,4.4595214 3.551213,10.4685544 8.771549,11.7830104 v 0.189596 C 10.258286,18.581129 4.8484667,11.613351 4.8484667,6.2717814 c 0,-0.2747361 0.014805,-0.5470427 0.042915,-0.8162284 l 3.4391228,1.0177415 z\\\"\\n     id=\\\"path10\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 4.8583007,5.3920472 0.8811221,0.3148763 c -0.00473,0.111283 -0.00765,0.2607395 -0.00765,0.3730642 0,4.7681513 4.3114542,11.3600893 10.0954942,12.3914783 0.375377,0.125857 0.871982,0.240263 1.264595,0.339052 V 19 C 9.5433961,18.356828 4.2400023,10.686651 4.857725,5.3915852 z\\\"\\n     id=\\\"path12\\\" />\\n<path\\n     inkscape:connector-curvature=\\\"0\\\"\\n     d=\\\"m 19.390639,5.2968432 -0.906108,0.3036565 c 0.0047,0.1113977 0.02208,0.2548387 0.02208,0.3670476 0,4.7681497 -4.311569,11.3602047 -10.0957226,12.3914777 -0.3751445,0.125972 -0.8719856,0.240267 -1.2643666,0.33917 v 0.189596 C 15.052467,17.886018 20.00767,10.591448 19.389946,5.2967275 z\\\"\\n     id=\\\"path14\\\" />\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <span class=\\\"block-name\\\"></span>\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"xmpp\\\"></svg></div>\\n        <div class=\\\"info jabber-id\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info first-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info middle-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info last-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info fullname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\">\\n        <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n        <div class=\\\"info nickname\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info birthday\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap job-info-wrap hidden\\\">\\n        <div class=\\\"details-icon-wrap\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n        <div class=\\\"info org-name\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info job-title\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info org-unit\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info role\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info url\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap description-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n        <div class=\\\"info description\\\">\\n            <div class=\\\"value\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap phone-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n        <div class=\\\"info phone-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-mobile\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info phone-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap email-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n        <div class=\\\"info email-work\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-home\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info email-default\\\">\\n            <div class=\\\"value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap address-info-wrap hidden\\\">\\n        <i title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}' class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n        <div class=\\\"info address-home\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-work\\\">\\n            <div class=\\\"pobox value one-line\\\"></div>\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n        </div>\\n        <div class=\\\"info address-default\\\">\\n            <div class=\\\"extadd value one-line\\\"></div>\\n            <div class=\\\"street value one-line\\\"></div>\\n            <div class=\\\"locality value one-line\\\"></div>\\n            <div class=\\\"region value one-line\\\"></div>\\n            <div class=\\\"pcode value one-line\\\"></div>\\n            <div class=\\\"country value one-line\\\"></div>\\n            <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n        </div>\\n    </div>\\n    <button class=\\\"btn-vcard-edit btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300 hidden\\\">{[print(xabber.getString(\\\"edit_vcard\\\"))]}</button>\\n</div>\\n\";","export default \"    <div class=\\\"right-column noselect\\\">\\n        <div class=\\\"settings-panel-head\\\">\\n            <span>{[print(xabber.getString(\\\"vcard_edit__header\\\"))]}</span>\\n            <div class=\\\"buttons-wrap\\\">\\n                <button class=\\\"btn-vcard-back btn-flat btn-main btn-dark ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_cancel\\\"))]}</button>\\n                <button class=\\\"btn-vcard-save btn-flat btn-main text-color-500 ground-color-grey-100 hover-ground-color-grey-300\\\">{[print(xabber.getString(\\\"vcard_edit__button_save\\\"))]}</button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"panel-content-wrap\\\">\\n            <div class=\\\"panel-content details-panel\\\">\\n\\n                <div class=\\\"settings-block-wrap vcard\\\">\\n                    <div class=\\\"vcard-edit-wrap\\\">\\n                        <div class=\\\"info-wrap personal-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-card-details\\\"></i>\\n                            <div class=\\\"input-field first-name\\\">\\n                                <input id=\\\"{{view.cid}}-first-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_given_name'))]}\\\" type=\\\"text\\\" name=\\\"first_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field middle-name\\\">\\n                                <input id=\\\"{{view.cid}}-middle-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_middle_name'))]}\\\" type=\\\"text\\\" name=\\\"middle_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field last-name\\\">\\n                                <input id=\\\"{{view.cid}}-last-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_family_name'))]}\\\" type=\\\"text\\\" name=\\\"last_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field fullname\\\">\\n                                <input id=\\\"{{view.cid}}-fullname\\\" placeholder=\\\"{[print(xabber.getString('vcard_full_name'))]}\\\" type=\\\"text\\\" name=\\\"fullname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap nickname-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-account-box-outline\\\"></i>\\n                            <div class=\\\"input-field nickname\\\">\\n                                <input id=\\\"{{view.cid}}-nickname\\\" placeholder=\\\"{[print(xabber.getString('vcard_nick_name'))]}\\\" type=\\\"text\\\" name=\\\"nickname\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap birthday-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-cake-variant\\\"></i>\\n                            <div class=\\\"input-field birthday\\\">\\n                                <input id=\\\"{{view.cid}}-birthday\\\" placeholder=\\\"{[print(xabber.getString('vcard_birth_date_placeholder'))]}\\\" type=\\\"text\\\" class=\\\"datepicker\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap job-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_job\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-briefcase\\\"></i>\\n                            <div class=\\\"input-field org-name\\\">\\n                                <input id=\\\"{{view.cid}}-org-name\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization'))]}\\\" type=\\\"text\\\" name=\\\"org_name\\\">\\n                            </div>\\n                            <div class=\\\"input-field job-title\\\">\\n                                <input id=\\\"{{view.cid}}-job-title\\\" placeholder=\\\"{[print(xabber.getString('vcard_title'))]}\\\" type=\\\"text\\\" name=\\\"job_title\\\">\\n                            </div>\\n                            <div class=\\\"input-field org-unit\\\">\\n                                <input id=\\\"{{view.cid}}-org-unit\\\" placeholder=\\\"{[print(xabber.getString('vcard_organization_unit'))]}\\\" type=\\\"text\\\" name=\\\"org_unit\\\">\\n                            </div>\\n                            <div class=\\\"input-field role\\\">\\n                                <input id=\\\"{{view.cid}}-role\\\" placeholder=\\\"{[print(xabber.getString('vcard_role'))]}\\\" type=\\\"text\\\" name=\\\"role\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap site-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                            <div class=\\\"input-field url\\\">\\n                                <input id=\\\"{{view.cid}}-url\\\" placeholder=\\\"{[print(xabber.getString('vcard_url_placeholder'))]}\\\" type=\\\"text\\\" name=\\\"url\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap description-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-file-document-box\\\"></i>\\n                            <div class=\\\"input-field description\\\">\\n                                <textarea id=\\\"{{view.cid}}-description\\\" placeholder=\\\"{[print(xabber.getString('vcard_decsription_placeholder'))]}\\\" type=\\\"text\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"text-field materialize-textarea\\\" name=\\\"description\\\"></textarea>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap phone-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-phone\\\"></i>\\n                            <div class=\\\"input-field phone-work\\\">\\n                                <input id=\\\"{{view.cid}}-phone-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"phone_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-home\\\">\\n                                <input id=\\\"{{view.cid}}-phone-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_home'))]}\\\" type=\\\"text\\\" name=\\\"phone_home\\\">\\n                            </div>\\n                            <div class=\\\"input-field phone-mobile\\\">\\n                                <input id=\\\"{{view.cid}}-phone-mobile\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_mobile'))]}\\\" type=\\\"text\\\" name=\\\"phone_mobile\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"info-wrap email-info-wrap\\\">\\n                            <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-email\\\"></i>\\n                            <div class=\\\"input-field email-work\\\">\\n                                <input id=\\\"{{view.cid}}-email-work\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_work'))]}\\\" type=\\\"text\\\" name=\\\"email_work\\\">\\n                            </div>\\n                            <div class=\\\"input-field email-home\\\">\\n                                <input id=\\\"{{view.cid}}-email-home\\\" placeholder=\\\"{[print(xabber.getString('vcard_type_personal'))]}\\\" type=\\\"text\\\" name=\\\"email_home\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"info-wrap address-info-wrap\\\">\\n                            <i class=\\\"details-icon mdi mdi-24px mdi-map-marker\\\"></i>\\n                            <div class=\\\"input-wrap address-wrap address-home-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_home_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-home-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_home_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-home-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_home_country\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"input-wrap address-wrap address-work-wrap\\\">\\n                                <div class=\\\"input-label\\\">{[print(xabber.getString(\\\"vcard_work_address\\\"))]}</div>\\n                                <div class=\\\"input-field pobox\\\">\\n                                    <input id=\\\"{{view.cid}}-po-work-box\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pobox'))]}\\\" type=\\\"text\\\" name=\\\"po_work_box\\\">\\n                                </div>\\n                                <div class=\\\"input-field extadd\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-extadd\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_extadr'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_extadd\\\">\\n                                </div>\\n                                <div class=\\\"input-field street\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-street\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_street'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_street\\\">\\n                                </div>\\n                                <div class=\\\"input-field locality\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-locality\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_locality'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_locality\\\">\\n                                </div>\\n                                <div class=\\\"input-field region\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-region\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_region'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_region\\\">\\n                                </div>\\n                                <div class=\\\"input-field pcode\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-pcode\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_pcode'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_pcode\\\">\\n                                </div>\\n                                <div class=\\\"input-field country\\\">\\n                                    <input id=\\\"{{view.cid}}-addr-work-country\\\" placeholder=\\\"{[print(xabber.getString('vcard_address_ctry'))]}\\\" type=\\\"text\\\" name=\\\"addr_work_country\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\";","export default \"<div class=\\\"block-header\\\">\\n    <div class=\\\"btn-vcard-refresh\\\">\\n        <div class=\\\"button\\\">\\n            <i class=\\\"mdi mdi-20px mdi-refresh\\\"></i>\\n        </div>\\n        <div class=\\\"preloader-wrapper preloader-20px active\\\">\\n            <div class=\\\"spinner-layer\\\">\\n                <div class=\\\"circle-clipper left\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"gap-patch\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n                <div class=\\\"circle-clipper right\\\">\\n                    <div class=\\\"circle\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"vcard-wrap\\\">\\n    <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info jabber-id\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info nickname\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info first-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info last-name\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info birthday\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n        <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n        <div class=\\\"info-hover\\\">\\n            <div class=\\\"info url\\\">\\n                <div class=\\\"value one-line\\\"></div>\\n                <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"info-wrap more\\\">\\n        <div class=\\\"show-vcard\\\">\\n            {[print(xabber.getString(\\\"contact_vcard_more\\\"))]}\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"full-vcard-wrap\\\">\\n    <div class=\\\"full-vcard-content\\\">\\n        <div class=\\\"vcard-header block-header\\\">\\n            <div class=\\\"vcard-header-title\\\">\\n                <i class=\\\"details-icon btn-back mdi mdi-24px mdi-arrow-left\\\"></i>\\n                <span class=\\\"block-name\\\">{[print(xabber.getString(\\\"contact_vcard_header_title\\\"))]}</span>\\n            </div>\\n            <div class=\\\"main-info\\\">\\n                <div class=\\\"avatar-wrap\\\">\\n                    <div class=\\\"circle-avatar\\\"/>\\n                </div>\\n                <div class=\\\"text-info\\\">\\n                    <div class=\\\"name-wrap\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"vcard-list\\\">\\n            <div class=\\\"info-wrap jid-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"id-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info jabber-id\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_jabber_id\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap nickname-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"account-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info nickname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_nick_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap personal-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"fullname-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info first-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_given_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info middle-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_middle_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info last-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_family_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info fullname\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_full_name\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap birthday-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"birthday-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info birthday\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_birth_date\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap job-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-name\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info job-title\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_title\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info org-unit\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_organization_unit\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info role\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_role\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap site-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <i class=\\\"details-icon mdi mdi-24px mdi-web\\\"></i>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info url\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_url\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap description-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"description-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info description\\\">\\n                        <div class=\\\"value\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_decsription\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap phone-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"call-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-mobile\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_mobile\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info phone-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_telephone\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap email-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"email-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-work\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-home\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_personal\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info email-default\\\">\\n                        <div class=\\\"value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_email\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-wrap address-info-wrap hidden\\\" title='{[print(xabber.getString(\\\"group_settings__properties__tooltip_copy_by_click\\\"))]}'>\\n                <div class=\\\"details-icon-wrap\\\"><svg class=\\\"details-icon mdi mdi-24px mdi-svg-template\\\" data-svgname=\\\"job-outline\\\"></svg></div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-home\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_home\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-work\\\">\\n                        <div class=\\\"pobox value one-line\\\"></div>\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_type_work\\\"))]}</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"info-hover\\\">\\n                    <div class=\\\"info address-default\\\">\\n                        <div class=\\\"extadd value one-line\\\"></div>\\n                        <div class=\\\"street value one-line\\\"></div>\\n                        <div class=\\\"locality value one-line\\\"></div>\\n                        <div class=\\\"region value one-line\\\"></div>\\n                        <div class=\\\"pcode value one-line\\\"></div>\\n                        <div class=\\\"country value one-line\\\"></div>\\n                        <div class=\\\"label\\\">{[print(xabber.getString(\\\"vcard_address\\\"))]}</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"resources-block-wrap hidden\\\">\\n                <div class=\\\"resources-wrap\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","var constants = {\n\n    STORAGE_NAME: 'xabber-storage',\n    STORAGE_VERSION: 'v8',\n\n    CONTAINER_ELEMENT: \"#xabber-container\",\n\n    FAVICON_DEFAULT: \"assets/images/favicon.png\",\n    FAVICON_MESSAGE: \"assets/images/favicon-message.png\",\n    BACKGROUND_IMAGE: \"assets/images/background.png\",\n\n    WIDTH_MEDIUM: 1650,\n    WIDTH_NARROW: 1280,\n    WIDTH_TINY: 1152,\n\n    LOG_LEVEL_NONE: -1,\n    LOG_LEVEL_ERROR: 1,\n    LOG_LEVEL_WARN: 2,\n    LOG_LEVEL_INFO: 3,\n    LOG_LEVEL_DEBUG: 4,\n\n    LOG_LEVEL: 'ERROR',\n\n    KEY_BACKSPACE: 8,\n    KEY_TAB: 9,\n    KEY_ENTER: 13,\n    KEY_SHIFT: 16,\n    KEY_CTRL: 17,\n    KEY_ESCAPE: 27,\n    KEY_SPACE: 32,\n    KEY_ARROW_LEFT: 37,\n    KEY_ARROW_UP: 38,\n    KEY_ARROW_RIGHT: 39,\n    KEY_ARROW_DOWN: 40,\n    KEY_DELETE: 46,\n    KEY_FORWARD_SLASH: 47,\n    KEY_AT: 50,\n\n    VOICE_MSG_TIME: 120,\n\n    PASSWORD_DOT: String.fromCharCode(0x2022),\n\n    CONNECTION_URL: null,\n\n    CONN_STATUSES: {\n        0: 'ERROR',\n        1: 'CONNECTING',\n        2: 'CONNFAIL',\n        3: 'AUTHENTICATING',\n        4: 'AUTHFAIL',\n        5: 'CONNECTED',\n        6: 'DISCONNECTED',\n        7: 'DISCONNECTING',\n        8: 'ATTACHED',\n        9: 'REDIRECT',\n        10: 'CONNTIMEOUT'\n    },\n\n    PREKEYS_COUNT: 100,\n    MIN_PREKEYS_COUNT: 80,\n\n    AES_KEY_LENGTH: 128,\n    AES_TAG_LENGTH: 128,\n    AES_EXTRACTABLE: true,\n\n    BAD_CONN_STATUSES: [0, 2, 4, 6, 10],\n\n    RECONNECTION_TIMEOUTS: [5000, 10000, 15000],\n\n    STATUS_WEIGHTS: {\n        chat: 1,\n        online: 2,\n        away: 3,\n        xa: 4,\n        dnd: 5,\n        offline: 6,\n        unavailable: 7\n    },\n\n    PRESENT_INTERVAL: 30000,\n    CHATSTATE_INTERVAL_COMPOSING_AUDIO: 5000,\n    CHATSTATE_TIMEOUT_PAUSED: 15000,\n    CHATSTATE_TIMEOUT_STOPPED: 5000,\n    CHATSTATE_TIMEOUT_PAUSED_AUDIO: 10000,\n\n    JINGLE_WAITING_TIME: 60,\n\n    SYNCHRONIZATION_RSM_MAX: 25,\n\n    REGISTRATION_DOMAINS: [],\n    LOGIN_DOMAINS: [],\n    TRUSTED_DOMAINS: [],\n    RECOMMENDED_DOMAIN: '',\n    REGISTRATION_BUTTON: true,\n    REGISTRATION_CUSTOM_DOMAIN: true,\n    LOGIN_CUSTOM_DOMAIN: true,\n\n    TURN_SERVERS_LIST: [\n        {\n            url: 'turn:numb.viagenie.ca',\n            credential: 'muazkh',\n            username: 'webrtc@live.com'\n        },\n        {\n            urls: \"turn:turn.editcompany.org:5439\",\n            username: \"test\",\n            credential: \"1111\"\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=udp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        },\n        {\n            urls: 'turn:192.158.29.39:3478?transport=tcp',\n            credential: 'JZEOEt2V3Qb0y27GRntt2u2PAYA=',\n            username: '28224511:1379330808'\n        }\n    ],\n\n    JINGLE_MSG_PROPOSE: 0,\n    JINGLE_MSG_REJECT: 1,\n    JINGLE_MSG_ACCEPT: 2,\n\n    MSG_BLOCKED: -2,\n    MSG_ERROR: -1,\n    MSG_PENDING: 0,\n    MSG_SENT: 1,\n    MSG_DELIVERED: 2,\n    MSG_DISPLAYED: 3,\n    MSG_ARCHIVED: 4,\n    MSG_SAVED: 5,\n\n    RSM_ATTRIBUTES: ['max', 'first', 'last', 'after', 'before', 'index', 'count'],\n    MAM_ATTRIBUTES: ['with', 'start', 'end'],\n\n    GENERAL_GROUP_ID: 1,\n    NON_ROSTER_GROUP_ID: 2,\n\n    MATERIAL_COLORS: [\n        \"red\", \"green\", \"blue\", \"deep-purple\", \"orange\", \"lime\",\n        \"pink\", \"purple\", \"indigo\", \"light-blue\", \"cyan\", \"teal\",\n        \"light-green\", \"amber\", \"deep-orange\", \"brown\", \"blue-grey\"\n    ],\n\n    MAX_AVATAR_FILE_SIZE: 64000,\n\n    AVATAR_PRIORITIES: {\n        VCARD_AVATAR: 0,\n        PUBSUB_AVATAR: 1\n    },\n\n    EMAIL_FOR_JOIN_TRANSLATION: \"info@xabber.com\",\n\n    AVATAR_SIZES: {\n        TOOLBAR_ACCOUNT_ITEM: 32,\n        SETTINGS_ACCOUNT_ITEM: 32,\n        XABBER_ACCOUNT: 32,\n        SYNCHRONIZE_ACCOUNT_ITEM: 36,\n        MENTION_ITEM: 36,\n        ACCOUNT_SETTINGS_LEFT: 96,\n        ACCOUNT_VCARD_EDIT: 80,\n        ROSTER_RIGHT_ACCOUNT_ITEM: 38,\n        ROSTER_LEFT_ACCOUNT_ITEM: 40,\n        PARTICIPANT_DETAILS_ITEM: 48,\n        CONTACT_RIGHT_ITEM: 32,\n        GROUPCHAT_MEMBER_ITEM: 32,\n        CONTACT_LEFT_ITEM: 32,\n        CONTACT_BLOCKED_ITEM: 32,\n        CONTACT_DETAILS: 192,\n        GROUP_SETTINGS: 96,\n        CHAT_ITEM: 40,\n        CHAT_HEAD: 40,\n        CHAT_MESSAGE: 32,\n        CHAT_BOTTOM: 48,\n        XABBER_VOICE_CALL_VIEW: 128,\n        OMEMO_ENABLE_SETTING: 182\n    },\n\n    SOUNDS: {\n        beep_up: 'assets/sounds/beep_up.ogg',\n        tiny_noize: 'assets/sounds/tiny_noize.ogg',\n        retro_game: 'assets/sounds/retro_game.ogg',\n        pixel_beep: 'assets/sounds/pixel_beep.ogg',\n        beep_positive: 'assets/sounds/beep_positive.ogg',\n        good_chime: 'assets/sounds/good_chime.ogg',\n        cellular_click: 'assets/sounds/cellular_click.ogg',\n        bleep: 'assets/sounds/bleep.ogg',\n        mono_u: 'assets/sounds/mono_u.ogg',\n        plop: 'assets/sounds/plop.ogg',\n        ether: 'assets/sounds/ether.ogg',\n        pop: 'assets/sounds/pop.ogg',\n        computer_chime: 'assets/sounds/computer_chime.ogg',\n        beep_a: 'assets/sounds/beep_a.ogg',\n        call: 'assets/sounds/marching-band-dave-girtsman.mp3',\n        connecting: 'assets/sounds/alien-bomb-timer.wav',\n        busy: 'assets/sounds/phone_busy.wav',\n        attention: 'assets/sounds/attention.wav'\n    },\n\n    SYNC_WAY_DATA: {\n        no: {\n            tip: 'xabber_account__sync__settings_already_synced',\n            icon: 'mdi-cloud-check'\n        },\n        from_server: {\n            tip: 'xabber_account__sync__settings_will_be_downloaded',\n            icon: 'mdi-cloud-download'\n        },\n        to_server: {\n            tip: 'xabber_account__sync__settings_will_be_uploaded',\n            icon: 'mdi-cloud-upload'\n        },\n        delete: {\n            tip: 'xabber_account__sync__acc_will_be_deleted',\n            icon: 'mdi-delete'\n        },\n        off_local: {\n            tip: 'xabber_account__sync__local_acc',\n            icon: 'mdi-cloud-outline-off'\n        },\n        off_remote: {\n            tip: 'xabber_account__sync__remote_acc',\n            icon: 'mdi-cloud-outline-off'\n        }\n    },\n\n    SYNCED_STATUS_DATA: {\n        off: {\n            tip: 'xabber_account__sync_status__disabled',\n            icon: 'mdi-cloud-outline-off'\n        },\n        yes: {\n            tip: 'xabber_account__sync_status__synced',\n            icon: 'mdi-cloud-check'\n        },\n        no: {\n            tip: 'xabber_account__sync_status__not_synced',\n            icon: 'mdi-cloud'\n        }\n    },\n\n    EMOJI_LIST_NAME: function (emoji_list) {\n        return {\n            \"smiles_and_people\": 'emoji_list__catelory_name__smiles_and_people',\n            \"body_and_clothes\": 'emoji_list__catelory_name__body_and_clothes',\n            \"animals_and_nature\": 'emoji_list__catelory_name__animals_and_nature',\n            \"food_and_drinks\": 'emoji_list__catelory_name__food_and_drinks',\n            \"travel_and_places\": 'emoji_list__catelory_name__travel_and_places',\n            \"events\": 'emoji_list__catelory_name__events',\n            \"objects\": 'emoji_list__catelory_name__objects',\n            \"signs\": 'emoji_list__catelory_name__signs'\n        }[emoji_list]\n    },\n\n    QUOTE_MARKER: '&gt;',\n    MARKUP_TAGS: ['bold', 'underline', 'italic', 'strike', 'link', 'quote'],\n\n    BLANK_VIDEO: {\n        OGG: 'data:video/ogg;base64, ',\n        MP4: 'data:video/mp4;base64, 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',\n        WEBM: 'data:video/webm;base64, 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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK'\n    },\n\n    MIME_TYPES: {\n        image: [\n            'image/gif',\n            'image/jpeg',\n            'image/pjpeg',\n            'image/png',\n            'image/svg+xml',\n            'image/tiff',\n            'image/vnd.microsoft.icon',\n            'image/vnd.wap.wbmp',\n            'image/webp'\n        ],\n        audio: [\n            'audio/basic',\n            'audio/L24',\n            'audio/mp4',\n            'audio/aac',\n            'audio/mpeg',\n            'audio/ogg',\n            'audio/ogg; codecs=opus',\n            'audio/ogg; codecs=opus+voice',\n            'audio/vorbis',\n            'audio/x-ms-wma',\n            'audio/x-ms-wax',\n            'audio/vnd.rn-realaudio',\n            'audio/vnd.wave',\n            'audio/webm',\n            'audio/x-wav'\n        ],\n        video: [\n            'video/mpeg',\n            'video/mp4',\n            'video/ogg',\n            'video/quicktime',\n            'video/webm',\n            'video/x-ms-wmv',\n            'video/x-flv',\n            'video/3gpp',\n            'video/3gpp2'\n        ],\n        document: [\n            'text/cmd',\n            'text/css',\n            'text/csv',\n            'text/html',\n            'text/javascript (Obsolete)',\n            'text/plain',\n            'text/php',\n            'text/xml',\n            'text/markdown',\n            'text/cache-manifestapplication/json',\n            'application/xml',\n            'application/vnd.oasis.opendocument.text',\n            'application/vnd.oasis.opendocument.graphics',\n            'application/msword'\n        ],\n        pdf: [\n            'application/pdf'\n        ],\n        table: [\n            'application/vnd.oasis.opendocument.spreadsheet',\n            'application/vnd.ms-excel'\n        ],\n        archive: [\n            'application/zip',\n            'application/gzip',\n            'application/x-rar-compressed',\n            'application/x-tar',\n            'application/x-7z-compressed'\n        ],\n        presentation: [\n            'application/vnd.ms-powerpoint',\n            'application/vnd.oasis.opendocument.presentation'\n        ]\n    },\n\n    languages: {\n        \"en\": \"English\",\n        \"\": \"Montenegrin (Latin)\", // ????????\n        \"ar-SA\": \"العربية\",\n        \"az-AZ\": \"Azərbaycanca\",\n        \"be-BY\": \"Беларуская\",\n        \"bg-BG\": \"Български\",\n        \"bs-BA\": \"Bosanski\",\n        \"ca-ES\": \"Català\",\n        \"cs-CZ\": \"Čeština\",\n        \"cy-GB\": \"Cymraeg\",\n        \"da-DK\": \"Dansk\",\n        \"de-DE\": \"Deutsch\",\n        \"el-GR\": \"Ελληνικά\",\n        \"es419\": \"Spanish Latin America\",\n        \"es-ES\": \"Español\",\n        \"et-EE\": \"Eesti\",\n        \"fa-IR\": \"فارسی\",\n        \"fi-FI\": \"Suomi\",\n        \"fil-PH\": \"Pilipino\",\n        \"fr-FR\": \"Français\",\n        \"ga-IE\": \"Gaeilge\",\n        \"he\": \"עברית\",\n        \"hi-IN\": \"हिन्दी\",\n        \"hr-HR\": \"Hrvatski\",\n        \"hu-HU\": \"Magyar\",\n        \"hy-AM\": \"Հայերեն\",\n        \"in-ID\": \"Bahasa Indonesia\",\n        \"is-IS\": \"Íslenska\",\n        \"it-IT\": \"Italiano\",\n        \"ja-JP\": \"日本語\",\n        \"ka-GE\": \"ქართული\",\n        \"kmr-TR\": \"Kurmancî (Kurdî)\",\n        \"ko-KR\": \"한국어\",\n        \"ku-TR\": \"Kurdî\",\n        \"ky-KG\": \"Кыргызча\",\n        \"la-LA\": \"Latina\",\n        \"lb-LU\": \"Luxembourgish\",\n        \"lt-LT\": \"Lietuvių\",\n        \"mk-MK\": \"Македонски\",\n        \"mn-MN\": \"Монгол\",\n        \"mr-IN\": \"मराठी\",\n        \"ms-MY\": \"Bahasa Melayu\",\n        \"nb-NO\": \"Norsk (bokmål)\",\n        \"ne-NP\": \"Nepālī\",\n        \"nl-NL\": \"Nederlands\",\n        \"no-NO\": \"Norsk (nynorsk)\",\n        \"oc-FR\": \"Occitan\",\n        \"pa-IN\": \"ਪੰਜਾਬੀ (ਗੁਰਮੁਖੀ)\",\n        \"pl-PL\": \"Polski\",\n        \"pt-BR\": \"Português, brasileiro\",\n        \"pt-PT\": \"Português\",\n        \"qya-AA\": \"quenya\",\n        \"ro-RO\": \"Română\",\n        \"ru-RU\": \"Русский\",\n        \"sco-GB\": \"Scots\",\n        \"si-LK\": \"සිංහල\",\n        \"sk-SK\": \"Slovenčina\",\n        \"sl-SI\": \"Slovenščina\",\n        \"sq-AL\": \"Shqip\",\n        \"sr-Cyrl-ME\": \"Montenegrin (Cyrillic)\",\n        \"sr-SP\": \"Српски / Srpski\",\n        \"sv-SE\": \"Svenska\",\n        \"sw-KE\": \"Kiswahili\",\n        \"ta-IN\": \"தமிழ்\",\n        \"te-IN\": \"తెలుగు\",\n        \"tg-TJ\": \"Тоҷикӣ\",\n        \"tk-TM\": \"Türkmençe\",\n        \"tlh-AA\": \"Klingon\",\n        \"tr-TR\": \"Türkçe\",\n        \"uk-UA\": \"Українська\",\n        \"uz-UZ\": \"Oʻzbekcha / Ўзбекча\",\n        \"vi-VN\": \"Tiếng Việt\",\n        \"yo-NG\": \"Yorùbá\",\n        \"zh-CN\": \"简体中文\",\n        \"zh-TW\": \"中國傳統的\",\n        \"zu-ZA\": \"isiZulu\"\n    },\n\n    languages_another_locales: {\n        \"es419\": \"es-latin\",\n        \"in-ID\": \"id\"\n    },\n\n    PERSONAL_AREA_URL: {},\n\n    XABBER_ACCOUNT_URL: 'https://www.xabber.com/account',\n    API_SERVICE_URL: 'https://api.xabber.com/api/v2',\n    USE_SOCIAL_AUTH: true,\n    REGISTER_XMPP_ACCOUNT: true,\n    REGISTER_XMPP_ACCOUNT_URL: 'https://www.xabber.com/account/auth/signup/',\n    CHECK_VERSION: true,\n    DEFAULT_LOGIN_SCREEN: 'xmpp',\n\n    GCM_SENDER_ID: '868637702480',\n    GCM_API_KEY: 'AIzaSyC1JCBB3LLf_4DG_vRWMEEe0I4X5msEU-M',\n    MESSAGE_ARCHIVE_DB_NAME: 'MessageArchive',\n    STANZA_MAX_SIZE: Math.pow(2, 16),\n\n    BLUR_VALUE: 25,\n    VIGNETTING_VALUE: 128,\n    TRANSPARENCY_VALUE: 50,\n\n    MAIN_COLOR: 'red',\n    CLIENT_NAME: 'Xabber for Web',\n    SHORT_CLIENT_NAME: 'Xabber',\n    SHORT_CLIENT_DESCRIPTION: 'World’s best XMPP experience',\n    CLIENT_LOGO: 'assets/images/xabber-logo-96.png',\n    TOOLBAR_LOGO: 'assets/images/xabber-logo.png',\n    ENABLE_XABBER_ACCOUNT: false,\n    SCREEN_ABOUT: true,\n    CLIENT_URL: 'https://www.xabber.com',\n    DEVELOPER_URL: 'https://redsolution.com',\n    CLIENT_GITHUB_URL: 'https://github.com/redsolution/xabber-web',\n    PROJECT_CROWDIN_URL: 'https://crowdin.com/project/xabber',\n    CLIENT_LICENSE_GITHUB_URL: 'https://github.com/redsolution/xabber-web/blob/master/LICENSE'\n};\n\nconstants.JINGLE_MSG_STATE = {};\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_REJECT] = 'reject';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_PROPOSE] = 'propose';\nconstants.JINGLE_MSG_STATE[constants.JINGLE_MSG_ACCEPT] = 'accept';\n\nconstants.MSG_STATE = {};\nconstants.MSG_STATE[constants.MSG_ERROR] = 'error';\nconstants.MSG_STATE[constants.MSG_PENDING] = 'pending';\nconstants.MSG_STATE[constants.MSG_SENT] = 'sent';\nconstants.MSG_STATE[constants.MSG_DELIVERED] = 'delivered';\nconstants.MSG_STATE[constants.MSG_DISPLAYED] = 'displayed';\nconstants.MSG_STATE[constants.MSG_ARCHIVED] = 'archived';\nconstants.MSG_STATE[constants.MSG_BLOCKED] = 'not-allowed';\nconstants.MSG_STATE[constants.MSG_SAVED] = 'saved';\n\nconstants.MSG_VERBOSE_STATE = {};\nconstants.MSG_VERBOSE_STATE[constants.MSG_ERROR] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_PENDING] = 'message__delivering_state__pending';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SENT] = 'message__delivering_state__sent';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DELIVERED] = 'message__delivering_state__delivered';\nconstants.MSG_VERBOSE_STATE[constants.MSG_DISPLAYED] = 'message__delivering_state__displayed';\nconstants.MSG_VERBOSE_STATE[constants.MSG_ARCHIVED] = 'message__delivering_state__archived';\nconstants.MSG_VERBOSE_STATE[constants.MSG_BLOCKED] = 'message__delivering_state__error';\nconstants.MSG_VERBOSE_STATE[constants.MSG_SAVED] = 'message__delivering_state__saved';\n\nexport default constants;\n","// only external libs and plugins for them\n// import Backbone from \"backbone\";\nimport \"backbone\";\nimport _ from \"underscore\";\nimport $ from \"jquery\";\nimport moment from \"moment\";\nimport WaveSurfer from \"wavesurfer\";\nimport slug from \"slug\";\nimport sha256 from \"sha256\";\nimport magnificPopup from \"magnific-popup\";\nimport i18next from \"i18next\";\nimport i18next_sprintf from \"i18next-post\";\nimport Strophe from \"strophe\";\nimport plyr from \"Plyr\";\nimport Quill from \"Quill\";\nimport libsignal from \"libsignal-protocol\";\nimport sha1 from \"sha1_hasher\";\nimport \"~/css/color-scheme.css\";\nimport \"~/css/materialdesignicons.css\";\nimport \"~/css/materialize.css\";\nimport \"~/css/plyr.css\";\nimport \"~/css/quill.snow.css\";\nimport \"~/css/xabber.css\";\nimport \"~/node_modules/magnific-popup/dist/magnific-popup.css\";\nimport \"~/node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css\";\nimport \"strophe.disco\";\nimport \"strophe.ping\";\nimport \"strophe.rsm\";\nimport \"strophe.caps\";\nimport \"strophe.pubsub\";\nimport \"omemo\";\nimport \"backbone.localsync\";\nimport \"materialize\";\nimport \"qrcode\";\nimport \"perfectScrollbarJQuery\";\n\nexport default _.extend({\n    $: $,\n    _: _,\n    moment: moment,\n    WaveSurfer: WaveSurfer,\n    Plyr: plyr,\n    Quill: Quill,\n    libsignal: libsignal,\n    slug: slug,\n    sha1: sha1,\n    xabber_i18next: i18next,\n    xabber_i18next_sprintf: i18next_sprintf,\n    sha256: sha256,\n    magnificPopup: magnificPopup,\n    Strophe: Strophe\n}, Strophe);\n","    import _ from \"underscore\";\n    import $ from \"jquery\";\n\n    _.templateSettings = {\n        evaluate : /\\{\\[([\\s\\S]+?)\\]\\}/g,\n        interpolate : /\\{\\{([\\s\\S]+?)\\}\\}/g\n    };\n\n    let templates = {};\n\n    let insertSvg = function (html) {\n        let $html = $('<div/>').html(html);\n        $html.find('.mdi-svg-template').each(function () {\n            let $el = $(this),\n                svg_name = $el.data('svgname');\n            $el.removeClass('mdi-svg-template').addClass('mdi-'+svg_name)\n                .attr('data-svgname', null);\n            $el.html(templates.svg[svg_name]());\n        });\n        return $html.html();\n    };\n\n    let _addTemplate = function (name, options) {\n        options || (options = {});\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.html').default),\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        if (options.is_svg) {\n            res[tpl_name] = tpl;\n        } else {\n            res[tpl_name] = function (data) {\n                return insertSvg(tpl(data));\n            };\n        }\n    };\n\n    let addJSONTemplate = function (name, ) {\n        let path = name.split('.'),\n            tpl = _.template(require('raw-loader!~/templates/'+path.join('/')+'.txt').default),//todo fix json import\n            tpl_name = path.pop(),\n            res = templates;\n        _.each(path, function (attr) {\n            res[attr] || (res[attr] = {});\n            res = res[attr];\n        });\n        res[tpl_name] = function (data) {\n            return insertSvg(tpl(data));\n        };\n    };\n\n    let addTemplate = function (name) {\n        _addTemplate(name, {is_svg: false});\n    };\n\n    let addSvgTemplate = function (name) {\n        _addTemplate(name, {is_svg: true});\n    };\n\n\n    addTemplate('base.dialog');\n    addTemplate('base.fingerprints');\n    addTemplate('base.fingerprint_item');\n    addTemplate('base.jingle_message_calling');\n    addTemplate('base.plyr_player_popup');\n    addTemplate('base.input_widget');\n    addTemplate('base.toolbar');\n    addTemplate('base.settings');\n    addTemplate('base.about');\n    addTemplate('base.omemo_enable');\n    addTemplate('base.backgrounds_gallery');\n    addTemplate('base.color_picker');\n    addTemplate('base.color_scheme');\n\n    addTemplate('api_service.xabber_login');\n    addTemplate('api_service.xabber_login_by_email');\n    addTemplate('api_service.add_xabber_account');\n    addTemplate('api_service.xabber_account');\n    addTemplate('api_service.linked_email_item');\n    addTemplate('api_service.sync_settings');\n    addTemplate('api_service.sync_settings_account_item');\n\n    addTemplate('accounts.xmpp_login');\n    addTemplate('accounts.add_account');\n    addTemplate('accounts.change_password');\n    addTemplate('accounts.toolbar_item');\n    addTemplate('accounts.media_gallery_account_file');\n    addTemplate('accounts.media_gallery_account');\n    addTemplate('accounts.settings_left');\n    addTemplate('accounts.settings_right');\n    addTemplate('accounts.existing_groupchat_item');\n    addTemplate('accounts.resource');\n    addTemplate('accounts.resource_right');\n    addTemplate('accounts.webcam_panel');\n    addTemplate('accounts.emoji_panel');\n    addTemplate('accounts.emoji_picker');\n    addTemplate('accounts.emoji_picker_tabs');\n    addTemplate('accounts.global_settings_item');\n    addTemplate('accounts.change_status');\n    addTemplate('accounts.token_item');\n    addTemplate('accounts.current_token_item');\n    addTemplate('accounts.audio_file_waveform');\n    addTemplate('accounts.avatars_gallery');\n\n    addTemplate('vcard.vcard');\n    addTemplate('vcard.vcard_edit');\n    addTemplate('vcard.vcard_right');\n\n    addTemplate('searching.searching_wide');\n    addTemplate('searching.searching_account_item');\n    addTemplate('searching.existing_groupchat_item');\n    addTemplate('searching.existing_groupchat_details_view');\n\n    addTemplate('contacts.roster_right');\n    addTemplate('contacts.roster_left');\n    addTemplate('contacts.account_roster_right');\n    addTemplate('contacts.account_roster_left');\n    addTemplate('contacts.group_right');\n    addTemplate('contacts.group_left');\n    addTemplate('contacts.add_contact');\n    addTemplate('contacts.contact_right_item');\n    addTemplate('contacts.contact_left_item');\n    addTemplate('contacts.contact_blocked_item');\n    addTemplate('contacts.contact_details');\n    addTemplate('contacts.contact_details_right');\n    addTemplate('contacts.roster_settings');\n    addTemplate('contacts.group_settings');\n    addTemplate('contacts.groups_checkbox_list');\n    addTemplate('contacts.groups_checkbox_list_contact');\n    addTemplate('contacts.groups_new_group');\n    addTemplate('contacts.groups_list');\n    addTemplate('contacts.add_contact_account_item');\n    addTemplate('contacts.contact_placeholder');\n    addTemplate('contacts.groups');\n    addTemplate('contacts.edit_contact');\n    addTemplate('contacts.edit_group');\n    addTemplate('contacts.preloader');\n    addTemplate('contacts.media_item');\n    addTemplate('contacts.media_items_empty');\n    addTemplate('contacts.audio_file_waveform');\n    addTemplate('contacts.group_chats.group_chat_properties');\n    addTemplate('contacts.group_chats.group_chat_properties_right');\n    addTemplate('contacts.group_chats.group_chat_details');\n    addTemplate('contacts.group_chats.group_chat_details_right');\n    addTemplate('contacts.group_chats.invitation');\n    addTemplate('contacts.group_chats.group_chat_properties_edit');\n    addTemplate('contacts.group_chats.default_restrictions');\n    addTemplate('contacts.group_chats.default_restrictions_right');\n    addTemplate('contacts.group_chats.group_member_item');\n    addTemplate('contacts.group_chats.group_member_item_right');\n    addTemplate('contacts.group_chats.description_input_widget');\n    addTemplate('contacts.group_chats.group_name_input_widget');\n    addTemplate('contacts.group_chats.participant_badge_input_widget');\n    addTemplate('contacts.group_chats.invited_member_item');\n    addTemplate('contacts.group_chats.add_blocked_participant_form');\n    addTemplate('contacts.group_chats.participant_details_right');\n    addTemplate('contacts.group_chats.participant_rights');\n    addTemplate('contacts.group_chats.restriction_item');\n    addTemplate('contacts.group_chats.right_expire_variants');\n    addTemplate('contacts.group_chats.pinned_message');\n    addTemplate('contacts.group_chats.participant_details_item_right');\n    addTemplate('contacts.group_chats.participant_details_item');\n    addTemplate('contacts.group_chats.participants');\n    addTemplate('contacts.group_chats.participants_right_panel');\n    addTemplate('contacts.group_chats.badge_edit_view');\n    addTemplate('contacts.group_chats.private_participant_details');\n    addTemplate('contacts.group_chats.private_participant_details_item_right');\n    addTemplate('contacts.group_chats.set_status');\n    addTemplate('contacts.group_chats.status_item');\n    addTemplate('contacts.group_chats.group_status');\n    addTemplate('contacts.group_chats.group_status_right');\n    addTemplate('contacts.group_chats.file_item');\n\n    addTemplate('chats.chats_panel');\n    addTemplate('chats.add_chat_account_item');\n    addTemplate('chats.chat_item');\n    addTemplate('chats.chat_head');\n    addTemplate('chats.send_media');\n    addTemplate('chats.saved_chat_head');\n    addTemplate('chats.chat_content');\n    addTemplate('chats.chat_content_contact');\n    addTemplate('chats.chat_bottom');\n    addTemplate('chats.location_popup');\n    addTemplate('chats.subscription_buttons');\n    addTemplate('chats.forward_panel');\n    addTemplate('chats.chat_placeholder');\n    addTemplate('chats.message_item');\n    addTemplate('chats.messages.main');\n    addTemplate('chats.messages.searched');\n    addTemplate('chats.messages.forwarded');\n    addTemplate('chats.messages.system');\n    addTemplate('chats.messages.file_upload');\n    addTemplate('chats.messages.loading_circle');\n    addTemplate('chats.messages.file');\n    addTemplate('chats.messages.file_loading');\n    addTemplate('chats.messages.link_reference');\n    addTemplate('chats.messages.link_reference_chat');\n    addTemplate('chats.messages.attached_file');\n    addTemplate('chats.messages.video');\n    addTemplate('chats.messages.location');\n    addTemplate('chats.messages.audio_file');\n    addTemplate('chats.messages.audio_file_waveform');\n    addTemplate('chats.messages.auth_request');\n    addTemplate('chats.messages.group_request');\n    addTemplate('chats.messages.template-for-2');\n    addTemplate('chats.messages.template-for-3');\n    addTemplate('chats.messages.template-for-4');\n    addTemplate('chats.messages.template-for-5');\n    addTemplate('chats.messages.template-for-6');\n    addTemplate('chats.messages.hidden-template-for-2');\n    addTemplate('chats.messages.hidden-template-for-3');\n    addTemplate('chats.messages.hidden-template-for-4');\n    addTemplate('chats.messages.hidden-template-for-5');\n    addTemplate('chats.messages.hidden-template-for-6');\n    addTemplate('chats.messages.images_details');\n    addTemplate('chats.messages.saved_main');\n    addTemplate('chats.group_chats.pinned_message_panel');\n    addTemplate('chats.group_chats.add_group_chat');\n    addTemplate('chats.group_chats.invitation_panel_view');\n    addTemplate('chats.group_chats.mention_item');\n    addTemplate('chats.encryption_warning');\n    addTemplate('chats.content_encryption_warning');\n\n\n    addTemplate('mentions.mentions_panel');\n    addTemplate('mentions.mentions_placeholder');\n    addTemplate('mentions.mention_item');\n\n    addSvgTemplate('svg.ic-jabber');\n    addSvgTemplate('svg.xmpp');\n    addSvgTemplate('svg.account-outline');\n    addSvgTemplate('svg.qrcode');\n    addSvgTemplate('svg.id-outline');\n    addSvgTemplate('svg.clock-outline');\n    addSvgTemplate('svg.index');\n    addSvgTemplate('svg.restrictions-outline');\n    addSvgTemplate('svg.history');\n    addSvgTemplate('svg.chevron-down');\n    addSvgTemplate('svg.camera-retake');\n    addSvgTemplate('svg.membership-outline');\n    addSvgTemplate('svg.invite-outline');\n    addSvgTemplate('svg.chevron-right-variant');\n    addSvgTemplate('svg.chevron-left-variant');\n    addSvgTemplate('svg.subscription-to');\n    addSvgTemplate('svg.subscription-from');\n    addSvgTemplate('svg.image');\n    addSvgTemplate('svg.file-audio');\n    addSvgTemplate('svg.file-video');\n    addSvgTemplate('svg.file-document');\n    addSvgTemplate('svg.file-presentation');\n    addSvgTemplate('svg.file-zip');\n    addSvgTemplate('svg.file');\n    addSvgTemplate('svg.file-pdf');\n    addSvgTemplate('svg.close');\n    addSvgTemplate('svg.link');\n    addSvgTemplate('svg.picture-in-picture-minimize');\n    addSvgTemplate('svg.picture-in-picture-bottom-right');\n    addSvgTemplate('svg.picture-in-picture-top-right');\n    addSvgTemplate('svg.pause');\n    addSvgTemplate('svg.volume-off');\n    addSvgTemplate('svg.volume-high');\n    addSvgTemplate('svg.plyr');\n    addSvgTemplate('svg.plus');\n    addSvgTemplate('svg.player-float');\n    addSvgTemplate('svg.player-full');\n    addSvgTemplate('svg.player-mini-variant');\n    addSvgTemplate('svg.player-mini');\n    addSvgTemplate('svg.message-bookmark-outline');\n    addSvgTemplate('svg.play');\n    addSvgTemplate('svg.video');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.status-outline');\n    addSvgTemplate('svg.birthday-outline');\n    addSvgTemplate('svg.job-outline');\n    addSvgTemplate('svg.address-outline');\n    addSvgTemplate('svg.email-outline');\n    addSvgTemplate('svg.description-outline');\n    addSvgTemplate('svg.call-outline');\n    addSvgTemplate('svg.call');\n    addSvgTemplate('svg.search');\n    addSvgTemplate('svg.devices');\n    addSvgTemplate('svg.bell');\n    addSvgTemplate('svg.bell-sleep');\n    addSvgTemplate('svg.bell-off');\n    addSvgTemplate('svg.cancel');\n    addSvgTemplate('svg.edit');\n    addSvgTemplate('svg.edit-outline');\n    addSvgTemplate('svg.blocked-add');\n    addSvgTemplate('svg.information-outline');\n    addSvgTemplate('svg.fullname');\n    addSvgTemplate('svg.fullname-outline');\n    addSvgTemplate('svg.ic-at');\n    addSvgTemplate('svg.ic-searching');\n    addSvgTemplate('svg.blocked');\n    addSvgTemplate('svg.bot');\n    addSvgTemplate('svg.bot-variant');\n    addSvgTemplate('svg.group-incognito');\n    addSvgTemplate('svg.group-invite');\n    addSvgTemplate('svg.group-public');\n    addSvgTemplate('svg.task');\n    addSvgTemplate('svg.group-private');\n    addSvgTemplate('svg.channel');\n    addSvgTemplate('svg.rss');\n    addSvgTemplate('svg.rss-variant');\n    addSvgTemplate('svg.server');\n    addSvgTemplate('svg.volume-off-variant');\n    addSvgTemplate('svg.message-group');\n    addSvgTemplate('svg.xabber-offline');\n    addSvgTemplate('svg.xabber-online');\n    addSvgTemplate('svg.saved-messages');\n    addSvgTemplate('svg.palette');\n    addSvgTemplate('svg.circles');\n    addSvgTemplate('svg.translate');\n    addSvgTemplate('svg.crosshairs-gps');\n    addSvgTemplate('svg.crosshairs-question');\n    addSvgTemplate('svg.crosshairs');\n    addSvgTemplate('svg.map-marker-outline');\n    addSvgTemplate('svg.map-marker');\n    addSvgTemplate('svg.minus');\n\n    addJSONTemplate('accounts.emojis');\n\n    export default templates;","import _ from \"underscore\";\nimport $ from \"jquery\";\n\nvar raw_data = {\n    \"smiles_and_people\": [{code:0x1f600,x:9,y:3},{code:0x1f603,x:12,y:3},{code:0x1f604,x:13,y:3},{code:0x1f601,x:10,y:3},{code:0x1f606,x:1,y:4},{code:0x1f605,x:0,y:4},{code:0x1f923,x:6,y:10},{code:0x1f602,x:11,y:3},{code:0x1f642,x:5,y:8},{code:0x1f643,x:6,y:8},{code:0x1f609,x:4,y:4},{code:0x1f60a,x:5,y:4},{code:0x1f607,x:2,y:4},{code:0x1f60d,x:8,y:4},{code:0x1f929,x:12,y:10},{code:0x1f617,x:4,y:5},{code:0x263a,x:14,y:5},{code:0x1f61a,x:7,y:5},{code:0x1f619,x:6,y:5},{code:0x1f60b,x:6,y:4},{code:0x1f61b,x:8,y:5},{code:0x1f61c,x:9,y:5},{code:0x1f92a,x:13,y:10},{code:0x1f61d,x:10,y:5},{code:0x1f911,x:10,y:9},{code:0x1f917,x:2,y:10},{code:0x1f92d,x:2,y:11},{code:0x1f92b,x:0,y:11},{code:0x1f914,x:13,y:9},{code:0x1f910,x:9,y:9},{code:0x1f928,x:11,y:10},{code:0x1f610,x:11,y:4},{code:0x1f611,x:12,y:4},{code:0x1f636,x:7,y:7},{code:0x1f60f,x:10,y:4},{code:0x1f612,x:13,y:4},{code:0x1f644,x:7,y:8},{code:0x1f62c,x:11,y:6},{code:0x1f925,x:8,y:10},{code:0x1f60c,x:7,y:4},{code:0x1f614,x:1,y:5},{code:0x1f62a,x:9,y:6},{code:0x1f924,x:7,y:10},{code:0x1f634,x:5,y:7},{code:0x1f637,x:8,y:7},{code:0x1f912,x:11,y:9},{code:0x1f915,x:0,y:10},{code:0x1f922,x:5,y:10},{code:0x1f92e,x:3,y:11},{code:0x1f927,x:10,y:10},{code:0x1f975,x:7,y:12},{code:0x1f976,x:8,y:12},{code:0x1f974,x:6,y:12},{code:0x1f635,x:6,y:7},{code:0x1f92f,x:4,y:11},{code:0x1f920,x:3,y:10},{code:0x1f973,x:5,y:12},{code:0x1f60e,x:9,y:4},{code:0x1f913,x:12,y:9},{code:0x1f9d0,x:1,y:13},{code:0x1f615,x:2,y:5},{code:0x1f61f,x:12,y:5},{code:0x1f641,x:4,y:8},{code:0x2639,x:14,y:4},{code:0x1f62e,x:13,y:6},{code:0x1f62f,x:0,y:7},{code:0x1f632,x:3,y:7},{code:0x1f633,x:4,y:7},{code:0x1f97a,x:9,y:12},{code:0x1f626,x:5,y:6},{code:0x1f627,x:6,y:6},{code:0x1f628,x:7,y:6},{code:0x1f630,x:1,y:7},{code:0x1f625,x:4,y:6},{code:0x1f622,x:1,y:6},{code:0x1f62d,x:12,y:6},{code:0x1f631,x:2,y:7},{code:0x1f616,x:3,y:5},{code:0x1f623,x:2,y:6},{code:0x1f61e,x:11,y:5},{code:0x1f613,x:0,y:5},{code:0x1f629,x:8,y:6},{code:0x1f62b,x:10,y:6},{code:0x1f624,x:3,y:6},{code:0x1f621,x:0,y:6},{code:0x1f620,x:13,y:5},{code:0x1f92c,x:1,y:11},{code:0x1f608,x:3,y:4},{code:0x1f47f,x:9,y:2},{code:0x1f480,x:10,y:2},{code:0x2620,x:14,y:3},{code:0x1f4a9,x:4,y:3},{code:0x1f921,x:4,y:10},{code:0x1f479,x:3,y:2},{code:0x1f47a,x:4,y:2},{code:0x1f47b,x:5,y:2},{code:0x1f47d,x:7,y:2},{code:0x1f47e,x:8,y:2},{code:0x1f916,x:1,y:10},{code:0x1f63a,x:11,y:7},{code:0x1f638,x:9,y:7},{code:0x1f639,x:10,y:7},{code:0x1f63b,x:12,y:7},{code:0x1f63c,x:13,y:7},{code:0x1f63d,x:0,y:8},{code:0x1f640,x:3,y:8},{code:0x1f63f,x:2,y:8},{code:0x1f63e,x:1,y:8},{code:0x1f648,x:11,y:8},{code:0x1f649,x:12,y:8},{code:0x1f64a,x:13,y:8},{code:0x1f476,x:0,y:2},{code:0x1f9d2,x:3,y:13},{code:0x1f466,x:12,y:0},{code:0x1f467,x:13,y:0},{code:0x1f471,x:9,y:1},{code:0x1f9d4,x:5,y:13},{code:0x1f9d3,x:4,y:13},{code:0x1f474,x:12,y:1},{code:0x1f475,x:13,y:1},{code:0x1f64d,x:1,y:9},{code:0x1f64e,x:2,y:9},{code:0x1f645,x:8,y:8},{code:0x1f646,x:9,y:8},{code:0x1f481,x:11,y:2},{code:0x1f64b,x:0,y:9},{code:0x1f647,x:10,y:8},{code:0x1f926,x:9,y:10},{code:0x1f937,x:10,y:11},{code:0x1f46e,x:6,y:1},{code:0x1f575,x:6,y:3},{code:0x1f482,x:12,y:2},{code:0x1f477,x:1,y:2},{code:0x1f934,x:7,y:11},{code:0x1f478,x:2,y:2},{code:0x1f473,x:11,y:1},{code:0x1f472,x:10,y:1},{code:0x1f9d5,x:6,y:13},{code:0x1f935,x:8,y:11},{code:0x1f470,x:8,y:1},{code:0x1f930,x:5,y:11},{code:0x1f931,x:6,y:11},{code:0x1f47c,x:6,y:2},{code:0x1f385,x:0,y:0},{code:0x1f936,x:9,y:11},{code:0x1f9b8,x:10,y:12},{code:0x1f9b9,x:11,y:12},{code:0x1f9d9,x:10,y:13},{code:0x1f9da,x:11,y:13},{code:0x1f9db,x:12,y:13},{code:0x1f9dc,x:13,y:13},{code:0x1f9dd,x:14,y:0},{code:0x1f9de,x:14,y:1},{code:0x1f9df,x:14,y:2},{code:0x1f486,x:0,y:3},{code:0x1f487,x:1,y:3},{code:0x1f6b6,x:6,y:9},{code:0x1f3c3,x:2,y:0},{code:0x1f483,x:13,y:2},{code:0x1f57a,x:7,y:3},{code:0x1f574,x:5,y:3},{code:0x1f46f,x:7,y:1},{code:0x1f9d6,x:7,y:13},{code:0x1f9d7,x:8,y:13},{code:0x1f93a,x:13,y:11},{code:0x1f3c7,x:4,y:0},{code:0x26f7,x:14,y:6},{code:0x1f3c2,x:1,y:0},{code:0x1f3cc,x:7,y:0},{code:0x1f3c4,x:3,y:0},{code:0x1f6a3,x:3,y:9},{code:0x1f3ca,x:5,y:0},{code:0x26f9,x:14,y:7},{code:0x1f3cb,x:6,y:0},{code:0x1f6b4,x:4,y:9},{code:0x1f6b5,x:5,y:9},{code:0x1f938,x:11,y:11},{code:0x1f93c,x:0,y:12},{code:0x1f93d,x:1,y:12},{code:0x1f93e,x:2,y:12},{code:0x1f939,x:12,y:11},{code:0x1f9d8,x:9,y:13},{code:0x1f6c0,x:7,y:9},{code:0x1f6cc,x:8,y:9},{code:0x1f46d,x:5,y:1},{code:0x1f46b,x:3,y:1},{code:0x1f46c,x:4,y:1},{code:0x1f48f,x:2,y:3},{code:0x1f491,x:3,y:3},{code:0x1f46a,x:2,y:1},{code:0x1f5e3,x:8,y:3},{code:0x1f464,x:10,y:0},{code:0x1f465,x:11,y:0},{code:0x1f463,x:9,y:0}],\n    \"body_and_clothes\": [{code:0x1f44b,x:3,y:1},{code:0x1f91a,x:10,y:7},{code:0x1f590,x:7,y:6},{code:0x270b,x:9,y:10},{code:0x1f596,x:9,y:6},{code:0x1f44c,x:4,y:1},{code:0x270c,x:10,y:10},{code:0x1f91e,x:3,y:8},{code:0x1f91f,x:4,y:8},{code:0x1f918,x:8,y:7},{code:0x1f919,x:9,y:7},{code:0x1f448,x:0,y:1},{code:0x1f449,x:1,y:1},{code:0x1f446,x:9,y:0},{code:0x1f595,x:8,y:6},{code:0x1f447,x:10,y:0},{code:0x261d,x:6,y:10},{code:0x1f44d,x:5,y:1},{code:0x1f44e,x:6,y:1},{code:0x270a,x:8,y:10},{code:0x1f44a,x:2,y:1},{code:0x1f91b,x:0,y:8},{code:0x1f91c,x:1,y:8},{code:0x1f44f,x:7,y:1},{code:0x1f64c,x:2,y:7},{code:0x1f450,x:8,y:1},{code:0x1f932,x:5,y:8},{code:0x1f91d,x:2,y:8},{code:0x1f64f,x:3,y:7},{code:0x270d,x:11,y:0},{code:0x1f485,x:6,y:3},{code:0x1f933,x:6,y:8},{code:0x1f4aa,x:9,y:5},{code:0x1f9b5,x:2,y:9},{code:0x1f9b6,x:3,y:9},{code:0x1f442,x:5,y:0},{code:0x1f443,x:6,y:0},{code:0x1f9e0,x:6,y:9},{code:0x1f9b7,x:4,y:9},{code:0x1f9b4,x:1,y:9},{code:0x1f440,x:3,y:0},{code:0x1f445,x:8,y:0},{code:0x1f444,x:7,y:0},{code:0x1f48b,x:7,y:3},{code:0x1f48c,x:8,y:3},{code:0x1f498,x:5,y:4},{code:0x1f49d,x:10,y:4},{code:0x1f496,x:3,y:4},{code:0x1f497,x:4,y:4},{code:0x1f493,x:0,y:4},{code:0x1f49e,x:0,y:5},{code:0x1f495,x:2,y:4},{code:0x1f49f,x:1,y:5},{code:0x2763,x:11,y:1},{code:0x1f494,x:1,y:4},{code:0x2764,x:11,y:2},{code:0x1f9e1,x:7,y:9},{code:0x1f49b,x:8,y:4},{code:0x1f49a,x:7,y:4},{code:0x1f499,x:6,y:4},{code:0x1f49c,x:9,y:4},{code:0x1f5a4,x:10,y:6},{code:0x1f4af,x:3,y:6},{code:0x1f4a2,x:2,y:5},{code:0x1f4a5,x:5,y:5},{code:0x1f4ab,x:10,y:5},{code:0x1f4a6,x:6,y:5},{code:0x1f4a8,x:8,y:5},{code:0x1f573,x:5,y:6},{code:0x1f4a3,x:3,y:5},{code:0x1f4ac,x:0,y:6},{code:0x1f441,x:4,y:0},{code:0x1f5e8,x:0,y:7},{code:0x1f5ef,x:1,y:7},{code:0x1f4ad,x:1,y:6},{code:0x1f4a4,x:4,y:5},{code:0x1f453,x:0,y:2},{code:0x1f576,x:6,y:6},{code:0x1f97d,x:9,y:8},{code:0x1f97c,x:8,y:8},{code:0x1f454,x:1,y:2},{code:0x1f455,x:2,y:2},{code:0x1f456,x:3,y:2},{code:0x1f9e3,x:9,y:9},{code:0x1f9e4,x:10,y:9},{code:0x1f9e5,x:0,y:10},{code:0x1f9e6,x:1,y:10},{code:0x1f457,x:4,y:2},{code:0x1f458,x:5,y:2},{code:0x1f459,x:6,y:2},{code:0x1f45a,x:7,y:2},{code:0x1f45b,x:8,y:2},{code:0x1f45c,x:9,y:2},{code:0x1f45d,x:10,y:2},{code:0x1f6cd,x:4,y:7},{code:0x1f392,x:0,y:0},{code:0x1f45e,x:0,y:3},{code:0x1f45f,x:1,y:3},{code:0x1f97e,x:10,y:8},{code:0x1f97f,x:0,y:9},{code:0x1f460,x:2,y:3},{code:0x1f461,x:3,y:3},{code:0x1f462,x:4,y:3},{code:0x1f451,x:9,y:1},{code:0x1f452,x:10,y:1},{code:0x1f3a9,x:2,y:0},{code:0x1f393,x:1,y:0},{code:0x1f9e2,x:8,y:9},{code:0x26d1,x:7,y:10},{code:0x1f4ff,x:4,y:6},{code:0x1f484,x:5,y:3},{code:0x1f48d,x:9,y:3},{code:0x1f48e,x:10,y:3}],\n    \"animals_and_nature\": [{code:0x1f435,x:6,y:6},{code:0x1f412,x:4,y:3},{code:0x1f98d,x:2,y:9},{code:0x1f436,x:7,y:6},{code:0x1f415,x:7,y:3},{code:0x1f429,x:6,y:5},{code:0x1f43a,x:0,y:7},{code:0x1f98a,x:10,y:8},{code:0x1f99d,x:7,y:10},{code:0x1f408,x:5,y:2},{code:0x1f981,x:1,y:8},{code:0x1f42f,x:1,y:6},{code:0x1f405,x:2,y:2},{code:0x1f406,x:3,y:2},{code:0x1f434,x:5,y:6},{code:0x1f40e,x:0,y:3},{code:0x1f984,x:4,y:8},{code:0x1f993,x:8,y:9},{code:0x1f98c,x:1,y:9},{code:0x1f42e,x:0,y:6},{code:0x1f402,x:10,y:1},{code:0x1f403,x:0,y:2},{code:0x1f404,x:1,y:2},{code:0x1f437,x:8,y:6},{code:0x1f416,x:9,y:3},{code:0x1f417,x:10,y:3},{code:0x1f43d,x:3,y:7},{code:0x1f40f,x:1,y:3},{code:0x1f411,x:3,y:3},{code:0x1f410,x:2,y:3},{code:0x1f42a,x:7,y:5},{code:0x1f42b,x:8,y:5},{code:0x1f999,x:3,y:10},{code:0x1f992,x:7,y:9},{code:0x1f418,x:0,y:4},{code:0x1f98f,x:4,y:9},{code:0x1f99b,x:5,y:10},{code:0x1f42d,x:10,y:5},{code:0x1f401,x:9,y:1},{code:0x1f400,x:8,y:1},{code:0x1f439,x:10,y:6},{code:0x1f430,x:2,y:6},{code:0x1f407,x:4,y:2},{code:0x1f43f,x:5,y:7},{code:0x1f994,x:9,y:9},{code:0x1f987,x:7,y:8},{code:0x1f43b,x:1,y:7},{code:0x1f428,x:5,y:5},{code:0x1f43c,x:2,y:7},{code:0x1f998,x:2,y:10},{code:0x1f9a1,x:11,y:0},{code:0x1f43e,x:4,y:7},{code:0x1f983,x:3,y:8},{code:0x1f414,x:6,y:3},{code:0x1f413,x:5,y:3},{code:0x1f423,x:0,y:5},{code:0x1f424,x:1,y:5},{code:0x1f425,x:2,y:5},{code:0x1f426,x:3,y:5},{code:0x1f427,x:4,y:5},{code:0x1f54a,x:7,y:7},{code:0x1f985,x:5,y:8},{code:0x1f986,x:6,y:8},{code:0x1f9a2,x:11,y:1},{code:0x1f989,x:9,y:8},{code:0x1f99a,x:4,y:10},{code:0x1f99c,x:6,y:10},{code:0x1f438,x:9,y:6},{code:0x1f40a,x:7,y:2},{code:0x1f422,x:10,y:4},{code:0x1f98e,x:3,y:9},{code:0x1f40d,x:10,y:2},{code:0x1f432,x:3,y:6},{code:0x1f409,x:6,y:2},{code:0x1f995,x:10,y:9},{code:0x1f996,x:0,y:10},{code:0x1f433,x:4,y:6},{code:0x1f40b,x:8,y:2},{code:0x1f42c,x:9,y:5},{code:0x1f41f,x:7,y:4},{code:0x1f420,x:8,y:4},{code:0x1f421,x:9,y:4},{code:0x1f988,x:8,y:8},{code:0x1f419,x:1,y:4},{code:0x1f41a,x:2,y:4},{code:0x1f40c,x:9,y:2},{code:0x1f98b,x:0,y:9},{code:0x1f41b,x:3,y:4},{code:0x1f41c,x:4,y:4},{code:0x1f41d,x:5,y:4},{code:0x1f41e,x:6,y:4},{code:0x1f997,x:1,y:10},{code:0x1f577,x:8,y:7},{code:0x1f578,x:9,y:7},{code:0x1f982,x:2,y:8},{code:0x1f99f,x:9,y:10},{code:0x1f9a0,x:10,y:10},{code:0x1f490,x:6,y:7},{code:0x1f338,x:6,y:0},{code:0x1f3f5,x:7,y:1},{code:0x1f339,x:7,y:0},{code:0x1f940,x:10,y:7},{code:0x1f33a,x:8,y:0},{code:0x1f33b,x:9,y:0},{code:0x1f33c,x:10,y:0},{code:0x1f337,x:5,y:0},{code:0x1f331,x:0,y:0},{code:0x1f344,x:6,y:1},{code:0x1f332,x:1,y:0},{code:0x1f333,x:2,y:0},{code:0x1f334,x:3,y:0},{code:0x1f335,x:4,y:0},{code:0x1f33e,x:0,y:1},{code:0x1f33f,x:1,y:1},{code:0x2618,x:11,y:8},{code:0x1f340,x:2,y:1},{code:0x1f341,x:3,y:1},{code:0x1f342,x:4,y:1},{code:0x1f343,x:5,y:1},{code:0x1f980,x:0,y:8},{code:0x1f99e,x:8,y:10},{code:0x1f990,x:5,y:9},{code:0x1f991,x:6,y:9}],\n    \"food_and_drinks\": [{code:0x1f347,x:8,y:0},{code:0x1f348,x:9,y:0},{code:0x1f349,x:0,y:1},{code:0x1f34a,x:1,y:1},{code:0x1f34b,x:2,y:1},{code:0x1f34c,x:3,y:1},{code:0x1f34d,x:4,y:1},{code:0x1f96d,x:10,y:0},{code:0x1f34e,x:5,y:1},{code:0x1f34f,x:6,y:1},{code:0x1f350,x:7,y:1},{code:0x1f351,x:8,y:1},{code:0x1f352,x:9,y:1},{code:0x1f353,x:0,y:2},{code:0x1f95d,x:4,y:8},{code:0x1f345,x:6,y:0},{code:0x1f965,x:2,y:9},{code:0x1f951,x:2,y:7},{code:0x1f346,x:7,y:0},{code:0x1f954,x:5,y:7},{code:0x1f955,x:6,y:7},{code:0x1f33d,x:5,y:0},{code:0x1f336,x:4,y:0},{code:0x1f952,x:3,y:7},{code:0x1f96c,x:9,y:9},{code:0x1f966,x:3,y:9},{code:0x1f95c,x:3,y:8},{code:0x1f330,x:3,y:0},{code:0x1f35e,x:1,y:3},{code:0x1f950,x:1,y:7},{code:0x1f956,x:7,y:7},{code:0x1f968,x:5,y:9},{code:0x1f96f,x:10,y:2},{code:0x1f95e,x:5,y:8},{code:0x1f9c0,x:10,y:3},{code:0x1f356,x:3,y:2},{code:0x1f357,x:4,y:2},{code:0x1f969,x:6,y:9},{code:0x1f953,x:4,y:7},{code:0x1f354,x:1,y:2},{code:0x1f35f,x:2,y:3},{code:0x1f355,x:2,y:2},{code:0x1f32d,x:0,y:0},{code:0x1f96a,x:7,y:9},{code:0x1f32e,x:1,y:0},{code:0x1f32f,x:2,y:0},{code:0x1f959,x:0,y:8},{code:0x1f95a,x:1,y:8},{code:0x1f373,x:2,y:5},{code:0x1f958,x:9,y:7},{code:0x1f372,x:1,y:5},{code:0x1f963,x:0,y:9},{code:0x1f957,x:8,y:7},{code:0x1f37f,x:4,y:6},{code:0x1f9c2,x:10,y:5},{code:0x1f96b,x:8,y:9},{code:0x1f371,x:0,y:5},{code:0x1f358,x:5,y:2},{code:0x1f359,x:6,y:2},{code:0x1f35a,x:7,y:2},{code:0x1f35b,x:8,y:2},{code:0x1f35c,x:9,y:2},{code:0x1f35d,x:0,y:3},{code:0x1f360,x:3,y:3},{code:0x1f362,x:5,y:3},{code:0x1f363,x:6,y:3},{code:0x1f364,x:7,y:3},{code:0x1f365,x:8,y:3},{code:0x1f96e,x:10,y:1},{code:0x1f361,x:4,y:3},{code:0x1f95f,x:6,y:8},{code:0x1f960,x:7,y:8},{code:0x1f961,x:8,y:8},{code:0x1f366,x:9,y:3},{code:0x1f367,x:0,y:4},{code:0x1f368,x:1,y:4},{code:0x1f369,x:2,y:4},{code:0x1f36a,x:3,y:4},{code:0x1f382,x:5,y:6},{code:0x1f370,x:9,y:4},{code:0x1f9c1,x:10,y:4},{code:0x1f967,x:4,y:9},{code:0x1f36b,x:4,y:4},{code:0x1f36c,x:5,y:4},{code:0x1f36d,x:6,y:4},{code:0x1f36e,x:7,y:4},{code:0x1f36f,x:8,y:4},{code:0x1f37c,x:1,y:6},{code:0x1f95b,x:2,y:8},{code:0x2615,x:4,y:10},{code:0x1f375,x:4,y:5},{code:0x1f376,x:5,y:5},{code:0x1f37e,x:3,y:6},{code:0x1f377,x:6,y:5},{code:0x1f378,x:7,y:5},{code:0x1f379,x:8,y:5},{code:0x1f37a,x:9,y:5},{code:0x1f37b,x:0,y:6},{code:0x1f942,x:8,y:6},{code:0x1f943,x:9,y:6},{code:0x1f964,x:1,y:9},{code:0x1f962,x:9,y:8},{code:0x1f37d,x:2,y:6},{code:0x1f374,x:3,y:5},{code:0x1f944,x:0,y:7},{code:0x1f52a,x:7,y:6},{code:0x1f3fa,x:6,y:6}],\n    \"travel_and_places\": [{code:0x1f30d,x:13,y:0},{code:0x1f30e,x:0,y:1},{code:0x1f30f,x:1,y:1},{code:0x1f310,x:2,y:1},{code:0x1f5fa,x:0,y:8},{code:0x1f5fe,x:4,y:8},{code:0x1f9ed,x:12,y:12},{code:0x1f3d4,x:9,y:3},{code:0x26f0,x:14,y:8},{code:0x1f30b,x:11,y:0},{code:0x1f5fb,x:1,y:8},{code:0x1f3d5,x:10,y:3},{code:0x1f3d6,x:11,y:3},{code:0x1f3dc,x:3,y:4},{code:0x1f3dd,x:4,y:4},{code:0x1f3de,x:5,y:4},{code:0x1f3df,x:6,y:4},{code:0x1f3db,x:2,y:4},{code:0x1f3d7,x:12,y:3},{code:0x1f9f1,x:13,y:12},{code:0x1f3d8,x:13,y:3},{code:0x1f3da,x:1,y:4},{code:0x1f3e0,x:7,y:4},{code:0x1f3e1,x:8,y:4},{code:0x1f3e2,x:9,y:4},{code:0x1f3e3,x:10,y:4},{code:0x1f3e4,x:11,y:4},{code:0x1f3e5,x:12,y:4},{code:0x1f3e6,x:13,y:4},{code:0x1f3e8,x:0,y:5},{code:0x1f3e9,x:1,y:5},{code:0x1f3ea,x:2,y:5},{code:0x1f3eb,x:3,y:5},{code:0x1f3ec,x:4,y:5},{code:0x1f3ed,x:5,y:5},{code:0x1f3ef,x:6,y:5},{code:0x1f3f0,x:7,y:5},{code:0x1f492,x:9,y:5},{code:0x1f5fc,x:2,y:8},{code:0x1f5fd,x:3,y:8},{code:0x26ea,x:14,y:7},{code:0x1f54c,x:0,y:6},{code:0x1f54d,x:1,y:6},{code:0x26e9,x:14,y:6},{code:0x1f54b,x:13,y:5},{code:0x26f2,x:14,y:10},{code:0x26fa,x:0,y:14},{code:0x1f301,x:1,y:0},{code:0x1f303,x:3,y:0},{code:0x1f3d9,x:0,y:4},{code:0x1f304,x:4,y:0},{code:0x1f305,x:5,y:0},{code:0x1f306,x:6,y:0},{code:0x1f307,x:7,y:0},{code:0x1f309,x:9,y:0},{code:0x2668,x:14,y:0},{code:0x1f3a0,x:1,y:3},{code:0x1f3a1,x:2,y:3},{code:0x1f3a2,x:3,y:3},{code:0x1f488,x:8,y:5},{code:0x1f3aa,x:5,y:3},{code:0x1f682,x:8,y:8},{code:0x1f683,x:9,y:8},{code:0x1f684,x:10,y:8},{code:0x1f685,x:11,y:8},{code:0x1f686,x:12,y:8},{code:0x1f687,x:13,y:8},{code:0x1f688,x:0,y:9},{code:0x1f689,x:1,y:9},{code:0x1f68a,x:2,y:9},{code:0x1f69d,x:7,y:10},{code:0x1f69e,x:8,y:10},{code:0x1f68b,x:3,y:9},{code:0x1f68c,x:4,y:9},{code:0x1f68d,x:5,y:9},{code:0x1f68e,x:6,y:9},{code:0x1f690,x:8,y:9},{code:0x1f691,x:9,y:9},{code:0x1f692,x:10,y:9},{code:0x1f693,x:11,y:9},{code:0x1f694,x:12,y:9},{code:0x1f695,x:13,y:9},{code:0x1f696,x:0,y:10},{code:0x1f697,x:1,y:10},{code:0x1f698,x:2,y:10},{code:0x1f699,x:3,y:10},{code:0x1f69a,x:4,y:10},{code:0x1f69b,x:5,y:10},{code:0x1f69c,x:6,y:10},{code:0x1f3ce,x:8,y:3},{code:0x1f3cd,x:7,y:3},{code:0x1f6f5,x:4,y:12},{code:0x1f6b2,x:4,y:11},{code:0x1f6f4,x:3,y:12},{code:0x1f6f9,x:7,y:12},{code:0x1f68f,x:7,y:9},{code:0x1f6e3,x:9,y:11},{code:0x1f6e4,x:10,y:11},{code:0x1f6e2,x:8,y:11},{code:0x26fd,x:1,y:14},{code:0x1f6a8,x:3,y:11},{code:0x1f6a5,x:0,y:11},{code:0x1f6a6,x:1,y:11},{code:0x1f6d1,x:6,y:11},{code:0x1f6a7,x:2,y:11},{code:0x2693,x:14,y:1},{code:0x26f5,x:14,y:13},{code:0x1f6f6,x:5,y:12},{code:0x1f3a3,x:4,y:3},{code:0x1f6a4,x:13,y:10},{code:0x1f6f3,x:2,y:12},{code:0x26f4,x:14,y:12},{code:0x1f6e5,x:11,y:11},{code:0x1f6a2,x:12,y:10},{code:0x2708,x:2,y:14},{code:0x1f6e9,x:12,y:11},{code:0x1f6eb,x:13,y:11},{code:0x1f6ec,x:0,y:12},{code:0x1f4ba,x:11,y:5},{code:0x1f681,x:7,y:8},{code:0x1f69f,x:9,y:10},{code:0x1f6a0,x:10,y:10},{code:0x1f6a1,x:11,y:10},{code:0x1f6f0,x:1,y:12},{code:0x1f680,x:6,y:8},{code:0x1f6f8,x:6,y:12},{code:0x1f6ce,x:5,y:11},{code:0x1f9f3,x:0,y:13},{code:0x231b,x:3,y:13},{code:0x23f3,x:7,y:13},{code:0x231a,x:2,y:13},{code:0x23f0,x:4,y:13},{code:0x23f1,x:5,y:13},{code:0x23f2,x:6,y:13},{code:0x1f570,x:12,y:7},{code:0x1f55b,x:13,y:6},{code:0x1f567,x:11,y:7},{code:0x1f550,x:2,y:6},{code:0x1f55c,x:0,y:7},{code:0x1f551,x:3,y:6},{code:0x1f55d,x:1,y:7},{code:0x1f552,x:4,y:6},{code:0x1f55e,x:2,y:7},{code:0x1f553,x:5,y:6},{code:0x1f55f,x:3,y:7},{code:0x1f554,x:6,y:6},{code:0x1f560,x:4,y:7},{code:0x1f555,x:7,y:6},{code:0x1f561,x:5,y:7},{code:0x1f556,x:8,y:6},{code:0x1f562,x:6,y:7},{code:0x1f557,x:9,y:6},{code:0x1f563,x:7,y:7},{code:0x1f558,x:10,y:6},{code:0x1f564,x:8,y:7},{code:0x1f559,x:11,y:6},{code:0x1f565,x:9,y:7},{code:0x1f55a,x:12,y:6},{code:0x1f566,x:10,y:7},{code:0x1f311,x:3,y:1},{code:0x1f312,x:4,y:1},{code:0x1f313,x:5,y:1},{code:0x1f314,x:6,y:1},{code:0x1f315,x:7,y:1},{code:0x1f316,x:8,y:1},{code:0x1f317,x:9,y:1},{code:0x1f318,x:10,y:1},{code:0x1f319,x:11,y:1},{code:0x1f31a,x:12,y:1},{code:0x1f31b,x:13,y:1},{code:0x1f31c,x:0,y:2},{code:0x1f321,x:5,y:2},{code:0x2600,x:8,y:13},{code:0x1f31d,x:1,y:2},{code:0x1f31e,x:2,y:2},{code:0x2b50,x:4,y:14},{code:0x1f31f,x:3,y:2},{code:0x1f320,x:4,y:2},{code:0x1f30c,x:12,y:0},{code:0x2601,x:9,y:13},{code:0x26c5,x:14,y:4},{code:0x26c8,x:14,y:5},{code:0x1f324,x:6,y:2},{code:0x1f325,x:7,y:2},{code:0x1f326,x:8,y:2},{code:0x1f327,x:9,y:2},{code:0x1f328,x:10,y:2},{code:0x1f329,x:11,y:2},{code:0x1f32a,x:12,y:2},{code:0x1f32b,x:13,y:2},{code:0x1f32c,x:0,y:3},{code:0x1f300,x:0,y:0},{code:0x1f308,x:8,y:0},{code:0x1f302,x:2,y:0},{code:0x2602,x:10,y:13},{code:0x2614,x:13,y:13},{code:0x26f1,x:14,y:9},{code:0x26a1,x:14,y:2},{code:0x2744,x:3,y:14},{code:0x2603,x:11,y:13},{code:0x26c4,x:14,y:3},{code:0x2604,x:12,y:13},{code:0x1f525,x:12,y:5},{code:0x1f4a7,x:10,y:5},{code:0x1f30a,x:10,y:0}],\n    \"events\": [{code:0x1f383,x:4,y:0},{code:0x1f384,x:5,y:0},{code:0x1f386,x:6,y:0},{code:0x1f387,x:7,y:0},{code:0x1f9e8,x:5,y:6},{code:0x2728,x:9,y:3},{code:0x1f388,x:8,y:0},{code:0x1f389,x:0,y:1},{code:0x1f38a,x:1,y:1},{code:0x1f38b,x:2,y:1},{code:0x1f38d,x:3,y:1},{code:0x1f38e,x:4,y:1},{code:0x1f38f,x:5,y:1},{code:0x1f390,x:6,y:1},{code:0x1f391,x:7,y:1},{code:0x1f9e7,x:4,y:6},{code:0x1f380,x:2,y:0},{code:0x1f381,x:3,y:0},{code:0x1f397,x:0,y:2},{code:0x1f39f,x:1,y:2},{code:0x1f3ab,x:3,y:2},{code:0x1f396,x:8,y:1},{code:0x1f3c6,x:7,y:3},{code:0x1f3c5,x:6,y:3},{code:0x1f947,x:4,y:5},{code:0x1f948,x:5,y:5},{code:0x1f949,x:6,y:5},{code:0x26bd,x:8,y:8},{code:0x26be,x:9,y:0},{code:0x1f94e,x:2,y:6},{code:0x1f3c0,x:5,y:3},{code:0x1f3d0,x:2,y:4},{code:0x1f3c8,x:8,y:3},{code:0x1f3c9,x:0,y:4},{code:0x1f3be,x:3,y:3},{code:0x1f94f,x:3,y:6},{code:0x1f3b3,x:1,y:3},{code:0x1f3cf,x:1,y:4},{code:0x1f3d1,x:3,y:4},{code:0x1f3d2,x:4,y:4},{code:0x1f94d,x:1,y:6},{code:0x1f3d3,x:5,y:4},{code:0x1f3f8,x:6,y:4},{code:0x1f94a,x:7,y:5},{code:0x1f94b,x:8,y:5},{code:0x1f945,x:3,y:5},{code:0x26f3,x:9,y:1},{code:0x26f8,x:9,y:2},{code:0x1f3bd,x:2,y:3},{code:0x1f3bf,x:4,y:3},{code:0x1f6f7,x:2,y:5},{code:0x1f94c,x:0,y:6},{code:0x1f3af,x:6,y:2},{code:0x1f3b1,x:8,y:2},{code:0x1f52e,x:8,y:4},{code:0x1f9ff,x:1,y:7},{code:0x1f3ae,x:5,y:2},{code:0x1f579,x:0,y:5},{code:0x1f3b0,x:7,y:2},{code:0x1f3b2,x:0,y:3},{code:0x1f9e9,x:6,y:6},{code:0x1f9f8,x:0,y:7},{code:0x2660,x:4,y:8},{code:0x2665,x:6,y:8},{code:0x2666,x:7,y:8},{code:0x2663,x:5,y:8},{code:0x265f,x:3,y:8},{code:0x1f0cf,x:1,y:0},{code:0x1f004,x:0,y:0},{code:0x1f3ad,x:4,y:2},{code:0x1f5bc,x:1,y:5},{code:0x1f3a8,x:2,y:2},{code:0x1f9f5,x:7,y:6},{code:0x1f9f6,x:8,y:6}],\n    \"objects\": [{code:0x1f507,x:1,y:7},{code:0x1f508,x:2,y:7},{code:0x1f509,x:3,y:7},{code:0x1f50a,x:4,y:7},{code:0x1f4e2,x:3,y:5},{code:0x1f4e3,x:4,y:5},{code:0x1f4ef,x:3,y:6},{code:0x1f514,x:1,y:8},{code:0x1f515,x:2,y:8},{code:0x1f3bc,x:2,y:1},{code:0x1f3b5,x:8,y:0},{code:0x1f3b6,x:9,y:0},{code:0x1f399,x:0,y:0},{code:0x1f39a,x:1,y:0},{code:0x1f39b,x:2,y:0},{code:0x1f3a4,x:4,y:0},{code:0x1f3a7,x:6,y:0},{code:0x1f4fb,x:11,y:6},{code:0x1f3b7,x:10,y:0},{code:0x1f3b8,x:11,y:0},{code:0x1f3b9,x:12,y:0},{code:0x1f3ba,x:0,y:1},{code:0x1f3bb,x:1,y:1},{code:0x1f941,x:6,y:11},{code:0x1f4f1,x:5,y:6},{code:0x1f4f2,x:6,y:6},{code:0x260e,x:13,y:3},{code:0x1f4de,x:12,y:4},{code:0x1f4df,x:0,y:5},{code:0x1f4e0,x:1,y:5},{code:0x1f50b,x:5,y:7},{code:0x1f50c,x:6,y:7},{code:0x1f4bb,x:4,y:2},{code:0x1f5a5,x:5,y:9},{code:0x1f5a8,x:6,y:9},{code:0x2328,x:13,y:2},{code:0x1f5b1,x:7,y:9},{code:0x1f5b2,x:8,y:9},{code:0x1f4bd,x:6,y:2},{code:0x1f4be,x:7,y:2},{code:0x1f4bf,x:8,y:2},{code:0x1f4c0,x:9,y:2},{code:0x1f9ee,x:2,y:12},{code:0x1f3a5,x:5,y:0},{code:0x1f39e,x:3,y:0},{code:0x1f4fd,x:0,y:7},{code:0x1f3ac,x:7,y:0},{code:0x1f4fa,x:10,y:6},{code:0x1f4f7,x:7,y:6},{code:0x1f4f8,x:8,y:6},{code:0x1f4f9,x:9,y:6},{code:0x1f4fc,x:12,y:6},{code:0x1f50d,x:7,y:7},{code:0x1f50e,x:8,y:7},{code:0x1f56f,x:12,y:8},{code:0x1f4a1,x:8,y:1},{code:0x1f526,x:5,y:8},{code:0x1f3ee,x:3,y:1},{code:0x1f4d4,x:3,y:4},{code:0x1f4d5,x:4,y:4},{code:0x1f4d6,x:5,y:4},{code:0x1f4d7,x:6,y:4},{code:0x1f4d8,x:7,y:4},{code:0x1f4d9,x:8,y:4},{code:0x1f4da,x:9,y:4},{code:0x1f4d3,x:2,y:4},{code:0x1f4d2,x:1,y:4},{code:0x1f4c3,x:12,y:2},{code:0x1f4dc,x:10,y:4},{code:0x1f4c4,x:0,y:3},{code:0x1f4f0,x:4,y:6},{code:0x1f5de,x:4,y:10},{code:0x1f4d1,x:0,y:4},{code:0x1f516,x:3,y:8},{code:0x1f3f7,x:4,y:1},{code:0x1f4b0,x:9,y:1},{code:0x1f4b4,x:11,y:1},{code:0x1f4b5,x:12,y:1},{code:0x1f4b6,x:0,y:2},{code:0x1f4b7,x:1,y:2},{code:0x1f4b8,x:2,y:2},{code:0x1f4b3,x:10,y:1},{code:0x1f9fe,x:13,y:0},{code:0x1f4b9,x:3,y:2},{code:0x2709,x:1,y:13},{code:0x1f4e7,x:8,y:5},{code:0x1f4e8,x:9,y:5},{code:0x1f4e9,x:10,y:5},{code:0x1f4e4,x:5,y:5},{code:0x1f4e5,x:6,y:5},{code:0x1f4e6,x:7,y:5},{code:0x1f4eb,x:12,y:5},{code:0x1f4ea,x:11,y:5},{code:0x1f4ec,x:0,y:6},{code:0x1f4ed,x:1,y:6},{code:0x1f4ee,x:2,y:6},{code:0x1f5f3,x:6,y:10},{code:0x270f,x:2,y:13},{code:0x2712,x:3,y:13},{code:0x1f58b,x:2,y:9},{code:0x1f58a,x:1,y:9},{code:0x1f58c,x:3,y:9},{code:0x1f58d,x:4,y:9},{code:0x1f4dd,x:11,y:4},{code:0x1f4bc,x:5,y:2},{code:0x1f4c1,x:10,y:2},{code:0x1f4c2,x:11,y:2},{code:0x1f5c2,x:9,y:9},{code:0x1f4c5,x:1,y:3},{code:0x1f4c6,x:2,y:3},{code:0x1f5d2,x:0,y:10},{code:0x1f5d3,x:1,y:10},{code:0x1f4c7,x:3,y:3},{code:0x1f4c8,x:4,y:3},{code:0x1f4c9,x:5,y:3},{code:0x1f4ca,x:6,y:3},{code:0x1f4cb,x:7,y:3},{code:0x1f4cc,x:8,y:3},{code:0x1f4cd,x:9,y:3},{code:0x1f4ce,x:10,y:3},{code:0x1f587,x:0,y:9},{code:0x1f4cf,x:11,y:3},{code:0x1f4d0,x:12,y:3},{code:0x2702,x:0,y:13},{code:0x1f5c3,x:10,y:9},{code:0x1f5c4,x:11,y:9},{code:0x1f5d1,x:12,y:9},{code:0x1f512,x:12,y:7},{code:0x1f513,x:0,y:8},{code:0x1f50f,x:9,y:7},{code:0x1f510,x:10,y:7},{code:0x1f511,x:11,y:7},{code:0x1f5dd,x:3,y:10},{code:0x1f528,x:7,y:8},{code:0x26cf,x:13,y:11},{code:0x2692,x:13,y:4},{code:0x1f6e0,x:3,y:11},{code:0x1f5e1,x:5,y:10},{code:0x2694,x:13,y:5},{code:0x1f52b,x:9,y:8},{code:0x1f3f9,x:5,y:1},{code:0x1f6e1,x:4,y:11},{code:0x1f527,x:6,y:8},{code:0x1f529,x:8,y:8},{code:0x2699,x:13,y:8},{code:0x1f5dc,x:2,y:10},{code:0x2696,x:13,y:6},{code:0x1f517,x:4,y:8},{code:0x26d3,x:13,y:12},{code:0x1f9f0,x:4,y:12},{code:0x1f9f2,x:5,y:12},{code:0x2697,x:13,y:7},{code:0x1f9ea,x:12,y:11},{code:0x1f9eb,x:0,y:12},{code:0x1f9ec,x:1,y:12},{code:0x1f52c,x:10,y:8},{code:0x1f52d,x:11,y:8},{code:0x1f4e1,x:2,y:5},{code:0x1f489,x:6,y:1},{code:0x1f48a,x:7,y:1},{code:0x1f6aa,x:8,y:10},{code:0x1f6cf,x:1,y:11},{code:0x1f6cb,x:0,y:11},{code:0x1f6bd,x:10,y:10},{code:0x1f6bf,x:11,y:10},{code:0x1f6c1,x:12,y:10},{code:0x1f9f4,x:6,y:12},{code:0x1f9f7,x:7,y:12},{code:0x1f9f9,x:8,y:12},{code:0x1f9fa,x:9,y:12},{code:0x1f9fb,x:10,y:12},{code:0x1f9fc,x:11,y:12},{code:0x1f9fd,x:12,y:12},{code:0x1f9ef,x:3,y:12},{code:0x1f6d2,x:2,y:11},{code:0x1f6ac,x:9,y:10},{code:0x26b0,x:13,y:9},{code:0x26b1,x:13,y:10},{code:0x1f5ff,x:7,y:10}],\n    \"signs\": [{code:0x1f6ae,x:4,y:8},{code:0x1f6b0,x:6,y:8},{code:0x267f,x:3,y:13},{code:0x1f6b9,x:11,y:8},{code:0x1f6ba,x:12,y:8},{code:0x1f6bb,x:13,y:8},{code:0x1f6bc,x:14,y:8},{code:0x1f6be,x:0,y:9},{code:0x1f6c2,x:1,y:9},{code:0x1f6c3,x:2,y:9},{code:0x1f6c4,x:3,y:9},{code:0x1f6c5,x:4,y:9},{code:0x1f3e7,x:13,y:4},{code:0x26a0,x:7,y:13},{code:0x1f6b8,x:10,y:8},{code:0x26d4,x:11,y:13},{code:0x1f6ab,x:2,y:8},{code:0x1f6b3,x:8,y:8},{code:0x1f6ad,x:3,y:8},{code:0x1f6af,x:5,y:8},{code:0x1f6b1,x:7,y:8},{code:0x1f6b7,x:9,y:8},{code:0x1f4f5,x:7,y:5},{code:0x1f51e,x:7,y:6},{code:0x2622,x:10,y:11},{code:0x2623,x:11,y:11},{code:0x2b06,x:15,y:5},{code:0x2197,x:14,y:9},{code:0x27a1,x:14,y:14},{code:0x2198,x:0,y:10},{code:0x2b07,x:15,y:6},{code:0x2199,x:1,y:10},{code:0x2b05,x:15,y:4},{code:0x2196,x:13,y:9},{code:0x2195,x:12,y:9},{code:0x2194,x:11,y:9},{code:0x21a9,x:2,y:10},{code:0x21aa,x:3,y:10},{code:0x2934,x:15,y:2},{code:0x2935,x:15,y:3},{code:0x1f503,x:12,y:5},{code:0x1f504,x:13,y:5},{code:0x1f519,x:2,y:6},{code:0x1f51a,x:3,y:6},{code:0x1f51b,x:4,y:6},{code:0x1f51c,x:5,y:6},{code:0x1f51d,x:6,y:6},{code:0x1f6d0,x:5,y:9},{code:0x269b,x:5,y:13},{code:0x1f549,x:14,y:7},{code:0x2721,x:1,y:14},{code:0x2638,x:1,y:12},{code:0x262f,x:0,y:12},{code:0x271d,x:0,y:14},{code:0x2626,x:12,y:11},{code:0x262a,x:13,y:11},{code:0x262e,x:14,y:11},{code:0x1f54e,x:0,y:8},{code:0x1f52f,x:14,y:6},{code:0x2648,x:4,y:12},{code:0x2649,x:5,y:12},{code:0x264a,x:6,y:12},{code:0x264b,x:7,y:12},{code:0x264c,x:8,y:12},{code:0x264d,x:9,y:12},{code:0x264e,x:10,y:12},{code:0x264f,x:11,y:12},{code:0x2650,x:12,y:12},{code:0x2651,x:13,y:12},{code:0x2652,x:14,y:12},{code:0x2653,x:0,y:13},{code:0x26ce,x:10,y:13},{code:0x1f500,x:9,y:5},{code:0x1f501,x:10,y:5},{code:0x1f502,x:11,y:5},{code:0x25b6,x:3,y:11},{code:0x23e9,x:5,y:10},{code:0x23ed,x:9,y:10},{code:0x23ef,x:11,y:10},{code:0x25c0,x:4,y:11},{code:0x23ea,x:6,y:10},{code:0x23ee,x:10,y:10},{code:0x1f53c,x:12,y:7},{code:0x23eb,x:7,y:10},{code:0x1f53d,x:13,y:7},{code:0x23ec,x:8,y:10},{code:0x23f8,x:12,y:10},{code:0x23f9,x:13,y:10},{code:0x23fa,x:14,y:10},{code:0x23cf,x:4,y:10},{code:0x1f3a6,x:11,y:4},{code:0x1f505,x:14,y:5},{code:0x1f506,x:0,y:6},{code:0x1f4f6,x:8,y:5},{code:0x1f4f3,x:5,y:5},{code:0x1f4f4,x:6,y:5},{code:0x2640,x:2,y:12},{code:0x2642,x:3,y:12},{code:0x2716,x:14,y:13},{code:0x2795,x:11,y:14},{code:0x2796,x:12,y:14},{code:0x2797,x:13,y:14},{code:0x267e,x:2,y:13},{code:0x203c,x:6,y:9},{code:0x2049,x:7,y:9},{code:0x2753,x:7,y:14},{code:0x2754,x:8,y:14},{code:0x2755,x:9,y:14},{code:0x2757,x:10,y:14},{code:0x3030,x:15,y:10},{code:0x1f4b1,x:2,y:5},{code:0x1f4b2,x:3,y:5},{code:0x2695,x:4,y:13},{code:0x267b,x:1,y:13},{code:0x269c,x:6,y:13},{code:0x1f531,x:1,y:7},{code:0x1f4db,x:4,y:5},{code:0x1f530,x:0,y:7},{code:0x2b55,x:15,y:9},{code:0x2705,x:12,y:13},{code:0x2611,x:9,y:11},{code:0x2714,x:13,y:13},{code:0x274c,x:5,y:14},{code:0x274e,x:6,y:14},{code:0x27b0,x:15,y:0},{code:0x27bf,x:15,y:1},{code:0x303d,x:15,y:11},{code:0x2733,x:2,y:14},{code:0x2734,x:3,y:14},{code:0x2747,x:4,y:14},{code:0x00a9,x:12,y:0},{code:0x00ae,x:13,y:0},{code:0x2122,x:9,y:9},{code:0x1f520,x:9,y:6},{code:0x1f521,x:10,y:6},{code:0x1f522,x:11,y:6},{code:0x1f523,x:12,y:6},{code:0x1f524,x:13,y:6},{code:0x1f170,x:14,y:0},{code:0x1f18e,x:3,y:1},{code:0x1f171,x:0,y:1},{code:0x1f191,x:4,y:1},{code:0x1f192,x:5,y:1},{code:0x1f193,x:6,y:1},{code:0x2139,x:10,y:9},{code:0x1f194,x:7,y:1},{code:0x24c2,x:0,y:11},{code:0x1f195,x:8,y:1},{code:0x1f196,x:9,y:1},{code:0x1f17e,x:1,y:1},{code:0x1f197,x:10,y:1},{code:0x1f17f,x:2,y:1},{code:0x1f198,x:11,y:1},{code:0x1f199,x:12,y:1},{code:0x1f19a,x:13,y:1},{code:0x1f201,x:10,y:3},{code:0x1f202,x:11,y:3},{code:0x1f237,x:4,y:4},{code:0x1f236,x:3,y:4},{code:0x1f22f,x:13,y:3},{code:0x1f250,x:8,y:4},{code:0x1f239,x:6,y:4},{code:0x1f21a,x:12,y:3},{code:0x1f232,x:14,y:3},{code:0x1f251,x:9,y:4},{code:0x1f238,x:5,y:4},{code:0x1f234,x:1,y:4},{code:0x1f233,x:0,y:4},{code:0x3297,x:15,y:12},{code:0x3299,x:15,y:13},{code:0x1f23a,x:7,y:4},{code:0x1f235,x:2,y:4},{code:0x1f534,x:4,y:7},{code:0x1f535,x:5,y:7},{code:0x26ab,x:9,y:13},{code:0x26aa,x:8,y:13},{code:0x2b1c,x:15,y:8},{code:0x25fc,x:6,y:11},{code:0x25fb,x:5,y:11},{code:0x25fe,x:8,y:11},{code:0x25fd,x:7,y:11},{code:0x25aa,x:1,y:11},{code:0x25ab,x:2,y:11},{code:0x1f536,x:6,y:7},{code:0x1f537,x:7,y:7},{code:0x1f538,x:8,y:7},{code:0x1f539,x:9,y:7},{code:0x1f53a,x:10,y:7},{code:0x1f53b,x:11,y:7},{code:0x1f4a0,x:1,y:5},{code:0x1f518,x:1,y:6},{code:0x1f533,x:3,y:7},{code:0x1f532,x:2,y:7},{code:0x1f3c1,x:12,y:4},{code:0x1f6a9,x:1,y:8},{code:0x1f38c,x:10,y:4},{code:0x1f3f4,x:0,y:5},{code:0x1f3f3,x:14,y:4},{code:0x1f1e6,x:14,y:1},{code:0x1f1e7,x:0,y:2},{code:0x1f1e8,x:1,y:2},{code:0x1f1e9,x:2,y:2},{code:0x1f1ea,x:3,y:2},{code:0x1f1eb,x:4,y:2},{code:0x1f1ec,x:5,y:2},{code:0x1f1ed,x:6,y:2},{code:0x1f1ee,x:7,y:2},{code:0x1f1ef,x:8,y:2},{code:0x1f1f0,x:9,y:2},{code:0x1f1f1,x:10,y:2},{code:0x1f1f2,x:11,y:2},{code:0x1f1f3,x:12,y:2},{code:0x1f1f4,x:13,y:2},{code:0x1f1f5,x:14,y:2},{code:0x1f1f6,x:0,y:3},{code:0x1f1f7,x:1,y:3},{code:0x1f1f8,x:2,y:3},{code:0x1f1f9,x:3,y:3},{code:0x1f1fa,x:4,y:3},{code:0x1f1fb,x:5,y:3},{code:0x1f1fc,x:6,y:3},{code:0x1f1fd,x:7,y:3},{code:0x1f1fe,x:8,y:3},{code:0x1f1ff,x:9,y:3}]\n};\n\nvar getEmoji = function (code) {\n    if (code < 0x10000) {\n        return String.fromCharCode(code);\n    }\n    var offset = code - 0x10000,\n        lead = 0xd800 + (offset >> 10),\n        trail = 0xdc00 + (offset & 0x3ff);\n    return String.fromCharCode(lead)+String.fromCharCode(trail);\n};\n\nvar emoji_data = {}, all = {};\n\nvar getEmojiByIndex = function (idx) {\n    var emoji;\n    for (var emoji_list in raw_data) {\n       if (raw_data[emoji_list][idx]) {\n           emoji = raw_data[emoji_list][idx];\n           break;\n       }\n    }\n    return getEmoji(emoji.code);\n};\n\nfor (var emoji_list in raw_data) {\n    _.each(raw_data[emoji_list], function (item) {\n        var emoji = getEmoji(item.code);\n        emoji_data[emoji] = item;\n        !all[emoji_list] && (all[emoji_list] = []);\n        all[emoji_list].push(emoji);\n    });\n}\n\nvar emoji_regexp = /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/g;\n\nString.prototype.emojify = function (options) {\n    options || (options = {});\n    var sprite = options.sprite,\n        tag_name = sprite ? (options.tag_name || 'span') : 'img',\n        emoji_size = options.emoji_size || 20,\n        href = options.href ? ` href=\"#${options.href}\" ` :\"\",\n        title = options.title ? ` title=\"${options.title}\" ` :\"\";\n    return this.replace(emoji_regexp, function (emoji) {\n        let data = emoji_data[emoji],\n            emoji_code = data && Number(data.code).toString(16);\n        if (data) {\n            (emoji_code.length < 4) && (emoji_code = \"0\".repeat(4 - emoji_code.length) + emoji_code);\n            let img_src = tag_name === 'img' ? (sprite ? ' src=\"assets/images/emoji/blank.gif\"' : '  src=\"assets/images/emoji/svg32/emoji_u' + emoji_code + '.svg\"') : '';\n            return '<' + tag_name + img_src + href + title + ' class=\"emoji emoji-w' + emoji_size +\n                (sprite ? (' sprite-' + sprite + '\" style=\"background-position: ' + '-' + (emoji_size * data.x) + 'px ' + '-' + (emoji_size * data.y) + 'px;\" ') : '\" ') +\n                'alt=\"' + emoji + '\" ' +\n                'data-emoji=\"' + emoji + '\"/>';\n        }\n        else\n            return emoji;\n    });\n};\n\nString.prototype.removeEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \"\";\n        } else {\n            return emoji;\n        }\n    });\n};\n\nString.prototype.replaceEmoji = function () {\n    return this.replace(emoji_regexp, function (emoji) {\n        var data = emoji_data[emoji];\n        if (data) {\n            return \" \";\n        } else {\n            return emoji;\n        }\n    });\n};\n\n$.fn.emojify = function (selector, options) {\n    this.find(selector).each(function () {\n        var text = $(this).html();\n        $(this).html(text.emojify(options));\n    });\n    return this;\n};\n\nexport default {\n    all: all,\n    get: getEmoji,\n    getByIndex: getEmojiByIndex\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$,\n    hasher = deps.SHA1.b64_sha1;\n\nvar _image_cache = {};\n\nvar COLORS = [\n    \"#1abc9c\", \"#16a085\", \"#f1c40f\", \"#f39c12\",\n    \"#2ecc71\", \"#27ae60\", \"#e67e22\", \"#d35400\",\n    \"#3498db\", \"#2980b9\", \"#e74c3c\", \"#c0392b\",\n    \"#9b59b6\", \"#8e44ad\", \"#bdc3c7\", \"#34495e\",\n    \"#2c3e50\", \"#95a5a6\", \"#7f8c8d\", \"#ec87bf\",\n    \"#d870ad\", \"#f69785\", \"#9ba37e\", \"#b49255\",\n    \"#a94136\"\n];\n\nvar MAX_SIZE = 200;\nvar MAX_IMG_SIZE = 1280;\n\nvar b64toBlob = function (b64Data, contentType, sliceSize) {\n    contentType = contentType || '';\n    sliceSize = sliceSize || 512;\n    var byteCharacters = atob(b64Data);\n    var byteArrays = [];\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n        var byteArray = new Uint8Array(byteNumbers);\n        byteArrays.push(byteArray);\n    }\n    var blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n};\n\nvar CachedImage = function (image) {\n    this.url = window.URL.createObjectURL(b64toBlob(image));\n    _image_cache[image] = this;\n    return this;\n};\n\nvar getCachedImage = function (image) {\n    // save often used image and get blob url for it\n    if (image instanceof CachedImage) {\n        return image;\n    } else if (image && (_.isString(image) && image.indexOf('http') == 0 || _.isObject(image) && image.url && image.url.indexOf('http') == 0)) {\n        if (_.isString(image))\n            return {url: image};\n        else if (_.isObject(image))\n            return image;\n    }\n    return _image_cache[image] || new CachedImage(image);\n};\n\nvar getDefaultAvatar = function (name, color, font, width, height) {\n    // generate colored avatar with first letters of username\n    var canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        _name = name ? name.trim() : '',\n        first_name, last_name, splitted_name = _name.split(' ', 2),\n        first_letter, second_letter;\n        // color_index;\n    first_name = splitted_name[0];\n    last_name = (splitted_name.length > 1 ? splitted_name[1] : '');\n    first_letter = first_name[0] || '';\n    if (last_name) {\n        second_letter = last_name[0];\n    } else {\n        second_letter = (first_name.length > 1 ? first_name[1] : '');\n    }\n    // color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    canvas.width = width || 256;\n    canvas.height = height || 256;\n    ctx.rect(0, 0, width || 256, height || 256);\n    ctx.fillStyle = color || getAccountColor(name);//COLORS[color_index];\n    ctx.fill();\n    ctx.font = font || \"bold 100px sans-serif\";\n    ctx.fillStyle = \"#FFF\";\n    ctx.textAlign = \"center\";\n    if (font){\n        ctx.textBaseline = 'ideographic';\n        ctx.fillText(_name, width/2 || 128, (height/2 + height *0.28) || 160);\n    }\n    else\n        ctx.fillText(first_letter.toUpperCase()+second_letter.toUpperCase(), 128, 160);\n    var image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n    return image;\n};\n\nvar getAccountColor = function (name) {\n    var _name = name ? name.trim() : '',\n        color_index = Math.floor(hasher(_name).charCodeAt(0) % COLORS.length);\n    return COLORS[color_index];\n};\n\nvar getImageSize = function (size, max_size) {\n    if (size.width > size.height) {\n        if (size.width > max_size) {\n            size.height *= max_size / size.width;\n            size.width = max_size;\n        }\n    } else {\n        if (size.height > max_size) {\n            size.width *= max_size / size.height;\n            size.height = max_size;\n        }\n    }\n    return size;\n};\n\nvar compressImage = function (file) {\n    var image_obj = new Image(),\n        src = window.URL.createObjectURL(file),\n        deferred = new $.Deferred();\n    image_obj.onload = function () {\n        image_obj.onload = null;\n        var canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d'),\n            width = image_obj.naturalWidth,\n            height = image_obj.naturalHeight,\n            file_type = file.type,\n            file_name = file.name,\n            new_size = getImageSize({width: width, height: height}, MAX_IMG_SIZE);\n        if (file.type === 'image/svg+xml') {\n            file.width = width;\n            file.height = height;\n            deferred.resolve(file);\n        }\n        canvas.width = new_size.width;\n        canvas.height = new_size.height;\n        ctx.drawImage(image_obj, 0, 0, new_size.width, new_size.height);\n        canvas.toBlob((blob) => {\n            const file = new File([blob], file_name, {\n                type: file_type,\n                lastModified: Date.now()\n            });\n            deferred.resolve(file);\n        }, file_type, 0.8);\n        window.URL.revokeObjectURL(src);\n    };\n    image_obj.onerror = function() {\n        image_obj.onerror = null;\n        window.URL.revokeObjectURL(src);\n        deferred.resolve(false);\n    };\n    image_obj.src = src;\n    return deferred.promise();\n};\n\nvar setCss = function (image_el, cached_image, img_size) {\n    var $image_el = $(image_el),\n        css = {\n            backgroundImage: 'url(\"' + cached_image.url + '\")',\n            backgroundSize: 'cover',\n            backgroundColor: '#FFF'\n        };\n    $image_el.css(css);\n};\n\nvar getCachedBackground = function (base64) {\n    if (base64.indexOf('http') == 0)\n        return base64;\n    return getCachedImage(base64.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')).url;\n};\n\nvar getAvatarFromFile = function (file) {\n    var image_obj = new Image(),\n         src = window.URL.createObjectURL(file),\n         deferred = new $.Deferred();\n     image_obj.onload = function () {\n         image_obj.onload = null;\n         var canvas = document.createElement('canvas'),\n             ctx = canvas.getContext('2d'),\n             width = image_obj.naturalWidth,\n             height = image_obj.naturalHeight,\n             b64_image, hash,\n             new_size = getImageSize({width: width, height: height}, MAX_SIZE);\n         canvas.width = new_size.width;\n         canvas.height = new_size.height;\n         ctx.drawImage(image_obj, 0, 0, canvas.width, canvas.height);\n         b64_image = canvas.toDataURL().replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n         window.URL.revokeObjectURL(src);\n         canvas.toBlob((blob) => {\n             var reader = new FileReader();\n             reader.onload = function () {\n                 b64_image = reader.result.replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n                 let binary_file = atob(b64_image),\n                    bytes = new Uint8Array(binary_file.length);\n\n                 for (let i = 0; i < binary_file.length; i++)\n                     bytes[i] = binary_file.charCodeAt(i);\n\n                 hash = sha1(bytes);\n                 deferred.resolve(b64_image, hash, binary_file.length);\n             }.bind(this);\n             reader.readAsDataURL(blob);\n         }, file.type, 0.8);\n     };\n     image_obj.onerror = function() {\n         image_obj.onerror = null;\n         window.URL.revokeObjectURL(src);\n         deferred.resolve(false, false, false);\n     };\n     image_obj.src = src;\n     return deferred.promise();\n};\n\n$.fn.setAvatar = function (image, size) {\n    var cached_image = getCachedImage(image);\n    setCss(this, cached_image, size);\n};\n\nexport default {\n    getCachedImage: getCachedImage,\n    getBlobImage: b64toBlob,\n    getDefaultAvatar: getDefaultAvatar,\n    getAvatarFromFile: getAvatarFromFile,\n    getDefaultColor: getAccountColor,\n    getCachedBackground: getCachedBackground,\n    compressImage: compressImage\n};\n","import deps from \"xabber-dependencies\"\nimport templates from \"xabber-templates\";\nimport constants from \"xabber-constants\";\n\nvar _ = deps._,\n    $ = deps.$;\n\nvar $modal_container = $('<div>').attr('id', 'modals').appendTo(constants.CONTAINER_ELEMENT);\nvar modal_queue = [];\n\nvar Modal = function (modal_constructor, options) {\n    if (modal_constructor instanceof Function) {\n        this.$modal = $(modal_constructor());\n    } else {\n        this.$modal = $(modal_constructor);\n    }\n    this.options = options || {};\n    this.closed = new $.Deferred();\n};\n\nlet getString = function (id, params) {\n    if (deps.xabber_i18next.exists(id)) {\n        return deps.xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else if (deps.xabber_i18next.default_lang) {\n        return deps.xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n    } else\n        return \"\";\n};\n\n_.extend(Modal.prototype, {\n    open: function (options) {\n        if (this.options.use_queue) {\n            modal_queue.push(this);\n            (modal_queue.length === 1) && this.throw();\n        } else {\n            this.throw();\n        }\n        setTimeout(() => {\n            document.addEventListener(\"keyup\", this.clickHandler.bind(this));\n        }, 500);\n        return this.closed.promise();\n    },\n\n    throw: function () {\n        this.$modal.appendTo($('#modals')).prop('modal', this);\n        var modal_options = _.omit(this.options, ['use_queue']);\n        _.extend(modal_options, {\n            is_default_complete: true,\n            complete_data: null\n        });\n\n        if (this.options.use_queue) {\n            this.$modal.one('modal_close', function (ev, data) {\n                this.$modal.detach();\n                this.closed.resolve(data.value);\n                modal_queue.shift();\n                modal_queue.length && modal_queue[0].throw();\n            }.bind(this));\n        }\n\n        this.$modal._openModal(modal_options);\n    },\n\n    close: function (options) {\n        var modal_options = _.omit(options, ['use_queue', 'is_default_complete', 'complete_data']);\n        _.extend(modal_options, {\n            complete: function () {\n                if (this.options.use_queue) {\n                    var data = _.isUndefined(options.complete_data) ? null : options.complete_data;\n                    this.complete(data);\n                }\n                if (options.is_default_complete) {\n                    if (typeof(this.options.complete) === \"function\") {\n                        this.options.complete();\n                    }\n                } else {\n                    if (this.options.use_queue) {\n                        this.complete();\n                    }\n                    if (typeof(options.complete) === \"function\") {\n                        options.complete();\n                    }\n                }\n            }.bind(this)\n        });\n\n        this.$modal.prop('modal', null);\n        this.$modal._closeModal(modal_options);\n    },\n\n    complete: function (value) {\n        document.removeEventListener(\"keyup\", this.clickHandler);\n        this.$modal.trigger('modal_close', {value: value});\n    },\n\n    clickHandler: function (ev) {\n        if (ev.keyCode === 13) {\n            this.$modal.find('.modal-footer button.ok-button').click();\n            ev.preventDefault();\n        }\n    }\n});\n\n$.fn._openModal = $.fn.openModal;\n\n$.fn.openModal = function (options) {\n    var modal = new Modal(this, options);\n    return modal.open();\n};\n\n$.fn._closeModal = $.fn.closeModal;\n\n$.fn.closeModal = function (options) {\n    var modal = this.prop('modal');\n    if (modal) {\n        modal.close(options);\n    } else {\n        this._closeModal(options);\n    }\n};\n\nexport default {\n    Modal: Modal,\n\n    clear_queue: function () {\n        modal_queue = [];\n    },\n\n    dialogs: {\n        common: function (header, text, buttons, dialog_options, flag, modal_class) {\n            var dialog = new Modal(function () {\n                buttons || (buttons = {});\n                dialog_options || (dialog_options = []);\n                var ok_button = buttons.ok_button,\n                    cancel_button = buttons.cancel_button,\n                    optional_buttons = (buttons.optional_buttons || []).reverse();\n                ok_button && (ok_button = {text: ok_button.text || getString(\"ok\")});\n                cancel_button && (cancel_button = {text: cancel_button.text || getString(\"cancel\")});\n                return templates.base.dialog({\n                    header: header,\n                    text: text,\n                    ok_button: ok_button,\n                    cancel_button: cancel_button,\n                    optional_buttons: optional_buttons,\n                    dialog_options: dialog_options,\n                    flag: flag || \"\",\n                    modal_class: modal_class || \"\"\n                });\n            }, {use_queue: true});\n\n            if (dialog_options.modal_class) {\n                dialog.$modal.addClass(dialog_options.modal_class)\n            }\n\n            if (dialog_options.inverted_buttons) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.cancel-button').removeClass('btn-dark');\n                dialog.$modal.find('.ok-button').addClass('btn-dark');\n                dialog.$modal.find('.modal-footer').addClass('inverted-buttons');\n            }\n\n            if (dialog_options.img_details) {\n                dialog.$modal.find('.modal-content').append('<div class=\"modal-images-details\"/>').append('<div class=\"modal-images-details-btn btn-flat btn-dark btn-main\"/>');\n                dialog.$modal.find('.modal-images-details-btn').text(xabber.getString(\"details\"));\n                dialog.$modal.find('.modal-images-details').append('<div class=\"image-details-container hidden\"/>');\n                dialog.$modal.find('.image-details-container').html(dialog_options.img_details);\n                dialog.$modal.find('.modal-images-details-btn').click(function () {\n                    dialog.$modal.find('.image-details-container').switchClass('hidden', !dialog.$modal.find('.image-details-container').hasClass('hidden'));\n                });\n            }\n\n            if (dialog_options.blob_image_from_clipboard) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.img-from-clipboard')[0].src = dialog_options.blob_image_from_clipboard;\n                dialog.$modal.find('.container-for-img').removeClass('hidden');\n            }\n\n            if (dialog_options.canvas) {\n                dialog.$modal.find('.dialog-options-wrap').html('');\n                dialog.$modal.find('.container-for-img').html(\"\").removeClass('hidden')[0].appendChild(dialog_options.canvas);\n                if (dialog_options.bottom_text)\n                    $('<div class=\"dialog-bottom-text\"/>').html(dialog_options.bottom_text).appendTo(dialog.$modal.find('.container-for-img'));\n            }\n\n            if (dialog_options.escape_button) {\n                dialog.$modal.find('.modal-header').append('<i class=\"close-modal mdi mdi-close mdi-24px\"></i>');\n            }\n\n            if (dialog_options.input_placeholder_value || dialog_options.input_value) {\n                dialog.$modal.find('.dialog-options-wrap').html($('<input type=\"text\" placeholder=\"' + dialog_options.input_placeholder_value + '\" id=\"user_value\"/>').val(dialog_options.input_value));\n            }\n\n            dialog.$modal.find('.modal-footer button').click(function (ev) {\n                var option = $(ev.target).data('option'),\n                    $options = dialog.$modal.find('.dialog-option'),\n                    user_value_input = dialog.$modal.find('#user_value');\n                if (option && $options.length) {\n                    var result = {};\n                    _.each($options, function (item) {\n                        var $item = $(item);\n                        result[$item.data('name')] = $item.find('input').prop('checked');\n                    });\n                    dialog.close({complete_data: result});\n                } else {\n                    if (user_value_input.length) {\n                        if ($(ev.target).hasClass('btn-cancel')) {\n                            dialog.close({complete_data: false});\n                        } else if ($(ev.target).hasClass('optional-button')) {\n                            dialog.close({complete_data: option});\n                        }\n                        else {\n                            var user_value = user_value_input.val();\n                            dialog.close({complete_data: user_value});\n                        }\n                    }\n                    else\n                        dialog.close({complete_data: option});\n                }\n            });\n\n            dialog.$modal.find('.modal-header .close-modal').click(function () {\n                    dialog.close({complete_data: false});\n            });\n\n            return dialog.open();\n        },\n\n        warning: function (text, dialog_options) {\n            return this.common(getString(\"warning\"), text, {ok_button: true}, dialog_options);\n        },\n\n        error: function (text, dialog_options) {\n            return this.common(getString(\"xabber_account__login__dialog_error__header\"), text, {ok_button: true}, dialog_options);\n        },\n\n        ask: function (header, text, dialog_options, buttons, flag) {\n            var ok_text, cancel_text;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                cancel_text = buttons.cancel_button_text;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: {text: cancel_text}}, dialog_options, flag);\n        },\n\n        ask_extended: function (header, text, dialog_options, buttons) {\n            var ok_text, optional_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                optional_button = (buttons.optional_button) ? [{value: buttons.optional_button, name: buttons.optional_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, cancel_button: true, optional_buttons: optional_button}, dialog_options, 'extended');\n        },\n\n        ask_enter_value: function (header, text, dialog_options, buttons) {\n            var ok_text, resend_button;\n            if (buttons) {\n                ok_text = buttons.ok_button_text;\n                resend_button = (buttons.resend_button_text) ? [{value: buttons.resend_to, name: buttons.resend_button_text}] : false;\n            }\n            return this.common(header, text, {ok_button: {text: ok_text}, optional_buttons: resend_button, cancel_button: true}, dialog_options);\n        },\n\n        notify: function (header, text) {\n            return this.common(header, text, {ok_button: true});\n        }\n    }\n};\n","import deps from \"xabber-dependencies\"\n\nvar _ = deps._,\n    $ = deps.$;\n\n$.fn.placeCaretAtEnd = function () {\n    if (!this.length) {\n        return this;\n    }\n    var el = this[0];\n    el.focus();\n    if (!_.isUndefined(window.getSelection) && !_.isUndefined(document.createRange)) {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    } else if (!_.isUndefined(document.body.createTextRange)) {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n    }\n    return this;\n};\n\n$.fn.updateRichTextarea = function () {\n    var text = this.getTextFromRichTextarea();\n    if (!text) {\n        this.html('');\n    }\n    return this;\n};\n\n$.fn.flushRichTextarea = function () {\n    this.html('');\n    return this;\n};\n\n$.fn.pasteHtmlAtCaret = function (html) {\n    var sel, range;\n    this[0].focus();\n    if (window.getSelection) {\n        // IE9 and non-IE\n        sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n\n            // Range.createContextualFragment() would be useful here but is\n            // non-standard and not supported in all browsers (IE9, for one)\n            var el = document.createElement(\"div\");\n            el.innerHTML = html;\n            var frag = document.createDocumentFragment(), node, lastNode;\n            while ( (node = el.firstChild) ) {\n                lastNode = frag.appendChild(node);\n            }\n            range.insertNode(frag);\n\n            // Preserve the selection\n            if (lastNode) {\n                range = range.cloneRange();\n                range.setStartAfter(lastNode);\n                range.collapse(true);\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection && document.selection.type != \"Control\") {\n        // IE < 9\n        document.selection.createRange().pasteHTML(html);\n    }\n    return this;\n};\n\n$.fn.getTextFromRichTextarea = function () {\n    var $div = $('<div>').html(this.html());\n    $div.find('.emoji').each(function () {\n        $(this).replaceWith($(this).data('emoji'));\n    });\n    $div.find('p').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });\n    /*$div.find('blockquote').each(function () {\n        $(this).replaceWith($(this).html() + '\\n');\n    });*/\n    $div.find('span').each(function () {\n        $(this).replaceWith($(this).html());\n    });\n    $div.find('div').each(function () {\n        var $this = $(this);\n        $this.find('br').remove();\n        var html = $this.html();\n        if ($this.hasClass('emoji'))\n            $this.replaceWith(html);\n        else\n            $this.replaceWith('\\n'+html);\n    });\n    /*$div.find('br').each(function () {\n        $(this).replaceWith('\\n');\n    });*/\n    return $div.text();\n};\n\nexport default null;\n","import deps from \"xabber-dependencies\";\nimport emoji from \"xabber-emoji-utils\";\nimport images from \"xabber-image-utils\";\nimport modals from \"xabber-modal-utils\";\nimport constants from \"xabber-constants\";\nimport textarea from \"xabber-textarea-utils\";\n\nvar $ = deps.$,\n    _ = deps._,\n    moment = deps.moment;\n\n// jQuery extensions\n$.fn.switchClass = function (klass, condition) {\n    if (arguments.length === 1) {\n        condition = !this.hasClass(klass);\n    }\n    if (condition) {\n        this.addClass(klass);\n    } else {\n        this.removeClass(klass);\n    }\n    return this;\n};\n\n$.fn.showIf = function (condition) {\n    return this.switchClass('hidden', !condition);\n};\n\n$.fn.hideIf = function (condition) {\n    return this.switchClass('hidden', condition);\n};\n\nvar getHyperLink = function (url) {\n    var prot = (url.indexOf('http://') === 0 ||  url.indexOf('https://') === 0) ? '' : 'http://',\n        escaped_url = \"\";\n    try {\n        escaped_url = encodeURI(decodeURI(url)).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n    }\n    catch (e) {\n        escaped_url = url;\n    }\n    try {\n        url = decodeURI(url);\n    }\n    catch (e) {}\n    return \"<a target='_blank' class='msg-hyperlink' href='\"+prot+escaped_url + \"'>\"+url+\"</a>\";\n};\n\n$.fn.hyperlinkify = function (options) {\n    options || (options = {});\n    var $query = options.selector ? this.find(options.selector) : this;\n    $query.each(function (i, obj) {\n        var $obj = $(obj),\n            html_concat = \"\",\n            url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            // url_regexp = /((((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)|((\\b)((\\w+)([\\w#!:.?+=&%@!\\-\\/])(\\w+))?(\\.net|\\.edu|\\.cloud|\\.top|\\.vip|\\.cash|\\.im|\\.online|\\.chat|\\.com|\\.org|\\.ru|\\.travel|\\.info|\\.tv|\\.biz|\\.mobi|\\.tel|\\.ar|\\.al|\\.asia|\\.np|\\.ng|\\.io|\\.bb|\\.br|\\.ca|\\.tr|\\.co|\\.ec|\\.fr|\\.ht|\\.in|\\.eg|\\.ie|\\.et|\\.jo|\\.mr|\\.id|\\.iq|\\.nl|\\.ps|\\.ph|\\.sl|\\.si|\\.se|\\.af|\\.ag|\\.be|\\.bd|\\.bg|\\.cl|\\.cd|\\.my|\\.mz|\\.mx|\\.cz|\\.eu|\\.dz|\\.de|\\.hk|\\.it|\\.la|\\.no|\\.pl|\\.ro|\\.sg|\\.ke|\\.kr|\\.ch|\\.ug|\\.us|\\.ve|\\.vn|\\.at|\\.bo|\\.cm|\\.cn|\\.cg|\\.dk|\\.fi|\\.gr|\\.gh|\\.is|\\.ir|\\.jp|\\.lv|\\.ma|\\.me|\\.pk|\\.pe|\\.pt|\\.sa|\\.sk|\\.es|\\.tz|\\.tw|\\.ua|\\.uz|\\.ye)((\\/\\w+)|(\\S+)|\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?)/g;\n        $obj[0].childNodes.forEach(function (node) {\n            let $node = $(node),\n                x = node.outerHTML;\n            if (node.tagName === 'A') {\n                html_concat += x;\n                return;\n            }\n            else {\n                if (node.nodeName === '#text')\n                    x = _.escape($node.text());\n                let list = x && x.match(url_regexp);\n                list = Array.from(new Set(list));\n                if (!list) {\n                    html_concat += x;\n                    return;\n                }\n                if (list.length === 1 && list[0] === x) {\n                    html_concat += options.decode_uri ? decodeURI(x) : getHyperLink(x);\n                } else {\n                    for (i = 0; i < list.length; i++) {\n                        if (options.decode_uri)\n                            x = x.replace(list[i], decodeURI(list[i]));\n                        else\n                            x = x.replaceAll(new RegExp(`(\\\\s|^)(${list[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`,\"g\"), '$1' + getHyperLink(list[i]));\n                    }\n                    html_concat += x;\n                }\n            }\n        }.bind(this));\n        $obj.html(html_concat);\n    });\n    return this;\n};\n\nvar utils = {\n    uuid: function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0,\n                v = c == 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n    },\n\n    utoa: function (str) {\n        return window.btoa(_.unescape(encodeURIComponent(str)));\n    },\n\n    atou: function (str) {\n        return decodeURIComponent(_.escape(window.atob(str)));\n    },\n\n    now: function () {\n        return Math.floor(moment.now() / 1000);\n    },\n\n    pretty_time: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format('HH:mm:ss');\n    },\n\n    pretty_date: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'dddd, MMMM D, YYYY');\n    },\n\n    pretty_datetime: function (timestamp, format) {\n        var datetime = timestamp ? moment(timestamp) : moment();\n        return datetime.format(format || 'MMMM D, YYYY HH:mm:ss');\n    },\n\n    pretty_short_datetime_recent_chat: function (timestamp) {\n        timestamp = Number(timestamp ? moment(timestamp) : moment());\n        if (moment(timestamp).startOf('day').isSame(moment().startOf('day')) || Number(moment().subtract(12, 'hours') < timestamp)) {\n            return moment(timestamp).format(\"HH:mm:ss\");\n        }\n        if (Number(moment().subtract(12, 'hours')) > timestamp && Number(moment().subtract(7, 'days')) <= timestamp) {\n            return moment(timestamp).format(\"ddd\");\n        }\n        if (Number(moment().subtract(7, 'days')) > timestamp && Number(moment().subtract(1, 'year')) <= timestamp) {\n            return moment(timestamp).format(\"MMM D\");\n        }\n        if (timestamp && Number(moment().subtract(1, 'year')) > timestamp) {\n            return moment(timestamp).format(\"D MMM YYYY\");\n        }\n    },\n\n    pretty_short_datetime: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day'),\n            year = moment(datetime).startOf('year');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else if (year.isSame(moment().startOf('year'))) {\n            return datetime.format('MMM D');\n        } else {\n            return datetime.format('DD/MM/gg');\n        }\n    },\n\n    pretty_short_month_date: function (timestamp) {\n        var datetime = timestamp ? moment(timestamp) : moment(),\n            day = moment(datetime).startOf('day');\n        if (day.isSame(moment().startOf('day'))) {\n            return datetime.format('HH:mm:ss');\n        } else {\n            return datetime.format('MMM D, YYYY HH:mm:ss');\n        }\n    },\n\n    isImageType: function(type) {\n        if (type.indexOf('image') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    getDomainFromUrl: function(url) {\n        let a = document.createElement('a');\n        if (url && !/^https?:\\/\\//i.test(url))\n            url = 'http://' + url;\n        a.href = url;\n        return a.hostname;\n    },\n\n    isVideoType: function(type) {\n        if (type.indexOf('video') > -1)\n            return true;\n        else\n            return false;\n    },\n\n    file_type_icon: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'mdi-image';\n        if (filetype === 'audio')\n            return 'mdi-music-note';\n        if (filetype === 'video')\n            return 'mdi-filmstrip';\n        if (filetype === 'document')\n            return 'mdi-file-document-box';\n        if (filetype === 'presentation')\n            return 'mdi-presentation';\n        if (filetype === 'archive')\n            return 'mdi-zip-box';\n        if (filetype === 'file')\n            return 'mdi-file';\n        if (filetype === 'pdf')\n            return 'mdi-file-pdf';\n        return 'mdi-file'\n    },\n\n    file_type_icon_svg: function (mime_type) {\n        let filetype = utils.pretty_file_type(mime_type);\n        if (filetype === 'image')\n            return 'image';\n        if (filetype === 'audio')\n            return 'file-audio';\n        if (filetype === 'video')\n            return 'file-video';\n        if (filetype === 'document')\n            return 'file-document';\n        if (filetype === 'presentation')\n            return 'file-presentation';\n        if (filetype === 'archive')\n            return 'file-zip';\n        if (filetype === 'file')\n            return 'file';\n        if (filetype === 'pdf')\n            return 'file-pdf';\n        return 'file'\n    },\n\n    pretty_file_type: function (mime_type) {\n        if (constants.MIME_TYPES.image.includes(mime_type))\n            return 'image';\n        if (constants.MIME_TYPES.audio.includes(mime_type))\n            return 'audio';\n        if (constants.MIME_TYPES.video.includes(mime_type))\n            return 'video';\n        if (constants.MIME_TYPES.document.includes(mime_type))\n            return 'document';\n        if (constants.MIME_TYPES.pdf.includes(mime_type))\n            return 'pdf';\n        if (constants.MIME_TYPES.presentation.includes(mime_type))\n            return 'presentation';\n        if (constants.MIME_TYPES.archive.includes(mime_type))\n            return 'archive';\n        if (constants.MIME_TYPES.table.includes(mime_type))\n            return 'electronic table';\n        return 'file';\n    },\n\n    pretty_file_type_with_article: function (mime_type) {\n        let type = utils.pretty_file_type(mime_type),\n            vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n        (type === 'pdf') && (type = 'document');\n        if (vowels.includes(type[0]))\n            return 'an ' + type;\n        else\n            return 'a ' + type;\n    },\n\n    pretty_size: function (size) {\n        if (!size)\n            return \"\";\n        if (_.isNaN(Number(size)))\n            return size;\n        if (size < 1024) {\n            return size+' B';\n        } else if (size < 1048576) {\n            return (size/1024).toFixed(2)+' KiB';\n        } else if (size < 1073741824) {\n            return (size/1048576).toFixed(2)+' MiB';\n        } else {\n            return (size/1073741824).toFixed(2)+' GiB';\n        }\n    },\n\n    pretty_duration: function (duration) {\n        if (_.isNaN(Number(duration)))\n            return duration;\n        if (_.isUndefined(duration) || duration === \"\")\n            return \"\";\n        if (duration < 10)\n            return (\"0:0\" + duration);\n        if (duration < 60)\n            return (\"0:\" + duration);\n        if (duration >= 60)\n            return (Math.trunc(duration/60) + \":\" + ((duration%60 < 10) ? (\"0\" + (duration%60)) : duration%60));\n    },\n\n    pretty_name: function (name) {\n        return name ? (name[0].toUpperCase() + name.replace(/-/,' ').substr(1).toLowerCase()) : \"\";\n    },\n\n    getKeyByValue: function (object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n    },\n\n    slice_string: function (str, from, to) {\n        to = _.isNumber(to) ? to : [...str].length;\n        if (str.length === [...str].length)\n            return str.slice(from, to);\n        else\n            return Array.from(str).slice(from, to).join(\"\");\n    },\n\n    slice_pretty_body: function (body, mutable_refs) {\n        if (!mutable_refs || !mutable_refs.length)\n            return body;\n        body = body || \"\";\n        mutable_refs = mutable_refs.filter(m => m.type === 'groupchat' || m.type === 'forward');\n        let pretty_body = Array.from(deps.Strophe.xmlescape(body));\n        mutable_refs && mutable_refs.forEach(function (ref) {\n            for (let idx = ref.start; idx < ref.end; idx++)\n                pretty_body[idx] = \"\";\n        }.bind(this));\n        return deps.Strophe.xmlunescape(pretty_body.join(\"\").trim());\n    },\n\n    markupBodyMessage: function (message, mention_tag) {\n        let attrs = _.clone(message.attributes),\n            mentions = attrs.mentions || [],\n            markups = attrs.markups || [],\n            mutable_refs = attrs.mutable_content || [],\n            blockquotes = attrs.blockquotes || [],\n            markup_body = Array.from(deps.Strophe.xmlescape(attrs.original_message || attrs.message || \"\"));\n        !mention_tag && (mention_tag = 'span');\n\n        mutable_refs.forEach(function (muted) {\n            for (let idx = muted.start; idx < muted.end; idx++)\n                markup_body[idx] = \"\";\n        }.bind(this));\n\n        mentions.forEach(function (mention) {\n            let start_idx = mention.start,\n                end_idx = mention.end > (markup_body.length - 1) ? (markup_body.length - 1) : (mention.end - 1), target = mention.target;\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (mention.is_gc) {\n                let id = target.match(/\\?id=\\w*/),\n                    jid = target.match(/\\?jid=.*/);\n                if (id)\n                    target = id[0].slice(4);\n                else if (jid)\n                    target = jid[0].slice(5);\n                else {\n                    target = \"\";\n                    mention.me = true;\n                }\n            }\n            else\n                target = target.slice(5);\n            if (mention_tag === 'mention'){\n                markup_body[start_idx] = '<' + mention_tag + ' data-target=\"?jid=' + target + '\">' + markup_body[start_idx];\n                markup_body[end_idx] += '</' + mention_tag + '>';\n                return;\n            }\n            markup_body[start_idx] = '<' + mention_tag + ' data-target=\"' + target + '\" class=\"mention' + (mention.me ? ' ground-color-100' : '') + '\">' + markup_body[start_idx];\n            markup_body[end_idx] += '</' + mention_tag + '>';\n        }.bind(this));\n\n        markups.forEach(function (markup) {\n            let start_idx = markup.start,\n                end_idx = markup.end > (markup_body.length - 1) ? (markup_body.length - 1) : (markup.end - 1);\n            if (start_idx > markup_body.length - 1)\n                return;\n            if (markup.markup.length) {\n                let start_tags = \"\",\n                    end_tags = \"\";\n                markup.markup.forEach(function (mark_up_style) {\n                    if (typeof(mark_up_style) === 'object') {\n                        start_tags = '<a target=\"_blank\" class=\"msg-hyperlink\" href=\"' + mark_up_style.uri + '\">' + start_tags;\n                        end_tags += '</a>';\n                    } else {\n                        start_tags = '<' + mark_up_style[0].toLowerCase() + '>' + start_tags;\n                        end_tags += '</' + mark_up_style[0].toLowerCase() + '>';\n                    }\n                }.bind(this));\n                markup_body[start_idx] = start_tags + markup_body[start_idx];\n                markup_body[end_idx] += end_tags;\n            }\n        }.bind(this));\n\n        blockquotes.forEach(function (quote) {\n            let end_idx = quote.end > (markup_body.length - 1) ? (markup_body.length - 1) : (quote.end - 1);\n            for (let idx = quote.start; idx < (quote.start + constants.QUOTE_MARKER.length); idx++) {\n                if (idx === end_idx)\n                    markup_body[idx] = '<br>';\n                else\n                    markup_body[idx] = \"\";\n\n            }\n            for (let idx = quote.start; idx < end_idx; idx++) {\n                if (markup_body[idx] === '\\n') {\n                    for (let child_idx = idx + 1; child_idx <= (idx + constants.QUOTE_MARKER.length); child_idx++)\n                        markup_body[child_idx] = \"\";\n                    idx+= constants.QUOTE_MARKER.length - 1;\n                }\n            }\n            if (mention_tag === 'mention'){\n                markup_body[quote.start] = '<blockquote>';\n                markup_body[end_idx] += '</blockquote>';\n                return;\n            }\n            markup_body[quote.start] = '<div class=\"quote\">';\n            markup_body[end_idx] += '</div>';\n        }.bind(this));\n\n        return markup_body.join(\"\").trim();\n    },\n\n    getOS: function() {\n        let platform = window.navigator.platform,\n            macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n            windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n            os = null;\n\n        if (macosPlatforms.indexOf(platform) !== -1) {\n            os = 'Mac OS';\n        } else if (windowsPlatforms.indexOf(platform) !== -1) {\n            os = 'Windows';\n        } else if (!os && /Linux/.test(platform)) {\n            os = 'Linux';\n        }\n\n        return os;\n    },\n\n    isOverflownWidth: function(element) {\n        return element.scrollWidth > element.clientWidth;\n    },\n\n    isOverflownHeight: function(element) {\n        return element.scrollHeight > element.clientHeight;\n    },\n\n    render_data_form: function (data_form) {\n        let $data_form = $('<div class=\"data-form\"/>');\n        data_form.fields.forEach(function (field) {\n            if (field.type === 'hidden')\n                return;\n            if (field.type === 'fixed') {\n                let $fixed_field = $('<div class=\"data-form-field fixed-field\"/>');\n                field.label && $fixed_field.append($('<div class=\"label\"/>').text(field.label));\n                field.values.forEach(function (value) {\n                    let $input = $('<div class=\"value\"/>').text(value);\n                    $fixed_field.append($input);\n                }.bind(this));\n                $data_form.append($fixed_field);\n            }\n            if (field.type === 'boolean') {\n                let $input = $(`<button id=${field.var} class=\"data-form-field ground-color-100 btn-dark btn-flat btn-main boolean-field\"/>`).text(field.label);\n                $data_form.append($input);\n            }\n        }.bind(this));\n        return $data_form;\n    },\n\n    copyTextToClipboard: function(text, callback_msg, errback_msg) {\n        if (!window.navigator.clipboard) {\n            return;\n        }\n        window.navigator.clipboard.writeText(text).then(function() {\n            if (callback_msg) {\n                let info_msg = callback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this), function() {\n            if (errback_msg) {\n                let info_msg = errback_msg;\n                this.callback_popup_message(info_msg, 1500);\n            }\n        }.bind(this));\n    },\n\n    callback_popup_message: function (info_msg, time) {\n        let $body = $(document.body),\n            $popup_msg = $('<div class=\"callback-popup-message\"/>').text(info_msg);\n        time = time || 3000;\n        $body.find('.callback-popup-message').remove();\n        $body.append($popup_msg);\n        setTimeout( function() {\n            $popup_msg.remove();\n        }, time);\n    },\n\n    emoji_size: function (count) {\n        let size;\n        switch (count) {\n            case 1:\n                size = 56;\n                break;\n            case 2:\n                size = 44;\n                break;\n            case 3:\n                size = 32;\n                break;\n            case 4:\n                size = 24;\n                break;\n            case 5:\n                size = 22;\n                break;\n            default:\n                size = 20;\n                break;\n        }\n        return size;\n    },\n\n    openWindow: function (url, errback) {\n        let win = window.open(url, '_blank');\n        if (win) {\n            win.focus();\n        } else {\n            errback && errback();\n        }\n    },\n\n    clearSelection: function () {\n        var selection = window.getSelection();\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges) {\n            selection.removeAllRanges();\n        }\n    },\n\n    getCookie: function (name) {\n        let matches = window.document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    },\n\n    isMobile: {\n        Android: function () {\n            return navigator.userAgent.match(/Android/i);\n        },\n        BlackBerry: function () {\n            return navigator.userAgent.match(/BlackBerry/i);\n        },\n        iOS: function () {\n            return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n        },\n        Opera: function () {\n            return navigator.userAgent.match(/Opera Mini/i);\n        },\n        Windows: function () {\n            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n        },\n        any: function () {\n            return (this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows());\n        }\n    },\n\n    fromBase64toArrayBuffer: function (b64_string) {\n        return Uint8Array.from(atob(b64_string), c => c.charCodeAt(0)).buffer;\n    },\n\n    ArrayBuffertoBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    generateHOTPKey: async function(secret, counter) {\n        let Crypto = window.crypto.subtle;\n        let counterArray = this.padCounter(counter);\n\n        let key = await Crypto.importKey(\n            'raw',\n            secret,\n            { name: 'HMAC', hash: { name: 'SHA-1' } },\n            false,\n            ['sign']\n        );\n\n        let HS = await Crypto.sign('HMAC', key, counterArray);\n\n        return HS;\n    },\n\n    padCounter: function(counter) {\n        let buffer = new ArrayBuffer(8);\n        let bView = new DataView(buffer);\n\n        let byteString = '0'.repeat(64); // 8 bytes\n        let bCounter = (byteString + counter.toString(2)).slice(-64);\n\n        for (let byte = 0; byte < 64; byte += 8) {\n            let byteValue = parseInt(bCounter.slice(byte, byte + 8), 2);\n            bView.setUint8(byte / 8, byteValue);\n        }\n\n        return buffer;\n    },\n\n    DT: function(HS) {\n        let offset = HS[19] & 0b1111;\n        let P = ((HS[offset] & 0x7f) << 24) | (HS[offset + 1] << 16) | (HS[offset + 2] << 8) | HS[offset + 3]\n        let pString = P.toString(2);\n\n        return pString;\n    },\n\n    truncate: function(uKey) {\n        let Sbits = this.DT(uKey);\n        let Snum = parseInt(Sbits, 2);\n\n        return Snum;\n    },\n\n    generateHOTP: async function(secret, counter) {\n        let key = await this.generateHOTPKey(secret, counter);\n        let uKey = new Uint8Array(key);\n\n        let Snum = this.truncate(uKey);\n        let padded = ('000000' + (Snum % (10 ** 8))).slice(-8);\n\n        return padded;\n    },\n\n    hmacSha256: async function(key, message) {\n\n        let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n        let hashBuffer = await crypto.subtle.sign(\n            algorithm.name,\n            key,\n            message\n        );\n\n        return hashBuffer;\n    },\n\n    stringToArrayBuffer: function (string) {\n        let { length } = string;\n        let buffer = new Uint8Array(length);\n\n        for (let i = 0; i < length; i++) {\n            buffer[i] = string.charCodeAt(i);\n        }\n\n        return buffer;\n    },\n\n    AES: {\n        ALGO_NAME: 'AES-GCM',\n\n        decoder: new window.TextDecoder('utf-8'),\n        encoder: new window.TextEncoder('utf-8'),\n\n        decrypt: async function (masterKey, HMACData, payload) {\n            let masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let generatedHMAC = await utils.hmacSha256(authenticationKey, payload);\n\n            generatedHMAC = generatedHMAC.slice(0, generatedHMAC.byteLength - 16);\n\n            if (!(utils.ArrayBuffertoBase64(HMACData) === utils.ArrayBuffertoBase64(generatedHMAC)))\n                return;\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['decrypt'])\n\n\n            let decryptedBuffer = await window.crypto.subtle.decrypt({\n                name: 'AES-CBC',\n                iv,\n            }, encryptionKey, payload);\n\n            return utils.AES.decoder.decode(decryptedBuffer);\n        },\n\n        encrypt: async function (plaintext) {\n            let masterKey = window.crypto.getRandomValues(new Uint8Array(32)),\n                masterObj = await window.crypto.subtle.importKey('raw', masterKey, {name: 'HKDF'}, false, ['deriveKey', 'deriveBits']),\n                hkdfCtrParams = { name: 'HKDF', salt: new Uint8Array(32), info: utils.stringToArrayBuffer('OMEMO Payload'), hash: 'SHA-256'};\n\n            let key = await window.crypto.subtle.deriveBits(hkdfCtrParams, masterObj, 640);\n\n            key = new Uint8Array(key);\n\n            let encryptionKey = key.slice(0,32),\n                authenticationKey = key.slice(32,64),\n                iv = key.slice(64);\n\n            encryptionKey = await window.crypto.subtle.importKey('raw', encryptionKey, { \"name\": 'AES-CBC' }, true, ['encrypt']);\n\n            let encrypted = await utils.AES.generateAESencryptedMessage(iv, encryptionKey, plaintext);\n\n            let algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n            authenticationKey = await crypto.subtle.importKey(\n                \"raw\",\n                authenticationKey,\n                algorithm,\n                false, [\"sign\", \"verify\"]\n            );\n\n            let payload = await utils.hmacSha256(authenticationKey, encrypted);\n\n            payload = payload.slice(0, payload.byteLength - 16);\n\n            let keydata = new Uint8Array([...masterKey, ...new Uint8Array(payload)]);\n\n            return {\n                keydata: keydata.buffer,\n                payload: encrypted,\n            }\n        },\n\n        generateAESencryptedMessage: async function (iv, key, plaintext) {\n            let encryptOptions = {\n                name: 'AES-CBC',\n                iv,\n            };\n            let encodedPlaintext = utils.AES.encoder.encode(plaintext),\n                encrypted = await window.crypto.subtle.encrypt(encryptOptions, key, encodedPlaintext);\n\n            return encrypted;\n        },\n\n        arrayBufferConcat: function () {\n            let length = 0,\n                buffer = null;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                length += buffer.byteLength;\n            }\n\n            let joined = new Uint8Array(length),\n                offset = 0;\n\n            for (let i in arguments) {\n                buffer = arguments[i];\n                joined.set(new Uint8Array(buffer), offset);\n                offset += buffer.byteLength;\n            }\n\n            return joined.buffer\n        },\n\n        generateAESKey: async function () {\n            let algo = {\n                name: utils.AES.ALGO_NAME,\n                length: constants.AES_KEY_LENGTH,\n            };\n            let keyUsage = ['encrypt', 'decrypt'],\n                key = await window.crypto.subtle.generateKey(algo, constants.AES_EXTRACTABLE, keyUsage);\n\n            return key;\n        }\n    },\n\n    getBrowser: function () {\n        // Get the user-agent string\n        let userAgentString =\n            navigator.userAgent;\n\n        // Detect Chrome\n        let chromeAgent =\n            userAgentString.indexOf(\"Chrome\") > -1;\n\n        // Detect Internet Explorer\n        let IExplorerAgent =\n            userAgentString.indexOf(\"MSIE\") > -1 ||\n            userAgentString.indexOf(\"Windows NT:\") > -1;\n\n        // Detect Firefox\n        let firefoxAgent =\n            userAgentString.indexOf(\"Firefox\") > -1;\n\n        // Detect Safari\n        let safariAgent =\n            userAgentString.indexOf(\"Safari\") > -1;\n\n        // Discard Safari since it also matches Chrome\n        if ((chromeAgent) && (safariAgent))\n            safariAgent = false;\n\n        // Detect Opera\n        let operaAgent =\n            userAgentString.indexOf(\"OP\") > -1;\n\n        // Discard Chrome since it also matches Opera\n        if ((chromeAgent) && (operaAgent))\n            chromeAgent = false;\n\n        if (safariAgent)\n            return 'Safari';\n        if (chromeAgent)\n            return 'Chrome';\n        if (IExplorerAgent)\n            return 'IE';\n        if (operaAgent)\n            return 'Opera';\n        if (firefoxAgent)\n            return 'Firefox';\n        return 'Unknown browser';\n    },\n\n    emoji: emoji,\n    images: images,\n    modals: modals,\n    dialogs: modals.dialogs\n};\n\n    export default utils;\n","// expands dependencies with internal xabber modules\nimport deps from \"xabber-dependencies\";\nimport constants from \"xabber-constants\";\nimport templates from \"xabber-templates\";\nimport utils from \"xabber-utils\";\nimport client_translation_progress from \"xabber-translations-info\";\nimport version from \"xabber-version\";\nimport _ from \"underscore\";\n\nexport default _.extend({\n    constants: constants,\n    templates: templates,\n    client_translation_progress: client_translation_progress,\n    utils: utils,\n    uuid: utils.uuid\n}, version, deps);","import env from \"xabber-environment\";\n\nlet constants = env.constants,\n    _ = env._,\n    $ = env.$,\n    moment = env.moment,\n    client_translation_progress = env.client_translation_progress,\n    xabber_i18next = env.xabber_i18next,\n    xabber_i18next_sprintf = env.xabber_i18next_sprintf,\n    uuid = env.uuid,\n    utils = env.utils,\n    bc = new BroadcastChannel(\"xabber-web\");\n\nbc.onmessage = (event) => {\n    if (event.data === `1` && !bc.disabled_client) {\n        bc.postMessage(`2`);\n    }\n    if (event.data === `2`) {\n        bc.disabled_client = true\n    }\n};\n\nbc.postMessage(`1`);\n\nlet Xabber = Backbone.Model.extend({\n    defaults: {\n        version_number: env.version_number,\n        actual_version_number: env.version_number,\n        audio: false,\n        video: false,\n        client_id: uuid().substring(0, 8),\n        client_name: 'Xabber for Web'\n    },\n\n    initialize: function () {\n        this.env = env;\n        this.fetchURLParams();\n        this.cleanUpStorage();\n        this.initDefaultLanguage();\n        this.detectMediaDevices();\n        window.navigator.mediaDevices && (window.navigator.mediaDevices.ondevicechange = this.detectMediaDevices.bind(this));\n        this._settings = new this.Settings({id: 'settings'},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.settings = this._settings.attributes;\n        let url = window.location.host + window.location.pathname.replace(/\\//g, \"-\");\n        if (url[url.length - 1] == \"-\")\n            url.slice(0, url.length - 1);\n        this._cache = new Backbone.ModelWithStorage({id: `cache-${url}`},\n                {storage_name: this.getStorageName(), fetch: 'before'});\n        this.cache = this._cache.attributes;\n        this.cache.client_id && (this.set('client_id', this.cache.client_id));\n        this._cache.save('client_id', this.get('client_id'));\n        this.cacheFavicons();\n        this.extendFunction();\n        this.check_config = new $.Deferred();\n        this.plyr_players = [];\n        this.current_plyr_player = null;\n        this.on(\"change:actual_version_number\", this.throwNewVersion, this);\n        this.on(\"quit\", this.onQuit, this);\n        this._version_interval = setInterval(this.readActualVersion.bind(this), 600000);\n        setInterval(function() {\n            console.log(new Date());\n        }, 5000)\n    },\n\n    initDefaultLanguage: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        if (progress != 100)\n            lang = 'en';\n        this.set(\"default_language\", lang);\n    },\n\n    loadTranslations: async function (lang) {\n        return new Promise((resolve, reject) => {\n            let language = {};\n            language.lang = lang;\n            !language.lang && (language.lang = this.settings.language);\n            if (language.lang == 'default' && this.default_translation) {\n                language.lang = this.get(\"default_language\");\n                language.translation  = this.default_translation;\n                resolve(language);\n                return;\n            }\n            import(`~/translations/${language.lang.replace(/-/g, \"-r\")}.js`).then(translation => {\n                language.translation  = translation;\n                resolve(language)\n            });\n        });\n    },\n\n    setLocale: function (lang, translations) {\n        let default_lang = this.get(\"default_language\"),\n            _translations = {\n                [default_lang]: {\n                    translation: this.default_translation\n                }\n            };\n        lang && (_translations[lang] = {translation: translations});\n        xabber_i18next.use(xabber_i18next_sprintf);\n        xabber_i18next.init({\n            lng: default_lang,\n            debug: false,\n            pluralSeparator: '-',\n            resources: _translations\n        });\n        if (lang) {\n            xabber_i18next.changeLanguage(lang);\n            moment.locale(lang);\n        }\n        xabber_i18next.default_lang = xabber_i18next.getFixedT(default_lang);\n    },\n    getOneLiners: function () {\n        if (xabber_i18next.exists(\"motivating_oneliner\")) {\n            return xabber_i18next.t(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(\"motivating_oneliner\").replace(/\\\\'/g, \"'\").split('\\n');\n        } else\n            return [];\n    },\n    getString: function (id, params) {\n        if (xabber_i18next.exists(id)) {\n            return xabber_i18next.t(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else if (xabber_i18next.default_lang) {\n            return xabber_i18next.default_lang(id, { postProcess: 'sprintf', sprintf: params}).replace(/\\\\'/g, \"'\").replace(/%+\\d+[$]/g, \"%\").replace(/\\\\n/g, '&#10;');\n        } else\n            return \"\";\n    },\n\n    getQuantityString: function (id, count, params) {\n        let lang = xabber_i18next.language,\n            plurals = xabber_i18next.services.pluralResolver.getRule(lang);\n        if (!plurals)\n            return this.getString(`${id}_plural_0`, (params || [count]));\n        let _count = parseInt(count, 10);\n        xabber_i18next.services.pluralResolver.options.compatibilityJSON = 'v0';\n        let suffix = xabber_i18next.services.pluralResolver.getSuffix(lang, _count);\n        suffix = suffix.replace(/-/g, \"_\");\n        if (xabber_i18next.language == 'en' || !xabber_i18next.exists(`${id}_plural${suffix}`)) {\n            suffix = xabber_i18next.services.pluralResolver.getSuffix(\"en\", _count);\n            if (!suffix || suffix && !suffix.length)\n                suffix = '_0';\n            else\n                suffix = '_1';\n        }\n        return this.getString(`${id}_plural${suffix}`, (params || [count]));\n    },\n\n    error: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR) {\n            console.error(msg);\n        }\n    },\n\n    warn: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN) {\n            console.warn(msg);\n        }\n    },\n\n    info: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_INFO) {\n            console.log(msg);\n        }\n    },\n\n    debug: function (msg) {\n        if (constants.LOG_LEVEL >= constants.LOG_LEVEL_DEBUG) {\n            console.log(msg);\n        }\n    },\n\n    pretty_last_seen: function (seconds) {\n        if (seconds >= 0 && seconds <= 120)\n            return this.getString(\"last_seen_now\");\n        if (seconds > 120 && seconds < 3600)\n            return this.getString(\"last_seen_minutes\", [Math.trunc(seconds/60)]);\n        if (seconds >= 3600 && seconds < 7200)\n            return this.getString(\"last_seen_hours\");\n        if (seconds >= 3600*48*2)\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').format('LL')]);\n        else\n            return this.getString(\"last_seen_date\", [env.moment().subtract(seconds, 'seconds').calendar().toLowerCase()]);\n    },\n\n    readActualVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        // get version.js file from server and parse it\n        let rawFile = new XMLHttpRequest();\n        rawFile.open(\"GET\", \"version.js?\"+uuid(), true);\n        rawFile.onreadystatechange = () => {\n            if (rawFile.readyState === 4 && rawFile.status === 200) {\n                let text, json;\n                rawFile.onreadystatechange = null;\n                try {\n                    text = rawFile.responseText;\n                    json = JSON.parse(text.split('\\n')[1].slice(1, -1));\n                } catch (e) {\n                    return;\n                }\n                this.set({\n                    actual_version_number: json.version_number,\n                    version_description: json.version_description\n                });\n            }\n        };\n        rawFile.send();\n    },\n\n    extendFunction: function () {\n        if (!String.prototype.trimStart) {\n            String.prototype.trimStart = function () {\n                return this.replace(/^\\s+/, '');\n            }\n        }\n        if (!String.prototype.trimEnd) {\n            String.prototype.trimEnd = function () {\n                return Array.from(Array.from(this).reverse().join(\"\").trimStart(/\\s$/, '')).reverse().join(\"\");\n            }\n        }\n    },\n\n    onQuit: function () {\n        if (window.indexedDB.databases) {\n            window.indexedDB.databases().then((a) => {\n                a.forEach((db) => {\n                    window.indexedDB.deleteDatabase(db.name)\n                });\n            });\n        } else {\n            this.accounts.forEach((acc) => {\n                indexedDB.deleteDatabase(acc.cached_roster.database.name);\n                indexedDB.deleteDatabase(acc.cached_sync_conversations.database.name);\n                indexedDB.deleteDatabase(acc.cached_server_features.database.name);\n            });\n        }\n        let full_storage_name = this.getStorageName();\n        for (let key in window.localStorage) {\n            if (key.startsWith(full_storage_name) || key.startsWith(constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION + '-' + this.cache.id)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    cacheFavicons: async function () {\n        this._cache.save('favicon', URL.createObjectURL(await fetch(constants.FAVICON_DEFAULT).then(r => r.blob())));\n        this._cache.save('favicon_message', URL.createObjectURL(await fetch(constants.FAVICON_MESSAGE).then(r => r.blob())));\n    },\n\n    detectMediaDevices: function () {\n        this.getMediaDevices((media_devices) => {\n            this.set(media_devices);\n        });\n    },\n\n    getMediaDevices: function (callback, errback) {\n        if (window.navigator && window.navigator.mediaDevices) {\n            window.navigator.mediaDevices.enumerateDevices()\n                .then((devices) => {\n                    let media_devices = {audio: false, video: false};\n                    (devices.find(device => device.kind === 'audioinput')) && (media_devices.audio = true);\n                    (devices.find(device => device.kind === 'videoinput')) && (media_devices.video = true);\n                    callback && callback(media_devices);\n                })\n                .catch((err) => {\n                    errback && errback(err);\n                });\n        }\n    },\n\n    throwNewVersion: function () {\n        if (!constants.CHECK_VERSION)\n            return;\n        let version_number = this.get('actual_version_number'),\n            version_description = this.get('version_description');\n        utils.dialogs.common(this.getString(\"dialog_version_update__header\", [constants.CLIENT_NAME]), `${this.getString(\"dialog_version_update__confirm_text__new_version\", [version_number])}<div class=\"new-version-description\">${version_description}</div>${this.getString(\"dialog_version_update__confirm_text__question_reload_page\")}`,\n            {ok_button: {text: this.getString(\"dialog_version_update__button_reload\")}, cancel_button: {text: this.getString(\"dialog_version_update__option_not_now\")}}\n        ).done((result) => {\n            if (result) {\n                window.location.reload(true);\n            }\n        });\n    },\n\n    Settings: Backbone.ModelWithStorage.extend({\n        defaults: {\n            max_connection_retries: -1,\n            notifications: true,\n            notifications_private: true,\n            notifications_group: true,\n            notifications_volume: 0.50,\n            message_preview_private: false,\n            message_preview_group: false,\n            private_sound: true,\n            group_sound: true,\n            background: {type: 'default'},\n            side_panel: {theme: 'dark', blur: false, transparency: 50},\n            appearance: {blur: 0, vignetting: 0, color: '#E0E0E0'},\n            main_color: 'default',\n            sound_on_private_message: 'beep_up',\n            sound_on_group_message: 'beep_up',\n            call_attention: true,\n            load_media: 'default',\n            typing_notifications: 'default',\n            mapping_service: 'default',\n            sound_on_call: 'call',\n            sound_on_dialtone: 'call',\n            sound_on_connection: 'connecting',\n            sound_on_attention: 'attention',\n            sound_on_auth_request: 'beep_a',\n            hotkeys: 'enter',\n            avatar_shape: 'circle',\n            language: 'default',\n            load_history: true,\n            mam_requests_limit: 200,\n            mam_messages_limit_start: 1,\n            mam_messages_limit: 20,\n            ping_interval: 60,\n            reconnect_interval: 90\n        }\n    }),\n\n    start: function () {\n        this.check_config.done((result) => {\n            this.check_config = undefined;\n            result && this.trigger('start');\n        });\n    },\n\n    configure: function (config) {\n        this.loadTranslations(this.get('default_language')).then((language) => {\n            this.default_translation = language.translation ;\n            return this.loadTranslations();}).then((language) => {\n                this.setLocale(language.lang, language.translation);\n            _.extend(constants, _.pick(config, [\n                'CONNECTION_URL',\n                'PERSONAL_AREA_URL',\n                'LOG_LEVEL',\n                'SYNCHRONIZATION_RSM_MAX',\n                'CONTAINER_ELEMENT',\n                'XABBER_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT',\n                'REGISTER_XMPP_ACCOUNT_URL',\n                'REGISTER_XMPP_ACCOUNT_TEXT',\n                'API_SERVICE_URL',\n                'USE_SOCIAL_AUTH',\n                'CONTAINER',\n                'CHECK_VERSION',\n                'DEFAULT_LOGIN_SCREEN',\n                'STORAGE_NAME_ENDING',\n                'CLIENT_NAME',\n                'SHORT_CLIENT_NAME',\n                'CLIENT_LOGO',\n                'TOOLBAR_LOGO',\n                'ENABLE_XABBER_ACCOUNT',\n                'SCREEN_ABOUT',\n                'DISABLE_LOOKUP_WS',\n                'PRIVACY_LOAD_MEDIA',\n                'PRIVACY_TYPING_NOTIFICATIONS',\n                'PRIVACY_MAPPING_SERVICE',\n            ]));\n\n            let log_level = constants['LOG_LEVEL_'+constants.LOG_LEVEL];\n            constants.LOG_LEVEL = log_level || constants.LOG_LEVEL_ERROR;\n            constants.MATERIAL_COLORS.includes(config.MAIN_COLOR) && (constants.MAIN_COLOR = config.MAIN_COLOR);\n            (this._settings.get(\"main_color\") == 'default') && this._settings.set(\"main_color\", constants.MAIN_COLOR);\n            this.trigger(\"update_main_color\");\n            if (this._settings.get(\"load_media\") === 'default' && config.PRIVACY_LOAD_MEDIA != null)\n                this._settings.set(\"load_media\", config.PRIVACY_LOAD_MEDIA);\n            else if (this._settings.get(\"load_media\") === 'default')\n                this._settings.set(\"load_media\", true);\n            if (this._settings.get(\"typing_notifications\") === 'default' && config.PRIVACY_TYPING_NOTIFICATIONS != null)\n                this._settings.set(\"typing_notifications\", config.PRIVACY_TYPING_NOTIFICATIONS);\n            else if (this._settings.get(\"typing_notifications\") === 'default')\n                this._settings.set(\"typing_notifications\", true);\n            if (this._settings.get(\"mapping_service\") === 'default' && config.PRIVACY_MAPPING_SERVICE != null)\n                this._settings.set(\"mapping_service\", config.PRIVACY_MAPPING_SERVICE);\n            else if (this._settings.get(\"mapping_service\") === 'default')\n                this._settings.set(\"mapping_service\", true);\n\n            window.xabber = this;\n            _.extend(window, env);\n            if (config.SYNCHRONIZATION_RSM_MAX)\n                constants.SYNCHRONIZATION_RSM_MAX = config.SYNCHRONIZATION_RSM_MAX;\n            if (config.CONTAINER_ELEMENT)\n                constants.CONTAINER_ELEMENT = config.CONTAINER_ELEMENT;\n            if (config.REGISTRATION_DOMAINS)\n                constants.REGISTRATION_DOMAINS = config.REGISTRATION_DOMAINS;\n            if (config.LOGIN_DOMAINS)\n                constants.LOGIN_DOMAINS = config.LOGIN_DOMAINS;\n            if (config.TRUSTED_DOMAINS)\n                constants.TRUSTED_DOMAINS = config.TRUSTED_DOMAINS;\n            if (config.RECOMMENDED_DOMAIN)\n                constants.RECOMMENDED_DOMAIN = config.RECOMMENDED_DOMAIN;\n            if (config.REGISTRATION_BUTTON != null)\n                constants.REGISTRATION_BUTTON = config.REGISTRATION_BUTTON;\n            if (config.REGISTRATION_CUSTOM_DOMAIN != null)\n                constants.REGISTRATION_CUSTOM_DOMAIN = config.REGISTRATION_CUSTOM_DOMAIN;\n            if (config.LOGIN_CUSTOM_DOMAIN != null)\n                constants.LOGIN_CUSTOM_DOMAIN = config.LOGIN_CUSTOM_DOMAIN;\n            if (config.SHORT_CLIENT_DESCRIPTION)\n                constants.SHORT_CLIENT_DESCRIPTION = config.SHORT_CLIENT_DESCRIPTION;\n\n            if (config.CLIENT_NAME && !config.SHORT_CLIENT_NAME)\n                constants.SHORT_CLIENT_NAME = config.CLIENT_NAME;\n            else if (!config.CLIENT_NAME && config.SHORT_CLIENT_NAME)\n                constants.CLIENT_NAME = config.SHORT_CLIENT_NAME;\n\n            if (config.TURN_SERVERS_LIST) {\n                if (_.isArray(config.TURN_SERVERS_LIST))\n                    _.extend(constants, {TURN_SERVERS_LIST: config.TURN_SERVERS_LIST});\n                else if (_.isObject(config.TURN_SERVERS_LIST) && Object.keys(config.TURN_SERVERS_LIST).length)\n                    _.extend(constants, {TURN_SERVERS_LIST: [config.TURN_SERVERS_LIST]});\n            }\n\n            if (utils.isMobile.any()) {\n                let ios_msg = this.getString(\"warning__client_not_support_ios_browser\", [constants.CLIENT_NAME]),\n                    android_msg = this.getString(\"warning__client_not_support_android_browser\"),\n                    any_mobile_msg = this.getString(\"warning__client_not_support_mobile\", [constants.CLIENT_NAME]),\n                    msg;\n                if (utils.isMobile.iOS()) {\n                    msg = ios_msg;\n                } else if (utils.isMobile.Android()) {\n                    msg = any_mobile_msg + android_msg;\n                } else {\n                    msg = any_mobile_msg;\n                }\n                utils.dialogs.error(msg);\n                this.check_config.resolve(false);\n                return;\n            }\n            if (!constants.CONNECTION_URL) {\n                utils.dialogs.error(this.getString(\"client_error__missing_connection_url\"));\n                this.check_config.resolve(false);\n                return;\n            }\n            if (bc.disabled_client){\n                utils.dialogs.error(this.getString(\"client_error__another_tab_active\"));\n                this.check_config.resolve(false);\n                return;\n            }\n\n            let self = this;\n            if (!Backbone.useLocalStorage && !this.cache.ignore_localstorage_warning) {\n                utils.dialogs.warning(this.getString(\"client_warning__no_local_storage\"),\n                    [{name: this.getString(\"ignore\"), text: this.getString(\"client_error__option_show_msg_again\")}]\n                ).done(function (res) {\n                    res && res.ignore && self._cache.save('ignore_localstorage_warning', true);\n                });\n            }\n\n            this.requestNotifications().done(function (granted) {\n                self._cache.save('notifications', granted);\n                self._cache.save('endpoint_key', undefined);\n                self.check_config.resolve(true);\n            });\n        });\n    },\n\n    fetchURLParams: function () {\n        let splitted_url = window.location.href.split(/[?#]/),\n            splitted_url_anchor = window.location.href.split('#');\n        this.url_params = {};\n        if (splitted_url.length > 1) {\n            let idx, param, params = splitted_url[1].split('&');\n            for (idx = 0; idx < params.length; idx++) {\n                param = params[idx].split('=');\n                if (param.length === 1) {\n                    this.url_params[param[0]] = null;\n                } else {\n                    this.url_params[param[0]] = param[1];\n                }\n            }\n        }\n        if (splitted_url_anchor.length > 1) {\n            this.url_params['anchor'] = splitted_url[1];\n        }\n        window.history.pushState(null, null, window.location.pathname);\n    },\n\n    getStorageName: function () {\n        let name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        if (constants.STORAGE_NAME_ENDING) {\n            name = name + '-' + constants.STORAGE_NAME_ENDING;\n        }\n        return name;\n    },\n\n    cleanUpStorage: function () {\n        let full_storage_name = constants.STORAGE_NAME + '-' + constants.STORAGE_VERSION;\n        for (let key in window.localStorage) {\n            if (key.startsWith('xabber') &&\n                    !key.startsWith(full_storage_name)) {\n                window.localStorage.removeItem(key);\n            }\n        }\n    },\n\n    requestNotifications: function () {\n        let result = new $.Deferred(),\n            self = this;\n        if (!window.Notification) {\n            result.resolve(null);\n        } else if (window.Notification.permission === 'granted') {\n            result.resolve(true);\n        } else {\n            if (!self.cache.ignore_notifications_warning)\n                self.notifications_placeholder = new self.NotificationsPlaceholder();\n            result.resolve(false);\n        }\n        return result.promise();\n    },\n\n    extendWith: function () {\n        return _.reduce(arguments, function (instance, module) {\n            return instance;\n        }, this);\n    }\n});\n\nexport default new Xabber();\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.base,\n    utils = env.utils,\n    uuid = env.uuid,\n    $ = env.$,\n    _ = env._;\n\nxabber.ViewPath = function (str) {\n    this.path = str.split('.');\n    this.applyTo = function (obj) {\n        let result = obj;\n        for (let idx = 0; idx < this.path.length; idx++) {\n            if (!(result = _.result(result, this.path[idx]))) {\n                return null;\n            }\n        }\n        return result;\n    };\n};\n\nxabber.BasicView = Backbone.View.extend({\n    template: function () {\n        return '';\n    },\n\n    initialize: function (options) {\n        options || (options = {});\n        this.parent = options.parent;\n        this.vname = options.vname;\n        this.children = {};\n        this.$el.addClass(options.classlist);\n        if (!options.el) {\n            this.$el.html(this.template(_.extend({view: this}, constants)));\n        }\n        if (!_.isUndefined(this.ps_selector)) {\n            this.ps_container = this.$(this.ps_selector);\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        this.data = new Backbone.Model({visible: false});\n        this.data.on(\"change:visible\", this.onChangedVisibility, this);\n        xabber.on(\"update_css\", function (options) {\n            this.updateCSS && this.updateCSS();\n            (options && options.size_changed && this.windowResized) && this.windowResized();\n        }, this);\n        this._initialize && this._initialize(options);\n        this.__initialize && this.__initialize(options);\n    },\n\n    isVisible: function () {\n        return this.data.get('visible');\n    },\n\n    onChangedVisibility: function () {},\n\n    show: function () {\n        this.onShow.apply(this, arguments);\n        this.data.set('visible', true);\n        this.trigger('after_show', this);\n        this.updateScrollBar();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    onShow: function () {\n        this.render.apply(this, arguments);\n        _.each(this.children, function (view) {\n            view.render.apply(view, arguments);\n        });\n    },\n\n    onHide: function () {\n        _.each(this.children, function (view) {\n            view.onHide.apply(view, arguments);\n        });\n    },\n\n    detach: function () {\n        this.$el.detach();\n    },\n\n    child: function (name) {\n        return this.children[name];\n    },\n\n    addChild: function (name, constructor, options) {\n        let view;\n        if (constructor instanceof Backbone.View) {\n            view = constructor;\n            view.parent = this;\n        } else {\n            view = new constructor(_.extend({\n                parent: this,\n                vname: name\n            }, options));\n        }\n        this.children[name] = view;\n        return view;\n    },\n\n    removeChild: function (name, options) {\n        options || (options = {});\n        let view = this.children[name];\n        if (view) {\n            delete this.children[name];\n            options.soft ? view.detach() : (view.trigger(\"remove\") && view.remove());\n        }\n    },\n\n    removeChildren: function () {\n        _.each(_.keys(this.children), (view_id) => {\n            this.removeChild(view_id);\n        });\n    },\n\n    setCustomCss: function (styles) {\n        this.$el.css(styles);\n    },\n\n    removeCustomCss: function () {\n        this.$el.removeAttr('style');\n    },\n\n    saveScrollBarOffset: function () {\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.data.set('scroll_top', this.getScrollTop());\n            }\n        }\n    },\n\n    updateScrollBar: function () {\n        // let start_scrolled_bottom = this.getScrollBottom();\n        if (this.ps_container && this.isVisible()) {\n            let scroll_top = this.data.get('scroll_top');\n            if (typeof scroll_top === \"undefined\") {\n                this.ps_container.perfectScrollbar('update');\n            } else {\n                this.data.set('scroll_top', undefined);\n                this.scrollTo(scroll_top);\n            }\n        }\n        // this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - start_scrolled_bottom);\n        return this;\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container[0].scrollTop = offset;\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    scrollToBottom: function () {\n        let scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        this.scrollTo(scrollHeight - offsetHeight);\n    },\n\n    scrollToChild: function ($child) {\n        let scrollTop = _.reduce($child.prevAll(), function (sum, el) {\n            return sum + el.offsetHeight + 2;\n        }, 0);\n        this.scrollTo(scrollTop);\n    },\n\n    getScrollTop: function () {\n        return this.ps_container[0].scrollTop;\n    },\n\n    getScrollBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight - (scrollTop + offsetHeight);\n    },\n\n    getPercentScrolled: function () {\n        if (this.isScrolledToTop()) {\n            return 0;\n        }\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollTop / (scrollHeight - offsetHeight);\n    },\n\n    isScrolledToTop: function () {\n        return this.getScrollTop() === 0;\n    },\n\n    isScrolledToBottom: function () {\n        let scrollTop = this.ps_container[0].scrollTop,\n            scrollHeight = this.ps_container[0].scrollHeight,\n            offsetHeight = this.ps_container[0].offsetHeight;\n        return scrollHeight === scrollTop + offsetHeight;\n    }\n});\n\nxabber.NodeView = xabber.BasicView.extend({\n    onShow: function (options, tree) {\n        if ((xabber.body.data.get('contact_details_view') && (this.vname === 'right_contact'))){\n            xabber.body.data.get('contact_details_view').scrollTo(xabber.body.data.get('contact_details_view').data.get('scroll_top'));\n            xabber.body.data.set('contact_details_view', null)\n            return;\n        }\n        _.each(this.children, function (view) {\n            view.hide();\n        });\n        this.$el.children().detach();\n        tree = this.patchTree(tree, options) || tree;\n        _.each(this.children, (view, name) => {\n            if (_.has(tree, name)) {\n                if (name !== 'login')\n                    this.$el.append(view.$el);\n                this.$el.switchClass('hidden', name === 'login');\n                view.show(options, tree[name]);\n            }\n        });\n        return this.render(options);\n    },\n\n    onHide: function (options) {\n        _.each(this.children, function (view) {\n            view.hide(options);\n        });\n    },\n\n    patchTree: function () {}\n});\n\nxabber.Container = xabber.BasicView.extend({\n    className: 'container',\n\n    render: function (options, path) {\n        let new_view = path.applyTo(options);\n        this.$el.children().detach();\n        if (this.view !== new_view) {\n            this.onHide(options);\n        }\n        this.view = new_view;\n        if (this.view) {\n            this.$el.append(this.view.$el);\n            this.view.show(options);\n        }\n        return this;\n    },\n\n    onHide: function (options) {\n        if (this.view) {\n            this.view.hide(options);\n        }\n        this.view = null;\n    }\n});\n\nxabber.SearchView = xabber.BasicView.extend({\n    events: {\n        \"keydown .search-input\": \"keyUpOnSearch\",\n        \"focusout .search-input\": \"clearSearchSelection\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .list-item\": \"onClickItem\"\n    },\n\n    keyUpOnSearch: function (ev) {\n        ev.stopPropagation();\n        this.ids = this.$('.list-item:not(.hidden)').map(function () {\n            return $(this).data('id');\n        }).toArray();\n        let $selection = this.getSelectedItem();\n        if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n            return this.selectNextItem();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            return this.selectPreviousItem();\n        }\n        if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n            ev.preventDefault();\n            return this.onEnterPressed($selection);\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            ev.preventDefault();\n            if ($(ev.target).val())\n                return this.clearSearch();\n            else\n                this.close();\n        }\n        this.updateSearch();\n    },\n\n    getSelectedItem: function () {\n        return this.$('.list-item[data-id=\"'+this.selection_id+'\"]');\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id)\n            return;\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop || $selection[0].clientHeight + $selection[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        if (arrow === 'up' && ($selection[0].offsetTop <= this.ps_container[0].scrollTop || $selection[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    selectNextItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n    },\n\n    selectPreviousItem: function () {\n        this.selectItem(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n    },\n\n    updateSearch: function () {\n        if (!this._update_search_timeout) {\n            let query = this.$('.search-input').val();\n            this.$('.search-form').switchClass('active', query);\n            this.clearSearchSelection();\n            if (query)\n                this.search(query.toLowerCase());\n            else {\n                this.$('.list-item').removeClass('hidden');\n                this.onEmptyQuery();\n            }\n            this.updateScrollBar();\n            this.query = false;\n            this._update_search_timeout = setTimeout(() => {\n                this._update_search_timeout = null;\n                this.query && this.updateSearch();\n            }, 150);\n        } else {\n            this.query = true;\n        }\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.updateSearch();\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n    },\n\n    searchAll: function () {\n        this.$('.list-item').removeClass('hidden');\n    },\n\n    keyUpOnSearchWithQuery: function () {},\n\n    close: function () {},\n\n    search: function () {},\n\n    onEnterPressed: function () {},\n\n    onEmptyQuery: function () {},\n\n    onClickItem: function () {}\n});\n\n  xabber.SearchPanelView = xabber.SearchView.extend({\n      events: {\n          \"keydown .search-input\": \"keyUpOnSearch\",\n          \"focusout .search-input\": \"clearSearchSelection\",\n          \"click .close-search-icon\": \"clearSearch\",\n          \"click .list-item\": \"onClickItem\",\n          \"click .btn-search-messages\": \"updateSearchWithMessages\"\n      },\n\n      updateSearchWithMessages: function (ev) {\n          this.search_messages = true;\n          this.updateSearch();\n      },\n\n      keyUpOnSearch: function (ev) {\n          ev.stopPropagation();\n          if ($(ev.target).val()) {\n              this.keyUpOnSearchWithQuery(ev);\n              return;\n          }\n          this.ids = this.$('.list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItem();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItem();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItem();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      onScrollY: function (options) {\n          if (xabber.all_searched_messages && xabber.all_searched_messages.length && this.queryid && !this._loading_messages && !this._messages_loaded && this.isScrolledToBottom()) {\n              this._loading_messages = true;\n              options = options || {};\n              this.queryid = uuid();\n              options.query_id = this.queryid;\n              let accounts = xabber.accounts.connected;\n              accounts.forEach((account) => {\n                  let first_message = xabber.all_searched_messages.find(message => (message.account.get('jid') === account.get('jid')));\n                  if (!first_message || account.searched_msgs_loaded) {\n                      // this._loading_messages = false;\n                      return;\n                  }\n                  options.account = account;\n                  options.before = first_message.get('archive_id');\n                  this.MAMRequest(this.query_text, options, (messages) => {\n                      _.each(messages, (message) => {\n                          let message_from_stanza = account.chats.receiveChatMessage(message,\n                              _.extend({is_searched: true}, options)\n                              ),\n                              msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza),\n                              $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                          if (msg_idx === 0) {\n                              $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                          } else {\n                              $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                          }\n                      });\n                      this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                      this.updateScrollBar();\n                      this._loading_messages = false;\n                  });\n              });\n              (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n          }\n      },\n\n      onScroll: function () {},\n\n      keyUpOnSearchWithQuery: function (ev) {\n          ev.stopPropagation();\n          this.ids = this.$('.searched-lists-wrap .list-item:not(.hidden)').map(function () {\n              return $(this).data('id');\n          }).toArray();\n          let $selection = this.getSelectedItemWithQuery();\n          if (ev.keyCode === constants.KEY_ARROW_DOWN) {\n              return this.selectNextItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ARROW_UP) {\n              return this.selectPreviousItemWithQuery();\n          }\n          if (ev.keyCode === constants.KEY_ENTER && $selection.length) {\n              ev.preventDefault();\n              return this.onEnterPressed($selection);\n          }\n          else if (ev.keyCode === constants.KEY_ENTER){\n              this.search_messages = true;\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              ev.preventDefault();\n              if ($(ev.target).val())\n                  return this.clearSearch();\n              else\n                  this.close();\n          }\n          this.updateSearch();\n      },\n\n      getSelectedItemWithQuery: function () {\n          return this.$('.searched-lists-wrap .list-item[data-id=\"'+this.selection_id+'\"]');\n      },\n\n      selectItemWithQuery: function (id, arrow) {\n          if (!id) {\n              if (this.isScrolledToBottom())\n                  this.onScrollY();\n              return;\n          }\n          this.clearSearchSelection();\n          let $selection = this.$('.searched-lists-wrap .list-item[data-id=\"'+id+'\"]');\n          if ($selection.length) {\n              this.selection_id = id;\n          } else {\n              this.ps_container[0].scrollTop = 0;\n              $selection = this.$('.searched-lists-wrap .list-item:visible').first();\n              this.selection_id = $selection.data('id');\n          }\n          if (arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n          || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop < this.ps_container[0].scrollTop))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          if (arrow === 'up' && ($selection[0].offsetTop + $selection.parent().parent()[0].offsetTop <= this.ps_container[0].scrollTop\n          || $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n              this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent().parent()[0].offsetTop;\n          $selection.addClass('selected');\n      },\n\n      selectNextItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)+1], 'down');\n      },\n\n      selectPreviousItemWithQuery: function () {\n          this.selectItemWithQuery(this.ids[this.ids.indexOf(this.selection_id)-1], 'up');\n      },\n\n      search: function (query) {\n          this.$(this.main_container).addClass('hidden');\n          clearTimeout(this.keyup_timeout);\n          this.keyup_timeout = null;\n          this.query_text = query;\n          this.$('.contacts-list').html(\"\");\n          this.$('.chats-list').html(\"\");\n          xabber.accounts.connected.forEach((acc) => {\n              let saved_chat = acc.chats.getSavedChat();\n              saved_chat.set('opened', true);\n              saved_chat.item_view.updateLastMessage();\n          });\n          let query_chats = _.clone(xabber.chats);\n          query_chats.comparator = 'timestamp';\n          query_chats.sort('timestamp').forEach((chat) => {\n              let jid = chat.get('jid').toLowerCase(),\n                  name = chat.contact ? (chat.contact.get('roster_name') || chat.contact.get('name')) : chat.get('name');\n              name && (name = name.toLowerCase());\n              if (chat.get('timestamp') || chat.get('saved')) {\n                  if (name.indexOf(query) > -1 || jid.indexOf(query) > -1 || (chat.get('saved') && query.includes('saved'))) {\n                      let searched_by = name.indexOf(query) > -1 ? 'by-name' : 'by-jid',\n                          chat_item = xabber.chats_view.child(chat.get('id'));\n                      chat_item && (chat_item = chat_item.$el.clone().addClass(searched_by));\n                      if (chat_item) {\n                          this.$('.chats-list-wrap').removeClass('hidden');\n                          if (searched_by === 'by-name')\n                              this.$('.chats-list').prepend(chat_item);\n                          else if (this.$('.chats-list .by-jid').length)\n                              chat_item.insertBefore(this.$('.chats-list .by-jid').first());\n                          else\n                              this.$('.chats-list').append(chat_item);\n                          chat_item.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              xabber.chats_view.openChat(chat.item_view, {screen: xabber.body.screen.get('name')});\n                              chat_item.addClass('active');\n                          });\n                      }\n                  }\n              }\n          });\n          xabber.accounts.each((account) => {\n              account.contacts.each((contact) => {\n                  let jid = contact.get('jid').toLowerCase(),\n                      name = contact.get('roster_name') || contact.get('name'),\n                      chat = account.chats.get(contact.hash_id),\n                      chat_id = chat && chat.id;\n                  name && (name = name.toLowerCase());\n                  if (!chat_id || chat_id && !this.$('.chat-item[data-id=\"' + chat_id + '\"]').length)\n                      if (name.indexOf(query) > -1 || jid.indexOf(query) > -1) {\n                          let searched_by = name.indexOf(query) > -1 ? 'by-name' : 'by-jid',\n                              item_list = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${account.get('jid')}\"] .list-item[data-jid=\"${jid}\"]`).first().clone().data('account-jid', account.get('jid'));\n                          item_list.attr({'data-color': account.settings.get('color'), 'data-account': account.get('jid')}).addClass(searched_by).prepend($('<div class=\"account-indicator ground-color-700\"/>'));\n                          if (searched_by === 'by-name')\n                              this.$('.contacts-list').prepend(item_list);\n                          else if (this.$('.contacts-list .by-jid').length)\n                              item_list.insertBefore(this.$('.contacts-list .by-jid').first());\n                          else\n                              this.$('.contacts-list').append(item_list);\n                          item_list.click(() => {\n                              this.$('.list-item.active').removeClass('active');\n                              let chat = account.chats.getChat(contact);\n                              chat && xabber.chats_view.openChat(chat.item_view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                              item_list.addClass('active');\n                          });\n                      }\n              });\n          });\n          this.$('.chats-list-wrap').switchClass('hidden', !this.$('.chats-list').children().length);\n          this.$('.pinned-chat-list').switchClass('hidden', query);\n          this.$('.contacts-list-wrap').switchClass('hidden', !this.$('.contacts-list').children().length);\n          this.$('.messages-list-wrap').addClass('hidden').find('.messages-list').html(\"\");\n          if (query.length >= 2 && this.search_messages) {\n              this.search_messages = false;\n              this.queryid = uuid();\n              this.searchMessages(query, {query_id: this.queryid});\n          }\n          else if (query.length >= 2 && !this.search_messages){\n              this.$('.btn-search-messages').showIf(query);\n          }\n      },\n\n      searchMessages: function (query, options) {\n          this._loading_messages = true;\n          this._messages_loaded = false;\n          this.$('.messages-list-wrap').showIf(query);\n          this.$('.btn-search-messages').hideIf(query);\n          this.$('.messages-list-wrap .messages-list').html(env.templates.contacts.preloader());\n          options = options || {};\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.before && (options.before = \"\");\n          xabber.all_searched_messages = new xabber.SearchedMessages();\n          let accounts = xabber.accounts.connected;\n          accounts.forEach((account) => {\n              account.searched_msgs_loaded = false;\n              options.account = account;\n              this.MAMRequest(query, options, (messages) => {\n                  this.$('.messages-list-wrap .messages-list').html('');\n                  if (!this.query_text)\n                      return;\n                  _.each(messages, (message) => {\n                      if (!this.query_text)\n                          return;\n                      let message_from_stanza = account.chats.receiveChatMessage(message,\n                          _.extend({is_searched: true}, options)\n                          ),\n                          msg_idx = xabber.all_searched_messages.indexOf(message_from_stanza), $message_item_view;\n                          if (!message_from_stanza)\n                              return;\n                          else\n                              $message_item_view = new xabber.MessageItemView({model: message_from_stanza});\n                      if (msg_idx === 0) {\n                          $message_item_view.$el.appendTo(this.$('.messages-list-wrap .messages-list'));\n                      } else {\n                          $message_item_view.$el.insertBefore(this.$('.messages-list-wrap .message-item').eq(-msg_idx));\n                      }\n                  });\n                  this.$('.messages-list-wrap').switchClass('hidden', !this.$('.messages-list').children().length);\n                  this.updateScrollBar();\n                  this._loading_messages = false;\n              });\n          });\n          (accounts.filter(account => account.searched_msgs_loaded).length === accounts.length) && (this._messages_loaded = true);\n      },\n\n      MAMRequest: function (query, options, callback, errback) {\n          let messages = [],\n              account = options.account,\n              queryid = uuid(),\n              iq = $iq({type: 'set'})\n                  .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                  .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                  .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                  .c('value').t(Strophe.NS.MAM).up().up()\n                  .c('field', {'var': 'withtext'})\n                  .c('value').t(query).up().up().up().cnode(new Strophe.RSM(options).toXML()),\n              handler = account.connection.addHandler((message) => {\n                  let $msg = $(message);\n                  if ($msg.find('result').attr('queryid') === queryid && options.query_id === this.queryid) {\n                      messages.push(message);\n                  }\n                  return true;\n              }, env.Strophe.NS.MAM);\n          account.sendIQFast(iq,\n              function (res) {\n                  account.connection.deleteHandler(handler);\n                  let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                  if ($fin.length && $fin.attr('queryid') === queryid) {\n                      let rsm_complete = ($fin.attr('complete') === 'true') ? true : false;\n                      rsm_complete && (account.searched_msgs_loaded = true);\n                  }\n                  callback && callback(messages);\n              },\n              function () {\n                  account.connection.deleteHandler(handler);\n                  errback && errback();\n              }\n          );\n      },\n\n      clearSearch: function (ev) {\n          ev && ev.preventDefault();\n          this.$('.search-input').val('');\n          this.updateSearch();\n          this.onEmptyQuery();\n      },\n\n      onEmptyQuery: function () {\n          xabber.accounts.forEach(function (account) {\n              account.searched_msgs_loaded = false;\n          });\n          this.query_text = null;\n          this.queryid = null;\n          this._messages_loaded = false;\n          this._loading_messages = false;\n          this.$(this.main_container).removeClass('hidden');\n          this.$('.chats-list-wrap').addClass('hidden');\n          this.$('.pinned-chat-list').removeClass('hidden');\n          this.$('.contacts-list-wrap').addClass('hidden');\n          this.$('.messages-list-wrap').addClass('hidden');\n      }\n  });\n\n  xabber.InputWidget = Backbone.View.extend({\n    field_type: 'text',\n    template: templates.input_widget,\n\n    events: {\n        \"click .field-text\": \"showInput\",\n        \"click .btn-rename\": \"showInput\",\n        \"keydown .field-input\": \"keyDown\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    initialize: function () {\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n        this.data.on(\"change:input_mode\", this.onChangedInputMode, this);\n        this.bindModelEvents();\n    },\n\n    bindModelEvents: function () {\n        this.model.on(\"change:\"+this.model_field, this.updateValue, this);\n    },\n\n    showInput: function () {\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    onChangedInputMode: function () {\n        let input_mode = this.data.get('input_mode');\n        this.$value.hideIf(input_mode);\n        this.$btn.hideIf(input_mode);\n        this.$input.showIf(input_mode).focus();\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.changeValue();\n        } else if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    keyUp: function (ev) {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        return this.model.get(this.model_field);\n    },\n\n    setValue: function (value) {\n        this.model.save(this.model_field, value);\n    },\n\n    changeValue: function () {\n        let value = this.getValue(),\n            new_value = this.$input.removeClass('changed').val();\n        new_value !== value && this.setValue(new_value);\n        this.data.set('input_mode', false);\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        this.$input.val(value);\n    }\n});\n\nxabber.Body = xabber.NodeView.extend({\n    className: 'client-body-wrap',\n\n    _initialize: function () {\n        this.vname = 'body';\n        this.data.set('visible', true);\n        this.screen = new Backbone.Model();\n        this.screen_map = new Backbone.Model();\n        this.screen.on(\"change\", this.update, this);\n        this.screen_map.on(\"change\", this.onScreenMapChanged, this);\n        $(constants.CONTAINER_ELEMENT).append(this.$el);\n        this.updateBackground();\n        this.updateMainColor();\n        this.updateAvatarShape();\n        $('#modals').insertAfter(this.$el);\n        xabber.on('update_main_color', this.updateMainColor, this);\n        xabber.on('update_avatar_shape', this.updateAvatarShape, this);\n    },\n\n    addScreen: function (name, attrs) {\n        this.screen_map.set(name, attrs);\n    },\n\n    updateMainColor: function () {\n        this.$el.attr('data-main-color', xabber.settings.main_color);\n        this.$el.siblings('#modals').attr('data-main-color', xabber.settings.main_color);\n        $(window.document).find('.login-container').attr('data-main-color', xabber.settings.main_color);\n    },\n\n    updateAvatarShape: function () {\n        let shape = xabber.settings.avatar_shape;\n        $(constants.CONTAINER_ELEMENT).switchClass('non-circle-avatars', shape != 'circle');\n        $(constants.CONTAINER_ELEMENT).switchClass('octagon-avatars', shape === 'octagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('hexagon-avatars', shape === 'hexagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('pentagon-avatars', shape === 'pentagon');\n        $(constants.CONTAINER_ELEMENT).switchClass('rounded-avatars', shape === 'rounded');\n        $(constants.CONTAINER_ELEMENT).switchClass('star-avatars', shape === 'star');\n        $(constants.CONTAINER_ELEMENT).switchClass('squircle-avatars', shape === 'squircle');\n    },\n\n    updateBackground: function () {\n        let background_settings = xabber.settings.background || {};\n        if (background_settings.image) {\n            if (background_settings.type === 'repeating-pattern') {\n                this.$el.css({\n                    'background-repeat': 'repeat',\n                    'background-size': 'unset',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            } else if (background_settings.type === 'image') {\n                this.$el.css({\n                    'background-repeat': 'no-repeat',\n                    'background-size': 'cover',\n                    'background-image': `url(\"${utils.images.getCachedBackground(background_settings.image)}\")`\n                });\n            }\n        } else {\n            this.$el.css({\n                'background-repeat': 'repeat',\n                'background-size': 'unset',\n                'background-image': `url(\"${constants.BACKGROUND_IMAGE}\")`,\n                'box-shadow': 'none'\n            });\n        }\n        this.updateBoxShadow(xabber.settings.appearance.vignetting);\n    },\n\n    updateBoxShadow: function (value) {\n        value = Number(value);\n        if (!value)\n            this.$el.css({\n                'box-shadow': `unset`\n            });\n        else\n            this.$el.css({\n            'box-shadow': `${value}px 0 100px 1px rgba(0, 0, 0, 0.7) inset, -${value}px 0 100px -1px rgba(0, 0, 0, 0.7) inset`\n        });\n    },\n\n    updateBlur: function (value) {\n        value = Number(value);\n        xabber.blur_overlay.$el.css({\n            \"backdrop-filter\": `blur(${value}px)`,\n            \"-webkit-backdrop-filter\": `blur(${value}px)`\n        });\n    },\n\n    setScreen: function (name, attrs, options) {\n        options = options || {};\n        $(window).unbind(\"keydown.contact_panel\");\n        xabber.notifications_placeholder && xabber.main_panel.$el.addClass('notifications-request');\n        $(constants.CONTAINER_ELEMENT).switchClass('xabber-login', name === 'login');\n        $(constants.CONTAINER_ELEMENT).switchClass('on-xabber-login', name !== 'login');\n        let new_attrs = {stamp: _.uniqueId()};\n        if (name && !this.isScreen(name)) {\n            new_attrs.name = name;\n        }\n        if ((attrs && attrs.right && attrs.right === 'group_invitation') || (name === 'settings' || name ==='account_settings'))\n            new_attrs.right_contact = null;\n        else {\n            new_attrs.right_contact = xabber.body.screen.get('right_contact');\n        }\n        if ((!attrs && xabber.body.screen.get('right'))\n            || (attrs && !attrs.right && attrs.right !== null && xabber.body.screen.get('right')))\n            new_attrs.right = xabber.body.screen.get('right');\n        this.screen.set(_.extend(new_attrs, attrs), options);\n    },\n\n    isScreen: function (name) {\n        return this.screen.get('name') === name;\n    },\n\n    onScreenMapChanged: function () {\n        let name = this.screen.get('name');\n        if (_.has(this.screen_map.changed, name)) {\n            this.update();\n        }\n    },\n\n    update: function () {\n        let options = this.screen.attributes,\n            tree = this.screen_map.get(options.name);\n        if (typeof tree !== \"undefined\") {\n            this.onShow(options, tree);\n            this.model.trigger('update_screen', this.screen.get('name'));\n            this.model.trigger('update_layout', {screen_changed: options.name});\n        }\n    }\n});\n\nxabber.ToolbarView = xabber.BasicView.extend({\n    className: \"toolbar noselect\",\n    ps_selector: '.accounts',\n    ps_settings: {theme: 'item-list'},\n    template: templates.toolbar,\n\n    events: {\n        \"click .all-chats\":             \"showAllChats\",\n        \"click .chats\":                 \"showChats\",\n        \"click .group-chats\":           \"showGroupChats\",\n        \"click .contacts\":              \"showContacts\",\n        \"click .search\":                \"showSearch\",\n        \"click .archive-chats\":         \"showArchive\",\n        \"click .mentions\":              \"showMentions\",\n        \"click .settings\":              \"showSettings\",\n        \"click .add-variant.contact\":   \"showAddContactView\",\n        \"click .add-variant.account\":   \"showAddAccountView\",\n        \"click .add-variant.public-groupchat\": \"showAddPublicGroupChatView\",\n        \"click .add-variant.incognito-groupchat\": \"showAddIncognitoGroupChatView\",\n        \"click .about\":                 \"showAbout\"\n    },\n\n    _initialize: function () {\n        this.$('.add-something').on(\"change_state\", function (ev, state) {\n            $(this).switchClass('active', state).find('.mdi')\n                    .switchClass('mdi-close', state)\n                    .switchClass('mdi-plus', !state);\n            if (state) {\n                this.setAttribute('data-title',  this.getAttribute('title'));\n                this.setAttribute('title', \"\");\n            } else {\n                this.setAttribute('title', this.getAttribute('data-title'));\n                this.removeAttribute('data-title');\n            }\n        });\n\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.data.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n        this.data.on(\"change:group_msg_counter\", this.onChangedGroupMessageCounter, this);\n        this.data.on(\"change:mentions_counter\", this.onChangedMentionsCounter, this);\n        this.data.on(\"change:msg_counter\", this.onChangedMessageCounter, this);\n        this.data.set({msg_counter: 0});\n        this.data.set({group_msg_counter: 0});\n        this.data.set({all_msg_counter: 0});\n        this.data.set({mentions_counter: 0});\n    },\n\n    render: function () {\n        this.$('.add-something').dropdown({\n            inDuration: 50,\n            outDuration: 50,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        this.$('.add-variant.account').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n    },\n\n    updateColor: function (color) {\n        this.$('.toolbar-icon').css('color', color);\n        this.$('.toolbar-icon path').css('fill', color);\n    },\n\n    onUpdatedScreen: function (name) {\n        if ((name === 'account_settings') || ((name === 'all-chats') &&\n            (this.$('.toolbar-item.all-chats').hasClass('active') ||\n                this.$('.toolbar-item.group-chats').hasClass('active') ||\n                this.$('.toolbar-item.chats').hasClass('active')||\n                this.$('.toolbar-item.account-item').hasClass('active')||\n                this.$('.toolbar-item.archive-chats').hasClass('active')))) {\n            return;\n        }\n        this.$('.toolbar-item').removeClass('active unread');\n        if (_.contains(['all-chats', 'contacts', 'mentions',\n                        'settings', 'search', 'about'], name)) {\n            this.$('.toolbar-item.'+name).addClass('active');\n        }\n    },\n\n    showAllChats: function (ev) {\n        let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.all-chats').addClass('active').switchClass('unread', is_active);\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_all_chats');\n    },\n\n    showChats: function (ev) {\n        let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.chats').addClass('active').switchClass('unread', is_active);\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_chats');\n    },\n\n    showGroupChats: function (ev) {\n        let $el = $(ev.target).closest('.toolbar-item'), is_active = $el.hasClass('active') && !$el.hasClass('unread');\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.group-chats').addClass('active').switchClass('unread', is_active);\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_group_chats');\n    },\n\n    showArchive: function () {\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.archive-chats').addClass('active');\n        xabber.body.setScreen('all-chats',);\n        xabber.trigger('show_archive_chats');\n    },\n\n    showChatsByAccount: function (account) {\n        this.$('.toolbar-item').removeClass('active unread')\n            .filter('.account-item[data-jid=\"' + account.get('jid') + '\"]').addClass('active');\n        xabber.body.setScreen('all-chats', {\n            right_contact_save: true\n        });\n        xabber.trigger('show_account_chats', [account]);\n    },\n\n    showSearch: function () {\n        xabber.body.setScreen('search');\n    },\n\n    showContacts: function () {\n        xabber.body.setScreen('contacts', {right_contact: null});\n    },\n\n    showMentions: function () {\n        xabber.body.setScreen('mentions');\n    },\n\n    showSettings: function () {\n        xabber.body.setScreen('settings');\n    },\n\n    showAddContactView: function () {\n        xabber.trigger('add_contact', {right: null});\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    showAddIncognitoGroupChatView: function () {\n        xabber.trigger('add_group_chat', {incognito: true, right: null});\n    },\n\n    showAddPublicGroupChatView: function () {\n        xabber.trigger('add_group_chat', {public: true, right: null});\n    },\n\n    showAbout: function () {\n        if (!xabber.about_view)\n            xabber.about_view = xabber.wide_panel.addChild('about', xabber.AboutView, {model: xabber});\n        xabber.body.setScreen('about');\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0, count_all_msg = 0, count_group_msg = 0, mentions = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted()) {\n                    count_all_msg += chat.get('unread') + chat.get('const_unread');\n                    if (chat.contact.get('group_chat'))\n                        count_group_msg += chat.get('unread') + chat.get('const_unread');\n                    else\n                        count_msg += chat.get('unread') + chat.get('const_unread');\n                }\n            });\n            let incoming_subscriptions = account.contacts.filter(item => item.get('invitation') || (item.get('subscription_request_in') && item.get('subscription') != 'both')).length;\n            count_all_msg += incoming_subscriptions;\n            mentions += account.unread_mentions.length;\n        });\n        return { msgs: count_msg, all_msgs: count_all_msg, group_msgs: count_group_msg, mentions: mentions };\n    },\n\n    recountAllMessageCounter: function () {\n        let unread_messages = this.setAllMessageCounter();\n        this.data.set('all_msg_counter', unread_messages.all_msgs);\n        this.data.set('msg_counter', unread_messages.msgs);\n        this.data.set('group_msg_counter', unread_messages.group_msgs);\n        this.data.set('mentions_counter', unread_messages.mentions);\n    },\n\n    onChangedMessageCounter: function () {\n        let c = this.data.get('msg_counter');\n        this.$('.msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedGroupMessageCounter: function () {\n        let c = this.data.get('group_msg_counter');\n        this.$('.group-msg-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedMentionsCounter: function () {\n        let c = this.data.get('mentions_counter');\n        this.$('.mentions-indicator').switchClass('unread', c).text();\n    },\n\n    onChangedAllMessageCounter: function () {\n        let c = this.data.get('all_msg_counter');\n        this.$('.all-msg-indicator').switchClass('unread', c).text(c);\n    },\n});\n\nxabber.JingleMessageView = xabber.BasicView.extend({\n    className: 'modal main-modal jingle-message-view',\n    template: templates.jingle_message_calling,\n    avatar_size: constants.AVATAR_SIZES.XABBER_VOICE_CALL_VIEW,\n\n    events: {\n        \"click\": \"clickOnWindow\",\n        \"click .btn-accept\": \"accept\",\n        \"click .btn-share-screen\": \"shareScreen\",\n        \"click .btn-microphone\": \"toggleMicrophone\",\n        \"click .btn-video\": \"videoCall\",\n        \"click .btn-volume\": \"toggleVolume\",\n        \"click .btn-collapse\": \"collapse\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-full-screen\": \"setFullScreen\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n        this.model.on('destroy', this.onDestroy, this);\n        this.contact = this.model.contact;\n        this.account = this.contact.account;\n        this.model.on('change:state', this.updateCallingStatus, this);\n        this.model.on('change:status', this.updateBackground, this);\n        this.model.on('change:volume_on', this.updateButtons, this);\n        this.model.on('change:video_live', this.updateButtons, this);\n        this.model.on('change:video_screen', this.updateButtons, this);\n        this.model.on('change:video_in', this.updateCollapsedWindow, this);\n        this.model.on('change:video', this.updateCollapsedWindow, this);\n        this.model.on('change:audio', this.updateButtons, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.updateName();\n        this.updateCallingStatus(options.status);\n        if (options.status === 'in') {\n            this.updateStatusText(xabber.getString(\"dialog_jingle_message__status_calling\"));\n        }\n        else {\n            this.model.set('status', 'calling');\n        }\n        this.updateAccountJid();\n        this.updateButtons();\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                this.updateAvatar();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.collapsed-movable').mousedown((e) => {\n                    e = e || window.event;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag)\n                            this.collapse();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        e.preventDefault();\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                        didDrag = true;\n                    };\n                });\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n\n    },\n\n    setFullScreen: function () {\n        let video = this.$el.find('.webrtc-remote-video')[0],\n            local_video = this.$el.find('.webrtc-local-video')[0],\n            buttons = this.$el.find('.buttons-panel')[0];\n        if (!video)\n            return;\n        if (video.requestFullScreen) {\n            video.requestFullScreen();\n            local_video.requestFullScreen();\n            buttons.requestFullScreen();\n        }\n        else if (video.webkitRequestFullScreen) {\n            video.webkitRequestFullScreen();\n            local_video.webkitRequestFullScreen();\n            buttons.webkitRequestFullScreen();\n        }\n        else if (video.mozRequestFullScreen) {\n            video.mozRequestFullScreen();\n            local_video.mozRequestFullScreen();\n            buttons.mozRequestFullScreen();\n        }\n        else if (video.msRequestFullScreen) {\n            video.msRequestFullScreen();\n            local_video.msRequestFullScreen();\n            buttons.msRequestFullScreen();\n        }\n    },\n\n    cancelFullScreen: function () {\n        if (document.exitFullscreen) {\n            let full_screen_el = document.fullscreenElement;\n            full_screen_el && document.exitFullscreen().then(() => {\n                document.fullscreenElement && this.cancelFullScreen();\n            });\n        } else if (document.mozCancelFullScreen) { /* Firefox */\n            let full_screen_el = document.mozFullScreenElement;\n            full_screen_el && document.mozCancelFullScreen();\n            document.mozFullScreenElement && this.cancelFullScreen();\n        } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n            let full_screen_el = document.webkitCurrentFullScreenElement;\n            full_screen_el && document.webkitExitFullscreen();\n            document.webkitCurrentFullScreenElement && this.cancelFullScreen();\n        } else if (document.msExitFullscreen) { /* IE/Edge */\n            let full_screen_el = document.msFullscreenElement;\n            full_screen_el && document.msExitFullscreen();\n            document.msFullscreenElement && this.cancelFullScreen();\n        }\n    },\n\n    windowResized: function () {\n        this.$el.hasClass('collapsed') && this.$el.css('right', parseInt(xabber.main_panel.$el.css('margin-right')) + 8 + 'px');\n    },\n\n    updateButtons: function () {\n        this.$('.btn-video .video').switchClass('hidden', !this.model.get('video'));\n        this.$('.btn-share-screen').switchClass('active', this.model.get('video_screen'));\n        this.$('.btn-full-screen').switchClass('hidden', !this.model.get('video_in'));\n        this.$('.btn-video').switchClass('mdi-video active', this.model.get('video_live'))\n            .switchClass('mdi-video-off', !this.model.get('video_live'));\n        this.$('.btn-volume').switchClass('mdi-volume-high active', this.model.get('volume_on'))\n            .switchClass('mdi-volume-off', !this.model.get('volume_on'));\n        this.$('.btn-microphone').switchClass('active mdi-microphone', this.model.get('audio'))\n            .switchClass('mdi-microphone-off', !this.model.get('audio'));\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBackground: function () {\n        let status = this.model.get('status');\n        this.$el.attr('data-state', status);\n    },\n\n    updateCallingStatus: function (status) {\n        this.$('.buttons-wrap').switchClass('incoming', (status === 'in'));\n    },\n\n    updateStatusText: function (status) {\n        this.$('.calling-status').text(status || \"\");\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.contact.get('name'));\n    },\n\n    updateAccountJid: function () {\n        this.$('.modal-footer .contact-info .jid').text(this.contact.get('jid'));\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    shareScreen: function () {\n        this.model.set('video_screen', !this.model.get('video_screen'));\n    },\n\n    isFullScreen: function () {\n        if (document.fullscreenElement)\n            return true;\n        else if (document.webkitFullscreenElement)\n            return true;\n        else if (document.mozFullScreenElement)\n            return true;\n        else return false;\n    },\n\n    accept: function () {\n        this.model.accept();\n        this.updateCallingStatus(constants.JINGLE_MSG_ACCEPT);\n        this.model.initSession();\n    },\n\n    clickOnWindow: function (ev) {\n        if ($(ev.target).closest('.collapsed-movable').length)\n            return;\n        if ($(ev.target).closest('.video-wrap').length && this.$el.hasClass('collapsed') && this.$el.hasClass('collapsed-video'))\n            this.collapse();\n    },\n\n    collapse: function (ev) {\n        ev && ev.stopPropagation();\n        if (this.isFullScreen()) {\n            this.cancelFullScreen();\n            return;\n        }\n        let $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.toggle();\n        this.$el.toggleClass('collapsed');\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n        else {\n            this.$el.css('right', \"\");\n            this.$el.css('left', \"\");\n            this.$el.css('width', \"\");\n            this.$el.css('height', \"\");\n            this.$el.removeClass('collapsed-video');\n        }\n        this.windowResized();\n    },\n\n    updateCollapsedWindow: function () {\n        this.updateButtons();\n        if (this.$el.hasClass('collapsed')) {\n            this.$el.switchClass('collapsed-video', (this.model.get('video') || this.model.get('video_in')));\n            this.$el.switchClass('multiple-videos', this.model.get('video') && this.model.get('video_in'));\n        }\n    },\n\n    toggleMicrophone: function () {\n        this.model.set('audio', !this.model.get('audio'));\n    },\n\n    onDestroy: function () {\n        this.updateStatusText(xabber.getString(this.model.get('status') == 'device_busy' ? \"dialog_jingle_message__status_device_busy\" : this.model.get('status') == 'busy' ? \"dialog_jingle_message__status_busy\" : \"dialog_jingle_message__status_disconnected\"));\n        setTimeout(() => {\n            this.close();\n            this.$el.detach();\n        }, 3000);\n    },\n\n    videoCall: function () {\n        this.model.set('video_live', !this.model.get('video_live'));\n    },\n\n    toggleVolume: function (ev) {\n        let $target = $(ev.target);\n        $target.switchClass(this.model.set('volume_on', !this.model.get('volume_on')));\n    },\n\n    cancel: function () {\n        this.model.reject();\n        this.close();\n    }\n});\n\nxabber.PlyrPlayerPopupView = xabber.BasicView.extend({\n    className: 'modal main-modal player-overlay plyr-player-popup-view',\n    template: templates.plyr_player_popup,\n\n    events: {\n        \"click .mdi-close\": \"closePopup\",\n        \"click .mdi-minimize-float\": \"floatPopup\",\n        \"click .mdi-minimize-full\": \"fullPopup\",\n        \"click .mdi-plyr-hide\": \"hidePopup\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .mdi-open-message\": \"openMessage\",\n        \"click .mdi-toggle-play\": \"togglePlay\",\n        \"click .mdi-toggle-mute\": \"toggleMute\",\n    },\n\n    _initialize: function (options) {\n        this.data.set('visibility_state', 0);\n        this.data.on('change:visibility_state', this.onVisibilityChange, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n    },\n\n    render: function (options) {\n        options = options || {};\n        this.$el.openModal({\n            dismissible: false,\n            ready: () => {\n                if (!this.player){\n                    this.player = new Plyr('.plyr-player-popup', {\n                        controls: [\n                            'play-large', 'play', 'progress', 'duration', 'mute', 'volume', 'settings', 'download', 'fullscreen',\n                        ],\n                        youtube: {controls: 0, disablekb: 1, iv_load_policy: 3, modestbranding: 1, rel: 0, showinfo: 0}\n                    });\n                    this.player.on('play',(event) => {\n                        let other_players = xabber.plyr_players.filter(other => other != this.player);\n                        other_players.forEach(function(other) {\n                            if (other.$audio_elem){\n                                if (other.$audio_elem.voice_message)\n                                    other.$audio_elem.voice_message.stopTime();\n                            }\n                        })\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('pause',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('timeupdate',(event) => {\n                        xabber.trigger('plyr_player_time_updated');\n                    });\n                    this.player.on('volumechange',(event) => {\n                        xabber.trigger('plyr_player_updated');\n                    });\n                    this.player.on('statechange',(event) => {\n                        if (event.detail.code === 3) {\n                            this.$('.plyr-player-popup-draggable').removeClass('hidden');\n                            this.$('.plyr-player-popup-draggable').css({\n                                width: '',\n                                height: '',\n                            });\n                        }\n                        xabber.trigger('plyr_player_updated');\n                    });\n                }\n                this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).mousedown(() => {this.minimizePopup()});\n                this.showNewVideo(options);\n                this.onVisibilityChange();\n                this.updatePlyrControls();\n                this.pos1 = 0;\n                this.pos2 = 0;\n                this.pos3 = 0;\n                this.pos4 = 0;\n                this.$('.plyr-player-min-controls-tab').mousedown((e) => {\n                    e = e || window.event;\n                    if ($(e.target).closest('.plyr__control--overlaid').length || $(e.target).closest('.plyr__controls').length || $(e.target).closest('.mdi-close').length || $(e.target).closest('.plyr-player-min-controls-buttons').length)\n                        return;\n                    e.preventDefault();\n                    // get the mouse cursor position at startup:\n                    this.pos3 = e.clientX;\n                    this.pos4 = e.clientY;\n                    let didDrag = false;\n                    document.onmouseup = (e) => {\n                        document.onmouseup = null;\n                        document.onmousemove = null;\n                        if (!didDrag && !$(e.target).closest('.plyr__control--overlaid').length)\n                            this.$('.plyr__video-wrapper').click();\n                    };\n                    // call a function whenever the cursor moves:\n                    document.onmousemove = (e) => {\n                        e = e || window.event;\n                        didDrag = true;\n                        e.preventDefault();\n                        if (this.$el.hasClass('player-overlay'))\n                            return;\n                        // calculate the new cursor position:\n                        this.pos1 = this.pos3 - e.clientX;\n                        this.pos2 = this.pos4 - e.clientY;\n                        this.pos3 = e.clientX;\n                        this.pos4 = e.clientY;\n                        // set the element's new position:\n                        this.$el.css('top', (this.$el.offset().top - this.pos2) + \"px\");\n                        this.$el.css('left', (this.$el.offset().left - this.pos1) + \"px\");\n                        this.$el.css('transform', \"none\");\n                        this.$el.css('right', \"unset\");\n                    };\n                });\n            },\n        });\n\n    },\n\n    showNewVideo: function (options) {\n        options = options || {};\n        if (options.player.provider === 'youtube'){\n            this.$('.plyr-player-popup-draggable').addClass('hidden');\n            this.$('.plyr-player-popup-draggable').css({\n                width: 400,\n                height: 200,\n            });\n        }\n        this.account = options.player.chat_item.account;\n        this.updateColorScheme();\n        this.player.chat_item = options.player.chat_item;\n        this.player.player_item = options.player;\n        this.player.message_unique_id = options.player.message_unique_id;\n        this.player.source = {\n            type: 'video',\n            sources: [\n                {\n                    src: options.player.video_src,\n                    provider: options.player.provider,\n                },\n            ],\n        }\n        xabber.current_plyr_player = this.player;\n        this.player.once('ready',(event) => {\n            let $minimize_element_float = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-float mdi-svg-template\" data-svgname=\"player-float\"></svg>')\n            $minimize_element_float.append(env.templates.svg['player-float']())\n            $minimize_element_float.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n            let $minimize_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-minimize mdi-minimize-full mdi-svg-template\" data-svgname=\"player-full\"></svg>')\n            $minimize_element_full.append(env.templates.svg['player-full']())\n            $minimize_element_full.insertBefore(this.$('.plyr__controls__item[data-plyr=\"fullscreen\"]'));\n            let $show_message_element_full = $('<svg class=\"mdi mdi-24px mdi-plyr-custom-controls mdi-open-message mdi-svg-template\" data-svgname=\"message-bookmark-outline\"></svg>')\n            $show_message_element_full.append(env.templates.svg['message-bookmark-outline']())\n            $show_message_element_full.insertAfter(this.$('.plyr__controls__item[data-plyr=\"download\"]'));\n            let $previous_element = $('<div class=\"btn-previous-plyr\"><i class=\"mdi mdi-skip-previous mdi-24px\"></i></div>')\n            $previous_element.insertBefore(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n            let $next_element = $('<div class=\"btn-next-plyr\"><i class=\"mdi mdi-skip-next mdi-24px\"></i></div>')\n            $next_element.insertAfter(this.$('.plyr__controls__item[data-plyr=\"play\"]'));\n            this.player.play();\n            xabber.trigger('plyr_player_updated');\n        });\n    },\n\n    closePopup: function () {\n        this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId')).detach();\n        this.$el.detach();\n        xabber.current_plyr_player = null;\n        xabber.plyr_player_popup = null;\n        xabber.trigger('plyr_player_updated');\n    },\n\n    minimizePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        let visibility_state = this.data.get('visibility_state');\n        visibility_state = visibility_state + 1;\n        (visibility_state > 2) && (visibility_state = 0);\n        this.data.set('visibility_state', visibility_state);\n    },\n\n    hidePopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 2);\n    },\n\n    floatPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 1);\n    },\n\n    fullPopup: function () {\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            return;\n        this.data.set('visibility_state', 0);\n    },\n\n    onVisibilityChange: function () {\n        let visibility_state = this.data.get('visibility_state'),\n            $overlay = this.$el.closest('#modals').siblings('#' + this.$el.data('overlayId'));\n        $overlay.switchClass('hidden', visibility_state != 0);\n        this.$el.switchClass('player-overlay', visibility_state === 0);\n        this.$el.switchClass('hidden', visibility_state === 2);\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        if (xabber.current_plyr_player) {\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            this.$('.mdi-plyr-play').switchClass('hidden', xabber.current_plyr_player.playing);\n            this.$('.mdi-plyr-pause').switchClass('hidden', !xabber.current_plyr_player.playing);\n            this.$('.mdi-mute-plyr').switchClass('hidden', !xabber.current_plyr_player.muted);\n            this.$('.mdi-unmute-plyr').switchClass('hidden', xabber.current_plyr_player.muted);\n        }\n    },\n\n    openMessage: function () {\n        if (!(this.player && this.player.chat_item && this.player.message_unique_id))\n            return;\n        this.floatPopup();\n        let chat = this.player.chat_item.model;\n        xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n        xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n        if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n            if (xabber.right_contact_panel_saveable)\n                chat.contact.showDetailsRight('all-chats', {right_saved: true});\n            else\n                chat.contact.showDetailsRight('all-chats', {right_saved: false});\n        }\n        chat.getMessageContext(this.player.message_unique_id, {message: true});\n    },\n\n    togglePlay: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n    },\n\n    toggleMute: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        xabber.current_plyr_player.muted = !xabber.current_plyr_player.muted;\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n        this.account.settings.once(\"change:color\", this.updateColorScheme, this);\n    },\n});\n\nxabber.SettingsView = xabber.BasicView.extend({\n    className: 'settings-panel',\n    template: templates.settings,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"click .settings-tabs-wrap .settings-tab\": \"jumpToBlock\",\n        \"click .btn-add-account\": \"showAddAccountView\",\n        \"click .setting.notifications label\": \"setNotifications\",\n        \"click .setting.private-notifications label\": \"setPrivateNotifications\",\n        \"click .setting.group-notifications label\": \"setGroupNotifications\",\n        \"click .setting.message-preview.private-preview label\": \"setPrivateMessagePreview\",\n        \"click .setting.message-preview.group-preview label\": \"setGroupMessagePreview\",\n        \"click .setting.call-attention label\": \"setCallAttention\",\n        \"click .setting.load-media label\": \"setLoadMedia\",\n        \"click .setting.typing-notifications label\": \"setTypingNotifications\",\n        \"click .setting.mapping-service label\": \"setMappingService\",\n        \"change .sound input[type=radio][name=private_sound]\": \"setPrivateSound\",\n        \"change .sound input[type=radio][name=group_sound]\": \"setGroupSound\",\n        \"change .sound input[type=radio][name=call_sound]\": \"setCallSound\",\n        \"change .sound input[type=radio][name=dialtone_sound]\": \"setDialtoneSound\",\n        \"change .sound input[type=radio][name=attention_sound]\": \"setAttentionSound\",\n        \"change .languages-list input[type=radio][name=language]\": \"changeLanguage\",\n        \"change #vignetting\": \"changeVignetting\",\n        \"change #blur\": \"changeBlur\",\n        \"change #notifications_volume\": \"changeNotificationsVolume\",\n        \"change #transparency\": \"changeTransparency\",\n        \"change #blur_switch\": \"switchBlur\",\n        \"change #vignetting_switch\": \"switchVignetting\",\n        \"click .selected-color-wrap\": \"openColorPicker\",\n        \"click .current-main-color-wrap\": \"openMainColorPicker\",\n        \"change .background input[type=radio][name=background]\": \"setBackground\",\n        \"change .background input[type=radio][name=side-panel]\": \"setSidePanelTheme\",\n        \"change #side_panel_blur_switch\": \"setSidePanelBlur\",\n        \"change #transparency_switch\": \"switchTransparency\",\n        \"click .current-background-wrap\": \"changeBackgroundImage\",\n        \"change .hotkeys input[type=radio][name=hotkeys]\": \"setHotkeys\",\n        \"change .avatar-shape input[type=radio][name=avatar_shape]\": \"setAvatarShape\",\n        \"click .settings-tab.delete-all-accounts\": \"deleteAllAccounts\"\n    },\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(xabber.get('version_number'));\n        xabber.on('update_main_color', this.updateMainColor, this);\n    },\n\n    render: function () {\n        let settings = this.model.attributes,\n            lang = settings.language;\n        this.$('.notifications input[type=checkbox]').prop({\n            checked: settings.notifications && xabber._cache.get('notifications')\n        });\n        this.$('.private-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_private});\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !settings.notifications_private)\n        this.$('.group-notifications input[type=checkbox]')\n            .prop({checked: settings.notifications_group});\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !settings.notifications_group)\n        this.$('.message-preview.private-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_private});\n        this.$('.message-preview.group-preview input[type=checkbox]')\n            .prop({checked: settings.message_preview_group});\n        this.$('.call-attention input[type=checkbox]')\n            .prop({checked: settings.call_attention});\n        this.$('.load-media input[type=checkbox]')\n            .prop({checked: settings.load_media});\n        this.$('.typing-notifications input[type=checkbox]')\n            .prop({checked: settings.typing_notifications});\n        this.$('.mapping-service input[type=checkbox]')\n            .prop({checked: settings.mapping_service});\n        let sound_private_value = settings.private_sound ? settings.sound_on_private_message : '';\n        this.$(`.sound input[type=radio][name=private_sound][value=\"${sound_private_value}\"]`)\n                .prop('checked', true);\n        let sound_group_value = settings.group_sound ? settings.sound_on_group_message : '';\n        this.$(`.sound input[type=radio][name=group_sound][value=\"${sound_group_value}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=call_sound][value=\"${settings.sound_on_call}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=dialtone_sound][value=\"${settings.sound_on_dialtone}\"]`)\n                .prop('checked', true);\n        this.$(`.sound input[type=radio][name=attention_sound][value=\"${settings.sound_on_attention}\"]`)\n                .prop('checked', true);\n        this.$(`.hotkeys input[type=radio][name=hotkeys][value=${settings.hotkeys}]`)\n                .prop('checked', true);\n        this.$(`.avatar-shape input[type=radio][name=avatar_shape][value=${settings.avatar_shape}]`)\n                .prop('checked', true);\n        (lang == xabber.get(\"default_language\")) && (lang = 'default');\n        this.$(`.languages-list input[type=radio][name=language][value=\"${lang}\"]`)\n            .prop('checked', true);\n        let notifications_volume = !isNaN(settings.notifications_volume) ? settings.notifications_volume * 100 : 100;\n        this.$(`#notifications_volume`).val(notifications_volume);\n        this.$('.settings-panel-head span').text(this.$('.settings-block-wrap:not(.hidden)').attr('data-header'))\n        this.updateDescription();\n        this.updateBackgroundSetting();\n        this.updateColor();\n        this.updateMainColor();\n        this.updateSidePanelSetting();\n        this.$('.toolbar-main-color-setting-wrap .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            belowOrigin: true,\n            hover: false\n        });\n        return this;\n    },\n\n    updateMainColor: function () {\n        this.$('.toolbar-main-color-setting').attr('data-color', this.model.get('main_color'));\n        this.$('.toolbar-main-color-setting .color-name').text(xabber.getString(`account_color_name_${this.model.get('main_color').replace(/-/g, \"_\")}`).replace(/-/g, \" \"));\n    },\n\n    updateBackgroundSetting: function () {\n        this.$(`.background input[type=radio][name=background][value=${this.model.get('background').type}]`)\n            .prop('checked', true);\n        if (this.model.get('background').image) {\n            this.$('.current-background').css('background-image', `url(${utils.images.getCachedBackground(this.model.get('background').image)})`);\n        }\n        this.$('.current-background-wrap').switchClass('hidden', !this.model.get('background').image);\n        let appearance = this.model.get('appearance'),\n            blur_switched = appearance.blur !== false,\n            vignetting_switched = appearance.vignetting !== false;\n        this.$('#blur_switch')[0].checked = blur_switched;\n        this.$('.blur-setting .disabled').switchClass('hidden', blur_switched);\n        this.$('#blur')[0].value = blur_switched ? appearance.blur : constants.BLUR_VALUE;\n\n        this.$('#vignetting_switch')[0].checked = vignetting_switched;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', vignetting_switched);\n        this.$('#vignetting')[0].value = vignetting_switched ? appearance.vignetting : constants.VIGNETTING_VALUE;\n        this.updateScrollBar();\n    },\n\n    updateColor: function () {\n        let color = this.model.get('appearance').color || '#E0E0E0';\n        this.$('.selected-color-item').css('background-color', color);\n        this.$('.selected-color-hex').text(color);\n        let material_color = xabber.ColorPicker.prototype.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == color.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == color.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        xabber.toolbar_view.updateColor(color);\n    },\n\n    updateSidePanelSetting: function () {\n        let side_panel_settings = this.model.get('side_panel'),\n            transparency_switched = side_panel_settings.transparency !== false;\n        this.$('#side_panel_blur_switch')[0].checked = side_panel_settings.blur;\n        this.$('#transparency_switch')[0].checked = transparency_switched;\n        this.$('.transparency-setting .disabled').switchClass('hidden', transparency_switched);\n        this.$('#transparency')[0].value = transparency_switched ? side_panel_settings.transparency : constants.TRANSPARENCY_VALUE;\n        this.$(`#${this.cid}-${side_panel_settings.theme}-side-panel`)[0].checked = true;\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            $elem = this.$('.settings-block-wrap.' + $tab.data('block-name'));\n        this.$('.btn-add-account').hideIf($tab.data('block-name') != 'xmpp-accounts')\n        if ($tab.hasClass('link-button')) {\n            $tab.parent().siblings().removeClass('active');\n            this.scrollTo(0);\n            return;\n        }\n        this.$('.settings-block-wrap').addClass('hidden');\n        $elem.removeClass('hidden');\n        this.$('.settings-panel-head span').text($elem.attr('data-header'))\n        $tab.addClass('active').siblings().removeClass('active');\n        this.scrollToChild($elem);\n    },\n\n    setNotifications: function (ev) {\n        let value = this.model.get('notifications'),\n            $target = $(ev.target);\n        ev.preventDefault();\n        if (value === null) {\n            utils.callback_popup_message(xabber.getString(\"notifications__toast_notifications_not_supported\"), 1500);\n        } else {\n            value = value && xabber._cache.get('notifications');\n            if (!xabber._cache.get('notifications')) {\n                window.Notification.requestPermission((permission) => {\n                    xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n                    xabber.notifications_placeholder && xabber.notifications_placeholder.close();\n                    value = (permission === 'granted');\n                    this.model.save('notifications', value ? value : this.model.get('notifications'));\n                    $target.closest('.setting.notifications').find('input').prop('checked', value);\n                });\n            } else {\n                value = !value;\n                this.model.save('notifications', value);\n                $target.closest('.setting.notifications').find('input').prop('checked', value);\n            }\n        }\n    },\n\n    setPrivateNotifications: function (ev) {\n        let value = !this.model.get('notifications_private');\n        this.model.save('notifications_private', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=private_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.private-notifications').find('input').prop('checked', value);\n    },\n\n    setGroupNotifications: function (ev) {\n        let value = !this.model.get('notifications_group');\n        this.model.save('notifications_group', value);\n        ev.preventDefault();\n        this.$('.sound input[type=radio][name=group_sound]').prop('disabled', !value)\n        $(ev.target).closest('.setting.group-notifications').find('input').prop('checked', value);\n    },\n\n    setPrivateMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_private');\n        this.model.save('message_preview_private', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setGroupMessagePreview: function (ev) {\n        let value = !this.model.get('message_preview_group');\n        this.model.save('message_preview_group', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.message-preview').find('input').prop('checked', value);\n    },\n\n    setCallAttention: function (ev) {\n        let value = !this.model.get('call_attention');\n        this.model.save('call_attention', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.call-attention').find('input').prop('checked', value);\n    },\n\n    setLoadMedia: function (ev) {\n        let value = !this.model.get('load_media');\n        this.model.save('load_media', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.load-media').find('input').prop('checked', value);\n    },\n\n    setTypingNotifications: function (ev) {\n        let value = !this.model.get('typing_notifications');\n        this.model.save('typing_notifications', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.typing-notifications').find('input').prop('checked', value);\n    },\n\n    setMappingService: function (ev) {\n        let value = !this.model.get('mapping_service');\n        this.model.save('mapping_service', value);\n        ev.preventDefault();\n        $(ev.target).closest('.setting.mapping-service').find('input').prop('checked', value);\n    },\n\n    setPrivateSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({private_sound: true, sound_on_private_message: value});\n        } else {\n            this.model.save('private_sound', false);\n        }\n    },\n\n    setGroupSound: function (ev) {\n        let value = ev.target.value;\n        if (value) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(value, false, this.model.get('notifications_volume'));\n            this.model.save({group_sound: true, sound_on_group_message: value});\n        } else {\n            this.model.save('group_sound', false);\n        }\n    },\n\n    setCallSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_call: value});\n    },\n\n    setDialtoneSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_dialtone: value});\n    },\n\n    setAttentionSound: function (ev) {\n        let value = ev.target.value;\n        this.current_sound && this.current_sound.pause();\n        this.current_sound = xabber.playAudio(value, false);\n        this.model.save({sound_on_attention: value});\n    },\n\n    setBackground: function (ev) {\n        let value = ev.target.value;\n        if (value == 'default') {\n            this.model.save('background', {type: 'default'});\n            xabber.body.updateBackground();\n            this.updateBackgroundSetting();\n        } else if (value == 'repeating-pattern' || value == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: value, model: this.model});\n        }\n    },\n\n    setSidePanelTheme: function (ev) {\n        let value = ev.target.value,\n            side_panel_settings = this.model.get('side_panel');\n        this.model.save('side_panel', _.extend(side_panel_settings, {theme: value}));\n        xabber.roster_view.updateTheme(value);\n    },\n\n    setSidePanelBlur: function () {\n        let value = this.$('#side_panel_blur_switch')[0].checked,\n            side_panel_settings = this.model.get('side_panel');\n        this.model.save('side_panel', _.extend(side_panel_settings, {blur: value}));\n        xabber.roster_view.updateBlur(value);\n    },\n\n    changeBackgroundImage: function () {\n        let type = this.model.get('background').type;\n        if (type == 'repeating-pattern' || type == 'image') {\n            let background_view = new xabber.SetBackgroundView();\n            background_view.render({type: type, model: this.model});\n        }\n    },\n\n    openColorPicker: function () {\n        if (!this.colorPicker)\n            this.colorPicker = new xabber.ColorPicker({model: this.model});\n        this.colorPicker.render();\n    },\n\n    openMainColorPicker: function () {\n        if (!this.mainColorPicker)\n            this.mainColorPicker = new xabber.mainColorPicker({model: this.model});\n        this.mainColorPicker.render();\n    },\n\n    changeBlur: function () {\n        let value = this.$('#blur')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBlur(value);\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n    },\n\n    switchTransparency: function () {\n        let is_switched = this.$('#transparency_switch')[0].checked,\n            side_panel_settings = this.model.get('side_panel'),\n            value = is_switched ? constants.TRANSPARENCY_VALUE : false;\n        this.$('.transparency-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#transparency')[0].value = constants.TRANSPARENCY_VALUE;\n        this.model.save('side_panel', _.extend(side_panel_settings, {transparency: value}));\n        xabber.roster_view.updateTransparency(value);\n    },\n\n    changeNotificationsVolume: function () {\n        let volume = this.$('#notifications_volume')[0].value / 100,\n            sound = this.$('.sound input[type=radio][name=private_sound]:checked').val() || this.$('.sound input[type=radio][name=group_sound]:checked').val();\n        this.model.save('notifications_volume', volume);\n        if (sound) {\n            this.current_sound && this.current_sound.pause();\n            this.current_sound = xabber.playAudio(sound, false, volume);\n        }\n    },\n\n    changeTransparency: function () {\n        let value = this.$('#transparency')[0].value,\n            side_panel_settings = this.model.get('side_panel');\n        this.model.save('side_panel', _.extend(side_panel_settings, {transparency: value}));\n        xabber.roster_view.updateTransparency(value);\n    },\n\n    changeVignetting: function () {\n        let value = this.$('#vignetting')[0].value,\n            appearance = this.model.get('appearance');\n        xabber.body.updateBoxShadow(value);\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n    },\n\n    switchVignetting: function () {\n        let is_switched = this.$('#vignetting_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.VIGNETTING_VALUE : false;\n        this.$('.vignetting-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#vignetting')[0].value = constants.VIGNETTING_VALUE;\n        this.model.save('appearance', _.extend(appearance, {vignetting: value}));\n        xabber.body.updateBoxShadow(value);\n    },\n\n    switchBlur: function () {\n        let is_switched = this.$('#blur_switch:checked').length,\n            appearance = this.model.get('appearance'),\n            value = is_switched ? constants.BLUR_VALUE : false;\n        this.$('.blur-setting .disabled').switchClass('hidden', is_switched);\n        this.$('#blur')[0].value = constants.BLUR_VALUE;\n        this.model.save('appearance', _.extend(appearance, {blur: value}));\n        xabber.body.updateBlur(value);\n    },\n\n    setHotkeys: function (ev) {\n        this.model.save('hotkeys', ev.target.value);\n    },\n\n    setAvatarShape: function (ev) {\n        this.model.save('avatar_shape', ev.target.value);\n        xabber.trigger('update_avatar_shape');\n    },\n\n    deleteAllAccounts: function (ev) {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"settings__dialog_quit_client__confirm\", [constants.CLIENT_NAME]), null, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            res && xabber.trigger('quit');\n        });\n    },\n\n    changeLanguage: function (ev) {\n        let value = ev.target.value;\n        utils.dialogs.ask(xabber.getString(\"settings__dialog_change_language__header\"), xabber.getString(\"settings__dialog_change_language__confirm\"), null, { ok_button_text: xabber.getString(\"settings__dialog_change_language__button_change\")}).done((result) => {\n            if (result) {\n                this.model.save('language', value);\n                window.location.reload(true);\n            } else {\n                this.$(`.languages-list input[type=radio][name=language][value=\"${this.model.get('language')}\"]`)\n                    .prop('checked', true);\n            }\n        });\n    },\n\n    showAddAccountView: function () {\n        xabber.trigger('add_account', {right: null});\n    },\n\n    updateDescription: function () {\n        let lang = window.navigator.language,\n            progress = Object.keys(client_translation_progress).find(key => !lang.indexOf(key)) || constants.languages_another_locales[lang] && Object.keys(client_translation_progress).find(key => !constants.languages_another_locales[lang].indexOf(key));\n        (lang == 'default' || !lang.indexOf('en')) && (progress = 100);\n        if (!_.isUndefined(progress)) {\n            let progress_text, platform_text;\n            if (progress == 100) {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_full_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_full_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else if (progress == 0) {\n                progress_text = xabber.getString(\"settings__section_interface_language__text_description_no_translations\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__interface_language__text_description_no_translation_platform\",\n                        [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`]);\n            } else {\n                progress_text = xabber.getString(\"settings__interface_language__text_description_unfull_translation\", [constants.SHORT_CLIENT_NAME, constants.SHORT_CLIENT_NAME]);\n                platform_text = xabber.getString(\"settings__section_interface_language__text_description_translation_platform\",\n                    [`<a target=\"_blank\" href='${xabber.getString(\"settings__section_interface_language__text_description___link\")}'>${xabber.getString(\"settings__section_interface_language__text_description__text_link\")}</a>`, constants.EMAIL_FOR_JOIN_TRANSLATION]);\n            }\n            this.$('.description').html(`${progress_text}<br><br>${platform_text}`);\n        }\n    }\n});\n\nxabber.mainColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal main-color-picker',\n    template: templates.color_scheme,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .color-value\": \"setColor\"\n    },\n\n    _initialize: function (options) {\n        this.model = options.model;\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n    },\n\n    setColor: function (ev) {\n        let color = $(ev.target).closest('.color-value').attr('data-value');\n        this.model.save('main_color', color);\n        xabber.trigger('update_main_color');\n        this.close();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n\n});\n\nxabber.ColorPicker = xabber.BasicView.extend({\n    className: 'modal main-modal color-picker',\n    materialColors: [\n        {\n            color: \"red\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFEBEE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCDD2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EF9A9A\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E57373\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EF5350\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#F44336\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#E53935\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#D32F2F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#C62828\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#B71C1C\"\n                }\n            ]\n        },\n        {\n            color: \"pink\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FCE4EC\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F8BBD0\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#F48FB1\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#F06292\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#EC407A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#E91E63\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#D81B60\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#C2185B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#AD1457\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#880E4F\"\n                }\n            ]\n        },\n        {\n            color: \"purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F3E5F5\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#E1BEE7\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#CE93D8\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#BA68C8\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#AB47BC\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9C27B0\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#8E24AA\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#7B1FA2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#6A1B9A\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#4A148C\"\n                }\n            ]\n        },\n        {\n            color: \"deep-purple\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EDE7F6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D1C4E9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B39DDB\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#9575CD\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#7E57C2\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#673AB7\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#5E35B1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#512DA8\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4527A0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#311B92\"\n                }\n            ]\n        },\n        {\n            color: \"indigo\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8EAF6\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C5CAE9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#9FA8DA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#7986CB\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#5C6BC0\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#3F51B5\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#3949AB\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#303F9F\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#283593\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1A237E\"\n                }\n            ]\n        },\n        {\n            color: \"blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E3F2FD\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#BBDEFB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#90CAF9\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#64B5F6\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#42A5F5\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#2196F3\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#1E88E5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#1976D2\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#1565C0\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#0D47A1\"\n                }\n            ]\n        },\n        {\n            color: \"light-blue\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E1F5FE\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B3E5FC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#81D4FA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4FC3F7\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#29B6F6\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#03A9F4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#039BE5\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0288D1\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#0277BD\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#01579B\"\n                }\n            ]\n        },\n        {\n            color: \"cyan\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F7FA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2EBF2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80DEEA\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DD0E1\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26C6DA\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#00BCD4\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00ACC1\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#0097A7\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00838F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#006064\"\n                }\n            ]\n        },\n        {\n            color: \"teal\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E0F2F1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#B2DFDB\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#80CBC4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#4DB6AC\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#26A69A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#009688\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#00897B\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#00796B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#00695C\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#004D40\"\n                }\n            ]\n        },\n        {\n            color: \"green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#E8F5E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#C8E6C9\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#A5D6A7\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#81C784\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#66BB6A\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#4CAF50\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#43A047\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#388E3C\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#2E7D32\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#1B5E20\"\n                }\n            ]\n        },\n        {\n            color: \"light-green\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F1F8E9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#DCEDC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#C5E1A5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#AED581\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#9CCC65\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#8BC34A\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#7CB342\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#689F38\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#558B2F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#33691E\"\n                }\n            ]\n        },\n        {\n            color: \"lime\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#F9FBE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F0F4C3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#E6EE9C\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#DCE775\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#D4E157\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#CDDC39\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#C0CA33\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#AFB42B\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#9E9D24\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#827717\"\n                }\n            ]\n        },\n        {\n            color: \"yellow\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFFDE7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFF9C4\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFF59D\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFF176\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFEE58\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFEB3B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FDD835\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FBC02D\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#F9A825\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#F57F17\"\n                }\n            ]\n        },\n        {\n            color: \"amber\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF8E1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFECB3\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFE082\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFD54F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFCA28\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FFC107\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FFB300\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#FFA000\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#FF8F00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#FF6F00\"\n                }\n            ]\n        },\n        {\n            color: \"orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FFF3E0\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFE0B2\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFCC80\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FFB74D\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FFA726\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF9800\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#FB8C00\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#F57C00\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#EF6C00\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#E65100\"\n                }\n            ]\n        },\n        {\n            color: \"deep-orange\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FBE9E7\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#FFCCBC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#FFAB91\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#FF8A65\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#FF7043\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#FF5722\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#F4511E\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#E64A19\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#D84315\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#BF360C\"\n                }\n            ]\n        },\n        {\n            color: \"brown\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#EFEBE9\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#D7CCC8\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#BCAAA4\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#A1887F\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#8D6E63\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#795548\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#6D4C41\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#5D4037\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#4E342E\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#3E2723\"\n                }\n            ]\n        },\n        {\n            color: \"grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#FAFAFA\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#F5F5F5\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#EEEEEE\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#E0E0E0\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#BDBDBD\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#9E9E9E\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#757575\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#616161\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#424242\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#212121\"\n                }\n            ]\n        },\n        {\n            color: \"blue-grey\",\n            variations: [\n                {\n                    weight: 50,\n                    hex: \"#ECEFF1\"\n                },\n                {\n                    weight: 100,\n                    hex: \"#CFD8DC\"\n                },\n                {\n                    weight: 200,\n                    hex: \"#B0BEC5\"\n                },\n                {\n                    weight: 300,\n                    hex: \"#90A4AE\"\n                },\n                {\n                    weight: 400,\n                    hex: \"#78909C\"\n                },\n                {\n                    weight: 500,\n                    hex: \"#607D8B\"\n                },\n                {\n                    weight: 600,\n                    hex: \"#546E7A\"\n                },\n                {\n                    weight: 700,\n                    hex: \"#455A64\"\n                },\n                {\n                    weight: 800,\n                    hex: \"#37474F\"\n                },\n                {\n                    weight: 900,\n                    hex: \"#263238\"\n                }\n            ]\n        }\n    ],\n\n    ps_selector: '.material-color-picker-wrap',\n    events: {\n        \"click .color-palette-item\": \"selectColor\",\n        \"click .selected-color-hex\": \"updateInputField\",\n        \"focusout .selected-color-hex-input\": \"focusoutInputField\",\n        \"keyup .selected-color-hex-input\": \"keyUpInput\",\n        \"click .btn-set\": \"setColor\"\n    },\n\n    _initialize(options) {\n        this.model = options.model;\n        this.$el.html(templates.color_picker({materialColors: this.materialColors}));\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                let $input = this.$('.selected-color-hex-input'),\n                    $color_hex = this.$('.selected-color-hex'),\n                    value = this.model.get('appearance').color || '#E0E0E0';\n                let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n                if (material_color) {\n                    let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n                    this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n                } else {\n                    this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n                }\n                if (value) {\n                    this.$('.selected-color-wrap').removeClass('hidden');\n                    $input.addClass('hidden');\n                    $color_hex.removeClass('hidden').text(value);\n                    value && this.$('.selected-color-item').css('background-color', value);\n                }\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    updateInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.removeClass('hidden');\n        $input[0].value = $color_hex.text();\n        $color_hex.addClass('hidden');\n    },\n\n    keyUpInput: function (ev) {\n        if (ev.keyCode == constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.focusoutInputField();\n        }\n        let $input = this.$('.selected-color-hex-input'),\n            value = $input[0].value.trim();\n        this.$('.selected-color-item').css('background-color', value);\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n    },\n\n    focusoutInputField: function () {\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex'),\n            value = $input[0].value.trim();\n        let material_color = this.materialColors.find(c => c.variations.find(v => v.hex.toLowerCase() == value.toLowerCase()));\n        if (material_color) {\n            let tone = material_color.variations.find(v => v.hex.toLowerCase() == value.toLowerCase());\n            this.$('.selected-color-name').text(xabber.getString(`account_color_name_${material_color.color.replace(/-/g, \"_\")}`).replace(/-/g, \" \") + ` ${tone.weight}`);\n        } else {\n            this.$('.selected-color-name').text(xabber.getString(\"settings__section_appearance__hint_custom_color\"));\n        }\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden').text(value);\n        this.$('.selected-color-item').css('background-color', value);\n    },\n\n    selectColor: function (ev) {\n        let $target = $(ev.target),\n            hex = $target.attr('data-hex'),\n            color_name = $target.closest('.color-palette-wrapper').attr('data-color-name').replace(/-/g, \"_\"),\n            weight = $target.attr('data-weight');\n        this.$('.selected-color-wrap').removeClass('hidden');\n        this.$('.selected-color-item').css('background-color', hex);\n        this.$('.selected-color-name').text(xabber.getString(`account_color_name_${color_name}`).replace(/-/g, \" \").replace(/-/g, \" \") + ` ${weight}`);\n        this.$('.selected-color-hex').text(hex);\n        let $input = this.$('.selected-color-hex-input'),\n            $color_hex = this.$('.selected-color-hex');\n        $input.addClass('hidden');\n        $color_hex.removeClass('hidden');\n    },\n\n    setColor: function () {\n        this.close();\n        let appearance = this.model.get('appearance');\n        this.model.save('appearance', _.extend(appearance, {color: this.$('.selected-color-hex').text()}));\n\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                xabber.settings_view.updateColor();\n            }\n        });\n    }\n\n});\n\nxabber.SetBackgroundView = xabber.BasicView.extend({\n    className: 'modal main-modal settings-background background-panel',\n    template: templates.backgrounds_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addBackground\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.type = options.type;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        if (this.type == 'repeating-pattern')\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_pattern\"));\n        else\n            this.$('.modal-header span').text(xabber.getString(\"settings__dialog_background__header_image\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('max-height', Math.min(($(window).height() - 341), 456)).perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onScrollY: function () {\n        if (this.$('.screen-wrap:not(.hidden)').attr('data-screen') === 'library' && this.getScrollBottom() < 5) {\n            this.loadMoreImages();\n        }\n    },\n\n    getImagesFromXML: function (callback) {\n        if (this.type == 'repeating-pattern' && this.model.patterns_library || this.type == 'images' && this.model.img_library) {\n            callback && callback();\n            return;\n        }\n        let request = {\n            type: \"GET\",\n            contentType: \"application/xml\",\n            dataType: 'xml',\n            success: (data) => {\n                if (this.type == 'repeating-pattern') {\n                    this.onGetPatternsCallback(data);\n                } else {\n                    this.onGetImagesCallback(data);\n                }\n                callback && callback();\n            }\n        };\n        if (this.type == 'repeating-pattern') {\n            request.url = './background-patterns.xml';\n        } else {\n            request.url = './background-images.xml';\n        }\n        $.ajax(request);\n    },\n\n    onGetPatternsCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            images.push({thumbnail: $(img).text()});\n        });\n        this.model.patterns_library = images;\n    },\n\n    onGetImagesCallback: function (data) {\n        let images = [];\n        $(data).find('image').each((idx, img) => {\n            let $img = $(img),\n                thumbnail = $img.children('thumbnail').text(),\n                fs_img = $img.children('fullscreen-image').text();\n            images.push({thumbnail, fs_img});\n        });\n        this.model.img_library = images;\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    createLibrary: function () {\n        this.getImagesFromXML(() => {\n            this.loadMoreImages(40);\n        });\n    },\n\n    loadMoreImages: function (count) {\n        !count && (count = 20);\n        let current_count = this.$(`.image-item`).length;\n        if (this.type == 'repeating-pattern' && current_count >= this.model.patterns_library.length || this.type == 'images' && current_count >= this.model.img_library.length)\n            return;\n        for (let i = current_count; i < (current_count + count); i++) {\n            let img = $(`<div class=\"image-item\"/>`),\n                img_sources = this.type == 'repeating-pattern' ? this.model.patterns_library[i] : this.model.img_library[i];\n            if (!img_sources)\n                break;\n            img.css('background-image', `url(\"${img_sources.thumbnail}\")`);\n            img.attr('data-src', this.type == 'repeating-pattern' ? img_sources.thumbnail : img_sources.fs_img);\n            this.$('.library-wrap').append(img);\n        }\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addBackground: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img) => {\n            if (img) {\n                this.model.save('background', {type: this.type, image: img});\n            }\n            else {\n                this.model.save('background', {type: 'default'});\n            }\n            xabber.body.updateBackground();\n            this.close();\n        });\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = $active_screen.find('div.active').attr('data-src');\n            dfd.resolve(image);\n        } else {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            if ($active_screen.attr('data-screen') == 'web-address') {\n                let request = {\n                    type: \"GET\",\n                    url: image,\n                    headers: {\"Access-Control-Allow-Origin\": \"*\"},\n                    dataType: 'blob',\n                    success: function (data) {\n                        image = data;\n                        dfd.resolve(image);\n                    },\n                    error: () => {\n                        dfd.resolve(image);\n                    }\n                };\n                $.ajax(request);\n            } else\n                dfd.resolve(image);\n        }\n    },\n\n    close: function () {\n        xabber.settings_view.updateBackgroundSetting();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.AboutView = xabber.BasicView.extend({\n    className: 'settings-panel about-panel',\n    template: templates.about,\n    ps_selector: '.panel-content',\n\n    _initialize: function () {\n        this.$('.xabber-info-wrap .version').text(this.model.get('version_number'));\n    },\n\n    render: function () {\n    }\n});\n\nxabber.DragManager = Backbone.Model.extend({\n    initialize: function () {\n        window.document.onmousedown = this.onMouseDown.bind(this);\n        window.document.onmousemove = this.onMouseMove.bind(this);\n        window.document.onmouseup = this.onMouseUp.bind(this);\n    },\n\n    onMouseDown: function (ev) {\n        if (ev.which != 1) {\n            return;\n        }\n        let draghandle_elem = ev.target.closest('.drag-handle'),\n            elem = draghandle_elem && draghandle_elem.closest('.draggable');\n        if (!elem) {\n            return this.resetElem();\n        }\n        this.set({\n            elem: elem,\n            draghandle_elem: draghandle_elem,\n            downX: ev.pageX,\n            downY: ev.pageY\n        });\n    },\n\n    onMouseMove: function (ev) {\n        if (!this.get('elem')) {\n            return;\n        }\n        let avatar = this.get('avatar');\n        if (!avatar) {\n            if (    Math.abs(ev.pageX - this.get('downX')) < 3 &&\n                    Math.abs(ev.pageY - this.get('downY')) < 3) {\n                return;\n            }\n            avatar = this.createAvatar(ev);\n            if (!avatar) {\n                return this.resetElem();\n            }\n            this.set('avatar', avatar);\n            let coords = this.getCoords(avatar);\n            this.set({\n                shiftX: this.get('downX') - coords.left,\n                shiftY: this.get('downY') - coords.top\n            });\n            this.startDrag(ev);\n        }\n        avatar.style.left = ev.pageX - this.get('shiftX') + 'px';\n        avatar.style.top = ev.pageY - this.get('shiftY') + 'px';\n        let drop_elem = this.findDropElem(ev);\n        this.updateDropElem(drop_elem);\n        return;\n    },\n\n    onMouseUp: function (ev) {\n        let selector = document.querySelector('.recording');\n        if (selector) {\n            $(selector).removeClass('recording');\n            return;\n        }\n        this.get('avatar') && this.finishDrag(ev);\n        this.resetElem();\n    },\n\n    resetElem: function () {\n        this.set({elem: null, draghandle_elem: null, avatar: null});\n    },\n\n    getCoords: function (elem) {\n        let box = elem.getBoundingClientRect();\n        return {\n            top: box.top + window.pageYOffset,\n            left: box.left + window.pageXOffset\n        };\n    },\n\n    createAvatar: function () {\n        let avatar = this.get('elem'),\n            $avatar = $(avatar),\n            draghandle_elem = this.get('draghandle_elem');\n        let old = {\n            parent: avatar.parentNode,\n            nextSibling: avatar.nextSibling,\n            position: avatar.position || '',\n            left: avatar.left || '',\n            top: avatar.top || '',\n            zIndex: avatar.zIndex || '',\n            avatar_cursor: avatar.style.cursor || '',\n            draghandle_elem_cursor: draghandle_elem.style.cursor || ''\n        };\n\n        $avatar.addClass('dragging');\n        avatar.style.cursor = '-webkit-grabbing';\n        draghandle_elem.style.cursor = '-webkit-grabbing';\n\n        avatar.rollback = function () {\n            old.parent.insertBefore(avatar, old.nextSibling);\n            $avatar.removeClass('dragging');\n            avatar.style.position = old.position;\n            avatar.style.left = old.left;\n            avatar.style.top = old.top;\n            avatar.style.zIndex = old.zIndex;\n            avatar.style.cursor = old.avatar_cursor;\n            draghandle_elem.style.cursor = old.draghandle_elem_cursor;\n        };\n\n        return avatar;\n    },\n\n    startDrag: function (ev) {\n        let avatar = this.get('avatar');\n        window.document.body.appendChild(avatar);\n        avatar.style.zIndex = 9999;\n        avatar.style.position = 'absolute';\n    },\n\n    finishDrag: function (ev) {\n        let elem = this.get('elem'),\n            avatar = this.get('avatar'),\n            drop_elem = this.findDropElem(ev);\n        avatar.rollback();\n        this.updateDropElem(null);\n        if (elem && drop_elem) {\n            $(elem).trigger('drag_to', drop_elem);\n            $(drop_elem).trigger('drag_from', elem);\n        }\n    },\n\n    findDropElem: function (ev) {\n        let avatar = this.get('avatar');\n        avatar.hidden = true;\n        let elem = window.document.elementFromPoint(ev.clientX, ev.clientY);\n        avatar.hidden = false;\n        if (!elem) {\n            return null;\n        }\n        return elem.closest('.droppable');\n    },\n\n    updateDropElem: function (drop_elem) {\n        let old_drop_elem = this.get('drop_elem');\n        this.set('drop_elem', drop_elem);\n        old_drop_elem && $(old_drop_elem).removeClass('drag-on');\n        drop_elem && $(drop_elem).addClass('drag-on');\n    }\n});\n\n_.extend(xabber, {\n    modal_settings: {\n        open: {\n            in_duration: 50,\n            out_duration: 100,\n            opacity: 0.4\n        },\n        close: {out_duration: 100}\n    },\n\n    ps_settings: {\n        minScrollbarLength: 40,\n        suppressScrollX: true,\n        wheelSpeed: 0.5\n    },\n\n    startBlinkingFavicon: function () {\n        if (this._blink_interval)\n            return;\n        this._blink_interval = setInterval(() => {\n            let $icon = $(\"link[rel='shortcut icon']\"), url;\n            if ($icon.attr('href').indexOf(this.cache.favicon) > -1 || $icon.attr('href').indexOf(constants.FAVICON_DEFAULT) > -1)\n                url = this.cache.favicon_message || constants.FAVICON_MESSAGE;\n            else\n                url = this.cache.favicon || constants.FAVICON_DEFAULT;\n            $icon.attr('href', url);\n        }, 1000);\n    },\n\n    stopBlinkingFavicon: function () {\n        if (this._blink_interval) {\n            clearInterval(this._blink_interval);\n            this._blink_interval = null;\n            let url = this.cache.favicon || constants.FAVICON_DEFAULT;\n            $(\"link[rel='shortcut icon']\").attr(\"href\", url);\n        }\n    },\n\n    onChangedAllMessageCounter: function () {\n        if (this.get('all_msg_counter')) {\n            this.startBlinkingFavicon();\n            window.document.title = xabber.getString(\"notofications__desktop_notification__text\", [this.get('all_msg_counter')]);\n        } else {\n            this.stopBlinkingFavicon();\n            window.document.title = constants.CLIENT_NAME;\n        }\n    },\n\n    setAllMessageCounter: function () {\n        let count_msg = 0;\n        xabber.accounts.each((account) => {\n            account.chats.each((chat) => {\n                if (chat.contact && !chat.isMuted())\n                    count_msg += chat.get('unread') + chat.get('const_unread');\n            });\n        });\n        return count_msg;\n    },\n\n    recountAllMessageCounter: function () {\n        this.set('all_msg_counter', this.setAllMessageCounter());\n    },\n\n    resetMessageCounter: function () {\n        this.set('all_msg_counter', 0);\n    },\n\n    onChangedFocusState: function () {\n        if (this.get('focused')) {\n            this.resetMessageCounter();\n        }\n    },\n\n    openWindow: function (url) {\n        utils.openWindow(url, () => {\n            utils.dialogs.error(xabber.getString(\"notifications__error__text_could_not_open_new_tab\"));\n        });\n    },\n\n    popupNotification: function (params) {\n        let notification = new window.Notification(params.title, {\n            body: params.text,\n            icon: params.icon\n        });\n        setTimeout(notification.close.bind(notification), 5000);\n        return notification;\n    },\n\n    playAudio: function (name, loop, volume) {\n        if (!((volume || volume === 0) && !isNaN(volume)))\n            volume = 1;\n        loop = loop || false;\n        let filename = constants.SOUNDS[name];\n        if (filename) {\n            let audio = new window.Audio(filename);\n            audio.loop = loop;\n            audio.volume = volume;\n            audio.play();\n            return audio;\n        }\n        return;\n    },\n\n    stopAudio: function (audio) {\n        if (audio) {\n            audio.pause();\n            audio.remove();\n        }\n    },\n\n    registerDOMEvents: function () {\n        let self = this;\n\n        $(window).on(\"blur focus\", function (ev) {\n            self.set('focused', ev.type === 'focus');\n        });\n\n        $(window).on(\"resize\", function (ev) {\n            self.set({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n            self.trigger('update_layout', {size_changed: true});\n        });\n\n        window.document.body.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n\n        window.document.body.ondrop = (ev) => {\n            ev.preventDefault();\n        };\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.set('all_msg_counter', 0);\n    this.on(\"change:all_msg_counter\", this.onChangedAllMessageCounter, this);\n    this.on(\"change:focused\", this.onChangedFocusState, this);\n    this.set({\n        focused: window.document.hasFocus(),\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    this.registerDOMEvents();\n    Materialize.modalSettings = this.modal_settings;\n\n    this.drag_manager = new this.DragManager();\n\n    this.body = new this.Body({model: this});\n\n    this.login_page = this.body.addChild('login', this.NodeView, {\n        classlist: 'login-page-wrap', el: $(document).find('.login-container')[0]});\n\n    this.toolbar_view = this.body.addChild('toolbar', this.ToolbarView);\n    this.settings.appearance.color && this.toolbar_view.updateColor(this.settings.appearance.color);\n\n    this.blur_overlay = this.body.addChild('blur_overlay', this.NodeView, {\n        classlist: 'blur-overlay'});\n\n    this.main_panel = this.body.addChild('main', this.NodeView, {\n        classlist: 'main-wrap'});\n    this.body.updateBlur(this.settings.appearance.blur);\n    this.left_panel = this.main_panel.addChild(\n        'left', this.NodeView, {classlist: 'panel-wrap left-panel-wrap'});\n    this.right_panel = this.main_panel.addChild(\n        'right', this.NodeView, {classlist: 'panel-wrap right-panel-wrap'});\n    this.right_contact_panel = this.main_panel.addChild(\n        'right_contact', this.NodeView, {classlist: 'panel-wrap right-contact-panel-wrap'});\n    this.wide_panel = this.main_panel.addChild(\n        'wide', this.NodeView, {classlist: 'panel-wrap wide-panel-wrap'});\n    this.placeholders_wrap = this.main_panel.addChild('placeholders', this.NodeView, {classlist: 'wide-placeholders-wrap'});\n    this.settings_view = this.wide_panel.addChild(\n        'settings', this.SettingsView, {model: this._settings});\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.api_service,\n    utils = env.utils,\n    $ = env.$,\n    _ = env._;\n\n\nxabber.AccountSettings = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    defaults: {\n        timestamp: 0,\n        to_sync: false,\n        synced: false,\n        deleted: false\n    },\n\n    update_timestamp: function () {\n        this.save('timestamp', utils.now());\n    },\n\n    update_settings: function (settings) {\n        this.save(_.extend({timestamp: utils.now()}, settings));\n    },\n\n    request_data: function () {\n        return {\n            jid: this.get('jid'),\n            timestamp: this.get('timestamp'),\n            settings: _.omit(this.attributes, [\n                'jid', 'timestamp', 'order',\n                'to_sync', 'synced', 'deleted'\n            ])\n        };\n    }\n});\n\nxabber.AccountSettingsList = Backbone.CollectionWithStorage.extend({\n    model: xabber.AccountSettings,\n\n    create_from_server: function (settings_item) {\n        let settings = this.create(_.extend({\n            jid: settings_item.jid,\n            timestamp: settings_item.timestamp,\n            to_sync: true,\n            synced: true\n        }, settings_item.settings));\n        this.trigger('add_settings', settings);\n        return settings;\n    }\n});\n\nxabber.AccountsOrderTimestamp = Backbone.ModelWithStorage.extend({\n    defaults: {\n        timestamp: 0\n    }\n});\n\nxabber.APIAccount = Backbone.ModelWithStorage.extend({\n    defaults: {\n        token: null,\n        sync_all: true\n    },\n\n    _initialize: function (_attrs, options) {\n        this.list = options.settings_list;\n        this.save({connected: false, sync_request: 'silent'});\n        this.on(\"change:connected\", function () {\n            if (this.get('connected')) {\n                this.fcm_subscribe();\n            } else {\n                this.fcm_unsubscribe();\n            }\n        }, this);\n        this.on(\"change:token\", function () {\n            if (this.get('token') !== null) {\n                this.save({sync_all: true,\n                           sync_request: this.list.length ? 'window' : 'silent'});\n            }\n        }, this);\n        this.list.on(\"change:to_sync\", function (item) {\n            if (this.get('sync_all') && !item.get('to_sync')) {\n                this.save('sync_all', false);\n            }\n        }, this);\n        xabber.on(\"push_message\", function (message) {\n            if (this.get('connected') &&\n                    message.username === this.get('username') &&\n                    message.from_token !== this.get('token') &&\n                    message.action === 'settings_updated') {\n                this.synchronize_main_settings();\n                this.synchronize_order_settings();\n            }\n            if (this.get('connected') &&\n                message.username === this.get('username') &&\n                message.from_token !== this.get('token') &&\n                message.action === 'account_updated') {\n                this.get_settings();\n            }\n        }, this);\n\n        this.ready = new $.Deferred();\n        if (xabber.url_params.social_auth) {\n            let social_auth = xabber.url_params.social_auth;\n            delete xabber.url_params.social_auth;\n            try {\n                let data = JSON.parse(atob(social_auth));\n                this.save('token', null);\n                this.social_login(data);\n                return;\n            } catch (e) {}\n        }\n        if (xabber.url_params.token) {\n            this.save('token', xabber.url_params.token);\n            delete xabber.url_params.token;\n        }\n        if (this.get('token')) {\n            this.login_by_token();\n        } else {\n            this.ready.resolve();\n        }\n    },\n\n    _call_method: function (method, url, data, callback, errback) {\n        let request = {\n            type: method,\n            url: constants.API_SERVICE_URL + url,\n            headers: {\"Authorization\": \"Token \" + this.get('token')},\n            context: this,\n            contentType: \"application/json\",\n            dataType: 'json',\n            success: (data, textStatus, jqXHR) => {\n                callback && callback(data);\n            },\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (data) {\n            request.data = JSON.stringify(data);\n        }\n        $.ajax(request);\n    },\n\n    add_source: function (data) {\n        return _.extend({\n            source: `${constants.CLIENT_NAME} ${xabber.get('version_number')}`\n        }, data);\n    },\n\n    get_settings: function () {\n        if (this.get('token') !== null) {\n            this._call_method('GET', '/accounts/current/', null,\n                (data) => {\n                    if (data.account_status === 'registered') {\n                        this.onUserData(data);\n                        this._call_method('GET', '/accounts/current/client-settings/', null,\n                            this.onSettings.bind(this),\n                            this.onSettingsFailed.bind(this)\n                        );\n                    } else {\n                        utils.dialogs.error(xabber.getString(\"xabber_account__sync__error_no_permission_to_sync\"));\n                        this.save({token: null, connected: false});\n                        this.trigger('settings_result', null);\n                    }\n                },\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    delete_settings: function (jid) {\n        if (this.get('connected')) {\n            this._call_method('DELETE', '/accounts/current/client-settings/', {jid: jid},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_main_settings: function () {\n        if (this.get('connected')) {\n            let data = _.map(this.list.where({to_sync: true}), function (settings) {\n                return settings.request_data();\n            });\n            if (data.length) {\n                this._call_method('PATCH', '/accounts/current/client-settings/',\n                    {settings_data: data},\n                    this.onSettings.bind(this),\n                    this.onSettingsFailed.bind(this)\n                );\n            } else {\n                this.get_settings();\n            }\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    synchronize_order_settings: function () {\n        if (this.get('connected') && this.get('sync_all')) {\n            let timestamp = this.list.order_timestamp.get('timestamp');\n            let data = this.list.map(function (settings) {\n                return {jid: settings.get('jid'), order: settings.get('order')};\n            });\n            this._call_method('PATCH', '/accounts/current/client-settings/',\n                {order_data: {settings: data, timestamp: timestamp}},\n                this.onSettings.bind(this),\n                this.onSettingsFailed.bind(this)\n            );\n        } else {\n            this.trigger('settings_result', null);\n        }\n    },\n\n    fetch_from_server: function (data) {\n        let deleted_list = data.deleted,\n            settings_list = data.settings_data,\n            order_timestamp = data.order_data.timestamp,\n            order_list = data.order_data.settings,\n            list = this.list,\n            sync_all = this.get('sync_all');\n        _.each(deleted_list, (item) => {\n            let settings = list.get(item.jid);\n            if (settings && settings.get('to_sync') &&\n                    settings.get('timestamp') <= item.timestamp) {\n                settings.trigger('delete_account', true);\n            }\n        });\n        _.each(settings_list, function (settings_item) {\n            let settings = list.get(settings_item.jid);\n            if (settings) {\n                if (settings.get('to_sync')) {\n                    settings.save(_.extend({\n                        timestamp: settings_item.timestamp,\n                        deleted: false,\n                        synced: true\n                    }, settings_item.settings));\n                } else {\n                    settings.save('synced', settings_item.timestamp >= settings.get('timestamp'));\n                }\n            }\n            if (!settings && sync_all) {\n                settings = list.create_from_server(settings_item);\n            }\n        });\n        if (sync_all) {\n            let order_map = {}, max_order = 1;\n            _.each(order_list, function (order_item) {\n                order_map[order_item.jid] = order_item.order;\n                if (order_item.order > max_order) {\n                    max_order = order_item.order;\n                }\n            });\n            list.order_timestamp.save('timestamp', order_timestamp);\n            list.each((settings) => {\n                let jid = settings.get('jid'),\n                    order = order_map[jid];\n                if (!order) {\n                    max_order += 1;\n                    order = max_order;\n                }\n                settings.save('order', order);\n            });\n        }\n        this.trigger('settings_result', data);\n        this.save('last_sync', utils.now());\n    },\n\n    onAPIError: function (jqXHR, errback) {\n        let status = jqXHR.status,\n            response = jqXHR.responseJSON;\n        if (status === 403) {\n            this.save({connected: false, token: null});\n            if (response.detail === 'Invalid token') {\n                if (response.reason === 'not_found') {\n                    // TODO remove only Xabber-related XMPP accounts\n                } else if (response.reason === 'revoked') {\n                    _.each(this.list.where({to_sync: true}), function (settings) {\n                        settings.trigger('delete_account', true);\n                    });\n                } else if (response.reason === 'expired'){\n                    utils.dialogs.common(xabber.getString(\"xabber_account__login__dialog_error__header\"), xabber.getString(\"xabber_account__login__dialog_error__text\"),\n                        {ok_button: {text: xabber.getString(\"yes\")}, cancel_button: {text: xabber.getString(\"dialog_version_update__option_not_now\")}}\n                    ).done((result) => {\n                        result && this.trigger('relogin');\n                    });\n                }\n            }\n        }\n        errback && errback(response, status);\n    },\n\n    _login: function (credentials, callback, errback) {\n        let request = {\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/login/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source()),\n            success: callback,\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, errback);\n            }\n        };\n        if (credentials.token) {\n            request.headers = {\"Authorization\": \"Token \" + credentials.token};\n        } else {\n            let username = credentials.username,\n                password = credentials.password;\n            request.headers = {\"Authorization\": \"Basic \" + utils.utoa(username+':'+password)};\n        }\n        $.ajax(request);\n    },\n\n    login: function (username, password) {\n        this._login({username: username, password: password}, this.onLogin.bind(this),\n                this.onLoginFailed.bind(this));\n    },\n\n    login_by_token: function () {\n        this._login({token: this.get('token')}, this.onLoginByToken.bind(this),\n                this.onLoginByTokenFailed.bind(this));\n    },\n\n    social_login: function (credentials) {\n        $.ajax({\n            type: 'POST',\n            url: constants.API_SERVICE_URL + '/accounts/social_auth/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify(this.add_source(credentials)),\n            success: this.onSocialLogin.bind(this),\n            error: (jqXHR, textStatus, errorThrown) => {\n                this.onAPIError(jqXHR, this.onSocialLoginFailed.bind(this));\n            }\n        });\n    },\n\n    revoke_token: function () {\n        let token = this.get('token');\n        if (token !== null) {\n            this._call_method('delete', '/accounts/current/tokens/', {token: token});\n        }\n        this.save({connected: false, token: null});\n        this.storage.clear();\n    },\n\n    onLoginByToken: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true, sync_request: 'silent'});\n        this.get_settings();\n        this.ready.resolve();\n    },\n\n    onLoginByTokenFailed: function (response, status) {\n        this.save('connected', false);\n        this.ready.resolve();\n    },\n\n    onLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        this.get_settings();\n    },\n\n    onLoginFailed: function (response, status) {\n        this.save('connected', false);\n        this.trigger('login_failed', response);\n    },\n\n    onSocialLogin: function (data, textStatus, request) {\n        this.save({token: data.token, connected: true});\n        xabber.body.setScreen('settings');\n        this.ready.resolve();\n    },\n\n    onSocialLoginFailed: function (response, status) {\n        this.save('connected', false);\n        xabber.body.setScreen('settings');\n        utils.dialogs.error(xabber.getString(\"xabber_account__login__error_auth_failed\"));\n        this.ready.resolve();\n    },\n\n    onUserData: function (data) {\n        let name, xmpp_binding_jid;\n        if (data.first_name && data.last_name) {\n            name = data.first_name + ' ' + data.last_name;\n        } else {\n            name = data.username;\n        }\n        if (data.xmpp_binding) {\n            xmpp_binding_jid = data.xmpp_binding.jid;\n        }\n        this.save({username: data.full_id, name: name, linked_email_list: data.email_list, linked_social: data.social_bindings, xmpp_binding: xmpp_binding_jid });\n    },\n\n    onSettings: function (data) {\n        let sync_request = this.get('sync_request');\n        this.save('sync_request', undefined);\n        if (sync_request === 'window') {\n            if (!xabber.sync_settings_view)\n                xabber.sync_settings_view = new xabber.SyncSettingsView({model: this});\n            this.trigger('open_sync_window', data);\n        } else {\n            this.fetch_from_server(data);\n        }\n    },\n\n    onSettingsFailed: function (response, status) {\n        this.trigger('settings_result', null);\n    },\n\n    logout: function () {\n        utils.dialogs.ask(xabber.getString(\"button_quit\"), xabber.getString(\"logout_summary\"),\n                          [{name: 'delete_accounts', checked: true,\n                            text: xabber.getString(\"xabber_account__dialog_logout__option_delete_accounts\")}], { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (res) {\n                if (xabber.accounts.connected.length > 0)\n                    _.each(xabber.accounts.connected, (account) => {\n                        account.set('auto_login_xa', false);\n                        account.save('auto_login_xa', false);\n                    });\n                this.revoke_token();\n                if (res.delete_accounts) {\n                    _.each(this.list.where({to_sync: true}), (settings) => {\n                        settings.trigger('delete_account', true);\n                    });\n                }\n            }\n        });\n    },\n\n    start: function () {\n        if (!this.get('connected')) {\n            this.fcm_unsubscribe();\n        }\n        this.get_settings();\n    },\n\n    fcm_subscribe: function () {\n        this._call_method('post', '/fcm/subscription/', {endpoint_key: xabber.cache.endpoint_key});\n    },\n\n    fcm_unsubscribe: function () {\n        $.ajax({\n            type: 'DELETE',\n            url: constants.API_SERVICE_URL + '/fcm/subscription/',\n            contentType: \"application/json\",\n            dataType: 'json',\n            data: JSON.stringify({endpoint_key: xabber.cache.endpoint_key})\n        });\n    }\n});\n\nxabber.APIAccountAuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$username_input = this.$('input[name=username]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.onChangeAuthenticationState, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$username_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let username = this.$username_input.val(),\n            password = this.$password_input.val();\n        if (!username) {\n            return this.errorFeedback({username: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        username = username.trim();\n        if (!password)  {\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n        this.model.login(username, password);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n    },\n\n    authFeedback: function (options) {\n        this.$username_input.switchClass('invalid', options.username)\n            .siblings('span.errors').text(options.username || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').switchClass('disabled', authentication);\n    },\n\n    onChangeAuthenticationState: function () {\n        this.updateButtons();\n        if (this.data.get('authentication')) {\n            this.model.on(\"change:connected\", this.onChangeConnected, this);\n            this.model.on(\"login_failed\", this.onLoginFailed, this);\n        } else {\n            this.model.off(\"change:connected\", this.onChangeConnected, this);\n            this.model.off(\"login_failed\", this.onLoginFailed, this);\n        }\n    },\n\n    onChangeConnected: function () {\n        if (this.model.get('connected')) {\n            this.successFeedback();\n        }\n    },\n\n    onLoginFailed: function (response) {\n        this.errorFeedback({password: (response && response.detail) || xabber.getString(\"connection__error__text_authentication_failed_short\")});\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email') {\n            this.closeModal();\n            xabber.email_auth_view.show();\n            // return;\n        }\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\n  xabber.XabberLoginByEmailPanel = xabber.APIAccountAuthView.extend({\n      className: 'login-panel add-xabber-account-panel',\n      template: templates.xabber_login_by_email,\n\n      events: {\n          \"click .btn-cancel\": \"close\",\n          \"click .btn-log-in\": \"submit\",\n          \"keyup input[name=password]\": \"keyUp\"\n      },\n\n      render: function () {\n          this.$el.openModal({\n              opacity: 0.9,\n              ready: this.onRender.bind(this),\n              complete: this.close.bind(this)\n          });\n      },\n\n      successFeedback: function () {\n          this.authFeedback({});\n          this.data.set('authentication', false);\n          this.close();\n      },\n\n      onRender: function () {\n          Materialize.updateTextFields();\n          this.$username_input.val('').focus();\n          this.$password_input.val('');\n      },\n\n      close: function (auth) {\n          this.$el.closeModal({ complete: this.hide.bind(this) });\n      }\n  });\n\nxabber.XabberLoginPanel = xabber.APIAccountAuthView.extend({\n    className: 'login-panel',\n    template: templates.xabber_login,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"submit\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-escape\": \"openXmppLoginPanel\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats');\n    },\n\n    changeLoginType: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    },\n\n    openXmppLoginPanel: function () {\n        xabber.body.setScreen('login', {'login_screen': 'xmpp'});\n    }\n});\n\nxabber.AddAPIAccountView = xabber.APIAccountAuthView.extend({\n    className: 'login-panel add-xabber-account-panel',\n    template: templates.add_xabber_account,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-add\": \"loginXabberAccount\",\n        \"keyup input[name=password]\": \"keyUp\",\n        \"click .btn-social\": \"socialAuth\",\n        \"click .btn-cancel\": \"closeModal\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            opacity: 0.9,\n            ready: () => {\n                this.onRender.bind(this);\n                this.$('.account-field .dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left',\n                });\n            },\n            complete: this.closeModal.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(env.templates.contacts.add_contact_account_item({jid: account.get('jid')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n        this.loginXabberAccount(account);\n    },\n\n    loginXabberAccount: function (account) {\n        account.set('auto_login_xa', true);\n        account.authXabberAccount();\n        this.closeModal();\n    },\n\n    successFeedback: function () {\n        this.authFeedback({});\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SyncSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal sync-settings-modal noselect',\n    template: templates.sync_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .btn-sync\": \"syncSettings\",\n        \"click .btn-cancel\": \"close\",\n        \"change .sync-all\": \"changeSyncAll\",\n        \"change .sync-one\": \"changeSyncOne\",\n        \"click .sync-icon\": \"changeSyncWay\"\n    },\n\n    _initialize: function () {\n        this.settings = null;\n        this.to_sync_map = null;\n        this.model.on(\"open_sync_window\", this.render, this);\n    },\n\n    render: function (data, options) {\n        this.settings = data;\n        this.sync_all = this.model.get('sync_all');\n        this.accounts = [];\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.$('.accounts-wrap').empty();\n        let list = this.model.list,\n            accounts_map = {},\n            deleted_map = {},\n            settings_map = {},\n            order_map = {};\n        _.each(this.settings.settings_data, function (settings_item) {\n            settings_map[settings_item.jid] = settings_item;\n        });\n        this.settings_map = settings_map;\n        _.each(this.settings.order_data.settings, function (order_item) {\n            order_map[order_item.jid] = order_item.order;\n        });\n        _.each(this.settings.deleted, function (deleted_item) {\n            deleted_map[deleted_item.jid] = deleted_item.timestamp;\n        });\n\n        // Make synchronization list\n        _.each(settings_map, (obj, jid) => {\n            // pick accounts that are present on server only\n            if (!list.get(jid)) {\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: this.sync_all,\n                    sync_way: 'from_server'\n                }, obj);\n            }\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid'),\n                obj = settings_map[jid],\n                sync_way;\n            if (_.has(deleted_map, jid)) {\n                // pick local but deleted from server accounts\n                sync_way = deleted_map[jid] >= settings.get('timestamp') ? 'delete' : 'to_server';\n                accounts_map[jid] = _.extend({\n                    sync_way: sync_way,\n                    sync_choose: ['delete', 'to_server']\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            } else if (obj) {\n                // pick accounts that are present on both server and client\n                if (obj.timestamp > settings.get('timestamp')) {\n                    sync_way = 'from_server';\n                } else if (obj.timestamp < settings.get('timestamp')) {\n                    sync_way = 'to_server';\n                } else {\n                    sync_way = 'no';\n                }\n                accounts_map[jid] = _.extend({\n                    jid: jid,\n                    to_sync: settings.get('to_sync'),\n                    sync_way: sync_way,\n                    sync_choose: sync_way !== 'no' ? ['from_server', 'to_server'] : false\n                }, obj.settings);\n                settings.save('synced', sync_way === 'no');\n            } else {\n                // pick local accounts\n                accounts_map[jid] = _.extend({\n                    sync_way: 'to_server'\n                }, _.omit(settings.attributes, ['order']));\n                settings.save('synced', false);\n            }\n        });\n\n        // fetch server order of accounts and merge it with local order\n        let max_order = _.max(order_map) || 0;\n        _.each(order_map, (order, jid) => {\n            accounts_map[jid].order = order;\n        });\n        list.each((settings) => {\n            let jid = settings.get('jid');\n            if (!accounts_map[jid].order) {\n                accounts_map[jid].order = (++max_order);\n            }\n        });\n\n        this.accounts_map = accounts_map;\n        this.accounts = _.map(accounts_map, function (value, key) { return value; });\n        // sort merged list by new order value\n        this.accounts.sort(function (acc1, acc2) {\n            return acc1.order - acc2.order;\n        });\n        _.each(this.accounts, this.addAccountHtml.bind(this));\n        this.updateSyncOptions();\n    },\n\n    addAccountHtml: function (settings) {\n        let jid = settings.jid;\n        let $account_el = $(templates.sync_settings_account_item({\n            jid: jid,\n            view: this\n        }));\n        this.$('.accounts-wrap').append($account_el);\n    },\n\n    updateAccountHtml: function (account_wrap) {\n        let $account_wrap = $(account_wrap),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        this.sync_all && (account_item.to_sync = true);\n        $account_wrap.switchClass('sync', account_item.to_sync);\n        $account_wrap.find('.sync-one').prop('checked', account_item.to_sync);\n        let sync_way;\n        if (account_item.to_sync) {\n            sync_way = account_item.sync_way;\n        } else if (this.model.list.get(jid)) {\n            sync_way = 'off_local';\n        } else {\n            sync_way = 'off_remote';\n        }\n        let mdiclass = constants.SYNC_WAY_DATA[sync_way].icon,\n            $sync_icon = $account_wrap.find('.sync-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n        $account_wrap.find('.sync-tip').text(xabber.getString(constants.SYNC_WAY_DATA[sync_way].tip));\n    },\n\n    updateSyncOptions: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all,\n            accounts_map = this.accounts_map;\n        this.$('.sync-all').prop('checked', sync_all ? 'checked' : '');\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        this.$('.account-wrap').each((idx, el) => {\n            this.updateAccountHtml(el);\n        });\n    },\n\n    changeSyncAll: function (ev) {\n        let $target = $(ev.target),\n            sync_all = $target.prop('checked');\n        this.sync_all = sync_all;\n        this.$('.sync-one').prop('disabled', sync_all ? 'disabled' : '');\n        if (sync_all) {\n            _.each(this.accounts, (account_item) => {\n                account_item.to_sync = true;\n            });\n            this.$('.account-wrap').each((idx, el) => {\n                this.updateAccountHtml(el);\n            });\n        }\n    },\n\n    changeSyncOne: function (ev) {\n        let $target = $(ev.target),\n            value = $target.prop('checked'),\n            $account_wrap = $target.closest('.account-wrap'),\n            jid = $account_wrap.data('jid');\n        this.accounts_map[jid].to_sync = value;\n        this.updateAccountHtml($account_wrap);\n    },\n\n    changeSyncWay: function (ev) {\n        let $account_wrap = $(ev.target).closest('.account-wrap'),\n            jid = $account_wrap.data('jid'),\n            account_item = this.accounts_map[jid];\n        if (!account_item.to_sync || !account_item.sync_choose) {\n            return;\n        }\n        let sync_choose = account_item.sync_choose,\n            idx = sync_choose.indexOf(account_item.sync_way) + 1;\n        if (idx === sync_choose.length) {\n            idx = 0;\n        }\n        account_item.sync_way = sync_choose[idx];\n        this.updateAccountHtml($account_wrap);\n    },\n\n    syncSettings: function () {\n        let list = this.model.list,\n            sync_all = this.sync_all;\n        this.model.save('sync_all', this.sync_all);\n        _.each(this.accounts, function (account_item) {\n            let jid = account_item.jid,\n                settings = list.get(jid);\n            if (settings) {\n                settings.save('to_sync', account_item.to_sync);\n                if (sync_all) {\n                    settings.save('order', account_item.order);\n                }\n                let sync_way = account_item.sync_way;\n                if (sync_way === 'to_server') {\n                    settings.update_timestamp();\n                } else if (sync_way === 'from_server' || sync_way === 'delete') {\n                    settings.save('timestamp', 0);\n                }\n            }\n            if (!settings && account_item.to_sync) {\n                settings = list.create_from_server(\n                    _.omit(account_item, ['sync_way', 'sync_choose']));\n            }\n        });\n        this.model.synchronize_main_settings();\n        this.do_sync = true;\n        this.close();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n        if (xabber.body.isScreen('blank')) {\n            xabber.body.setScreen('all-chats');\n        }\n    },\n\n    close: function () {\n        if (!this.do_sync) {\n            this.model.trigger('settings_result', null);\n        }\n        this.do_sync = null;\n        this.settings = null;\n        this.settings_map = null;\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.APIAccountView = xabber.BasicView.extend({\n    className: 'setting xabber-account',\n    template: templates.xabber_account,\n    avatar_size: constants.AVATAR_SIZES.XABBER_ACCOUNT,\n\n    events: {\n        \"click .account-info-wrap\": \"openAccount\",\n        \"click .btn-login\": \"login\",\n        \"click .btn-logout\": \"logout\",\n        \"click .btn-set-password\": \"setPassword\",\n        \"click .btn-sync-settings\": \"synchronize\",\n        \"click .social-linked-header\": \"changeExpanded\",\n        \"click .btn-unlink\": \"unlinkSocial\",\n        \"click .btn-link\": \"linkSocial\",\n        \"click .btn-verify-email\": \"verifyEmail\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-block-wrap.xabber-account'));\n        this.$tab = this.parent.$('.xabber-account-tab');\n        this.updateForConnectedStatus();\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n        this.model.on(\"change:username\", this.updateName, this);\n        this.model.on(\"change:name\", this.updateAvatar, this);\n        this.model.on(\"change:connected\", this.updateForConnectedStatus, this);\n        this.model.on(\"change:last_sync\", this.updateLastSyncInfo, this);\n        this.model.on(\"change:linked_email_list\", this.updateSocialBindings, this);\n        this.model.on(\"change:linked_social\", this.updateSocialBindings, this);\n        this.model.on(\"relogin\", this.login, this);\n        this.data.on(\"change:sync\", this.updateSyncButton, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', false);\n    },\n\n    render: function () {\n        this.data.set('sync', false);\n        this.$('span.errors ').html(\"\");\n        this.updateLastSyncInfo();\n        this.updateSocialBindings();\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n    },\n\n    changeExpanded: function () {\n        this.data.set('expanded', (this.data.get('expanded')) ? false : true);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.social-linked-wrap').showIf(expanded);\n    },\n\n    updateSocialBindings: function () {\n        let linked_emails = this.model.get('linked_email_list'),\n            linked_social = this.model.get('linked_social');\n        this.$('.email-linked').remove();\n        this.$('.social-account').each(function (idx, item) {\n            let $social_item = $(item);\n            $social_item.addClass('not-linked');\n            $social_item.find('.synced-info').text(xabber.getString(\"title_not_linked_account\"));\n            $social_item.find('.btn-link').text(xabber.getString(\"action_connect\")).removeClass('btn-unlink');\n        });\n        _.each(linked_emails, (email) => {\n            let email_id = email.id,\n                email_address = email.email,\n                is_verified = email.verified,\n                email_item_html = $(templates.linked_email_item({email_id: email_id, email: email_address, verified: is_verified, color: this.default_color}));\n            email_item_html.insertBefore(this.$('#email.not-linked'));\n        });\n        _.each(linked_social, (social) => {\n            let social_provider = social.provider,\n                social_name = social.first_name + \" \" + social.last_name;\n            this.$('.'+ social_provider + '-linked').removeClass('not-linked');\n            this.$('.' + social_provider + '-linked .btn-link').text(xabber.getString(\"action_disconnect\")).addClass('btn-unlink');\n            this.$('.'+ social_provider + '-linked .synced-info').html($(`<div class=\"name one-line\">${social_name}</div><div class=\"verified-status one-line\">${xabber.getString(\"title_linked_account\", [social_provider])}</div>`));\n        });\n    },\n\n    linkSocial: function (ev) {\n        if ((this.model.get('token'))&&(!$(ev.target).hasClass('btn-unlink'))) {\n            let social_elem = $(ev.target).closest('.social-linked-item-wrap'),\n                provider = social_elem.attr('id');\n            if (provider === 'email') {\n                utils.dialogs.ask_enter_value(xabber.getString(\"xabber_account__dialog_add_email__header\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_add_email__hint_enter_email\")}, { ok_button_text: xabber.getString(\"action_connect\")}).done((mail) => {\n                    if (mail) {\n                        this.model._call_method('POST', '/accounts/current/email_list/', {email: mail},\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list');\n                                email_list.push(mail_data);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            },\n                            (jqXHR, textStatus, errorThrown) => {\n                                this.$('span.errors ').text(jqXHR.email[0]);\n                            });\n                    }\n                });\n            }\n            else {\n                this.openAccount();\n            }\n        }\n    },\n\n    verifyEmail: function (ev) {\n        let $target = $(ev.target),\n            $email_html = $target.closest('.social-linked-item-wrap'),\n            email_address = $email_html.data('email');\n        utils.dialogs.ask_enter_value(xabber.getString(\"title_email_confirm\"), null, {input_placeholder_value: xabber.getString(\"xabber_account__dialog_confirm_email__hint_enter_code\")}, { ok_button_text: xabber.getString(\"button_confirm\"), resend_button_text: xabber.getString(\"button_resend_link\"), resend_to: email_address}).done((code) => {\n            if (code) {\n                if (code === email_address) {\n                    this.model._call_method('POST', '/accounts/current/email_list/', {email: code});\n                }\n                else {\n                    this.model._call_method('POST', '/accounts/email_confirmation/', {code: code},\n                        (mail_data) => {\n                            let email_list = mail_data.email_list;\n                            this.model.set('linked_email_list', email_list);\n                            this.updateSocialBindings();\n                        }, (jqXHR, textStatus, errorThrown) => {\n                            this.$('span.errors').text(jqXHR.code[0]);\n                        });\n                }\n            }\n        });\n    },\n\n    unlinkSocial: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.hasClass('btn-verify-email')) {\n            let $social_html = $target.closest('.social-linked-item-wrap');\n            let provider = $social_html.attr('id'),\n                is_email = $social_html.data('email');\n            if (is_email) {\n                let email_address = $social_html.data('email');\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_email__header\"), xabber.getString(\"title_delete_email\"), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('DELETE', '/accounts/current/email_list/' + $social_html.data('id') + '/', null,\n                            (mail_data) => {\n                                let email_list = this.model.get('linked_email_list'),\n                                    deleted_mail_index = email_list.indexOf(email_list.find(email => email.id === $social_html.data('id')));\n                                email_list.splice(deleted_mail_index, 1);\n                                this.model.set('linked_email_list', email_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n            else if (provider !== 'email') {\n                utils.dialogs.ask(xabber.getString(\"xabber_account__dialog_unlink_social__header\"), xabber.getString(\"title_delete_social\", [provider]), null, {ok_button_text: xabber.getString(\"action_disconnect\")}).done((result) => {\n                    if (result) {\n                        this.model._call_method('POST', '/accounts/current/social_unbind/', {provider: provider},\n                            () => {\n                                let social_list = this.model.get('linked_social'),\n                                    deleted_social_index = social_list.indexOf(social_list.find(social => social.provider === provider));\n                                social_list.splice(deleted_social_index, 1);\n                                this.model.set('linked_social', social_list);\n                                this.updateSocialBindings();\n                            }, (jqXHR, textStatus, errorThrown) => {\n                                this.model.get_settings();\n                            });\n                    }\n                });\n            }\n        }\n    },\n\n    updateName: function () {\n        this.$('.account-info-wrap .name').text(this.model.get('username'));\n        this.default_color = utils.images.getDefaultColor(this.model.get('username'));\n    },\n\n    updateAvatar: function () {\n        let name = this.model.get('name'),\n            image = this.model.get('image') || utils.images.getDefaultAvatar(name);\n        this.$('.circle-avatar').setAvatar(utils.images.getCachedImage(image), this.avatar_size);\n    },\n\n    updateForConnectedStatus: function () {\n        let connected = this.model.get('connected');\n        this.$tab.switchClass('online', connected)\n                 .switchClass('offline', !connected);\n        this.$('.linked-social-accounts-and-emails').showIf(connected);\n        this.$('.account-info-wrap').showIf(connected);\n        this.$('.sync-wrap').showIf(connected);\n        if (connected) {\n            this.updateName();\n            this.updateAvatar();\n            this.updateSyncButton();\n            this.updateLastSyncInfo();\n        }\n        this.$('.btn-login').hideIf(connected);\n        this.$('.btn-more').showIf(connected);\n    },\n\n    updateSyncButton: function () {\n        let sync = this.data.get('sync');\n        this.$('.btn-sync .button').hideIf(sync);\n        this.$('.btn-sync .preloader-wrapper').showIf(sync);\n    },\n\n    updateLastSyncInfo: function () {\n        let last_sync = this.model.get('last_sync');\n        if (last_sync) {\n            let time_delta = utils.now() - last_sync;\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__text\", [env.moment(env.moment.now() - 1000*time_delta).fromNow()]));\n        } else {\n            this.$('.last-sync-info').text(xabber.getString(\"xabber_account__last_sync__not_synced\"));\n        }\n    },\n\n    synchronize: function () {\n        if (!this.data.get('sync')) {\n            this.data.set('sync', true);\n            this.model.once(\"settings_result\", function () {\n                this.data.set('sync', false);\n            }, this);\n            this.model.save('sync_request', 'window');\n            this.model.get_settings();\n        }\n    },\n\n    login: function () {\n        if (xabber.add_api_account_view && xabber.accounts.connected.length > 1)\n            xabber.add_api_account_view.show();\n        else {\n            let account = xabber.accounts.connected[0];\n            if (account) {\n                account.set('auto_login_xa', true);\n                account.authXabberAccount();\n            }\n        }\n    },\n\n    logout: function () {\n        this.model.logout();\n    },\n\n    onPasswordResetFailed: function () {\n        utils.dialogs.error(xabber.getString(\"password_reset_need_email\"));\n    },\n\n    setPassword: function () {\n        let email_list = this.model.get('linked_email_list');\n        if (email_list) {\n            let verified_email = email_list.find(mail => mail.verified === true);\n            if (email_list.indexOf(verified_email) != -1) {\n                $.ajax({\n                    type: 'POST',\n                    url: constants.API_SERVICE_URL + '/accounts/password_reset_request/',\n                    contentType: \"application/json\",\n                    dataType: 'json',\n                    data: JSON.stringify({email: verified_email.email}),\n                    success: () => {\n                        utils.dialogs.notify(xabber.getString(\"button_reset_pass\"), xabber.getString(\"password_reset_success\", [verified_email.email]));\n                    },\n                    error: this.onPasswordResetFailed.bind(this)\n                });\n            }\n            else\n                this.onPasswordResetFailed();\n        }\n        else\n            this.onPasswordResetFailed();\n    },\n\n    openAccount: function () {\n        utils.openWindow(constants.XABBER_ACCOUNT_URL + '/?token=' + this.model.get('token'));\n    }\n});\n\n\nxabber.once(\"start\", function () {\n        this.account_settings_list = new this.AccountSettingsList(null, {\n            storage_name: this.getStorageName() + '-account-settings'\n        });\n        this.account_settings_list.fetch();\n        this.account_settings_list.order_timestamp = new this.AccountsOrderTimestamp(\n            {id: 'accounts-order-timestamp'},\n            {storage_name: this.getStorageName(), fetch: 'after'}\n        );\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.api_account = new this.APIAccount({id: 'api-account'},\n            {\n                storage_name: this.getStorageName(), fetch: 'before',\n                settings_list: this.account_settings_list\n            });\n    }\n\n        this.xabber_login_panel = xabber.login_page.addChild(\n            'xabber_login', this.XabberLoginPanel, {model: this.api_account});\n\n    if (constants.ENABLE_XABBER_ACCOUNT) {\n        this.settings_view.addChild('api-account', this.APIAccountView,\n            {model: this.api_account});\n\n        this.add_api_account_view = new this.AddAPIAccountView({model: this.api_account});\n        this.email_auth_view = new xabber.XabberLoginByEmailPanel({\n            parent: this.add_api_account_view,\n            model: this.api_account\n        });\n    }\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    _ = env._,\n    uuid = env.uuid,\n    $iq = env.$iq,\n    utils = env.utils,\n    Strophe = env.Strophe,\n    constants = env.constants;\n\nStrophe.log = function (log_level, msg) {\n    let do_log = (constants.LOG_LEVEL === constants.LOG_LEVEL_DEBUG) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_WARN &&\n            log_level >= Strophe.LogLevel.WARN) ||\n        (constants.LOG_LEVEL >= constants.LOG_LEVEL_ERROR &&\n            log_level >= Strophe.LogLevel.ERROR);\n    if (do_log) {\n        console.info('Strophe log: ');\n        console.info(msg);\n    }\n    if (msg && msg.includes('policy-violation') && log_level === Strophe.LogLevel.ERROR)\n        utils.dialogs.error(msg);\n};\n\nStrophe.addConnectionPlugin('register', {\n    _connection: null,\n\n    //The plugin must have the init function.\n    init: function(conn) {\n        this._connection = conn;\n\n        // compute free emun index number\n        let i = 0;\n        Object.keys(Strophe.Status).forEach(function (key) {\n            i = Math.max(i, Strophe.Status[key]);\n        });\n\n        /* extend name space\n         *  NS.REGISTER - In-Band Registration\n         *              from XEP 77.\n         */\n        Strophe.addNamespace('REGISTER', 'jabber:iq:register');\n        Strophe.Status.REGIFAIL        = i + 1;\n        Strophe.Status.REGISTER        = i + 2;\n        Strophe.Status.REGISTERED      = i + 3;\n        Strophe.Status.CONFLICT        = i + 4;\n        Strophe.Status.NOTACCEPTABLE   = i + 5;\n\n        if (conn.disco) {\n            if(conn.disco.addFeature)\n                conn.disco.addFeature(Strophe.NS.REGISTER);\n            if(conn.disco.addNode)\n                conn.disco.addNode(Strophe.NS.REGISTER, {items:[]});\n        }\n\n        // hooking strophe's connection.reset\n        var self = this, reset = conn.reset.bind(conn);\n        conn.reset = function () {\n            reset();\n            self.instructions = \"\";\n            self.fields = {};\n            self.registered = false;\n        };\n\n        // hooking strophe's _connect_cb\n        var connect_cb = conn._connect_cb.bind(conn);\n        conn._connect_cb = function (req, callback, raw) {\n            if (!self._registering) {\n                if (self.processed_features) {\n                    // exchange Input hooks to not print the stream:features twice\n                    var xmlInput = conn.xmlInput;\n                    conn.xmlInput = Strophe.Connection.prototype.xmlInput;\n                    var rawInput = conn.rawInput;\n                    conn.rawInput = Strophe.Connection.prototype.rawInput;\n                    connect_cb(req, callback, raw);\n                    conn.xmlInput = xmlInput;\n                    conn.rawInput = rawInput;\n                    delete self.processed_features;\n                } else {\n                    connect_cb(req, callback, raw);\n                }\n            } else {\n                if(!self._check_user) {\n                    // Save this request in case we want to authenticate later\n                    self._connect_cb_data = {\n                        req: req,\n                        raw: raw\n                    };\n                    if (self._register_cb(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n                }\n                else {\n                    if (self._register_cb_check_user(req, callback, raw)) {\n                        // remember that we already processed stream:features\n                        self.processed_features = true;\n                        delete self._registering;\n                    }\n\n                }\n            }\n        };\n\n        // hooking strophe`s authenticate\n        var auth_old = conn.authenticate.bind(conn);\n        conn.authenticate = function(matched) {\n            if (typeof matched === \"undefined\") {\n                var conn = this._connection;\n\n                if (!this.fields.username || !this.domain || !this.fields.password) {\n                    Strophe.info(\"Register a JID first!\");\n                    return;\n                }\n\n                var jid = this.fields.username + \"@\" + this.domain;\n\n                conn.jid = jid;\n                conn.authzid = Strophe.getBareJidFromJid(conn.jid);\n                conn.authcid = Strophe.getNodeFromJid(conn.jid);\n                conn.pass = this.fields.password;\n\n                var req = this._connect_cb_data.req;\n                var callback = conn.connect_callback;\n                var raw = this._connect_cb_data.raw;\n                conn._connect_cb(req, callback, raw);\n            } else {\n                auth_old(matched);\n            }\n        }.bind(this);\n\n    },\n\n    /** Function: connect\n     *  Starts the registration process.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  Please see XEP 77 for a more detailed explanation of the optional\n     *  parameters below.\n     *\n     *  Parameters:\n     *    (String) domain - The xmpp server's Domain.  This will be the server,\n     *      which will be contacted to register a new JID.\n     *      The server has to provide and allow In-Band Registration (XEP-0077).\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     */\n    connect: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n\n    connect_check_user: function(domain, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(domain);\n        this.instructions = \"\";\n        this.fields = {};\n        this.registered = false;\n\n        this._registering = true;\n        this._check_user = true;\n\n        conn.connect(this.domain, \"\", callback, wait, hold, route);\n    },\n\n    connect_change_password: function(jid, password, callback, wait, hold, route) {\n        var conn = this._connection;\n        this.domain = Strophe.getDomainFromJid(jid);\n        this.instructions = \"\";\n        this.fields = {};\n        conn.registerSASLMechanisms([Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1]);\n\n        conn.connect(jid, password, callback, wait, hold, route);\n    },\n\n    /** PrivateFunction: _register_cb\n     *  _Private_ handler for initial registration request.\n     *\n     *  This handler is used to process the initial registration request\n     *  response from the BOSH server. It is used to set up a bosh session\n     *  and requesting registration fields from host.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     */\n    _register_cb: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n\n        // send a get request for registration, to get all required data fields\n        conn._addSysHandler(this._get_register_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send($iq({type: \"get\", id: uuid(), to: this.domain }).c(\"query\",\n            {xmlns: Strophe.NS.REGISTER}).tree());\n\n        return true;\n    },\n    _register_cb_check_user: function (req, _callback, raw) {\n        var conn = this._connection;\n\n        Strophe.info(\"_register_cb was called\");\n        conn.connected = true;\n\n        var bodyWrap = conn._proto._reqToData(req);\n        if (!bodyWrap) { return; }\n\n        if (conn.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === conn._proto.strip && bodyWrap.childNodes.length) {\n                conn.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                conn.xmlInput(bodyWrap);\n            }\n        }\n        if (conn.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                conn.rawInput(raw);\n            } else {\n                conn.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = conn._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return false;\n        }\n\n        // Check for the stream:features tag\n        var register = bodyWrap.getElementsByTagName(\"register\");\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (register.length === 0 && mechanisms.length === 0) {\n            conn._proto._no_auth_received(_callback);\n            return false;\n        }\n\n        if (register.length === 0) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, null);\n            return true;\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n\n        return true;\n    },\n\n    /** PrivateFunction: _get_register_cb\n     *  _Private_ handler for Registration Fields Request.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove SHOULD contain the registration information currentlSHOULD contain the registration information currentlSHOULD contain the registration information currentlthe handler.\n     */\n    _get_register_cb: function (stanza) {\n        var i, query, field, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        // get required fields\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                // this is a special element\n                // it provides info about given data fields in a textual way.\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                // ignore x for now\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        conn._changeConnectStatus(Strophe.Status.REGISTER, null);\n        return false;\n    },\n\n    /** Function: submit\n     *  Submits Registration data.\n     *\n     *  As the registration process proceeds, the user supplied callback will\n     *  be triggered with status code Strophe.Status.REGISTER. At this point\n     *  the user should fill all required fields in connection.register.fields\n     *  and invoke this function to procceed in the registration process.\n     */\n    submit: function () {\n        var lang = xabber.settings.language;\n        (lang === 'default') && (lang = xabber.get('default_language'));\n        var i, name, query, fields, conn = this._connection;\n        query = $iq({type: \"set\", 'xml:lang': lang, id: uuid()}).c(\"query\", {xmlns:Strophe.NS.REGISTER});\n\n        // set required fields\n        fields = Object.keys(this.fields);\n        for (i = 0; i < fields.length; i++) {\n            name = fields[i];\n            query.c(name).t(this.fields[name]).up();\n        }\n\n        // providing required information\n        conn._addSysHandler(this._submit_cb.bind(this),\n            null, \"iq\", null, null);\n        conn.send(query);\n    },\n\n    /** PrivateFunction: _submit_cb\n     *  _Private_ handler for submitted registration information.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The query stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _submit_cb: function (stanza) {\n        var i, query, field, error = null, conn = this._connection;\n\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length > 0) {\n            query = query[0];\n            // update fields\n            for (i = 0; i < query.childNodes.length; i++) {\n                field = query.childNodes[i];\n                if (field.tagName.toLowerCase() === 'instructions') {\n                    // this is a special element\n                    // it provides info about given data fields in a textual way\n                    this.instructions = Strophe.getText(field);\n                    continue;\n                }\n                this.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n            }\n        }\n\n        if (stanza.getAttribute(\"type\") === \"error\") {\n            error = stanza.getElementsByTagName(\"error\");\n            let error_text = stanza.getElementsByTagName(\"text\");\n            if (error_text.length > 0)\n                error_text = error_text[0].innerHTML;\n            if (error.length !== 1) {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n                return false;\n            }\n\n            Strophe.info(\"Registration failed.\");\n\n            // this is either 'conflict' or 'not-acceptable'\n            error = error[0].firstChild.tagName.toLowerCase();\n            if (error === 'conflict') {\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, error, error_text);\n            } else if (error === 'not-acceptable') {\n                conn._changeConnectStatus(Strophe.Status.NOTACCEPTABLE, error, error_text);\n            } else {\n                conn._changeConnectStatus(Strophe.Status.REGIFAIL, error, error_text);\n            }\n        } else {\n            Strophe.info(\"Registration successful.\");\n\n            conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n\n        return false;\n    }\n});\n\n\nlet utf16to8 = function (str) {\n    let i, c;\n    let out = \"\";\n    let len = str.length;\n    for (i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n        if ((c >= 0x0000) && (c <= 0x007F)) {\n            out += str.charAt(i);\n        } else if (c > 0x07FF) {\n            out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n            out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        } else {\n            out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n            out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n        }\n    }\n    return out;\n};\n\nStrophe.SASLHOTP = function() {};\nStrophe.SASLHOTP.prototype = new Strophe.SASLMechanism(\"HOTP\", true, 100);\n\nStrophe.SASLHOTP.prototype.test = function (connection) {\n    return true;\n};\n\nStrophe.SASLHOTP.prototype.onChallenge = function (connection) {\n    let auth_str = String.fromCharCode(0) + connection.authcid +\n        String.fromCharCode(0) + connection.hotp_pass;\n    return utf16to8(auth_str);\n};\n\nStrophe.ConnectionManager = function (CONNECTION_URL, options) {\n    options = options || {};\n    this.connection = new Strophe.Connection(CONNECTION_URL, options);\n};\n\nStrophe.ConnectionManager.prototype = {\n    connect: function (auth_type, jid, password, callback) {\n        this.connection.mechanisms = {};\n        this.auth_type = auth_type || 'password';\n        if (this.auth_type === 'password') {\n            this.connection.registerSASLMechanisms([Strophe.SASLAnonymous,\n                Strophe.SASLExternal,\n                Strophe.SASLMD5,\n                Strophe.SASLPlain,\n                Strophe.SASLSHA1]);\n        } else if (this.auth_type === 'x-token') {\n            this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n            delete this.connection._sasl_data[\"server-signature\"];\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(password), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(jid, password, callback)\n            });\n            return;\n        } else {\n            this.connection.registerSASLMechanisms([Strophe.SASLXOAuth2]);\n            delete this.connection._sasl_data[\"server-signature\"];\n        }\n        this.connection.connect(jid, password, callback);\n    },\n\n    reconnect: function (callback) {\n        if (this.auth_type === 'x-token') {\n            if (!this.connection.mechanisms[\"HOTP\"]) {\n                this.connection.registerSASLMechanism(Strophe.SASLHOTP);\n                delete this.connection._sasl_data[\"server-signature\"];\n            }\n            if (this.connection.account && this.connection.account.get('hotp_counter'))\n                this.connection.counter = this.connection.account.get('hotp_counter');\n            utils.generateHOTP(utils.fromBase64toArrayBuffer(this.connection.pass), this.connection.counter).then((pass) => {\n                this.connection.hotp_pass = pass;\n            }).then(() => {\n                this.connection.connect(this.connection.jid, this.connection.pass, callback)\n            });\n            return;\n        }\n        this.connection.connect(this.connection.jid, this.connection.pass, callback);\n    }\n};\n\n_.extend(Strophe.Connection.prototype, {\n\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            if (this.account && this.counter && this.account.get('x_token') && this._sasl_mechanism.name === \"HOTP\") {\n                this.counter++;\n                this.account.save({\n                    hotp_counter: this.counter,\n                });\n            }\n            break;\n        }\n        return mechanism_found;\n    },\n\n    _sasl_auth1_cb: function (elem) {\n        this.features = elem;\n        let i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n\n            if ((child.nodeName === 'devices') && child.namespaceURI === Strophe.NS.AUTH_DEVICES && this.options['x-token']) {\n                this.x_token_auth = true;\n            }\n\n            if ((child.nodeName === 'synchronization') && (child.namespaceURI === Strophe.NS.SYNCHRONIZATION)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n                this.do_synchronization = true;\n            }\n\n            if ((child.nodeName === 'sub') && (child.namespaceURI === Strophe.NS.SUBSCRIPTION_PREAPPROVAL)) {\n                this.account.server_features.create({\n                    'var': child.namespaceURI,\n                    from: this.domain\n                });\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            if (this.x_token_auth && (!this.x_token || (parseInt(this.x_token.expire)*1000 < env.moment.now()))) {\n                this.getXToken((success) => {\n                    let token = $(success).find('secret').text(),\n                        expires_at = $(success).find('expire').text(),\n                        token_uid = $(success).find('device').attr('id');\n                    this.x_token = {token: token, expire: expires_at, token_uid: token_uid,};\n                    this.counter = 1;\n                    this.pass = token;\n                    this._send_auth_bind();\n                    if (this.account) {\n                        this.account.save({\n                            hotp_counter: this.counter,\n                            password: null,\n                        });\n                    }\n                }, () => {\n                    this._send_auth_bind();\n                });\n            }\n            else {\n                this._send_auth_bind();\n            }\n        }\n        return false;\n    },\n\n    _send_auth_bind() {\n        this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n            null, \"_bind_auth_2\");\n\n        let resource = Strophe.getResourceFromJid(this.jid);\n        if (resource) {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .c('resource', {}).t(resource).tree());\n        } else {\n            this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                .c('bind', {xmlns: Strophe.NS.BIND})\n                .tree());\n        }\n    },\n\n    getXToken: function (callback, errback) {\n        let uniq_id = uuid(), old_token,\n            iq = $iq({\n            type: 'set',\n            to: this.domain,\n            id: uniq_id\n        }).c('register', { xmlns: Strophe.NS.AUTH_DEVICES});\n        this.account && (old_token = this.account.get('old_device_token'));\n        if (old_token && old_token.token && old_token.token_uid){\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES, id: old_token.token_uid})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('secret').t(old_token.token).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n            this.account.save('old_device_token', null);\n        } else {\n            iq.c('device', { xmlns: Strophe.NS.AUTH_DEVICES})\n                .c('client').t(xabber.get('client_name')).up()\n                .c('info').t(`PC, ${utils.getOS()}, ${env.utils.getBrowser()}`);\n        }\n        let handler = function (stanza) {\n            let iqtype = stanza.getAttribute('type');\n            if (iqtype == 'result') {\n                if (callback) {\n                    callback(stanza);\n                }\n            } else if (iqtype == 'error') {\n                if (errback) {\n                    errback(stanza);\n                }\n            } else {\n                throw {\n                    name: \"StropheError\",\n                    message: \"Got bad IQ type of \" + iqtype\n                };\n            }\n        };\n\n        this._addSysHandler(handler.bind(this), Strophe.NS.AUTH_DEVICES, 'iq', 'result' , uniq_id);\n\n        this.send(iq.tree());\n    }\n});\n\n_.extend(Strophe.Websocket.prototype, {\n\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    if (this.socket && this.socket.readyState === 1){\n                        this.socket.send(rawStanza);\n                    } else {\n                        console.log('data went to pending');\n                        console.log(this._conn._data.slice(i));\n                        this._conn.account._pending_stanzas.push(this._conn._data.slice(i))\n                        this._conn._data = [];\n                        return;\n                    }\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n});\n\nStrophe.xmlunescape = function (text) {\n    let reg_exp = {\n        '&amp;': '&',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&quot;': '\"',\n        '&apos;': \"'\"\n    };\n    let escaper = function(match) {\n        return reg_exp[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    let source = '(?:' + _.keys(reg_exp).join('|') + ')',\n        testRegexp = RegExp(source),\n        replaceRegexp = RegExp(source, 'g');\n    text = text == null ? '' : '' + text;\n    return testRegexp.test(text) ? text.replace(replaceRegexp, escaper) : text;\n};\n\nStrophe.addNamespace('ATTENTION', 'urn:xmpp:attention:0');\nStrophe.addNamespace('CARBONS', 'urn:xmpp:carbons:2');\nStrophe.addNamespace('FORWARD', 'urn:xmpp:forward:0');\nStrophe.addNamespace('HASH', 'urn:xmpp:hashes:2');\nStrophe.addNamespace('HINTS', 'urn:xmpp:hints');\nStrophe.addNamespace('SCE', 'urn:xmpp:sce:1');\nStrophe.addNamespace('RECEIPTS', 'urn:xmpp:receipts');\nStrophe.addNamespace('JINGLE', 'urn:xmpp:jingle:1');\nStrophe.addNamespace('JINGLE_SECURITY_STUB', 'urn:xmpp:jingle:security:stub:0');\nStrophe.addNamespace('JINGLE_MSG', 'urn:xmpp:jingle-message:0');\nStrophe.addNamespace('JINGLE_RTP', 'urn:xmpp:jingle:apps:rtp:1');\nStrophe.addNamespace('JINGLE_TRANSPORTS_ICE', 'urn:xmpp:jingle:transports:ice-udp:1');\nStrophe.addNamespace('ADDRESS', 'http://jabber.org/protocol/address');\nStrophe.addNamespace('CHATSTATES', 'http://jabber.org/protocol/chatstates');\nStrophe.addNamespace('EXTENDED_CHATSTATES', 'https://xabber.com/protocol/extended-chatstates');\nStrophe.addNamespace('HTTP_AUTH', 'http://jabber.org/protocol/http-auth');\nStrophe.addNamespace('AUTH_TOKENS', 'https://xabber.com/protocol/auth-tokens');\nStrophe.addNamespace('AUTH_DEVICES', 'https://xabber.com/protocol/devices');\nStrophe.addNamespace('SYNCHRONIZATION', 'https://xabber.com/protocol/synchronization');\nStrophe.addNamespace('SYNCHRONIZATION_REGULAR_CHAT', 'https://xabber.com/protocol/synchronization#chat');\nStrophe.addNamespace('SYNCHRONIZATION_CHANNEL', 'https://xabber.com/protocol/channels');\nStrophe.addNamespace('SYNCHRONIZATION_OLD_OMEMO', 'urn:xmpp:omemo:1');\nStrophe.addNamespace('SYNCHRONIZATION_OMEMO', 'urn:xmpp:omemo:2');\nStrophe.addNamespace('DELIVERY', 'https://xabber.com/protocol/delivery');\nStrophe.addNamespace('ARCHIVE', 'https://xabber.com/protocol/archive');\nStrophe.addNamespace('MAM', 'urn:xmpp:mam:2');\nStrophe.addNamespace('RSM', 'http://jabber.org/protocol/rsm');\nStrophe.addNamespace('DATAFORM', 'jabber:x:data');\nStrophe.addNamespace('CHAT_MARKERS', 'urn:xmpp:chat-markers:0');\nStrophe.addNamespace('VCARD_UPDATE', 'vcard-temp:x:update');\nStrophe.addNamespace('HTTP_UPLOAD', 'urn:xmpp:http:upload');\nStrophe.addNamespace('BLOCKING', 'urn:xmpp:blocking');\nStrophe.addNamespace('SEARCH', 'jabber:iq:search');\nStrophe.addNamespace('PRIVATE_STORAGE', 'jabber:iq:private');\nStrophe.addNamespace('MEDIA', 'urn:xmpp:media-element');\nStrophe.addNamespace('LAST', 'jabber:iq:last');\nStrophe.addNamespace('GROUP_CHAT', 'https://xabber.com/protocol/groups');\nStrophe.addNamespace('GROUP_CHAT_INVITE', 'https://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('GROUP_CHAT_INVITE_HTTP', 'http://xabber.com/protocol/groups#invite');\nStrophe.addNamespace('WEBCHAT', 'https://xabber.com/protocol/webchat');\nStrophe.addNamespace('INDEX', 'https://xabber.com/protocol/index');\nStrophe.addNamespace('PUBSUB', 'http://jabber.org/protocol/pubsub');\nStrophe.addNamespace('PUBSUB_AVATAR_DATA', 'urn:xmpp:avatar:data');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA', 'urn:xmpp:avatar:metadata');\nStrophe.addNamespace('PUBSUB_AVATAR_METADATA_THUMBNAIL', 'urn:xmpp:thumbs:1');\nStrophe.addNamespace('REWRITE', 'https://xabber.com/protocol/rewrite');\nStrophe.addNamespace('REFERENCE', 'https://xabber.com/protocol/references');\nStrophe.addNamespace('GEOLOC', 'http://jabber.org/protocol/geoloc');\nStrophe.addNamespace('MARKUP', 'https://xabber.com/protocol/markup');\nStrophe.addNamespace('VOICE_MESSAGE', 'https://xabber.com/protocol/voice-messages');\nStrophe.addNamespace('FILES', 'https://xabber.com/protocol/files');\nStrophe.addNamespace('SUBSCRIPTION_PREAPPROVAL', 'urn:xmpp:features:pre-approval');\nStrophe.addNamespace('OGP', 'https://xabber.com/protocol/ogp');\nStrophe.addNamespace('URLDISCO', 'urn:xabber:http:url');\nStrophe.addNamespace('MEDIAGALLERY', 'urn:xabber:http:url:mediagallery');\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.vcard,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq,\n    $build = env.$build,\n    utils = env.utils;\n\nlet xmlToObject = function ($vcard) {\n    let vcard = {\n        nickname: $vcard.find('NICKNAME').text().trim(),\n        fullname: $vcard.find('FN').text().trim(),\n        first_name: $vcard.find('N GIVEN').text().trim(),\n        middle_name: $vcard.find('N MIDDLE').text().trim(),\n        last_name: $vcard.find('N FAMILY').text().trim(),\n        birthday: $vcard.find('BDAY').text().trim(),\n        job_title: $vcard.find('TITLE').text().trim(),\n        role: $vcard.find('ROLE').text().trim(),\n        url: $vcard.find('URL').text().trim(),\n        description: $vcard.find('DESC').text().trim(),\n        jabber_id: $vcard.find('JABBERID').text().trim(),\n        org: {},\n        photo: {},\n        phone: {},\n        address: {},\n        email: {}\n    };\n\n    if ($vcard.find('X-PRIVACY').length || $vcard.find('X-MEMBERSHIP').length || $vcard.find('X-INDEX').length) {\n        vcard.group_info = {\n            jid: vcard.jabber_id,\n            description: vcard.description,\n            name: vcard.nickname,\n            anonymous: $vcard.find('X-PRIVACY').text().trim(),\n            searchable: $vcard.find('X-INDEX').text().trim(),\n            model: $vcard.find('X-MEMBERSHIP').text().trim(),\n            status_msg: $vcard.find('X-STATUS').text().trim(),\n            members_num: $vcard.find('X-MEMBERS').text().trim()\n        };\n    }\n\n    let $org = $vcard.find('ORG');\n    if ($org.length) {\n        vcard.org.name = $org.find('ORGNAME').text().trim();\n        vcard.org.unit = $org.find('ORGUNIT').text().trim();\n    }\n\n    let $photo = $vcard.find('PHOTO');\n    if ($photo.length) {\n        vcard.photo.image = $photo.find('BINVAL').text().trim();\n        vcard.photo.type = $photo.find('TYPE').text().trim();\n    }\n\n    $vcard.find('TEL').each(function () {\n        let $this = $(this),\n            number = $this.find('NUMBER').text().trim();\n        if (!number) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.phone.work = number;\n        } else if ($this.find('HOME').length) {\n            vcard.phone.home = number;\n        } else if ($this.find('MOBILE').length) {\n            vcard.phone.mobile = number;\n        } else {\n            vcard.phone.default = number;\n        }\n    });\n\n    $vcard.find('EMAIL').each(function () {\n        let $this = $(this);\n        let email = $this.find('USERID').text().trim();\n        if (!email) {\n            return;\n        }\n        if ($this.find('WORK').length) {\n            vcard.email.work = email;\n        } else if ($this.find('HOME').length) {\n            vcard.email.home = email;\n        } else {\n            vcard.email.default = email;\n        }\n    });\n\n    $vcard.find('ADR').each(function () {\n        let $this = $(this);\n        let address = {\n            pobox: $this.find('POBOX').text().trim(),\n            extadd: $this.find('EXTADR').text().trim(),\n            street: $this.find('STREET').text().trim(),\n            locality: $this.find('LOCALITY').text().trim(),\n            region: $this.find('REGION').text().trim(),\n            pcode: $this.find('PCODE').text().trim(),\n            country: $this.find('CTRY').text().trim()\n        };\n        if ($this.find('WORK').length) {\n            vcard.address.work = address;\n        } else if ($this.find('HOME').length) {\n            vcard.address.home = address;\n        } else {\n            vcard.address.default = address;\n        }\n    });\n\n    return vcard;\n};\n\nlet objectToXml = function (vcard) {\n    let $vcard = $build(\"vCard\", {xmlns: Strophe.NS.VCARD});\n    vcard.nickname && $vcard.c(\"NICKNAME\").t(vcard.nickname).up();\n    vcard.fullname && $vcard.c(\"FN\").t(vcard.fullname).up();\n    if (vcard.first_name || vcard.last_name || vcard.middle_name) {\n        $vcard.c(\"N\");\n        vcard.first_name && $vcard.c(\"GIVEN\").t(vcard.first_name).up();\n        vcard.last_name && $vcard.c(\"FAMILY\").t(vcard.last_name).up();\n        vcard.middle_name && $vcard.c(\"MIDDLE\").t(vcard.middle_name).up();\n        $vcard.up();\n    }\n    vcard.birthday && $vcard.c(\"BDAY\").t(vcard.birthday).up();\n    vcard.job_title && $vcard.c(\"TITLE\").t(vcard.job_title).up();\n    vcard.role && $vcard.c(\"ROLE\").t(vcard.role).up();\n    if (vcard.org.name || vcard.org.unit) {\n        $vcard.c(\"ORG\");\n        vcard.org.name && $vcard.c(\"ORGNAME\").t(vcard.org.name).up();\n        vcard.org.unit && $vcard.c(\"ORGUNIT\").t(vcard.org.unit).up();\n        $vcard.up();\n    }\n    vcard.url && $vcard.c(\"URL\").t(vcard.url).up();\n    if (vcard.photo.image) {\n        $vcard.c(\"PHOTO\").c(\"BINVAL\").t(vcard.photo.image).up();\n        $vcard.c(\"TYPE\").t(vcard.photo.type || 'image/jpeg').up();\n        $vcard.up();\n    }\n    vcard.description && $vcard.c(\"DESC\").t(vcard.description).up();\n    vcard.jabber_id && $vcard.c(\"JABBERID\").t(vcard.jabber_id).up();\n\n    _.each(vcard.phone, function (phone, type) {\n        $vcard.c(\"TEL\").c(\"NUMBER\").t(phone).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.email, function (email, type) {\n        $vcard.c(\"EMAIL\").c(\"USERID\").t(email).up();\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        $vcard.up();\n    });\n\n    _.each(vcard.address, function (address, type) {\n        $vcard.c(\"ADR\");\n        type !== 'default' && $vcard.c(type.toUpperCase()).up();\n        address.pobox && $vcard.c(\"POBOX\").t(address.pobox).up();\n        address.extadd && $vcard.c(\"EXTADR\").t(address.extadd).up();\n        address.street && $vcard.c(\"STREET\").t(address.street).up();\n        address.locality && $vcard.c(\"LOCALITY\").t(address.locality).up();\n        address.region && $vcard.c(\"REGION\").t(address.region).up();\n        address.pcode && $vcard.c(\"PCODE\").t(address.pcode).up();\n        address.country && $vcard.c(\"CTRY\").t(address.country).up();\n        $vcard.up();\n    });\n\n    return $vcard.tree();\n};\n\nStrophe.addConnectionPlugin('vcard', {\n    _connection: null,\n\n    init: function(conn) {\n        this._connection = conn;\n        return Strophe.addNamespace('VCARD', 'vcard-temp');\n    },\n\n    get: function(jid, callback, errback) {\n        let iq = $iq({type: 'get', to: jid}).c('vCard', {xmlns: Strophe.NS.VCARD});\n        this._connection.sendIQ(iq, function (res) {\n            if (!callback) { return; }\n            let vcard = xmlToObject($(res).find('vCard[xmlns='+Strophe.NS.VCARD+']'));\n            vcard.jabber_id || (vcard.jabber_id = jid);\n            return callback(vcard);\n        }, errback);\n    },\n\n    set: function(jid, vcard, callback, errback) {\n        vcard.jabber_id || (vcard.jabber_id = jid);\n        let iq = $iq({type: 'set', to: jid}).cnode(objectToXml(vcard));\n        this._connection.sendIQ(iq, callback, errback);\n    }\n});\n\nutils.vcard = {\n    getBlank: function (jid) {\n        let vcard = xmlToObject($('<div/>'));\n        vcard.jabber_id = jid;\n        return vcard;\n    }\n};\n\nxabber.VCardView = xabber.BasicView.extend({\n    template: templates.vcard,\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.data.on(\"change:refresh\", this.updateRefreshButton, this);\n    },\n\n    render: function () {\n        this.$('.block-header .block-name').text(this.model.get('group_chat') ? 'Group chat details' : xabber.getString(\"vcard_screen__header\"));\n        this.data.set('refresh', false);\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                         addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    updateRefreshButton: function () {\n        this.$('.btn-vcard-refresh .button').hideIf(this.data.get('refresh'));\n        this.$('.btn-vcard-refresh .preloader-wrapper').showIf(this.data.get('refresh'));\n    },\n\n    refresh: function () {\n        if (!this.data.get('refresh')) {\n            this.data.set('refresh', true);\n            this.model.getVCard(() => {\n                this.data.set('refresh', false);\n            });\n        }\n    }\n});\n\nxabber.VCardRightView = xabber.VCardView.extend({\n    template: templates.vcard_right,\n\n    __initialize: function (ev) {\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        this.data.set('refresh', false);\n        this.update();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.model.getVCard(() => {\n            this.update();\n        });\n    },\n\n    update: function () {\n        let $info, vcard = this.model.get('vcard');\n\n        $info = this.$('.jid-info-wrap');\n        $info.find('.jabber-id').showIf(vcard.jabber_id).find('.value').text(vcard.jabber_id);\n        $info.showIf(vcard.jabber_id);\n\n        $info = this.$('.vcard-wrap .personal-info-wrap');\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.first_name || vcard.last_name);\n\n        $info = this.$('.full-vcard-wrap .personal-info-wrap');\n        $info.find('.fullname').showIf(vcard.fullname).find('.value').text(vcard.fullname);\n        $info.find('.first-name').showIf(vcard.first_name).find('.value').text(vcard.first_name);\n        $info.find('.middle-name').showIf(vcard.middle_name).find('.value').text(vcard.middle_name);\n        $info.find('.last-name').showIf(vcard.last_name).find('.value').text(vcard.last_name);\n        $info.showIf(vcard.fullname || vcard.first_name || vcard.middle_name || vcard.last_name);\n\n        $info = this.$('.nickname-info-wrap');\n        $info.find('.nickname').showIf(vcard.nickname).find('.value').text(vcard.nickname);\n        $info.showIf(vcard.nickname);\n\n        $info = this.$('.birthday-info-wrap');\n        $info.find('.birthday').showIf(vcard.birthday).find('.value').text(vcard.birthday);\n        $info.showIf(vcard.birthday);\n\n        $info = this.$('.job-info-wrap');\n        $info.find('.role').showIf(vcard.role).find('.value').text(vcard.role);\n        $info.find('.job-title').showIf(vcard.job_title).find('.value').text(vcard.job_title);\n        $info.find('.org-name').showIf(vcard.org.name).find('.value').text(vcard.org.name);\n        $info.find('.org-unit').showIf(vcard.org.unit).find('.value').text(vcard.org.unit);\n        $info.showIf(vcard.role || vcard.job_title || vcard.org.name || vcard.org.unit);\n\n        $info = this.$('.site-info-wrap');\n        $info.find('.url').showIf(vcard.url).find('.value').text(vcard.url).hyperlinkify();\n        $info.showIf(vcard.url);\n\n        $info = this.$('.description-info-wrap');\n        $info.find('.description').showIf(vcard.description).find('.value').text(vcard.description);\n        $info.showIf(vcard.description);\n\n        let $addr_info = this.$('.address-info-wrap'),\n            address = _.clone(vcard.address),\n            show_addr_block = false;\n        $addr_info.find('.info').addClass('hidden');\n        _.each(address, function (addr, type) {\n            $info = $addr_info.find('.address-'+type);\n            $info.find('.pobox').showIf(addr.pobox).text(addr.pobox);\n            $info.find('.extadd').showIf(addr.extadd).text(addr.extadd);\n            $info.find('.street').showIf(addr.street).text(addr.street);\n            $info.find('.locality').showIf(addr.locality).text(addr.locality);\n            $info.find('.region').showIf(addr.region).text(addr.region);\n            $info.find('.pcode').showIf(addr.pcode).text(addr.pcode);\n            $info.find('.country').showIf(addr.country).text(addr.country);\n            let show = (addr.pobox || addr.extadd || addr.street || addr.locality ||\n                addr.region || addr.pcode || addr.country);\n            show && (show_addr_block = true);\n            $info.showIf(show);\n        });\n        $addr_info.showIf(show_addr_block);\n\n        $info = this.$('.phone-info-wrap');\n        let phone = vcard.phone;\n        if (phone) {\n            $info.find('.phone-work').showIf(phone.work).find('.value').text(phone.work);\n            $info.find('.phone-home').showIf(phone.home).find('.value').text(phone.home);\n            $info.find('.phone-mobile').showIf(phone.mobile).find('.value').text(phone.mobile);\n            $info.find('.phone-default').showIf(phone.default).find('.value').text(phone.default);\n        }\n        $info.showIf(phone && (phone.work || phone.home || phone.mobile || phone.default));\n\n        $info = this.$('.email-info-wrap');\n        let email = vcard.email;\n        if (email) {\n            $info.find('.email-work').showIf(email.work).find('.value').text(email.work);\n            $info.find('.email-home').showIf(email.home).find('.value').text(email.home);\n            $info.find('.email-default').showIf(email.default).find('.value').text(email.default);\n        }\n        $info.showIf(email && (email.work || email.home || email.default));\n\n        this.parent.updateScrollBar();\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,1)'});\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,0.5)'});\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,0)'});\n        }\n\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n});\n\nxabber.VCardEditView = xabber.BasicView.extend({\n    className: 'account-vcard-edit-wrap',\n    template: templates.vcard_edit,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"keyup input\": \"keyUp\",\n        \"keyup textarea\": \"keyUp\",\n        \"input .first-name input\": \"changePlaceholder\",\n        \"input .middle-name input\": \"changePlaceholder\",\n        \"input .last-name input\": \"changePlaceholder\",\n        \"click .btn-vcard-save\": \"save\",\n        \"click .btn-vcard-back\": \"render\",\n    },\n\n    _initialize: function () {\n        let self = this,\n            $input = this.$('.datepicker').pickadate({\n            selectMonths: true,\n            selectYears: 100,\n            autoOk: false,\n            // min = 100 years ago\n            min: new Date(moment.now() - 3153600000000),\n            max: new Date(moment.now() - 86400000),\n            format: 'dd.mm.yyyy',\n            allowKeyboardControl: false,\n            today: '',\n            onClose: function(){\n                $(document.activeElement).blur();\n                self.$('.btn-vcard-back').removeClass('hidden');\n                self.$('.btn-vcard-save').removeClass('hidden');\n            },\n            klass: {\n                weekday_display: 'picker__weekday-display ground-color-700',\n                date_display: 'picker__date-display ground-color-500',\n                navPrev: 'picker__nav--prev hover-ground-color-100',\n                navNext: 'picker__nav--next hover-ground-color-100',\n                selected: 'picker__day--selected ground-color-500',\n                now: 'picker__day--today text-color-700',\n                buttonClear: 'btn-flat btn-main btn-dark',\n                buttonClose: 'btn-flat btn-main text-color-700'\n            }\n        });\n        $input.on('mousedown', function cancelEvent(evt) {\n            evt.preventDefault();\n        });\n        this.data.on(\"change:saving\", this.updateSaveButton, this);\n    },\n\n    render: function () {\n        this.data.set('saving', false);\n        this.setData();\n        Materialize.updateTextFields();\n        this.changePlaceholder();\n        this.updateScrollBar();\n        this.$('.btn-vcard-back').addClass('hidden');\n        this.$('.btn-vcard-save').addClass('hidden');\n    },\n\n    changePlaceholder: function () {\n        let nickname_placeholder = ((this.$('.first-name input').val() + \" \" + this.$('.middle-name input').val()).trim() + \" \" + this.$('.last-name input').val()).trim() || this.model.get('jid');\n        this.$('.nickname input').attr('placeholder', nickname_placeholder);\n    },\n\n    setData: function () {\n        let vcard = this.model.get('vcard');\n\n        this.$('.nickname input').val(vcard.nickname);\n        this.$('.fullname input').val(vcard.fullname);\n        this.$('.first-name input').val(vcard.first_name);\n        this.$('.last-name input').val(vcard.last_name);\n        this.$('.middle-name input').val(vcard.middle_name);\n\n        this.$('.birthday input').val(vcard.birthday);\n\n        this.$('.role input').val(vcard.role);\n        this.$('.job-title input').val(vcard.job_title);\n        this.$('.org-name input').val(vcard.org.name);\n        this.$('.org-unit input').val(vcard.org.unit);\n\n        this.$('.url input').val(vcard.url);\n\n        this.$('.description textarea').val(vcard.description);\n\n        this.$('.phone-work input').val(vcard.phone.work);\n        this.$('.phone-home input').val(vcard.phone.home);\n        this.$('.phone-mobile input').val(vcard.phone.mobile);\n\n        this.$('.email-work input').val(vcard.email.work);\n        this.$('.email-home input').val(vcard.email.home);\n\n        let addr = vcard.address.work || {},\n            $info = this.$('.address-work-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n\n        addr = vcard.address.home || {};\n        $info = this.$('.address-home-wrap');\n        $info.find('.pobox input').val(addr.pobox);\n        $info.find('.extadd input').val(addr.extadd);\n        $info.find('.street input').val(addr.street);\n        $info.find('.locality input').val(addr.locality);\n        $info.find('.region input').val(addr.region);\n        $info.find('.pcode input').val(addr.pcode);\n        $info.find('.country input').val(addr.country);\n    },\n\n    getData: function () {\n        let vcard = utils.vcard.getBlank(this.model.get('jid'));\n\n        vcard.nickname = this.$('.nickname input').val();\n        vcard.fullname = this.$('.fullname input').val();\n        vcard.first_name = this.$('.first-name input').val();\n        vcard.last_name = this.$('.last-name input').val();\n        vcard.middle_name = this.$('.middle-name input').val();\n\n        vcard.birthday = this.$('.birthday input').val();\n\n        vcard.role = this.$('.role input').val();\n        vcard.job_title = this.$('.job-title input').val();\n        vcard.org.name = this.$('.org-name input').val();\n        vcard.org.unit = this.$('.org-unit input').val();\n\n        vcard.url = this.$('.url input').val();\n\n        vcard.description = this.$('.description textarea').val();\n\n        vcard.phone.work = this.$('.phone-work input').val();\n        vcard.phone.home = this.$('.phone-home input').val();\n        vcard.phone.mobile = this.$('.phone-mobile input').val();\n\n        vcard.email.work = this.$('.email-work input').val();\n        vcard.email.home = this.$('.email-home input').val();\n\n        vcard.address.work = {};\n        let addr = vcard.address.work,\n            $info = this.$('.address-work-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n\n        vcard.address.home = {};\n        addr = vcard.address.home;\n        $info = this.$('.address-home-wrap');\n        addr.pobox = $info.find('.pobox input').val();\n        addr.extadd = $info.find('.extadd input').val();\n        addr.street = $info.find('.street input').val();\n        addr.locality = $info.find('.locality input').val();\n        addr.region = $info.find('.region input').val();\n        addr.pcode = $info.find('.pcode input').val();\n        addr.country = $info.find('.country input').val();\n        return vcard;\n    },\n\n    updateSaveButton: function () {\n        this.$('.btn-vcard-save').text(this.data.get('saving') ? xabber.getString(\"saving\") : xabber.getString(\"vcard_edit__button_save\"));\n    },\n\n    save: function () {\n        if (this.data.get('saving')) {\n            return;\n        }\n        this.data.set('saving', true);\n        this.model.setVCard(this.getData(),\n            () => {\n                this.model.getVCard();\n                this.data.set('saving', false);\n                this.$('.btn-vcard-back').addClass('hidden');\n                this.$('.btn-vcard-save').addClass('hidden');\n            },\n            function () {\n                utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                this.data.set('saving', false);\n            }\n        );\n    },\n\n    keyUp: function () {\n        this.$('.btn-vcard-back').removeClass('hidden');\n        this.$('.btn-vcard-save').removeClass('hidden');\n    },\n});\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.accounts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    uuid = env.uuid,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Account = Backbone.Model.extend({\n        idAttribute: 'jid',\n\n        defaults: () => {\n            return {\n                enabled: true,\n                auth_type: \"password\",\n                status: \"online\",\n                status_message: \"\",\n                priority: 67,\n                auto_login_xa: false,\n                account_unique_id: uuid().substring(0, 8),\n                groupchat_servers_list: []\n            }\n        },\n\n        initialize: function (_attrs, options) {\n            this.retraction_version = null;\n            options || (options = {});\n            if (_attrs.is_new && !options.auth_view) {\n                this.is_invalid = true;\n                this.on(\"destroy\", this.onDestroy, this);\n                return;\n            }\n            this.last_msg_timestamp = 0;\n            this.settings = xabber.account_settings_list.get(_attrs.jid);\n            if (!this.settings) {\n                this.settings = xabber.account_settings_list.create({\n                    jid: _attrs.jid,\n                    timestamp: utils.now(),\n                    auto_login_xa: this.get('auto_login_xa'),\n                    to_sync: xabber.api_account && xabber.api_account.get('sync_all')\n                });\n            }\n            let settings = _.clone(this.settings.attributes);\n            settings.color || (settings.color = this.collection.getDefaultColor());\n            settings.order || (settings.order = this.collection.getLastOrder() + 1);\n            this.settings.save(settings);\n            this.settings.on(\"delete_account\", this.deleteAccount, this);\n            let attrs = _.clone(_attrs);\n            attrs.name || (attrs.name = attrs.jid);\n            attrs.image || (attrs.image = Images.getDefaultAvatar(attrs.name));\n            this.cached_image = Images.getCachedImage(attrs.image);\n            attrs.vcard = utils.vcard.getBlank(attrs.jid);\n            attrs.photo_hash = '';\n            this.save(attrs);\n            this.auth_view = options.auth_view || null;\n            this.session = new Backbone.Model({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"connection__error__text_disconnected\")\n            });\n            this._waiting_code = false;\n            this.code_requests = [];\n            this.gallery_code_requests = [];\n            this.xabber_auth = {};\n            this.session.on(\"change:connected\", this.onChangedConnected, this);\n            this.CONNECTION_URL = _attrs.websocket_connection_url || constants.CONNECTION_URL;\n            this.conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL, {'x-token': true});\n            this.connection = this.conn_manager.connection;\n            this.get('x_token') && (this.connection.x_token = this.get('x_token'));\n            if (this.connection.x_token && this.connection.x_token.counter && !this.get('hotp_counter'))\n                this.save({\n                    hotp_counter: this.connection.x_token.counter,\n                });\n            this.get('hotp_counter') && (this.connection.counter = this.get('hotp_counter'));\n            this.on(\"destroy\", this.onDestroy, this);\n            this._added_pres_handlers = [];\n            this._pending_stanzas = [];\n            this._pending_messages = [];\n            this.dfd_presence = new $.Deferred();\n            this.resources = new xabber.AccountResources(null, {account: this});\n            this.password_view = new xabber.ChangePasswordView({model: this});\n            this.vcard_edit = new xabber.VCardEditView({model: this});\n            this.updateColorScheme();\n            this.settings.on(\"change:color\", this.updateColorScheme, this);\n            this.on(\"change:photo_hash\", this.getVCard, this);\n            _.each(this._init_plugins, (plugin) => {\n                plugin.call(this);\n            });\n            this.connection.xmlInput = function (xml) {\n                xabber.info('input main connection');\n                xabber.info(xml);\n            };\n            this.connection.xmlOutput = function (xml) {\n                xabber.info('output main connection');\n                xabber.info(xml);\n            };\n            this.once(\"start\", this.start, this);\n            if (xabber.api_account)\n                xabber.api_account.on(\"settings_result\", function (result) {\n                    if (result && this.settings.get('token')) {\n                        this.save({auth_type: 'token'});\n                    }\n                    this.trigger('start');\n                }, this);\n            else\n                xabber.on(\"bind_xmpp_accounts\", () => {\n                    if (this.settings.get('token'))\n                        this.save({auth_type: 'token'});\n                    this.trigger('start');\n                }, this);\n        },\n\n        start: function () {\n            this.get('enabled') && this.isOnline() && this.connect();\n        },\n\n        _init_plugins: [],\n\n        getPassword: function () {\n            try {\n                return utils.atou(this.get('password'));\n            } catch (e) {\n                return '';\n            }\n        },\n\n        isConnected: function () {\n            return this.session && this.session.get('connected');\n        },\n\n        isOnline: function () {\n            return this.get('status') !== 'offline';\n        },\n\n        sendMsg: function (stanza, callback) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.session.get('ready_to_send') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            callback && callback();\n            return res;\n        },\n\n        sendMsgPending: function (stanza) {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                this.connection.send(stanza);\n            }\n            return res;\n        },\n\n        sendMsgFast: function (stanza, callback) {\n            return this.sendMsg(stanza, callback);\n        },\n\n        getConnectionForIQ: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                return this.fast_connection;\n            } else\n                return this.connection;\n        },\n\n        sendIQFast: function () {\n            let res = this.fast_connection && !this.fast_connection.disconnecting && this.fast_connection.authenticated && this.fast_connection.connected && this.get('status') !== 'offline';\n            if (res) {\n                this.fast_connection.sendIQ.apply(this.fast_connection, arguments);\n                return res;\n            } else\n                return this.sendIQ.apply(this, arguments);\n        },\n\n        sendFast: function (stanza, callback, errback) {\n            if ($(stanza.nodeTree).first().is('message')) {\n                this.sendMsgFast(stanza, callback);\n            } else {\n                this.sendIQFast(stanza, callback, errback);\n            }\n        },\n\n        pubAvatar: function (image, callback, errback) {\n            if (!image) {\n                this.removeAvatar(callback, errback);\n                return;\n            }\n            let dfd = new $.Deferred();\n\n            dfd.done((data, http_avatar) => {\n                if (http_avatar) {\n                    let avatar_hash = data.hash || image.hash || sha1(image.base64),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: data.size, id: avatar_hash, type: data.type, url: data.file});\n                    data.thumbnails.forEach((thumbnail) => {\n                        iq_pub_metadata.c('thumbnail', {\n                            xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA_THUMBNAIL,\n                            url: thumbnail.url,\n                            width: thumbnail.width,\n                            height: thumbnail.height,\n                        }).up()\n                    })\n                    this.sendIQFast(iq_pub_metadata, () => {\n                            callback && callback(avatar_hash);\n                        },\n                        function (data_error) {\n                            errback && errback(data_error);\n                        });\n                }\n                else {\n                    let avatar_hash = image.hash || sha1(image.base64),\n                        iq_pub_data = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                            .c('item', {id: avatar_hash})\n                            .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(data),\n                        iq_pub_metadata = $iq({type: 'set'})\n                            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                            .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('item', {id: avatar_hash})\n                            .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                            .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n                    this.sendIQFast(iq_pub_data, () => {\n                            this.sendIQFast(iq_pub_metadata, () => {\n                                    callback && callback(avatar_hash);\n                                },\n                                function (data_error) {\n                                    errback && errback(data_error);\n                                });\n                        },\n                        (data_error) => {\n                            errback && errback(data_error);\n                        });\n                }\n            });\n            if (image.uploaded){\n                dfd.resolve(image, true)\n            }\n            else if (this.get('gallery_token') && this.get('gallery_url') && !image.generated && !image.uploaded){\n                let file = image.name ? image : image.file;\n                this.uploadAvatar(file, (res) => {\n                    if (res.thumbnails.length || res.file){\n                        res.type = file.type;\n                        dfd.resolve(res, true)\n                    } else\n                        dfd.resolve(image.base64)\n                }, (res) => {\n                    dfd.resolve(image.base64)\n                });\n            } else\n                dfd.resolve(image.base64)\n        },\n\n        removeAvatar: function (callback, errback) {\n            let iq_pub_metadata = $iq({type: 'set'})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('item')\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA});\n            this.sendIQFast(iq_pub_metadata, () => {\n                    callback && callback();\n                },\n                function () {\n                    errback && errback();\n                });\n        },\n\n        getAvatar: function (avatar, callback, errback) {\n            let iq_request_avatar = $iq({type: 'get', to: this.get('jid')})\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('items', {node: Strophe.NS.PUBSUB_AVATAR_DATA})\n                .c('item', {id: avatar});\n            this.sendIQFast(iq_request_avatar, (iq) => {\n                let pubsub_avatar = $(iq).find('data').text();\n                if (pubsub_avatar == \"\")\n                    errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n                else\n                    callback && callback(pubsub_avatar);\n            });\n        },\n\n        sendIQ: function () {\n            let res = this.connection.authenticated && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline';\n            if (res) {\n                let elem = arguments[0];\n                if (typeof(elem.tree) === \"function\" && elem.tree().getAttribute('type') == 'get') {\n                    let lang = xabber.settings.language;\n                    (lang == 'default') && (lang = xabber.get('default_language'));\n                    elem.tree().setAttribute('xml:lang', lang);\n                }\n                this.connection.sendIQ.apply(this.connection, arguments);\n            } else {\n                if (!(arguments[0] && $(arguments[0].nodeTree).find('query[xmlns=\"' + Strophe.NS.MAM + '\"]').length)) {\n                    this._pending_stanzas.push({stanza: arguments, is_iq: true});\n                }\n            }\n            return res;\n        },\n\n        parseDataForm: function ($dataform, options) {\n            options = options || {};\n            let type = $dataform.attr('type'),\n                title = $dataform.children('title').text(),\n                instructions = $dataform.children('instructions').text(),\n                fields = [],\n                data_form = {};\n            $dataform.children('field').each((idx, field) => {\n                let $field = $(field),\n                    attrs = {},\n                    field_var = $field.attr('var'),\n                    field_type = $field.attr('type'),\n                    field_label = $field.attr('label'),\n                    field_value = [], field_options = [];\n                $field.children('value').each((i, value) => {\n                    field_value.push($(value).text());\n                });\n                $field.children('option').each((i, option) => {\n                    let $option = $(option),\n                        val = $option.children('value').text(),\n                        lbl = $option.attr('label');\n                    field_options.push({value: val, label: lbl});\n                });\n                field_var && (attrs.var = field_var);\n                field_type && (attrs.type = field_type);\n                field_label && (attrs.label = field_label);\n                field_value.length && (attrs.values = field_value);\n                field_options.length && (attrs.options = field_options);\n                fields.push(attrs);\n            });\n            type && (data_form.type = type);\n            title && (data_form.title = title);\n            instructions && (data_form.instructions = instructions);\n            fields.length && (data_form.fields = fields);\n            return data_form;\n        },\n\n        addDataFormToStanza: function ($stanza, data_form) {\n            $stanza.c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'});\n            data_form.title && $stanza.c('title').t(data_form.title).up();\n            data_form.instructions && $stanza.c('instructions').t(data_form.instructions).up();\n            data_form.fields.forEach((field) => {\n                let field_attrs = _.clone(field);\n                delete field_attrs.values;\n                delete field_attrs.options;\n                $stanza.c('field', field_attrs);\n                field.values && field.values.forEach((value) => {\n                    $stanza.c('value').t(value).up();\n                });\n                $stanza.up();\n            });\n            return $stanza;\n        },\n\n        sendPres: function (stanza) {\n            if (this.connection.authenticated && this.session.get('connected')) {\n                this.connection.send(stanza);\n            } else {\n                this._pending_stanzas.push({stanza: stanza});\n            }\n            return this.connection.authenticated;\n        },\n\n        verifyXabberAccount: function (code, callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_auth/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ code: code, jid: this.connection.jid}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data.token);\n                }\n            };\n            $.ajax(request);\n        },\n\n        createFastConnection: function () {\n            let jid = this.get('jid'),\n                auth_type = this.conn_manager.auth_type,\n                password;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            if (!this.fast_conn_manager) {\n                this.fast_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                this.fast_connection = this.fast_conn_manager.connection;\n                this.fast_connection.account = this;\n                this.fast_connection.xmlInput = function (xml) {\n                    xabber.info('input fast connection');\n                    xabber.info(xml);\n                };\n                this.fast_connection.xmlOutput = function (xml) {\n                    xabber.info('output fast connection');\n                    xabber.info(xml);\n                };\n            } else{\n                this.fast_connection.disconnect();\n                return this.createFastConnection();\n            }\n            if (auth_type === 'x-token' && this.fast_connection) {\n                this.fast_connection.x_token = this.get('x_token');\n                this.fast_connection.counter = this.get('hotp_counter');\n                this.fast_connection.x_token_auth = true;\n            }\n            this.fast_conn_manager.connect(auth_type, jid, password, this.onFastConnected.bind(this));\n        },\n\n        connect: function (options) {\n            options = options || {};\n            let jid = this.get('jid'),\n                auth_type = this.get('auth_type'),\n                password;\n            jid += '/xabber-web-' + xabber.get('client_id');\n            this.connection.x_token = this.get('x_token');\n            this.connection.counter = this.get('hotp_counter');\n            this.connection.account = this;\n            if (this.connection.x_token && !this.connection.counter)\n                this.connection.counter = 0;\n            if (auth_type === 'token') {\n                password = this.settings.get('token');\n            } else if (auth_type === 'x-token') {\n                if (this.get('x_token') && (Number(this.get('x_token').expire)*1000 > moment.now() || !this.get('x_token').expire))\n                    password = this.get('x_token').token;\n                else\n                    password = undefined;\n            } else {\n                password = this.getPassword();\n            }\n            if (!password) {\n                let attrs = {login: true};\n                options.token_invalidated && (attrs.token_invalidated = true);\n                this.password_view.show(attrs);\n                return;\n            }\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                reconnecting: false,\n                ready_to_send: false,\n                conn_retries: 0,\n                conn_feedback: xabber.getString(\"application_state_connecting\"),\n                auth_failed: false\n            });\n            this.restoreStatus();\n            this.conn_manager.connect(auth_type, jid, password, this.connectionCallback.bind(this));\n        },\n\n        reconnect: function (is_fast) {\n            let conn_retries = this.session.get('conn_retries'),\n                timeout = conn_retries < 3 ? constants.RECONNECTION_TIMEOUTS[conn_retries] : 20000;\n            is_fast && (timeout = 1500);\n            this.session.set({\n                connected: false,\n                reconnected: false,\n                ready_to_send: false,\n                reconnecting: true,\n                conn_retries: ++conn_retries,\n                conn_feedback:  xabber.getString(\"application_state_reconnect_after_some_seconds\", [timeout/1000]),\n                auth_failed: false\n            });\n            if (this.get('x_token'))\n                this.connection.x_token = this.get('x_token');\n            this.connection.account = this;\n            setTimeout(() => {\n                this.connFeedback(xabber.getString(\"application_state_connecting\"));\n                this.restoreStatus();\n                this.connection.reset();\n                this.conn_manager.reconnect(this.reconnectionCallback.bind(this));\n            }, timeout);\n        },\n\n        connectionCallback: function (status, condition, elem) {\n            if (this.session.get('reconnecting')) {\n                xabber.info('ignore connection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.auth_view && this.loginCallback(status, condition);\n            this.session.set({conn_status: status, conn_condition: condition});\n            if ((status === Strophe.Status.ERROR) && (condition === 'conflict') && !this.session.get('delete')) {\n                this.onConnectionConflict();\n            }\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                    this.conn_manager.auth_type = 'x-token';\n                }\n\n                if (this.get('registration_nickname')){\n                    let vcard = utils.vcard.getBlank(this.get('jid'));\n                    vcard.nickname = this.get('registration_nickname');\n                    this.setVCard(vcard,\n                        () => {\n                            this.getVCard();\n                            this.set('registration_nickname', null)\n                        },\n                        function () {\n                            utils.dialogs.error(xabber.getString(\"account_user_info_save_fail\"));\n                            this.set('registration_nickname', null)\n                        }\n                    );\n                }\n                this.createFastConnection();\n                this.session.set({connected: true, reconnected: false});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)){\n                    if (this.session.get('conn_retries') <= 3 && $(elem).find('credentials-expired').length === 0)\n                        this.reconnect(true);\n                    else\n                        this.onTokenRevoked();\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                this.session.set({\n                    connected: false,\n                    ready_to_send: false,\n                });\n            }\n        },\n\n        connectXabberAccount: function () {\n            let iq_private_storage = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE}).c('storage', {xmlns:'xabber:options'});\n            this.sendIQFast(iq_private_storage, (iq) => {\n                if (($(iq).find('option').attr('type') == 'bind') && ($(iq).find('option').text() == 1)) {\n                    this.authXabberAccount();\n                }\n            });\n        },\n\n        authXabberAccount: function (callback) {\n            this.requestPassword((data) => {\n                this.xabber_auth = { api_jid: data.api_jid, request_id: data.request_id };\n                if (this.code_requests.length > 0) {\n                    let verifying_code = this.code_requests.find(verifying_mess => (verifying_mess.jid === this.xabber_auth.api_jid && verifying_mess.id === this.xabber_auth.request_id));\n                    if (verifying_code) {\n                        let idx_verifying_code = this.code_requests.indexOf(verifying_code);\n                        (idx_verifying_code > -1) && this.code_requests.splice(idx_verifying_code, 1);\n                        this.verifyXabberAccount(verifying_code.code, (data) => {\n                            this._waiting_code = false;\n                            let iq_send_auth_mark = $iq({type: 'set'})\n                                .c('query', {xmlns: Strophe.NS.PRIVATE_STORAGE})\n                                .c('storage', {xmlns:'xabber:options'})\n                                .c('option', {type: 'bind'}).t(1);\n                            if (xabber.api_account) {\n                                xabber.api_account.save('token', data);\n                                xabber.api_account.login_by_token();\n                            }\n                            this.sendIQFast(iq_send_auth_mark);\n                            callback && callback();\n                        });\n                    }\n                    if (this.code_requests.length) {\n                        let msg_attrs = {\n                            from_jid: this.code_requests[0].jid,\n                            message: xabber.getString(\"xmpp_confirm__text_message__verification_code_is\", [Number(this.code_requests[0].code)]),\n                            is_archived: false\n                        };\n                        this.createMessageFromIQ(msg_attrs);\n                    }\n                }\n            });\n        },\n\n        requestPassword: function(callback) {\n            let request = {\n                type: 'POST',\n                url: constants.API_SERVICE_URL + '/accounts/xmpp_code_request/',\n                contentType: \"application/json\",\n                dataType: 'json',\n                data: JSON.stringify({ jid: this.connection.jid, type: 'iq'}),\n                success: function (data, textStatus, jqXHR) {\n                    callback && callback(data);\n                }\n            };\n            this._waiting_code = true;\n            $.ajax(request);\n        },\n\n        reconnectionCallback: function (status, condition, elem) {\n            if (!this.session.get('reconnecting')) {\n                xabber.info('ignore reconnection callback for status: '+constants.CONN_STATUSES[status]);\n                return;\n            }\n            this.session.set({conn_status: status, conn_condition: condition});\n            if (status === Strophe.Status.CONNECTED) {\n                this.session.set('on_token_revoked', false);\n                if (this.connection.x_token) {\n                    this.save({\n                        auth_type: 'x-token',\n                        x_token: this.connection.x_token,\n                        hotp_counter: this.connection.counter,\n                    });\n                }\n                this.createFastConnection();\n                this.connection.connect_callback = this.connectionCallback.bind(this);\n                this.session.set({connected: true, reconnected: true,\n                    reconnecting: false, conn_retries: 0});\n            } else if (status === Strophe.Status.AUTHFAIL) {\n                if ((this.get('auth_type') === 'x-token' || this.connection.x_token)) {\n                    if ($(elem).find('credentials-expired').length > 0)\n                        this.onTokenRevoked();\n                    else if (this.session.get('conn_retries') > 2 )\n                        this.onAuthFailed();\n                    else\n                        this.reconnect(true);\n                }\n                else\n                    this.onAuthFailed();\n            } else if (status === Strophe.Status.DISCONNECTED) {\n                if (this.session.get('on_token_revoked'))\n                    return;\n                this.connection.flush();\n                let max_retries = xabber.settings.max_connection_retries;\n                if (max_retries === -1 || this.session.get('conn_retries') < max_retries) {\n                    this.reconnect();\n                } else {\n                    this.connFeedback(xabber.getString(\"connection__error__connection_lost\"));\n                }\n            }\n        },\n\n        registerCallback: function (status, condition, error_text) {\n            if (status === Strophe.Status.REGISTER) {\n                this.connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                this.connection.register.fields.password = this.getPassword();\n                if (xabber.url_params && xabber.url_params.rkey) {\n                    this.connection.register.fields.key = xabber.url_params.rkey;\n                }\n                this.connection.register.submit();\n            } else if (status === Strophe.Status.REGISTERED) {\n                let nickname = this.auth_view.$nickname_input.val()\n                this.auth_view.data.set('step',6);\n                if(nickname){\n                    this.set('registration_nickname', nickname)\n                }\n            } else if (status === Strophe.Status.CONFLICT) {\n                this.auth_view.errorRegistrationFeedback({jid: xabber.getString(\"label_xmpp_id\")});\n                this.auth_view.data.set('step', 3)\n            } else if (status === Strophe.Status.NOTACCEPTABLE) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_not_filled\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            } else if (status === Strophe.Status.REGIFAIL) {\n                if (error_text)\n                    this.auth_view.errorRegistrationFeedback({password: error_text});\n                else {\n                    condition = condition ? ': ' + condition : '';\n                    this.auth_view.errorRegistrationFeedback({password: xabber.getString(\"xmpp_login__registration_failed\") + condition});\n                }\n                this.auth_view.data.set('step', 4)\n            }\n        },\n\n        changePasswordCallback: function (status, condition) {\n            if (this.settings_right && this.settings_right.children && this.settings_right.children.account_password_view){\n                if (status === Strophe.Status.REGISTERED) {\n                    this.settings_right.children.account_password_view.successFeedback();\n                } else if (status === Strophe.Status.CONFLICT\n                    || status === Strophe.Status.NOTACCEPTABLE\n                    || status === Strophe.Status.REGIFAIL) {\n                    condition = condition ? ': ' + condition : '';\n                    this.settings_right.children.account_password_view.errorFeedback({password: xabber.getString(\"password_changed_fail\") + condition});\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    this.settings_right.children.account_password_view.errorFeedback({old_password: xabber.getString(\"AUTHENTICATION_FAILED\")});\n                } else if (status === Strophe.Status.CONNECTED) {\n                    this.change_password_connection.register.fields.username = Strophe.getNodeFromJid(this.get('jid'));\n                    this.change_password_connection.register.fields.password = this.settings_right.children.account_password_view.$password_input.val().trim();\n                    this.change_password_connection.register.submit();\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    this.change_password_connection_manager = undefined;\n                    this.change_password_connection = undefined;\n                }\n            }\n        },\n\n        loginCallback: function (status, condition) {\n            if (status === Strophe.Status.CONNECTING) {\n                if (this.auth_view.stepped_auth){\n                    this.auth_view.resetAuthStepper()\n                }\n            } else if (status === Strophe.Status.CONNECTED) {\n                this.save('is_new', undefined);\n                if (this.auth_view.stepped_auth && !this.auth_view.data.get('registration'))\n                    this.auth_view.authStepperStart();\n                else{\n                    this.auth_view.endAuth();\n                }\n\n            } else if (_.contains(constants.BAD_CONN_STATUSES, status)) {\n                let stepper_auth_error = false;\n                if (status === Strophe.Status.ERROR) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.CONNFAIL) {\n                    status = xabber.getString(\"CONNECTION_FAILED\");\n                } else if (status === Strophe.Status.AUTHFAIL) {\n                    status = xabber.getString(\"AUTHENTICATION_FAILED\");\n                    stepper_auth_error = true;\n                } else if (status === Strophe.Status.DISCONNECTED) {\n                    status = xabber.getString(\"connection__error__text_disconnected\");\n                } else if (status === Strophe.Status.CONNTIMEOUT) {\n                    status = xabber.getString(\"connection__error__text_timeout_expired\");\n                }\n                condition = condition ? ': ' + condition : '';\n                if (this.auth_view.stepped_auth)\n                    this.auth_view.authStepperError(stepper_auth_error, {password: status + condition});\n                else\n                    this.auth_view.errorFeedback({password: status + condition});\n                this.get('is_new') && this.destroy();\n            }\n        },\n\n        onAuthFailed: function () {\n            if (!this.auth_view){\n                utils.dialogs.error(xabber.getString(\"connection__error__text_authentication_failed\", [this.get('jid')]));\n                this.password_view.show();\n            }\n            this.session.set({\n                auth_failed: true,\n                connected: false,\n                ready_to_send: false,\n                no_reconnect: true\n            });\n            this.save({old_device_token: this.get('x_token'), auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_authentication_failed_short\"));\n        },\n\n        onConnectionConflict: function () {\n            utils.dialogs.error(xabber.getString(\"connection__error__text_connection_conflict\", [this.get('jid')]));\n            this.session.set({\n                auth_failed: true,\n                no_reconnect: true\n            });\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_connection_conflict_short\"));\n        },\n\n        getAllXTokens: function () {\n            let tokens_list = [],\n                iq = $iq({\n                    type: 'get',\n                    to: this.connection.domain\n                }).c('query', {xmlns: `${Strophe.NS.AUTH_DEVICES}#items`});\n            this.sendIQFast(iq, (tokens) => {\n                $(tokens).find('device').each((idx, token) => {\n                    let $token = $(token),\n                        client = $token.find('client').text(),\n                        device = $token.find('info').text(),\n                        description = $token.find('description').text(),\n                        token_uid = $token.attr('id'),\n                        expire = Number($token.find('expire').text())*1000,\n                        last_auth = Number($token.find('last-auth').text())*1000,\n                        ip_address = $token.find('ip').text();\n                    tokens_list.push({client: client, device: device, description: description, token_uid: token_uid, last_auth: last_auth, expire: expire, ip: ip_address});\n                });\n                this.x_tokens_list = tokens_list;\n                this.settings_right && this.settings_right.updateXTokens();\n            });\n        },\n\n        onTokenRevoked: function () {\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid')) {\n                xabber.trigger('quit_accounts');\n                return;\n            }\n            if (!this.auth_view) {\n                utils.dialogs.error(xabber.getString(\"connection__error__text_token_invalidated\", [this.get('jid')]));\n            }\n            this.session.set({\n                on_token_revoked: true,\n                auth_failed: true,\n                connected: false,\n                no_reconnect: true\n            });\n            this.save({auth_type: 'password', password: null, x_token: null});\n            this.connection.pass = \"\";\n            this.trigger('deactivate', this);\n            this.connFeedback(xabber.getString(\"connection__error__text_token_invalidated_short\"));\n            this.deleteAccount()\n        },\n\n        onChangedConnected: function () {\n            if (this.isConnected()) {\n                this.session.get('reconnected') ? this.onReconnected() : this.onConnected();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onConnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.jid = this.connection.jid;\n            this.resource = Strophe.getResourceFromJid(this.jid);\n            this.domain = Strophe.getDomainFromJid(this.jid);\n            this.trigger('activate', this);\n            this.session.get('no_reconnect') && this.session.set('no_reconnect', false);\n            this.afterConnected();\n            _.each(this._after_connected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        onFastConnected: function (status) {\n            if (status === Strophe.Status.CONNECTED) {\n                if (this.fast_connection.x_token) {\n                    this.save({\n                        x_token: this.fast_connection.x_token,\n                        hotp_counter: this.fast_connection.counter,\n                    });\n                    this.fast_conn_manager.auth_type = 'x-token';\n                    this.fast_connection.x_token_auth = true;\n                    if (this.connection && this.connection.pass)\n                        this.fast_connection.pass = this.connection.pass;\n                }\n                _.each(this._after_fast_connected_plugins, (plugin) => {\n                    plugin.call(this);\n                });\n            } else if (status === Strophe.Status.AUTHFAIL || status === Strophe.Status.DISCONNECTED) {\n                this.fast_conn_manager = undefined;\n                this.fast_connection = undefined;\n            }\n        },\n\n        onReconnected: function () {\n            this.connFeedback(xabber.getString(\"account_state_connected\"));\n            this.afterConnected();\n            _.each(this._after_reconnected_plugins, (plugin) => {\n                plugin.call(this);\n            });\n        },\n\n        afterConnected: function () {\n            this.dfd_presence.done(() => {\n                this.sendPendingStanzas();\n                this.sendPendingMessages();\n                this.session.set({\n                    ready_to_send: true\n                })\n            });\n            this.registerPresenceHandler();\n            this.enableCarbons();\n        },\n\n        getAllMessageRetractions: function (encrypted, callback) {\n            let query_options = {xmlns: Strophe.NS.REWRITE, version: (encrypted && this.omemo) ? this.omemo.getRetractVersion() : this.retraction_version};\n            encrypted && (query_options.type = 'encrypted');\n            let retractions_query = $iq({type: 'get'})\n                .c('query', query_options);\n            this.sendIQFast(retractions_query, callback);\n        },\n\n        sendPendingStanzas: function () {\n            console.log('pending stanzas');\n            console.log(this._pending_stanzas);\n            _.each(this._pending_stanzas, (item) => {\n                console.log(item);\n                if ((item.stanza instanceof Strophe.Builder) || item.is_msg) {\n                    this.connection.send(item.stanza);\n                    item.callback && item.callback();\n                } else if (item && item.stanza && item.is_iq){\n                    this.connection.sendIQ.apply(this.connection, item.stanza);\n                }\n            });\n            this._pending_stanzas = [];\n        },\n\n        sendPendingMessages: function () {\n            console.log('pending messages');\n            console.log(this._pending_messages);\n            this._pending_messages.sort((a,b) => (a.timestamp > b.timestamp) ? 1 : ((b.timestamp > a.timestamp) ? -1 : 0));\n            _.each(this._pending_messages, (item) => {\n                console.log(item)\n                let msg = this.messages.get(item.unique_id), msg_iq;\n                msg && (msg_iq = msg.get('xml'));\n                $(msg_iq).append(\"<retry xmlns='\" + Strophe.NS.DELIVERY + \"'/>\")\n                msg_iq && this.sendMsgPending(msg_iq);\n            });\n            this.trigger('send_pending_messages');\n        },\n\n        _after_connected_plugins: [],\n        _after_reconnected_plugins: [],\n        _after_fast_connected_plugins: [],\n\n        onDisconnected: function () {\n            this.disconnected_timestamp = this.last_stanza_timestamp;\n            if (this.session.get('delete')) {\n                this.destroy();\n                return;\n            }\n            let deactivate = this.session.get('deactivate');\n            if (deactivate) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnected\"));\n                this.session.set('deactivate', null);\n                if (deactivate === 'set_off') {\n                    this.trigger('deactivate', this);\n                }\n            } else {\n                if (this.session.get('no_reconnect')) {\n                    this.session.set('no_reconnect', false);\n                } else {\n                    this.fast_connection && this.fast_connection.connected && this.fast_connection.disconnect();\n                    this.reconnect();\n                }\n            }\n        },\n\n        connFeedback: function (message) {\n            this.session.set(\"conn_feedback\", message);\n        },\n\n        enableCarbons: function () {\n            let iq = $iq({type: 'set'}).c('enable', {xmlns: Strophe.NS.CARBONS});\n            this.sendIQFast(iq);\n        },\n\n        getVCard: function (callback) {\n            let jid = this.get('jid'),\n                is_callback = _.isFunction(callback);\n            if (this.connection && this.connection.connected) {\n                this.getConnectionForIQ().vcard.get(jid,\n                    (vcard) => {\n                        let attrs = {\n                            vcard: vcard,\n                            vcard_updated: moment.now()\n                        };\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                        if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                            if (vcard.photo.image) {\n                                attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                                attrs.image = vcard.photo.image;\n                            }\n                            else\n                                attrs.image = Images.getDefaultAvatar(attrs.name);\n                            this.cached_image = Images.getCachedImage(attrs.image);\n                        }\n                        this.save(attrs);\n                        is_callback && callback(vcard);\n                    },\n                    function () {\n                        is_callback && callback(null);\n                    }\n                );\n            }\n        },\n\n        setVCard: function (data, callback, errback) {\n            let vcard = _.extend(_.clone(this.get('vcard')), data);\n            this.connection.vcard.set(this.get('jid'), vcard, () => {\n                this.vcardPhotoUpdated(vcard.photo.image);\n                callback && callback();\n            }, errback);\n        },\n\n        getStatusMessage: function () {\n            return this.get('status_message') || xabber.getString([this.get('status')]);\n        },\n\n        setStatus: function (status, message) {\n            let attrs = { status_updated: moment.now() };\n            status !== null && (attrs.status = status);\n            message !== null && (attrs.status_message = message || '');\n            if (status === 'offline' && this.get('status') !== 'offline')\n                attrs.status_prev = this.get('status');\n            this.save(attrs);\n            if (!this.get('enabled'))\n                return;\n            if (status === 'offline') {\n                this.deactivate('set_offline');\n            } else if (!this.isConnected()) {\n                this.activate();\n            } else {\n                this.sendPresence();\n            }\n        },\n\n        restoreStatus: function () {\n            if (this.get('status') === 'offline') {\n                this.save({\n                    status_updated: moment.now(),\n                    status: this.get('status_prev') || 'online',\n                    status_prev: undefined\n                });\n            }\n        },\n\n        getAvatarHash: function (avatar) {\n            let from_avatar = avatar || this.get('vcard').photo.image;\n            if (from_avatar) {\n                let decoded_raw = atob(from_avatar),\n                    bin = Uint8Array.from(Array.prototype.map.call(decoded_raw,function(x) {\n                        return x.charCodeAt(0);\n                    }));\n                return sha1(bin);\n            }\n            else\n                return \"\";\n        },\n\n        vcardPhotoUpdated: function (photo) {\n            let stanza = $pres().c('x', {xmlns: Strophe.NS.VCARD_UPDATE}).c('photo').t(this.getAvatarHash(photo)).up().up();\n            return this.sendPres(stanza);\n        },\n\n        sendPresence: function (type, message) {\n            type = type || this.get('status');\n            let status_message = message || this.get('status_message'), stanza = $pres();\n            if (type === 'offline') {\n                stanza.attrs({'type': 'unavailable'});\n            } else {\n                if (type !== 'online') {\n                    stanza.c('show').t(type).up();\n                }\n                stanza.c('status').t(status_message).up();\n                stanza.c('priority').t(this.get('priority')).up();\n                if(this.get('x_token'))\n                    stanza.c('device', {xmlns: Strophe.NS.AUTH_DEVICES, id: this.get('x_token').token_uid}).up();\n            }\n            stanza.cnode(this.connection.caps.createCapsNode({\n                node: 'https://www.xabber.com/clients/xabber/web'\n            }).tree());\n            return this.sendPres(stanza);\n        },\n\n        showSettings: function (right, block_name) {\n            let has_settings_right = !_.isUndefined(this.settings_right);\n            if (!this.settings_left)\n                this.settings_left = new xabber.AccountSettingsLeftView({model: this});\n            if (!has_settings_right)\n                this.settings_right = new xabber.AccountSettingsRightView({model: this});\n            this.updateColorScheme();\n            xabber.body.setScreen('account_settings', {\n                account: this, right: right, block_name: block_name\n            });\n            this.trigger('open_settings');\n            if (!has_settings_right) {\n                this.trigger('render_settings');\n                this.settings_right.addChild('blocklist', xabber.BlockListView, {\n                    account: this,\n                    el: this.settings_right.$('.blocklist-info')[0]\n                });\n                this.settings_right.addChild('account_password_view', xabber.ChangeAccountPasswordView, {\n                    model: this,\n                    el: this.settings_right.$('.change-password-container')[0]\n                });\n            }\n        },\n\n        updateColorScheme: function () {\n            let color = this.settings.get('color');\n            this.settings_left && this.settings_left.$el.attr('data-color', color);\n            if (this.settings_right) {\n                this.settings_right.$el.attr('data-color', color);\n            }\n            this.vcard_edit.$el.attr('data-color', color);\n        },\n\n        revokeXToken: function (token_uid, callback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke', {xmlns:Strophe.NS.AUTH_DEVICES});\n            for (let token_num = 0; token_num < token_uid.length; token_num++)\n                iq.c('device', {id: token_uid[token_num]}).up();\n            this.sendIQFast(iq, () => {\n                callback && callback();\n            });\n        },\n\n        revokeAllXTokens: function (callback, errback) {\n            let iq = $iq({\n                type: 'set',\n                to: this.connection.domain\n            }).c('revoke-all', {xmlns:Strophe.NS.AUTH_DEVICES});\n            this.sendIQFast(iq, (success) => {\n                    callback & callback(success);\n                },\n                function (error) {\n                    errback && errback(error);\n                });\n        },\n\n        deleteAccount: function (show_settings) {\n            this.show_settings_after_delete = show_settings;\n            xabber.body.setScreen('all_chats', {right_contact: ''});\n            if (this.get('x_token'))\n                this.revokeXToken([this.get('x_token').token_uid]);\n            this.session.set('delete', true);\n            this.deactivate();\n            if (xabber.api_account && xabber.api_account.get('xmpp_binding') === this.get('jid'))\n                xabber.trigger('quit_accounts');\n        },\n\n        activate: function () {\n            if (!this.isConnected())\n                this.connect();\n        },\n\n        deactivate: function (type) {\n            type || (type = 'set_off');\n            this.session.set('deactivate', type);\n            if (this.isConnected()) {\n                this.connFeedback(xabber.getString(\"settings_account__label_state_disconnecting\"));\n                this.sendPresence('offline');\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            } else {\n                this.onDisconnected();\n            }\n        },\n\n        onDestroy: function () {\n            if (this.connection && !this.connection.register._registering)\n                this.connection.connect_callback = null;\n            if (this.settings)\n                this.settings.destroy();\n            if (this.isConnected()) {\n                this.connection.disconnect();\n                if (this.fast_conn_manager) this.fast_connection.disconnect();\n            }\n            this.cached_sync_conversations.deleteDataBase();\n            this.cached_roster.deleteDataBase();\n            this.cached_server_features.deleteDataBase();\n            this.trigger('remove_saved_chat');\n        },\n\n        registerIQHandler: function () {\n            this.connection.deleteHandler(this._stanza_handler);\n            this._stanza_handler = this.connection.addHandler((iq) => {\n                    this.onGetIQ(iq);\n                    return true;\n                }, null, 'iq', \"get\");\n        },\n\n\n        registerSyncedIQHandler: function () {\n            this.connection.deleteHandler(this._synced_stanza_handler);\n            this._synced_stanza_handler = this.connection.addHandler(\n                this.onSyncedIQ.bind(this),\n                Strophe.NS.SYNCHRONIZATION, 'iq', \"set\");\n        },\n\n        registerPresenceHandler: function () {\n            this.connection.deleteHandler(this._pres_handler);\n            this._pres_handler = this.connection.addHandler(\n                (presence) => {\n                    this.onPresence(presence);\n                    return true;\n                }, null, 'presence', null);\n        },\n\n        onSetIQResult: function (iq) {\n            let to = $(iq).attr('to');\n            if (this.fast_connection && this.fast_connection.jid === to\n                && !this.fast_connection.disconnecting && this.fast_connection.authenticated\n                && this.fast_connection.connected && this.get('status') !== 'offline'){\n                this.sendIQFast($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            } else if (this.connection && this.connection.jid === to && this.connection.authenticated\n                && !this.connection.disconnecting && this.session.get('connected') && this.get('status') !== 'offline') {\n                this.sendIQ($iq({\n                    type: 'result', id: iq.getAttribute('id'),\n                }));\n            }\n        },\n\n        onSyncedIQ: function (iq) {\n            this.onSetIQResult(iq);\n            this.roster.syncConversations(iq);\n            return true;\n        },\n\n        onGetIQ: function (iq) {\n            let $incoming_iq = $(iq),\n                $confirm = $incoming_iq.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`),\n                $session_availability = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n                request_code,\n                from_jid = $incoming_iq.attr('from');\n            if ($confirm.length) {\n                request_code = $confirm.attr('id');\n                if (this.get('gallery_auth_request_code')) {\n                    this.onAuthCode(request_code)\n                }\n                else {\n                    this.gallery_code_requests.push({\n                        id: $incoming_iq.attr('id'),\n                        code: request_code\n                    });\n                }\n            }\n            if ($session_availability.length) {\n                let session_id = $session_availability.children('session').attr('id'), $session_availability_response;\n                if (session_id && xabber.current_voip_call && session_id === xabber.current_voip_call.get('session_id') && !xabber.current_voip_call.get('state')) {\n                    $session_availability_response = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')})\n                        .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n                        .c('session', {id: session_id});\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n                }\n                else {\n                    $session_availability_response = $iq({to: from_jid, type: 'error', id: $incoming_iq.attr('id')})\n                        .c('error', {xmlns: Strophe.NS.JINGLE_MSG});\n\n                }\n                this.sendIQFast($session_availability_response);\n            }\n        },\n\n        testGalleryTokenExpire: function(callback) {\n            let currentTime = new Date(),\n                tokenExpireTime = new Date(this.get('gallery_token_expires'));\n            if (this.get('gallery_auth')){\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (currentTime < tokenExpireTime){\n                callback && callback();\n            }\n            else if (this.server_features.get('media-gallery')){\n                this.initGalleryAuth(this.server_features.get('media-gallery'))\n                this.once('gallery_token_authenticated', callback)\n            }\n            else if (!this.server_features.get('media-gallery')){\n                this.set('gallery_url', undefined);\n                this.set('gallery_token', undefined);\n                this.set('gallery_token_expires', undefined);\n                callback && callback();\n            }\n        },\n\n        initGalleryAuth: function(gallery_feature) {\n            this.set('gallery_url', gallery_feature.get('from'));\n            if (this.get('gallery_url') && !this.get('gallery_auth')) {\n                this.set('gallery_auth', true)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_code_request/',\n                    dataType: 'json',\n                    data: JSON.stringify({jid: this.jid, type: \"iq\"}),\n                    success: (response) => {\n                        if (response.request_id){\n                            this.set('gallery_auth_request_code', response.request_id)\n                            if (this.gallery_code_requests.length){\n                                let verifying_code = this.gallery_code_requests.find(verifying_mess => (verifying_mess.id === this.get('gallery_auth_request_code')));\n                                if (verifying_code && verifying_code.code)\n                                    this.onAuthCode(verifying_code.code)\n                            }\n                        }\n                    },\n                    error: (response) => {\n                        this.handleCommonGalleryErrors(response)\n                        this.set('gallery_auth', false)\n                        this.gallery_code_requests = [];\n                        console.log(response)\n                    }\n                });\n            }\n        },\n\n        onAuthCode: function (confirm_code) {\n            this.gallery_code_requests = [];\n            this.set('gallery_auth_request_code', undefined);\n            if (confirm_code)\n                $.ajax({\n                    type: 'POST',\n                    url: this.get('gallery_url') + 'v1/account/xmpp_auth/',\n                    dataType: 'json',\n                    data: JSON.stringify({jid: this.id, code: confirm_code}),\n                    success: (response) => {\n                        if (response.token)\n                            this.set('gallery_token', response.token);\n                        if (response.expires)\n                            this.set('gallery_token_expires', response.expires);\n                        this.trigger('gallery_token_authenticated')\n                        this.set('gallery_auth', false)\n                    },\n                    error: (response) => {\n                        this.set('gallery_auth', false)\n                        this.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        },\n\n        prepareFiles: function (files, callback) {\n            files.forEach((file) => {\n                let reader = new FileReader();\n                reader.onloadend = () => {\n                    let b64 = reader.result.split('base64,'),\n                        binary_file = atob(b64[1]),\n                        bytes = new Uint8Array(binary_file.length);\n                    for (let i = 0; i < binary_file.length; i++)\n                        bytes[i] = binary_file.charCodeAt(i);\n                    this.testFile({size: file.size, name: file.name, hash: sha1(bytes)}, file, callback)\n                }\n                reader.readAsDataURL(file);\n            })\n        },\n\n        handleCommonGalleryErrors: function (response) {\n            if (response.status === 401){\n                if (this.server_features.get('media-gallery')){\n                    this.initGalleryAuth(this.server_features.get('media-gallery'))\n                } else {\n                    this.set('gallery_url', null);\n                    this.set('gallery_token', null);\n                }\n            }\n        },\n\n        getStorageStats: function (params, callback) {\n            this.testGalleryTokenExpire(() => {\n                params && (params = {});\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/stats/',\n                        dataType: 'json',\n                        data: params,\n                        success: (response) => {\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        testFile: function (params, file, callback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'GET',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/slot/',\n                        dataType: 'json',\n                        data: params,\n                        success: (response) => {\n                            this.uploadFile(file , callback)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                        }\n                    });\n\n            });\n        },\n\n        uploadFile: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    if (file.duration)\n                        formData.append('duration', file.duration);\n                    if (file.voice)\n                        formData.append('media_type', file.type + '+voice');\n                    else\n                        formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        uploadAvatar: function (file, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url')) {\n                    if (!file)\n                        errback && errback('no file')\n                    let formData = new FormData();\n                    formData.append('file', file, file.name);\n                    formData.append('media_type', file.type);\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/avatar/upload/',\n                        data: formData,\n                        contentType: false,\n                        processData: false,\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n                }\n            });\n        },\n\n        deleteFile: function (file_id, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url') && file_id)\n                    $.ajax({\n                        type: 'DELETE',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token')},\n                        url: this.get('gallery_url') + 'v1/files/',\n                        dataType: 'json',\n                        data: JSON.stringify({id: file_id}),\n                        success: (response) => {\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            console.log(response)\n                            errback && errback(response)\n                        }\n                    });\n            });\n        },\n\n        getOpenGraphData: function (url, callback, errback) {\n            this.testGalleryTokenExpire(() => {\n                if (this.get('gallery_token') && this.get('gallery_url'))\n                    $.ajax({\n                        type: 'POST',\n                        headers: {\"Authorization\": 'Bearer ' + this.get('gallery_token'), \"Content-Type\": \"application/json\"},\n                        url: this.get('gallery_url') + 'v1/opengraph/',\n                        dataType: 'json',\n                        data: JSON.stringify({url: url}),\n                        success: (response) => {\n                            response.site = $(response.ogp).closest('meta[property=\"og:site_name\"]').attr('content')\n                            response.type = $(response.ogp).closest('meta[property=\"og:type\"]').attr('content')\n                            response.url = $(response.ogp).closest('meta[property=\"og:url\"]').attr('content')\n                            response.description = $(response.ogp).closest('meta[property=\"og:description\"]').attr('content')\n                            response.title = $(response.ogp).closest('meta[property=\"og:title\"]').attr('content')\n                            response.image = $(response.ogp).closest('meta[property=\"og:image\"]').attr('content')\n                            response.image_height = $(response.ogp).closest('meta[property=\"og:image:height\"]').attr('content')\n                            response.image_width = $(response.ogp).closest('meta[property=\"og:image:width\"]').attr('content')\n                            response.video_url = $(response.ogp).closest('meta[property=\"og:video:url\"]').attr('content')\n                            console.log(response)\n                            callback && callback(response)\n                        },\n                        error: (response) => {\n                            this.handleCommonGalleryErrors(response)\n                            errback && errback(response)\n                            console.log(response)\n                        }\n                    });\n            });\n        },\n\n        createMessageFromIQ: function (attrs) {\n            let contact = this.contacts.mergeContact(attrs.from_jid),\n                chat = this.chats.getChat(contact);\n            chat.messages.create(attrs);\n        },\n\n        onPresence: function (presence) {\n            let $presence = $(presence),\n                type = presence.getAttribute('type');\n            if (type === 'error') { return; }\n            let jid = presence.getAttribute('from'),\n                bare_jid = Strophe.getBareJidFromJid(jid);\n            if (bare_jid !== this.get('jid')) {\n                _.each(this._added_pres_handlers, function (handler) {\n                    handler(presence, bare_jid);\n                });\n                return;\n            };\n            let resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                status_message = $presence.find('status').text();\n            _.isNaN(priority) && (priority = 0);\n            let $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCAD_UPDATE}\"]`);\n            if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR)\n                this.save('photo_hash', $vcard_update.find('photo').text());\n            if (resource) {\n                let resource_obj = this.resources.get(resource);\n                if (type === 'unavailable') {\n                    if (resource_obj) { resource_obj.destroy(); }\n                } else {\n                    let attrs = {\n                        resource: resource,\n                        priority: priority,\n                        status: status,\n                        status_message: status_message\n                    };\n                    let $device = $presence.find(`device[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n                    if ($device && this.x_tokens_list && $device.attr('id')) {\n                        attrs.token_uid = $device.attr('id')\n                    }\n                    if (!resource_obj)\n                        resource_obj = this.resources.create(attrs);\n                    else\n                        resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n    {\n        addInitPlugin: function (func) {\n            this.prototype._init_plugins.push(func);\n        },\n\n        addConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_connected_plugins.push(func);\n            reconn && this.prototype._after_reconnected_plugins.push(func);\n        },\n\n        addFastConnPlugin: function (func, conn, reconn) {\n            conn && this.prototype._after_fast_connected_plugins.push(func);\n        }\n    });\n\nxabber.Accounts = Backbone.CollectionWithStorage.extend({\n    model: xabber.Account,\n    comparator: function (acc1, acc2) {\n        return acc1.settings.get('order') < acc2.settings.get('order') ? -1 : 1;\n    },\n\n    _initialize: function (models, options) {\n        this.settings_list = xabber.account_settings_list;\n        this.getEnabledList();\n        this.getConnectedList();\n        this.on(\"add\", this.onAdd, this);\n        this.on(\"destroy\", this.onDestroy, this);\n        this.on(\"change:enabled\", this.getEnabledList, this);\n        this.on(\"update_order\", this.onUpdatedOrder, this);\n        this.on(\"add destroy activate deactivate\", this.onListChanged, this);\n        this.on(\"destroy deactivate\", this.onAccountDisconnected, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        xabber.on(\"quit_accounts\", this.onQuitAccounts, this);\n        this.settings_list.on(\"add_settings\", this.onSettingsAdded, this);\n        xabber.api_account && xabber.api_account.on(\"settings_result\", function (result) {\n            result && this.trigger('update_order');\n        }, this);\n    },\n\n    onQuit: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            account.deleteAccount();\n            account.password_view.closeModal();\n            utils.modals.clear_queue();\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    onQuitAccounts: function () {\n        xabber.api_account && xabber.api_account.revoke_token();\n        _.each(_.clone(this.models), function (account) {\n            if (account.settings.get('to_sync')) {\n                account.deleteAccount();\n                account.password_view.closeModal();\n                utils.modals.clear_queue();\n            }\n        });\n        !this.models.length && xabber.body.setScreen('login');\n    },\n\n    getEnabledList: function () {\n        this.enabled = this.filter(account => account.get('enabled'));\n    },\n\n    getConnectedList: function () {\n        this.connected = this.filter(account => account.isConnected());\n    },\n\n    onListChanged: function () {\n        this.getEnabledList();\n        this.getConnectedList();\n        this.trigger('list_changed', this);\n    },\n\n    onAdd: function (account) {\n        if (account.is_invalid)\n            account.destroy();\n    },\n\n    onDestroy: function (account) {\n        if (!account.get('is_new')) {\n            let no_accounts = !(this.length || xabber.api_account && xabber.api_account.get('connected'));\n            if (no_accounts) {\n                xabber.body.setScreen('login');\n            } else if (account.show_settings_after_delete) {\n                xabber.body.setScreen('settings');\n            } else {\n                xabber.body.setScreen('all-chats');\n                xabber.chats_view.showAllChats();\n            }\n        }\n    },\n\n    onAccountDisconnected: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n        xabber.recountAllMessageCounter();\n    },\n\n    onSettingsAdded: function (settings) {\n        let jid = settings.get('jid');\n        if (!this.get(jid))\n            this.create({jid: jid});\n    },\n\n    onUpdatedOrder: function () {\n        this.sort();\n        this.getEnabledList();\n        this.getConnectedList();\n    },\n\n    getLastOrder: function () {\n        return this.length ? this.last().settings.get('order') : 0;\n    },\n\n    getDefaultColor: function () {\n        let used_colors = {}, colors = constants.MATERIAL_COLORS;\n        this.each(function (account) {\n            used_colors[account.settings.get('color')] = true;\n        });\n        for (let idx = 0; idx < colors.length; idx++) {\n            if (!used_colors[colors[idx]])\n                return colors[idx];\n        }\n        return 'red';\n    },\n\n    moveBefore: function (acc1, acc2) {\n        let index2 = this.indexOf(acc2),\n            prev_order = index2 > 0 ? this.at(index2-1).settings.get('order') : 0;\n        acc1.settings.save('order', (acc2.settings.get('order') + prev_order)/2);\n        this._updateOrder();\n    },\n\n    moveToBottom: function (acc) {\n        acc.settings.save('order', this.getLastOrder() + 1);\n        this._updateOrder();\n    },\n\n    _updateOrder: function () {\n        this.sort();\n        this.each(function (acc, index) {\n            acc.settings.save({order: index + 1});\n        });\n        this.trigger('update_order');\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            this.settings_list.order_timestamp.save('timestamp', utils.now());\n            xabber.api_account.synchronize_order_settings();\n        }\n    }\n});\n\nxabber.AccountToolbarItemView = xabber.BasicView.extend({\n    className: 'toolbar-item account-item',\n    template: templates.toolbar_item,\n    avatar_size: constants.AVATAR_SIZES.TOOLBAR_ACCOUNT_ITEM,\n\n    events: {\n        'click .filter-chats': 'filterChats',\n        'click .circle-avatar': 'showSettings'\n    },\n\n    _initialize: function () {\n        this.updateConnected();\n        this.updateAuthState();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.$el.attr('data-jid', this.model.get('jid'));\n        this.model.session.on(\"change:auth_failed\", this.updateAuthState, this);\n        this.model.session.on(\"change:connected\", this.updateConnected, this);\n        this.model.on(\"change:status\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"filter_chats\", this.setActive, this);\n        this.model.on(\"open_settings\", this.setActive, this);\n    },\n\n    updateConnected: function () {\n        this.$el.switchClass('disconnected', !this.model.isConnected());\n    },\n\n    updateAuthState: function () {\n        let auth_failed = this.model.session.get('auth_failed');\n        this.$('.status').hideIf(auth_failed);\n        this.$('.auth-failed').showIf(auth_failed);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showSettings: function () {\n        let scroll_top = xabber.toolbar_view.getScrollTop();\n        this.model.showSettings();\n        xabber.toolbar_view.scrollTo(scroll_top);\n    },\n\n    filterChats: function (ev) {\n        let scroll_top = xabber.toolbar_view.getScrollTop();\n        ev.stopPropagation();\n        xabber.chats_view.showChatsByAccount(this.model);\n        this.model.trigger('filter_chats');\n        xabber.toolbar_view.scrollTo(scroll_top);\n    },\n\n    setActive: function () {\n        xabber.toolbar_view.$('.toolbar-item').removeClass('active');\n        this.$el.addClass('active');\n    }\n});\n\nxabber.ToolbarAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.model.on(\"add change:enabled\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n    },\n\n    updateList: function (account) {\n        _.each(this.children, function (view) { view.detach(); });\n        _.each(this.model.enabled, (account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            !view && (view = this.addChild(jid, xabber.AccountToolbarItemView, {model: account}));\n            this.$el.append(view.$el);\n        });\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid');\n        if (account.get('enabled')) {\n            let view = this.child(jid);\n            if (view) {\n                view.$el.detach();\n            } else {\n                view = this.addChild(jid, xabber.AccountToolbarItemView,\n                    {model: account});\n            }\n            let index = this.model.enabled.indexOf(account);\n            if (index === 0) {\n                this.$el.prepend(view.$el);\n            } else {\n                this.$('.account-item').eq(index - 1).after(view.$el);\n            }\n        } else {\n            account.last_msg_timestamp = 0;\n            this.removeChild(jid);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.parent.updateScrollBar();\n    }\n});\n\nxabber.Resource = Backbone.Model.extend({\n    idAttribute: 'resource',\n    defaults: {\n        priority: 0\n    }\n});\n\nxabber.ResourceView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.ResourceRightView = xabber.BasicView.extend({\n    className: 'resource-wrap',\n    template: templates.resource_right,\n\n    _initialize: function (options) {\n        this.update();\n        this.model.on(\"change\", this.update, this);\n    },\n\n    update: function () {\n        let attrs = this.model.attributes;\n        this.$('.status').attr('data-status', attrs.status);\n        this.$('.status-message').text(attrs.status_message || xabber.getString(attrs.status));\n        this.$('.client').text(attrs.client || xabber.getString(\"please_wait\"));\n        this.$('.resource').text(attrs.resource);\n        this.$('.priority').text(attrs.priority);\n        return this;\n    }\n});\n\nxabber.Resources = Backbone.Collection.extend({\n    model: xabber.Resource,\n    comparator: function (r1, r2) {\n        let p1 = r1.get('priority'), p2 = r2.get('priority');\n        return p1 > p2 ? -1 : (p1 < p2 ? 1 : 0);\n    },\n\n    requestInfo: function (resource, callback) {\n        let jid = this.jid + '/' + resource.get('resource');\n        if (this.connection && this.connection.connected) {\n            this.connection.disco.info(jid, null, (iq) => {\n                let $identity = $(iq).find('identity[category=client]');\n                if ($identity.length)\n                    resource.set('client', $identity.attr('name'));\n                this.attention_supported = this.isFeatureSupported(iq, Strophe.NS.ATTENTION);\n                callback && callback();\n            });\n        }\n    },\n\n    isFeatureSupported: function (stanza, ns) {\n        let $stanza = $(stanza), is_supported = false;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            if (namespace === ns)\n                is_supported = true;\n        });\n        return is_supported;\n    },\n});\n\nxabber.ResourcesView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.renderByInit();\n        this.model.on(\"add\", this.onResourceAdded, this);\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onPriorityChanged: function (resource) {\n        this.model.sort();\n        this.updatePosition(resource);\n    }\n});\n\nxabber.AccountResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.jid = options.account.get('jid');\n        this.connection = options.account.connection;\n    }\n});\n\nxabber.AccountResourcesView = xabber.ResourcesView.extend({\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.main-resource').after(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.AccountVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .btn-vcard-edit\": \"showEditView\",\n        \"click .details-icon\": \"onClickIcon\"\n    },\n\n    __initialize: function () {\n        this.updateButtons();\n        this.model.on(\"activate deactivate\", this.updateButtons, this);\n    },\n\n    updateButtons: function () {\n        let connected = this.model.isConnected();\n        this.$('.btn-vcard-edit').showIf(connected);\n        this.$('.btn-vcard-refresh').showIf(connected);\n    },\n\n    showEditView: function () {\n        this.model.showSettings('vcard_edit');\n    }\n});\n\nxabber.AccountMediaGalleryView = xabber.BasicView.extend({\n    template: templates.media_gallery_account,\n    events: {\n        \"change input.gallery-upload\": \"onFileInputChanged\",\n        \"click .gallery-file:not(.gallery-avatar) .btn-delete\": \"deleteFile\",\n        \"click .gallery-file.gallery-avatar .btn-delete\": \"deleteAvatar\",\n        \"click .tabs .tab\": \"onTabClick\",\n        \"click .btn-gallery-sorting\": \"sortFiles\",\n        \"click .gallery-file\": \"onClickFile\",\n    },\n\n    _initialize: function () {\n        this.account = this.model;\n        this.$el.html(this.template());\n        this.parent.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.on(\"update_avatar_list\", this.onUpdateAvatars.bind(this));\n    },\n\n    render: function () {\n        this.updateStorage();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings);\n    },\n\n    onScroll: function () {\n        if (this.$el.hasClass('hidden'))\n            return;\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && !this.loading_files && (this.current_page < this.total_pages)){\n            this.current_page++;\n            this.current_options.page = this.current_page;\n            this.getFiles(this.current_options)\n        }\n    },\n\n    updateStorage: function (after_deletion, after_avatar_update) {\n        this.account.getStorageStats(null,(response) => {\n            let used_storage = utils.pretty_size(response.total.used) || '0';\n            this.$('.btn-delete-files-dropdown').hideIf(!(response.total && response.total.used))\n            this.$('.gallery-manage-storage').hideIf(!(response.total && response.total.used))\n            this.$('.storage-usage').html(used_storage + xabber.getString(\"of\") + utils.pretty_size(response.quota))\n            if (!after_avatar_update){\n                this.$('.tabs .list-variant[data-value=\"image\"]').hideIf(!(response.images && response.images.used))\n                if (response.images && response.images.used)\n                    this.$('.tabs .list-variant[data-value=\"image\"]').addClass('tab')\n                else\n                    this.$('.tabs .list-variant[data-value=\"image\"]').removeClass('tab')\n            }\n            this.$('.storage-label-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images').hideIf(!(response.images && response.images.used))\n            this.$('.storage-usage-images .storage-usage-amount').html(utils.pretty_size(response.images.used))\n            this.$('.tabs .list-variant[data-value=\"video\"]').hideIf(!(response.videos && response.videos.used))\n            if (response.videos && response.videos.used)\n                this.$('.tabs .list-variant[data-value=\"video\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"video\"]').removeClass('tab')\n            this.$('.storage-label-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos').hideIf(!(response.videos && response.videos.used))\n            this.$('.storage-usage-videos .storage-usage-amount').html(utils.pretty_size(response.videos.used))\n            this.$('.tabs .list-variant[data-value=\"voice\"]').hideIf(!(response.voices && response.voices.used))\n            if (response.voices && response.voices.used)\n                this.$('.tabs .list-variant[data-value=\"voice\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"voice\"]').removeClass('tab')\n            this.$('.storage-label-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices').hideIf(!(response.voices && response.voices.used))\n            this.$('.storage-usage-voices .storage-usage-amount').html(utils.pretty_size(response.voices.used))\n            this.$('.tabs .list-variant[data-value=\"files\"]').hideIf(!(response.files && response.files.used))\n            if (response.files && response.files.used)\n                this.$('.tabs .list-variant[data-value=\"files\"]').addClass('tab')\n            else\n                this.$('.tabs .list-variant[data-value=\"files\"]').removeClass('tab')\n            this.$('.storage-label-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files').hideIf(!(response.files && response.files.used))\n            this.$('.storage-usage-files .storage-usage-amount').html(utils.pretty_size(response.files.used))\n            if (response.images){\n                this.$('.storage-progress-images').css('width', ((response.images.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.videos){\n                this.$('.storage-progress-videos').css('width', ((response.videos.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.voices){\n                this.$('.storage-progress-voices').css('width', ((response.voices.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            if (response.files){\n                this.$('.storage-progress-files').css('width', ((response.files.used/response.quota) * 100).toFixed(2) + '%')\n            }\n            this.$('.tabs .indicator').remove();\n            this.$('.tabs').tabs();\n            this.$('.indicator').addClass('ground-color-500');\n            if (after_deletion){\n                if (!this.$('.tabs .list-variant.tab').length) {\n                    return;\n                }\n                !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            }\n        });\n    },\n\n    filterType: function (file_type, sorting) {\n        this.$('.gallery-files').html('')\n        if (file_type === 'image' || file_type === 'video' || file_type === 'avatars') {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').addClass('grid')\n        } else if (file_type === 'voice') {\n            this.$('.gallery-files').addClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        } else {\n            this.$('.gallery-files').removeClass('voice')\n            this.$('.gallery-files').removeClass('grid')\n        }\n        this.$('.tabs .list-variant a').removeClass('active');\n        this.$('.tabs .list-variant[data-value=\"' + file_type + '\"] a').addClass('active');\n        let options = {type: file_type}\n        sorting && (options.order_by = sorting)\n        this.current_options = options\n        if (file_type === 'avatars')\n            this.getAvatars(options)\n        else\n            this.getFiles(options)\n    },\n\n    onTabClick: function (ev) {\n        let $target = $(ev.target).closest('.tab'),\n            file_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type);\n    },\n\n    onUpdateAvatars: function (ev) {\n        this.updateStorage(false, true);\n        if (this.$('.tab .active').closest('.tab').attr('data-value') === 'avatars'){\n            this.current_page = 1;\n            this.total_pages = 0;\n            this.$('.gallery-files').html('');\n            this.filterType('avatars');\n        }\n    },\n\n    sortFiles: function (ev) {\n        let $target = $(ev.target).closest('.btn-gallery-sorting'),\n            file_type = this.$('.tab .active').closest('.tab').attr('data-value'),\n            sort_type = $target.attr('data-value');\n        this.current_page = 1;\n        this.total_pages = 0;\n        this.$('.gallery-files').html('')\n        this.filterType(file_type, sort_type);\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('uploaded-video')) {\n            let $file = $elem.closest('.gallery-file'),\n                f_url = $file.attr('data-file');\n\n            utils.dialogs.common('', '<video class=\"gallery-video-frame\" controls autoplay=1 width=\"420\" height=\"315\" src=\"' + f_url +'\"></video>', null, null, null, 'gallery-video-modal')\n            return;\n        }\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n\n        if ($elem.hasClass('mdi-play')) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n\n        if ($elem.hasClass('mdi-pause')) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    getFiles: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id'}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined;\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    getAvatars: function (options) {\n        this.account.testGalleryTokenExpire(() => {\n            options && options.file && (options = {});\n            options = Object.assign({obj_per_page: 50, order_by: '-id', type: \"avatars\"}, options);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n                if (this.loading_files && this.current_rendered_type === options.type && !options.page)\n                    return;\n                this.current_rendered_type = options.type;\n                this.loading_files = true\n                $(env.templates.contacts.preloader()).appendTo(this.$('.gallery-files'))\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    data: options,\n                    success: (response) => {\n                        response.type = options.type\n                        this.renderFiles(response)\n                        this.loading_files = false\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        this.current_rendered_type = undefined\n                        console.log(response)\n                        this.loading_files = false\n                        this.$('.gallery-files .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    renderFiles: function (response) {\n        if (response.type != this.$('.tab .active').closest('.tab').attr('data-value'))\n            return;\n        if (!response.total_objects && response.type != 'avatars'){\n            if (response.type){\n                let tab = this.$('.tabs .list-variant[data-value=' + response.type + ']');\n                tab.removeClass('tab');\n                tab.addClass('hidden');\n                this.$('.tabs .indicator').remove();\n                this.$('.tabs').tabs();\n                this.$('.indicator').addClass('ground-color-500');\n            }\n        }\n        if (!response.items.length){\n            !this.$('.gallery-files').children('.gallery-file').length && this.$('.tabs .list-variant.tab a').first().click();\n            return;\n        }\n        this.total_pages = response.total_pages;\n        this.$('.gallery-files .preloader-wrapper').remove()\n        if (response.items.length){\n            response.items.forEach((item) => {\n                item.thumbnail && item.thumbnail.url && (item.thumbnail = item.thumbnail.url);\n                let $gallery_file = $(templates.media_gallery_account_file({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                (response.type === 'avatars') && $gallery_file.addClass('gallery-avatar');\n                $gallery_file.appendTo(this.$('.gallery-files'));\n                $gallery_file.find('.uploaded-img').length && $gallery_file.find('.uploaded-img').magnificPopup({\n                    type: 'image',\n                    closeOnContentClick: true,\n                    fixedContentPos: true,\n                    mainClass: 'mfp-no-margins mfp-with-zoom',\n                    image: {\n                        verticalFit: true,\n                        titleSrc: function(item) {\n                            return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                        }\n                    },\n                    zoom: {\n                        enabled: true,\n                        duration: 300\n                    }\n                });\n            });\n        }\n        else {\n            this.$('.gallery-files').html(xabber.getString(\"no_files\"))\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.dropdown-button').dropdown(dropdown_settings)\n    },\n\n    deleteFile: function (ev) {\n        let $target = $(ev.target).closest('.gallery-file'),\n            file_id = $target.attr('data-id');\n        this.account.deleteFile(file_id,(response) => {\n            this.updateStorage(true);\n            $target.detach();\n        }, (err) => {\n        })\n    },\n\n    deleteAvatar: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.gallery-file'),\n                file_id = $target.attr('data-id');\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && file_id)\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    data: JSON.stringify({id: file_id}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                        $target.detach();\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    deleteFilesFiltered: function (ev) {\n        this.account.testGalleryTokenExpire(() => {\n            let $target = $(ev.target).closest('.property-variant'),\n                days = $target.attr('data-date'),\n                date = new Date();\n            days && date.setDate(date.getDate() - days)\n            if (this.account.get('gallery_token') && this.account.get('gallery_url') && date && date.toISOString().split('T') && date.toISOString().split('T')[0])\n                $.ajax({\n                    type: 'DELETE',\n                    headers: {\"Authorization\": 'Bearer ' + this.account.get('gallery_token')},\n                    url: this.account.get('gallery_url') + 'v1/files/',\n                    dataType: 'json',\n                    data: JSON.stringify({date_lte: date.toISOString().split('T')[0]}),\n                    success: (response) => {\n                        this.updateStorage(true);\n                    },\n                    error: (response) => {\n                        this.account.handleCommonGalleryErrors(response)\n                        console.log(response)\n                    }\n                });\n        });\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files) {\n            this.account.prepareFiles(files, this.openStoragePanel.bind(this));\n            $(target).val('')\n        }\n    },\n});\n\nxabber.AccountSettingsLeftView = xabber.BasicView.extend({\n    className: 'account-settings-left-wrap',\n    template: templates.settings_left,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_SETTINGS_LEFT,\n\n    events: {\n        \"change .main-info-wrap .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click .main-info-wrap .status\": \"openChangeStatus\",\n        \"click .settings-tabs-wrap .settings-tab\": \"jumpToBlock\",\n        \"click .settings-tab.delete-account\": \"deleteAccount\"\n    },\n\n    _initialize: function () {\n        this.status_field = new xabber.StatusMessageWidget({\n            el: this.$('.status-wrap')[0],\n            model: this.model\n        });\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateBlocks();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:gallery_token\", this.updateGallery, this);\n        this.model.on(\"activate deactivate\", this.updateBlocks, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.$el.switchClass('vcard-edit', options.right == 'vcard_edit');\n        this.$('.settings-tab[data-block-name=\"tokens\"]').hideIf(this.model.get('auth_type') !== 'x-token');\n        this.$('.settings-tab').removeClass('active');\n        this.$(`.settings-tab[data-block-name=\"${options.block_name}\"]`).addClass('active');\n        this.$('.circle-avatar.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n\n        this.updateCSS();\n        return this;\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n        this.updateNameCSS();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info-wrap .status').attr('data-status', this.model.get('status'));\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateBlocks: function () {\n        let connected = this.model.isConnected();\n        this.$('.main-info-wrap').switchClass('disconnected', !connected);\n        // this.$('.settings-tab[data-block-name=\"xmpp-resources\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"server-info\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"blocklist\"]').showIf(connected);\n        this.$('.settings-tab[data-block-name=\"groups-info\"]').showIf(connected);\n        this.updateGallery();\n        this.updateScrollBar();\n    },\n\n    updateGallery: function () {\n        let connected = this.model.isConnected();\n        this.$('.settings-tab[data-block-name=\"media-gallery\"]').showIf(connected && this.model.get('gallery_token'));\n    },\n\n    updateNameCSS: function () {\n        if (!this.isVisible())\n            return;\n        let $name = this.$('.name');\n        $name.removeAttr('style');\n        let wrap_width = this.$('.name-wrap').width(),\n            width = $name.width(),\n            font_size = 22;\n        while (width > wrap_width && font_size > 12) {\n            $name.css({'font-size': font_size});\n            width = $name.width();\n            font_size -= 2;\n        }\n        $name.css({'margin-left': (wrap_width - width) / 2});\n    },\n\n    chooseAvatar: function () {\n        if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n            let avatar_view = new xabber.SetAvatarView();\n            avatar_view.render({model: this.model});\n        } else\n            this.$('.main-info-wrap .circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.model});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.model});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE && !(this.model.get('gallery_token') && this.model.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        this.$('.circle-avatar').find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image, hash, size) => {\n            if (image) {\n                this.model.pubAvatar({base64: image, hash: hash, size: size, type: file.type, file: file}, () => {\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                    }, () => {\n                        this.$('.circle-avatar').find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                    });\n            } else\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n        });\n    },\n\n    updateCSS: function () {\n        this.updateNameCSS();\n    },\n\n    openChangeStatus: function () {\n        !xabber.change_status_view && (xabber.change_status_view = new xabber.ChangeStatusView());\n        xabber.change_status_view.open(this.model);\n    },\n\n    jumpToBlock: function (ev) {\n        let $tab = $(ev.target).closest('.settings-tab'),\n            block_name = $tab.data('block-name');\n        if (block_name === 'vcard_edit'){\n            this.model.showSettings(block_name, 'vcard');\n            this.$('.settings-tab').removeClass('active');\n            $tab.addClass('active');\n        }\n        else if (block_name === 'media-gallery'){\n            this.model.showSettings(null, block_name);\n            this.model.settings_right.gallery_view.$('.tabs .list-variant:not(.hidden)').first().click();\n        }\n        else\n            this.model.showSettings(null, block_name);\n    },\n\n    deleteAccount: function () {\n        let dialog_options = [];\n        if (xabber.api_account && xabber.api_account.get('connected')) {\n            dialog_options = [{name: 'delete_settings',\n                checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"dialog_delete_account__label_delete_synced_settings\")}];\n        }\n        utils.dialogs.ask(xabber.getString(\"settings_account__button_quit_account\"), xabber.getString(\"dialog_quit_account__confirm\"),\n            dialog_options, { ok_button_text: xabber.getString(\"button_quit\")}).done((res) => {\n            if (!res)\n                return;\n            if (res.delete_settings && xabber.api_account) {\n                if (xabber.api_account.get('xmpp_binding') === this.model.get('jid'))\n                    xabber.api_account._call_method('DELETE', '/accounts/current/client-settings/', {jid: this.model.get('jid')});\n                else\n                    xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n            this.model.deleteAccount();\n        });\n    }\n});\n\nxabber.AccountSettingsRightView = xabber.BasicView.extend({\n    className: 'account-settings-right-wrap',\n    template: templates.settings_right,\n    ps_selector: '.panel-content',\n\n    events: {\n        \"change .enabled-state input\": \"setEnabled\",\n        \"change .setting-send-chat-states input\": \"setTypingNotification\",\n        \"change .setting-use-omemo input\": \"setEnabledOmemo\",\n        \"click .btn-change-password\": \"showPasswordView\",\n        \"click .btn-reconnect\": \"reconnect\",\n        \"click\": \"hideResources\",\n        \"click .last-auth.resource\": \"showResources\",\n        \"change .sync-account\": \"changeSyncSetting\",\n        \"click .btn-delete-settings\": \"deleteSettings\",\n        \"change .color-scheme input[type=radio][name=account_color]\": \"changeColor\",\n        \"click .token-wrap .btn-revoke-token\": \"revokeXToken\",\n        \"click .tokens .btn-revoke-all-tokens\": \"revokeAllXTokens\",\n        \"click .omemo-info .btn-manage-devices\": \"openDevicesWindow\",\n        \"click .btn-block\": \"openBlockWindow\",\n        \"click .btn-unblock-selected\": \"unblockSelected\",\n        \"click .btn-deselect-blocked\": \"deselectBlocked\",\n        \"click .btn-delete-files\": \"deleteFilesFiltered\",\n        \"click .omemo-info .btn-purge-keys\": \"purgeKeys\"\n    },\n\n    _initialize: function () {\n        // this.resources_view = this.addChild('resources', xabber.AccountResourcesView,\n        //     {model: this.model.resources, el: this.$('.xmpp-resources')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.AccountVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.gallery_view = this.addChild('media-gallery', xabber.AccountMediaGalleryView,\n            {model: this.model, el: this.$('.media-gallery')[0]});\n        this.$('.account-name .value').text(this.model.get('jid'));\n        this.updateStatus();\n        this.updateView();\n        this.showConnectionStatus();\n        this.updateSynchronizationBlock();\n\n        this.model.resources.on(\"change\", this.updateXTokens, this);\n        this.model.resources.on(\"add\", this.updateXTokens, this);\n        this.model.resources.on(\"destroy\", this.updateXTokens, this);\n        this.model.session.on(\"change:reconnecting\", this.updateReconnectButton, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.model.settings.on(\"change:to_sync\", this.updateSyncOption, this);\n        this.model.settings.on(\"change:deleted\", this.updateDelSettingsButton, this);\n        this.model.settings.on(\"change:to_sync change:synced\", this.updateSyncState, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSynchronizationBlock, this);\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.settings.on(\"change:encrypted_chatstates\", this.updateEncryptedChatstates, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"activate deactivate\", this.updateView, this);\n        this.model.on(\"change:auth_type\", this.updateView, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function (options) {\n        !options.block_name && (options.block_name = 'connection')\n        this.updateEnabledOmemo();\n        this.updateEncryptedChatstates();\n        this.updateEnabled();\n        this.updateXTokens();\n        this.updateView();\n        this.$('.main-resource .client').text(xabber.get('client_name'));\n        this.$('.main-resource .resource').text(this.model.resource);\n        this.$('.main-resource .priority').text(this.model.get('priority'));\n        this.$(`.color-scheme input[type=radio][name=account_color][value=\"${this.model.settings.get('color')}\"]`)\n            .prop('checked', true);\n        if (options.block_name){\n            this.$('.settings-block-wrap').addClass('hidden');\n            this.$('.settings-block-wrap.'+options.block_name).removeClass('hidden');\n            this.$('.settings-panel-head span.settings-panel-head-title').text(this.$('.settings-block-wrap.'+options.block_name).attr('data-header'));\n            this.$('.btn-block').switchClass('hidden2', options.block_name != 'blocklist-info');\n            this.$('.media-gallery-button.btn-more').hideIf(options.block_name != 'media-gallery');\n            if (options.block_name === 'media-gallery') {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'right'\n                };\n                this.$('.media-gallery-button.dropdown-button').dropdown(dropdown_settings);\n\n                this.$('.btn-delete-files-variants').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    hover: true,\n                    belowOrigin: true,\n                });\n            }\n        }\n        this.scrollToChild(this.$('.settings-block-wrap.'+options.block_name));\n        this.$('.panel-content-wrap').removeClass('hidden');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        return this;\n    },\n\n    updateStatus: function () {\n        let account = this.model,\n            status = account.get('status'),\n            status_message = account.getStatusMessage();\n        this.$('.main-resource .status').attr('data-status', status);\n        this.$('.main-resource .status-message').text(status_message);\n    },\n\n    updateView: function () {\n        let connected = this.model.isConnected();\n        this.$('.connection-wrap .buttons-wrap .btn-change-password').hideIf(this.model.get('auth_type') === 'x-token');\n        this.$('.connection-wrap .buttons-wrap .btn-reconnect').hideIf(this.model.get('auth_type') === 'x-token');\n        this.updateScrollBar();\n    },\n\n    updateSynchronizationBlock: function () {\n        this.$('.xabber-account-features-wrap').showIf(xabber.api_account && xabber.api_account.get('connected'));\n        this.updateSyncState();\n        this.updateSyncOption();\n        this.updateDelSettingsButton();\n    },\n\n    showResources: function (ev) {\n        this.$(`.token-resource-wrap`).hideIf(true)\n        let resource_id = $(ev.target).attr('data-resource-id');\n        this.$(`.token-resource-wrap[data-resource-id=\"${resource_id}\"]`).hideIf(false)\n    },\n\n    hideResources: function (ev) {\n        if (!($(ev.target).hasClass('last-auth') && $(ev.target).hasClass('resource') || $(ev.target).closest(\".token-resource-wrap\").length > 0))\n            this.$(`.token-resource-wrap`).hideIf(true)\n    },\n\n    renderAllXTokens: function () {\n        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n        $(_.sortBy(this.model.x_tokens_list), 'last_auth').each((idx, token) => {\n            let pretty_token = {\n                resource_obj: undefined,\n                client: token.client,\n                device: token.device,\n                token_uid: token.token_uid,\n                ip: token.ip,\n                last_auth: pretty_datetime(token.last_auth),\n                expire: pretty_datetime(token.expire)\n            };\n            let resource_obj = this.model.resources.findWhere({ token_uid: token.token_uid });\n            if (resource_obj)\n                pretty_token.resource_obj = resource_obj.toJSON();\n            if (this.model.get('x_token')) {\n                if (this.model.get('x_token').token_uid == token.token_uid) {\n                    let $cur_token_html = $(templates.current_token_item(pretty_token));\n                    this.$('.panel-content-wrap .tokens .current-session').append($cur_token_html);\n                    return;\n                }\n            }\n            let $token_html = $(templates.token_item(pretty_token));\n            this.$('.panel-content-wrap .tokens .all-sessions').append($token_html);\n        });\n        if (this.$('.panel-content-wrap .tokens .all-sessions').children().length)\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').removeClass('hidden');\n        else\n            this.$('.panel-content-wrap .tokens .all-sessions-wrap').addClass('hidden');\n    },\n\n    updateXTokens: function () {\n        if (this.model.get('auth_type') !== 'x-token') {\n            this.$('.panel-content-wrap .tokens').addClass('hidden');\n            this.$('.panel-content-wrap .tokens .sessions-wrap').children().html(\"\");\n            return;\n        }\n        this.$('.panel-content-wrap .tokens .sessions-wrap').html(\"\");\n        if (this.model.x_tokens_list && this.model.x_tokens_list.length) {\n            this.renderAllXTokens();\n        }\n    },\n\n    revokeXToken: function (ev) {\n        let $target = $(ev.target).closest('.token-wrap'),\n            token_uid = $target.data('token-uid');\n        this.model.revokeXToken([token_uid], () => {\n            if (this.model.get('x_token'))\n                if (this.model.get('x_token').token_uid === token_uid) {\n                    this.model.deleteAccount();\n                    return;\n                }\n            this.model.getAllXTokens();\n        });\n    },\n\n    revokeAllXTokens: function () {\n        utils.dialogs.ask(xabber.getString(\"settings_account__dialog_terminate_sessions__header\"), xabber.getString(\"terminate_all_sessions_title\"), null, { ok_button_text: xabber.getString(\"button_terminate\")}).done((result) => {\n            if (result && this.model.x_tokens_list)\n                this.model.revokeAllXTokens(() => {\n                    this.model.getAllXTokens();\n                });\n        });\n    },\n\n    updateSyncState: function () {\n        let state;\n        if (!this.model.settings.get('to_sync'))\n            state = 'off';\n        else\n            state = this.model.settings.get('synced') ? 'yes' : 'no';\n        this.$('.sync-status').text(xabber.getString(constants.SYNCED_STATUS_DATA[state].tip));\n        let mdiclass = constants.SYNCED_STATUS_DATA[state].icon,\n            $sync_icon = this.$('.sync-status-icon');\n        $sync_icon.removeClass($sync_icon.attr('data-mdiclass'))\n            .attr('data-mdiclass', mdiclass).addClass(mdiclass);\n    },\n\n    updateSyncOption: function () {\n        this.$('.sync-account').prop('checked', this.model.settings.get('to_sync'));\n    },\n\n    updateDelSettingsButton: function () {\n        this.$('.btn-delete-settings').hideIf(this.model.settings.get('deleted'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateEnabledOmemo: function () {\n        let enabled = this.model.settings.get('omemo'), has_keys = false;\n        if (this.model.omemo) {\n            has_keys = Object.keys(this.model.omemo.get('prekeys')).length;\n        } else {\n            let omemo = new xabber.Omemo({id: 'omemo'}, {\n                account: this.model,\n                storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                fetch: 'before'\n            });\n            has_keys = Object.keys(omemo.get('prekeys')).length;\n            omemo.destroy();\n        }\n        if (_.isUndefined(enabled))\n            enabled = false;\n        if (enabled && this.model.omemo_enable_view)\n            this.model.omemo_enable_view.close();\n        this.$('.setting-use-omemo input[type=checkbox]').prop('checked', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        this.$('.omemo-settings-wrap .setting-wrap.purge-keys').switchClass('hidden', !has_keys);\n    },\n\n    updateEncryptedChatstates: function () {\n        let enabled = this.model.settings.get('encrypted_chatstates');\n        this.$('.setting-send-chat-states input[type=checkbox]').prop('checked', enabled);\n    },\n\n    updateReconnectButton: function () {\n        this.$('.btn-reconnect').switchClass('disabled', this.model.session.get('reconnecting'));\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    setEnabledOmemo: function () {\n        let enabled = this.$('.setting-use-omemo input').prop('checked');\n        this.model.settings.save('omemo', enabled);\n        this.$('.omemo-settings-wrap .setting-wrap:not(.omemo-enable)').switchClass('hidden', !enabled);\n        if (enabled)\n            this.initOmemo();\n        else\n            this.destroyOmemo();\n    },\n\n    setTypingNotification: function () {\n        let enabled = this.$('.setting-send-chat-states input').prop('checked');\n        this.model.settings.save('encrypted_chatstates', enabled);\n    },\n\n    initOmemo: function () {\n        this.model.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.model,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.model.omemo.onConnected();\n        }, 1000);\n    },\n\n    destroyOmemo: function () {\n        this.model.omemo.destroy();\n        this.model.omemo = undefined;\n    },\n\n    openDevicesWindow: function () {\n        if (this.model.omemo) {\n            !this.omemo_devices && (this.omemo_devices = new xabber.Fingerprints({model: this.model.omemo}));\n            this.omemo_devices.open();\n        }\n        else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    purgeKeys: function () {\n        utils.dialogs.ask(xabber.getString('omemo__dialog_purge_keys__header'), xabber.getString('omemo__dialog_purge_keys__text'),\n            null, { ok_button_text: xabber.getString('omemo__dialog_purge_keys__button_purge_keys')}).done((result) => {\n            if (result) {\n                if (this.model.omemo) {\n                    let device_id = this.model.omemo.get('device_id');\n                    this.model.omemo.save('prekeys', {});\n                    this.model.omemo.bundle && (this.model.omemo.bundle.preKeys = []);\n                    if (this.model.omemo.own_devices[device_id]) {\n                        this.model.omemo.own_devices[device_id].preKeys = [];\n                        this.model.omemo.own_devices[device_id].set({ik: null, fingerprint: null});\n                    }\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                } else {\n                    let omemo = new xabber.Omemo({id: 'omemo'}, {\n                        account: this.model,\n                        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.model.get('jid'),\n                        fetch: 'before'\n                    });\n                    omemo.save('prekeys', {});\n                    this.model.getConnectionForIQ().omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, omemo.get('device_id'));\n                    omemo.destroy();\n                }\n                this.$('.omemo-settings-wrap .setting-wrap.purge-keys').switchClass('hidden', true);\n            }\n        });\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    showPasswordView: function () {\n        this.model.password_view.show();\n    },\n\n    reconnect: function () {\n        if (this.model.session.get('reconnecting'))\n            return;\n        this.model.save('enabled', true);\n        if (this.model.connection.connected)\n            this.model.connection.disconnect();\n        else\n            this.model.connect();\n    },\n\n    changeSyncSetting: function (ev) {\n        let to_sync = $(ev.target).prop('checked'),\n            settings = this.model.settings;\n        settings.save('to_sync', to_sync);\n        if (to_sync) {\n            settings.update_timestamp();\n            xabber.api_account && xabber.api_account.synchronize_main_settings();\n        }\n    },\n\n    deleteSettings: function () {\n        utils.dialogs.ask(xabber.getString(\"progress_title_delete_settings\"), xabber.getString(\"delete_settings_summary\"),\n            [{name: 'delete_account', checked: this.model.settings.get('to_sync'),\n                text: xabber.getString(\"delete_settings__optional_button__delete_synced_account\")}],{ ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n            if (res) {\n                if (!res.delete_account) {\n                    this.model.settings.save('to_sync', false);\n                } else if (!this.model.settings.get('to_sync')) {\n                    this.model.deleteAccount(true);\n                }\n                xabber.api_account && xabber.api_account.delete_settings(this.model.get('jid'));\n            }\n        });\n    },\n\n    changeColor: function (ev) {\n        let value = ev.target.value;\n        this.model.settings.update_settings({color: value});\n    },\n\n    openBlockWindow: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"dialog_block_xmpp_address__text\"), null, {modal_class: 'account-add-blocked', input_placeholder_value: xabber.getString(\"dialog_block_xmpp_address__hint_address\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let contact = this.model.contacts.get(result);\n                if (contact)\n                    contact.block();\n                else {\n                    this.model.contacts.blockContact(result);\n                }\n            }\n        });\n    },\n\n    unblockSelected: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.unblockSelected();\n    },\n\n    deselectBlocked: function () {\n        if (this.children && this.children.blocklist)\n            this.children.blocklist.deselectBlocked();\n    },\n\n    deleteFilesFiltered: function (ev) {\n        if (this.gallery_view)\n            this.gallery_view.deleteFilesFiltered(ev);\n    },\n});\n\nxabber.StatusMessageWidget = xabber.InputWidget.extend({\n    field_name: 'status-message',\n    placeholder: 'Set custom status',\n\n    bindModelEvents: function () {\n        this.model.on(\"change:status_updated\", this.updateValue, this);\n    },\n\n    getValue: function () {\n        return this.model.getStatusMessage();\n    },\n\n    setValue: function (value) {\n        this.model.setStatus(null, value);\n    }\n});\n\nxabber.AccountSettingsItemView = xabber.BasicView.extend({\n    className: 'xmpp-account draggable droppable',\n    template: templates.global_settings_item,\n    avatar_size: constants.AVATAR_SIZES.SETTINGS_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-info-wrap\": \"showSettings\",\n        \"change .enabled-state input\": \"setEnabled\",\n    },\n\n    _initialize: function () {\n        this.$('.jid').text(this.model.get('jid'));\n        this.updateEnabled();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateSyncState();\n        this.showConnectionStatus();\n        this.model.on(\"change:enabled\", this.updateEnabled, this);\n        this.model.settings.on(\"change:omemo\", this.updateEnabledOmemo, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.session.on(\"change:conn_feedback\", this.showConnectionStatus, this);\n        this.$el.on('drag_to', this.onDragTo.bind(this));\n        this.$('.move-account-to-this')\n            .on('move_xmpp_account', this.onMoveAccount.bind(this));\n        this.model.settings.on(\"change:to_sync\", this.updateSyncState, this);\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.model.settings.get('color'));\n    },\n\n    showConnectionStatus: function () {\n        this.$('.conn-status').text(this.model.session.get('conn_feedback'));\n    },\n\n    updateEnabled: function () {\n        let enabled = this.model.get('enabled');\n        this.$el.switchClass('disabled', !enabled);\n        this.$('.enabled-state input[type=checkbox]').prop('checked', enabled);\n    },\n\n    setEnabled: function (ev) {\n        let enabled = this.$('.enabled-state input').prop('checked');\n        this.model.save('enabled', enabled);\n        enabled ? this.model.activate() : this.model.deactivate();\n    },\n\n    onDragTo: function (ev, drop_elem) {\n        drop_elem && $(drop_elem).trigger('move_xmpp_account', this.model);\n    },\n\n    onMoveAccount: function (ev, account) {\n        this.model.collection.moveBefore(account, this.model);\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$el.find('.sync-marker').showIf(this.model.settings.get('to_sync'));\n    },\n\n    showSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.SettingsAccountsBlockView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.updateList();\n        this.updateSyncState();\n        this.model.on(\"add\", this.updateOneInList, this);\n        this.model.on(\"update_order\", this.updateList, this);\n        this.model.on(\"destroy\", this.onAccountRemoved, this);\n        xabber.api_account && xabber.api_account.on(\"change:connected\", this.updateSyncState, this);\n        this.$('.move-account-to-bottom')\n            .on('move_xmpp_account', this.onMoveAccountToBottom.bind(this));\n    },\n\n    updateList: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            if (!view) {\n                view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n            }\n            this.$('.no-accounts-tip').before(view.$el);\n        });\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    updateOneInList: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view)\n            view.$el.detach();\n        else\n            view = this.addChild(jid, xabber.AccountSettingsItemView, {model: account});\n        let index = this.model.indexOf(account);\n        if (index === 0)\n            this.$('.accounts-head-wrap').after(view.$el);\n        else\n            this.$('.xmpp-account').eq(index - 1).after(view.$el);\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    onAccountRemoved: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateHtml();\n        this.parent.updateScrollBar();\n    },\n\n    render: function () {\n        this.updateHtml();\n        _.each(this.children, function (view) {\n            view.updateEnabled();\n        });\n    },\n\n    updateHtml: function () {\n        this.$('.no-accounts-tip').hideIf(this.model.length);\n        this.$('.accounts-head-wrap').showIf(this.model.length);\n        this.parent.$('.settings-tab[data-block-name=\"xmpp-accounts\"] .settings-block-name')\n            .text(this.model.length === 1 ? xabber.getString(\"account\") : xabber.getString(\"settings__menu_item__xmpp_account\") );\n    },\n\n    updateSyncState: function () {\n        let connected = xabber.api_account && xabber.api_account.get('connected');\n        this.$('.sync-head').showIf(connected);\n        this.$('.sync-marker-wrap').showIf(connected);\n        this.$('.sync-head').hideIf(!connected);\n        this.$('.sync-marker-wrap').hideIf(!connected);\n    },\n\n    onMoveAccountToBottom: function (ev, account) {\n        this.model.moveToBottom(account);\n    }\n});\n\nxabber.ChangeStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.change_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\",\n        \"click .status-message-wrap .clear-input\": \"clearStatusMessageInput\",\n        \"keyup .status-message\": \"keyUp\",\n        \"change .apply-to-all\": \"changeApplyToAll\"\n    },\n\n    open: function (account) {\n        this.account = account;\n        this.highlightStatus(account.get('status'));\n        this.restoreStatusMessageInput();\n        this.show();\n    },\n\n    highlightStatus: function (status) {\n        this.$('.status-values li[data-value=\"'+status+'\"]').addClass('active')\n            .siblings().removeClass('active');\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    restoreStatusMessageInput: function () {\n        let status_message = this.account.get('status_message');\n        this.$('.status-message').val(status_message)\n            .switchClass('filled', status_message);\n        if (!status_message) {\n            this.$('.status-message').attr('placeholder', this.account.getStatusMessage());\n        }\n    },\n\n    clearStatusMessageInput: function () {\n        let verbose_status = xabber.getString(this.account.get('status'));\n        this.$('.status-message').val('').attr('placeholder', verbose_status)\n            .removeClass('filled');\n    },\n\n    keyUp: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            this.do_change();\n            this.closeModal();\n        } else {\n            let value = this.$('.status-message').val();\n            this.$('.status-message').switchClass('filled', value);\n        }\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value'),\n            status_message = this.$('.status-message').val();\n        if (this.apply_to_all) {\n            xabber.accounts.each(function (account) {\n                account.setStatus(status, status_message);\n            });\n        } else {\n            this.account.setStatus(status, status_message);\n        }\n    },\n\n    changeApplyToAll: function (ev) {\n        this.apply_to_all = $(ev.target).prop('checked');\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.SetAvatarView = xabber.BasicView.extend({\n    className: 'modal main-modal avatar-picker background-panel',\n    template: templates.avatars_gallery,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .menu-btn\": \"updateActiveMenu\",\n        \"click .library-wrap .image-item\": \"setActiveImage\",\n        'change input[type=\"file\"]': \"onFileInputChanged\",\n        'keyup input.url': \"onInputChanged\",\n        \"click .btn-add\": \"addAvatar\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n    },\n\n    render: function (options) {\n        this.model = options.model;\n        this.createLibrary();\n        this.$('.menu-btn').removeClass('active');\n        this.$('.menu-btn[data-screen-name=\"library\"]').addClass('active');\n        this.$('.modal-header span').text(xabber.getString(\"account_set_avatar_header\"));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n            },\n            complete: this.close.bind(this)\n        });\n        let draggable = this.$('.upload-wrap');\n        draggable[0].ondragenter = function (ev) {\n            ev.preventDefault();\n            draggable.addClass('file-drop');\n        };\n        draggable[0].ondragover = function (ev) {\n            ev.preventDefault();\n        };\n        draggable[0].ondragleave = function (ev) {\n            if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                return;\n            ev.preventDefault();\n            draggable.removeClass('file-drop');\n        };\n        draggable[0].ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            draggable.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [], file;\n            for (let i = 0; i < files.length; i++) {\n                if (utils.isImageType(files[i].type)) {\n                    file = files[i];\n                    break;\n                }\n            }\n            file && this.addFile(file);\n        };\n    },\n\n    onPaste: function (ev) {\n        let url = ev.clipboardData.getData('text').trim();\n        this.$('.image-preview img')[0].onload = () => {\n            this.$('.image-preview img').removeClass('hidden');\n            this.updateActiveButton();\n        };\n        this.$('.image-preview img').addClass('hidden')[0].src = url;\n        this.updateActiveButton();\n    },\n\n    updateActiveMenu: function (ev) {\n        let screen_name = ev.target.getAttribute('data-screen-name');\n        this.$('.menu-btn').removeClass('active');\n        this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n        this.updateScreen(screen_name);\n    },\n\n    updateScreen: function (name) {\n        this.$('.screen-wrap').addClass('hidden');\n        this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n        this.scrollToTop();\n        this.updateActiveButton();\n    },\n\n    updateActiveButton: function () {\n        let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n            non_active = true;\n        if ($active_screen.attr('data-screen') == 'library') {\n            $active_screen.find('div.active').length && (non_active = false);\n        } else {\n            $active_screen.find('img:not(.hidden)').length && (non_active = false);\n        }\n        this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n    },\n\n    renderFiles: function (response) {\n        this.$('.library-wrap .preloader-wrapper').remove()\n        if (response.items.length){\n            this.current_items = response.items\n            response.items.forEach((item, idx) => {\n                let img = $(`<div class=\"image-item\"/>`);\n                img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                img.attr('data-src', item.file);\n                img.attr('data-id', idx);\n                this.$('.library-wrap').append(img);\n            });\n        }\n    },\n\n    createLibrary: function () {\n        this.model.testGalleryTokenExpire(() => {\n            let options = {order_by: '-id'};\n            if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                this.$('.library-wrap').html(env.templates.contacts.preloader())\n                $.ajax({\n                    type: 'GET',\n                    headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                    url: this.model.get('gallery_url') + 'v1/avatar/',\n                    dataType: 'json',\n                    data: options,\n                    success: (response) => {\n                        console.log(response)\n                        this.renderFiles(response)\n                    },\n                    error: (response) => {\n                        this.model.handleCommonGalleryErrors(response)\n                        console.log(response)\n                        this.$('.library-wrap .preloader-wrapper').remove()\n                    }\n                });\n            }\n        });\n    },\n\n    setActiveImage: function (ev) {\n        let $target = $(ev.target);\n        if ($target.hasClass('active'))\n            $target.removeClass('active');\n        else {\n            this.$('.library-wrap>div').removeClass('active');\n            $target.addClass('active');\n        }\n        this.updateActiveButton();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target, file;\n        for (let i = 0; i < target.files.length; i++) {\n            if (utils.isImageType(target.files[i].type)) {\n                file = target.files[i];\n                break;\n            }\n        }\n        file && this.addFile(file);\n        $(target).val('');\n    },\n\n    addFile: function (file) {\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            let image_prev = new Image(),\n                src = e.target.result;\n            image_prev.src = src;\n            this.$('.screen-wrap[data-screen=\"upload\"] img').detach();\n            this.$('.screen-wrap[data-screen=\"upload\"]').prepend(image_prev);\n            this.current_file = file;\n            this.updateActiveButton();\n        };\n        reader.readAsDataURL(file);\n    },\n\n    onInputChanged: function (ev) {\n        if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n            return;\n        if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n            let url = ev.target.value.trim();\n            this.$('.image-preview img')[0].onload = () => {\n                this.$('.image-preview img').removeClass('hidden');\n                this.updateActiveButton();\n            };\n            this.$('.image-preview img').addClass('hidden')[0].src = url;\n            this.updateActiveButton();\n        } else {\n            this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n            this.updateActiveButton();\n        }\n    },\n\n    addAvatar: function () {\n        if (this.$('.btn-add').hasClass('non-active'))\n            return;\n        let image, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n        dfd.done((img, img_from_gallery) => {\n            if (img_from_gallery){\n                this.model.pubAvatar(image, () => {\n                    this.current_items = [];\n                    this.close();\n                    this.model.trigger('update_avatar_list');\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            } else {\n                utils.images.getAvatarFromFile(img).done((image, hash, size) => {\n                    if (image) {\n                        this.model.pubAvatar({base64: image, hash: hash, size: size, type: img.type, file: img}, () => {\n                            this.close();\n                            this.model.trigger('update_avatar_list');\n                        }, () => {\n                            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                        });\n                    } else\n                        utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        });\n        this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n        this.$('.btn-add').addClass('hidden-disabled');\n\n        if ($active_screen.attr('data-screen') == 'library') {\n            image = this.current_items[$active_screen.find('div.active').attr('data-id')]\n            image.uploaded = true;\n            dfd.resolve(image, true);\n        }\n        else if ($active_screen.attr('data-screen') == 'web-address') {\n            image = $active_screen.find('img:not(.hidden)')[0].src;\n            this.createFileFromURL(image).then((file) => {\n                dfd.resolve(file);\n            }, (e) => {\n                this.$('.preloader-wrapper').remove();\n                this.$('.btn-add').removeClass('hidden-disabled');\n                utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            })\n        } else\n            dfd.resolve(this.current_file);\n    },\n\n    createFileFromURL: async function (url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        let metadata = {\n            type: 'image/png'\n        };\n        let file = new File([data], \"avatar.png\", metadata);\n        return file\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    }\n});\n\nxabber.WebcamProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal webcam-panel',\n    template: templates.webcam_panel,\n\n    events: {\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n\n        this.width = 171;\n        this.height = 128;\n        this.streaming = false;\n        this.video = null;\n        this.canvas = null;\n        this.photo = null;\n        this.startbutton = null;\n\n        this.show();\n        this.startupStream();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        if (this.video && this.video.srcObject && this.video.srcObject.getTracks()){\n            let tracks = this.video.srcObject.getTracks()\n            tracks.forEach(function(track) {\n                track.stop();\n            });\n            this.video.srcObject = null\n        }\n        this.$el.detach();\n\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    startupStream: function (ev) {\n        this.video = this.$('.webcam-video')[0];\n        this.canvas = this.$('#canvas')[0];\n        this.photo = this.$('.webcam-photo')[0];\n        this.startbutton = this.$('.btn-take-photo')[0];\n        navigator.mediaDevices.getUserMedia({video: true, audio: false})\n            .then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n            })\n            .catch((err) => {\n                console.log(\"An error occurred: \" + err);\n            });\n\n        this.video.addEventListener('canplay', (ev) => {\n            if (!this.streaming) {\n                if (isNaN(this.height)) {\n                    this.height = this.width / (4/3);\n                }\n                this.video.setAttribute('width', this.width);\n                this.video.setAttribute('height', this.height);\n                this.canvas.setAttribute('width', this.width);\n                this.canvas.setAttribute('height', this.height);\n                this.streaming = true;\n            }\n        }, false);\n\n        this.startbutton.addEventListener('click', (ev) =>{\n            this.takePicture();\n            ev.preventDefault();\n        }, false);\n\n        this.$('.circle-icon')[0].addEventListener('click', (ev) =>{\n            if ($(ev.target).closest('.circle-icon').hasClass('disabled'))\n                return;\n            this.clearPhoto();\n            ev.preventDefault();\n        }, false);\n\n        this.clearPhoto();\n\n    },\n\n\n    clearPhoto: function (ev) {\n        let context = this.canvas.getContext('2d');\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        let data = this.canvas.toDataURL('image/png');\n        this.photo.setAttribute('src', data);\n        this.$('.btn-take-photo').hideIf(false)\n        this.$('.btn-save').hideIf(true)\n        this.$('.output').hideIf(true)\n    },\n\n\n    takePicture: function (ev) {\n        let context = this.canvas.getContext('2d');\n        this.$('.btn-take-photo').hideIf(true)\n        this.$('.btn-save').hideIf(false)\n        this.$('.output').hideIf(false)\n        if (this.width && this.height) {\n            this.canvas.width = this.width;\n            this.canvas.height = this.height;\n            context.drawImage(this.video, 0, 0, this.width, this.height);\n            context.globalCompositeOperation='destination-in';\n            context.beginPath();\n            context.arc(this.width/2,this.height/2,this.height/2,0,Math.PI*2);\n            context.closePath();\n            context.fill();\n\n            let data = this.canvas.toDataURL('image/png');\n            this.photo.setAttribute('src', data);\n        } else {\n            this.clearPhoto();\n        }\n    },\n\n\n    saveAvatar: function () {\n        let blob = Images.getBlobImage(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '')),\n            file = new File([blob], \"avatar.png\", {\n                type: \"image/png\",\n            });\n        file.base64 = this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, '');\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(this.canvas.toDataURL('image/png').replace(/^data:image\\/(png|gif|jpg|webp|jpeg);base64,/, ''), this.member_details_avatar_size);\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.$('.circle-icon').addClass('disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiProfileImageView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel',\n    template: templates.emoji_panel,\n\n    events: {\n        \"click .profile-image-background-color\": \"changeColor\",\n        \"click .avatar-wrap\": \"openEmojiPicker\",\n        \"click .close-modal\": \"close\",\n        \"click .btn-save\": \"saveAvatar\",\n        \"click .btn-cancel\": \"close\",\n    },\n\n    open: function (options) {\n        this.account = options.model;\n        this.registration = options.registration;\n        this.registration_view = options.registration_view;\n        this.emoji_panel_view = this.addChild('emoji_picker_panel', xabber.EmojiPickerView,{})\n        this.show();\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    openEmojiPicker: function () {\n        this.emoji_panel_view.open(this);\n    },\n\n    changeColor: function (ev) {\n        let color = $(ev.target).data('value');\n        this.$('.profile-image-background-color').removeClass('chosen-background-color');\n        $(ev.target).addClass('chosen-background-color');\n        this.$('.circle-avatar').attr('class', 'circle-avatar');\n        this.$('.circle-avatar').attr('data-value', color);\n        this.$('.circle-avatar').addClass('ground-color-' + color + '-100');\n    },\n\n    saveAvatar: function (ev) {\n        let blob = Images.getDefaultAvatar(this.$('.chosen-emoji').data('value') ,this.$('.circle-avatar').css( \"background-color\" ), \"bold 96px sans-serif\", 176, 176),\n            file = new File([blob], \"avatar\", {\n                type: \"image/png\",\n            });\n        file.generated = true;\n        file.base64 = blob;\n        if (file && file.base64) {\n            if (this.registration && this.registration_view){\n                this.registration_view.avatar = file;\n                this.registration_view.$('.btn-next').prop('disabled', false);\n                this.registration_view.$('.circle-avatar').addClass('changed');\n                this.registration_view.$('.circle-avatar').setAvatar(blob, this.member_details_avatar_size);\n                xabber._settings.save('main_color', this.$('.circle-avatar').attr('data-value'));\n                xabber.trigger('update_main_color');\n                this.close();\n            } else {\n                this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n                this.$('.btn-save').addClass('hidden-disabled');\n                this.account.pubAvatar(file, () => {\n                    this.close();\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            }\n        }\n    },\n});\n\nxabber.EmojiPickerView = xabber.BasicView.extend({\n    className: 'modal main-modal emoji-panel emoji-picker',\n    template: templates.emoji_picker,\n\n    events: {\n        \"click .emojis-bottom-tab-selector\": \"pickEmojiTab\",\n        \"click .emoji-picker-emoji\": \"pickEmoji\",\n        \"click .close-modal\": \"close\",\n    },\n\n    open: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n        this.readEmojisJSON()\n        this.show();\n    },\n\n    readEmojisJSON: function () {\n        this.emojis = JSON.parse(templates.emojis())\n\n        if (this.emojis.length) {\n            this.$('.emoji-picker-wrap').html(templates.emoji_picker_tabs({\n                emojis: this.emojis\n            }));\n            this.ps_container = this.$('.emojis-tab');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n    },\n\n    render: function () {\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    scrollTo: function (offset) {\n        this.ps_container.each((index) => {\n            this.ps_container[index].scrollTop = offset;\n        });\n        this.ps_container.perfectScrollbar('update');\n    },\n\n    scrollToTop: function () {\n        this.scrollTo(0);\n    },\n\n    pickEmojiTab: function (ev) {\n        let tab = $(ev.target).data('value');\n        this.$('.emojis-bottom-tab-selector').removeClass('chosen-emoji-selector');\n        $(ev.target).addClass('chosen-emoji-selector');\n        this.$('.emojis-tab').removeClass('chosen-emoji-tab').addClass('hidden');\n        this.$(`.emojis-tab[data-value=\"${tab}\"]`).removeClass('hidden').addClass('chosen-emoji-tab');\n        this.scrollToTop();\n    },\n\n    pickEmoji: function (ev) {\n        let emoji = $(ev.target).closest('.emoji-picker-emoji').data('value');\n        this.parent.$('.chosen-emoji').attr('data-value', emoji).text(emoji);\n        this.close();\n    },\n});\n\nxabber.ChangePasswordView = xabber.BasicView.extend({\n    className: 'modal main-modal change-password-modal',\n    template: templates.change_password,\n\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"close\",\n        \"keyup input[name=password]\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.$('input[name=jid]').val(this.model.get('jid'));\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        xabber.on(\"quit\", this.onQuit, this);\n        return this;\n    },\n\n    render: function (options) {\n        options || (options = {});\n        this.is_login = options.login;\n        this.token_invalidated = options.token_invalidated;\n        this.$('.modal-header span').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"button_set_pass\"));\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$('.btn-change').text(this.is_login ? xabber.getString(\"xabber_account__social_links__button_log_in\") : xabber.getString(\"set\"));\n        this.$el.openModal({\n            use_queue: true,\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        Materialize.updateTextFields();\n        this.authFeedback({});\n        this.$password_input.val('').focus();\n    },\n\n    getActionName: function () {\n        return this.is_login ? xabber.getString(\"login\") : xabber.getString(\"set\")\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.model.get('jid'),\n            password = this.$password_input.val();\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        password = password.trim();\n        this.authFeedback({password: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (this.model.connection.connected) {\n            this.model.once('deactivate', () => {\n                this.setPassword(password);\n            });\n            this.model.deactivate();\n        } else {\n            this.setPassword(password);\n        }\n    },\n\n    setPassword: function (password) {\n        this.model.last_msg_timestamp = 0;\n        this.model.save({\n            auth_type: 'password',\n            password: utils.utoa(password),\n            enabled: true\n        });\n        this.model.auth_view = this;\n        this.model.connect();\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-change').text(authentication ? xabber.getString(\"stop\") : this.getActionName());\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    successFeedback: function () {\n        this.data.set('authentication', false);\n        this.closeModal();\n    },\n\n    endAuth: function (account) {\n        this.model.save('is_new', undefined);\n        this.successFeedback(this.model)\n        this.model.auth_view = null;\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    onQuit: function () {\n        this.closeModal();\n    },\n\n    close: function () {\n        if (this.is_login)\n            this.model.save('enabled', false);\n        if (this.token_invalidated)\n            this.model.deleteAccount();\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.model.auth_view = null;\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ChangeAccountPasswordView = xabber.BasicView.extend({\n    events: {\n        \"click .btn-change\": \"submit\",\n        \"click .btn-cancel\": \"render\",\n        \"keyup input\": \"keyUp\",\n    },\n\n    _initialize: function () {\n        this.account = this.model\n        this.$old_password_input = this.$('input[name=old_password]');\n        this.$password_input = this.$('input[name=password]');\n        this.$password_confirm_input = this.$('input[name=password_confirm]');\n        return this;\n    },\n\n    render: function (options) {\n        this.authFeedback({});\n        this.$password_input.val('');\n        this.$password_confirm_input.val('');\n        this.$old_password_input.val('').focus();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        this.authFeedback({});\n        let jid = this.account.get('jid'),\n            old_password = this.$old_password_input.val(),\n            password = this.$password_input.val(),\n            password_confirm = this.$password_confirm_input.val();\n        if (!old_password)\n            return this.errorFeedback({old_password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (!password)\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        if (password != password_confirm)\n            return this.errorFeedback({password_confirm: xabber.getString(\"settings_account__alert_passwords_do_not_match\")});\n        old_password = old_password.trim();\n        this.authFeedback({password_confirm: xabber.getString(\"dialog_change_password__feedback__text_auth_with_pass\")});\n        if (!this.account.change_password_connection_manager) {\n            this.account.change_password_connection_manager = new Strophe.ConnectionManager(this.account.CONNECTION_URL);\n            this.account.change_password_connection = this.account.change_password_connection_manager.connection;\n            this.account.change_password_connection.account = this.account;\n            this.account.change_password_connection.register.connect_change_password(jid, old_password, this.account.changePasswordCallback.bind(this.account))\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n        this.$old_password_input.switchClass('invalid', options.old_password)\n            .siblings('span.errors').text(options.old_password || '');\n        this.$password_confirm_input.switchClass('invalid', options.password_confirm)\n            .siblings('span.errors').text(options.password_confirm || '');\n    },\n\n    errorFeedback: function (options) {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.authFeedback(options);\n    },\n\n    successFeedback: function () {\n        if (this.account.change_password_connection)\n            this.account.change_password_connection.disconnect()\n        this.render();\n    },\n});\n\nxabber.AuthView = xabber.BasicView.extend({\n    _initialize: function () {\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.data.on(\"change:authentication\", this.updateButtons, this);\n        return this;\n    },\n\n    render: function () {\n        this.onRender();\n    },\n\n    onRender: function () {\n        this.account = null;\n        this.authFeedback({});\n        Materialize.updateTextFields();\n        this.$jid_input.val('').focus();\n        this.$password_input.val('');\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    keyUp: function (ev) {\n        ev.keyCode === constants.KEY_ENTER && this.submit();\n    },\n\n    submit: function () {\n        if (this.data.get('authentication')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('authentication', true);\n        this.authFeedback({});\n        let jid = this.$jid_input.val(),\n            password = this.$password_input.val();\n        if (this.data.get('registration')){\n            let domain = this.$('#new_account_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-xmpp-server .property-value').text();\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.errorRegistrationFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            jid = jid + '@' + domain\n        }\n        else if(\n            (this.$('.input-field-jid .xmpp-server-dropdown-wrap').length && !this.$('.input-field-jid .xmpp-server-dropdown-wrap').hasClass('hidden')) &&\n            (this.$('#sign_in_domain') && this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text())\n        ){\n            let domain = this.$('#sign_in_domain').val() || this.$('.xmpp-server-dropdown-wrap .select-auth-xmpp-server .property-value').text();\n            jid = jid + '@' + domain\n        }\n        if (!jid) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n        }\n        jid = jid.trim();\n        if (!password)  {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n            }\n            return this.errorFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n        }\n        if (!this.data.get('registration') && !constants.LOGIN_CUSTOM_DOMAIN && !(constants.LOGIN_DOMAINS.indexOf(Strophe.getDomainFromJid(jid)) > -1))\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__login_custom_domain\")});\n        password = password.trim();\n        let at_idx = jid.indexOf('@');\n        if (at_idx <= 0 || at_idx === jid.length - 1) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n            }\n            return this.errorFeedback({jid: xabber.getString(\"account_auth__error__text_wrong_username\")});\n        }\n        jid = Strophe.getBareJidFromJid(jid).toLowerCase();\n        let account = xabber.accounts.get(jid);\n        if (account) {\n            if (this.data.get('registration')) {\n                return this.errorRegistrationFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n            }\n            this.errorFeedback({jid: xabber.getString(\"settings_account__alert_account_exists\")});\n        } else {\n            if (this.data.get('registration'))\n                this.registerFeedback({registration_success: true, password: xabber.getString(\"account_registration__feedback__text_registration\")});\n            else\n                this.authStepperShow();\n            this.getWebsocketURL(jid, (response) => {\n                this.account = xabber.accounts.create({\n                    jid: jid,\n                    websocket_connection_url: response || constants.CONNECTION_URL,\n                    password: utils.utoa(password),\n                    is_new: true\n                }, {auth_view: this});\n\n                if (this.data.get('registration')) {\n                    this.account.connection.register.connect(jid, this.account.registerCallback.bind(this.account))\n                }\n                else\n                    this.account.trigger('start');\n            });\n        }\n    },\n\n    getWebsocketURL: function (jid, callback) {\n        if (!constants.DISABLE_LOOKUP_WS) {\n            let domain = Strophe.getDomainFromJid(jid),\n                request = {\n                    type: 'GET',\n                    url: window.location.protocol + '//' + domain + '/.well-known/host-meta',\n                    dataType: 'xml',\n                    success: (success) => {\n                        let socket_url = $(success).find('Link').attr('href');\n                        if (socket_url)\n                            callback && callback(socket_url);\n                        else\n                            callback && callback(null);\n                    },\n                    error: () => {\n                        callback && callback(null);\n                    },\n                    timeout: 5000\n                };\n            $.ajax(request);\n        }\n        else\n            callback && callback(null);\n    },\n\n    cancel: function () {\n        this.data.set('authentication', false);\n        this.onRender();\n        if (this.account) {\n            this.account.destroy();\n            this.account = null;\n        }\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid)\n            .siblings('span.errors').text(options.jid || '');\n        this.$password_input.switchClass('invalid', options.password)\n            .siblings('span.errors').text(options.password || '');\n    },\n\n    errorFeedback: function (options) {\n        this.authFeedback(options);\n        this.data.set('authentication', false);\n    },\n\n    authStepperShow: function (){\n        this.authFeedback({password: xabber.getString(\"account_auth__feedback__text_authentication\")});\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.successFeedback(this.account)\n        this.account.auth_view = null;\n    },\n\n    socialAuth: function (ev) {\n        let origin = window.location.href,\n            provider = $(ev.target).closest('.btn-social').data('provider');\n        if (provider == 'email')\n            xabber.body.setScreen('login', {'login_screen': 'xabber'});\n        else\n            window.location.href = constants.XABBER_ACCOUNT_URL + '/social/login/' + provider + '/?origin=' + origin + '&source=Xabber Web';\n    }\n});\n\nxabber.XmppLoginPanel = xabber.AuthView.extend({\n    className: 'login-panel',\n    template: templates.xmpp_login,\n\n    events: {\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-sign-up-instead\": \"logoutAndRegister\",\n        \"click .btn-register-form\": \"openRegisterForm\",\n        \"click .btn-login-form\": \"openLoginForm\",\n        \"click .btn-register\": \"register\",\n        \"click .btn-cancel\": \"cancel\",\n        \"click .btn-go-back-menu\": \"openButtonsMenu\",\n        \"click .btn-go-back\": \"openPreviousStep\",\n        \"click .btn-next\": \"openNextStep\",\n        \"click .btn-skip\": \"registerWithoutAvatar\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=register_nickname]\": \"keyUpNickname\",\n        \"keyup input[name=register_jid]\": \"keyUpJid\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"keyup input[name=register_domain]\": \"keyUpDomain\",\n        \"focusout input[name=register_domain]\": \"focusoutDomain\",\n        \"keyup input[name=register_password]\": \"keyUpPassword\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-choose-image\": \"chooseAvatar\",\n        \"click .btn-emoji-panel\": \"openEmojiPanel\",\n        \"click .btn-selfie\": \"openWebcamPanel\",\n        \"click #select-xmpp-server .property-variant\": \"changePropertyValueRegistration\",\n        \"click #select-auth-xmpp-server .property-variant\": \"changePropertyValueAuth\",\n    },\n\n    __initialize: function () {\n        this.$nickname_input = this.$('input[name=register_nickname]');\n        this.$domain_input = this.$('input[name=register_domain]');\n        this.data.on(\"change:step\", this.handleRegistrationStep, this);\n        return this;\n    },\n\n    onRender: function () {\n        this.data.set('step', 1)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.registerFeedback({});\n        Materialize.updateTextFields();\n        this.$('.btn-go-back').hideIf(false);\n        this.$('.btn-skip').hideIf(true)\n        this.$nickname_input.val('');\n        this.$jid_input.val('');\n        this.$password_input.val('');\n        this.$('.circle-avatar').css({'background-image': ''});\n        this.$('.circle-avatar').css({'background-color': ''});\n        this.updateButtons();\n        this.updateDomains();\n        this.updateAuthDomains();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.avatar-wrap.dropdown-button').dropdown(dropdown_settings);\n        this.$('.btn-register-form').hideIf(!constants.REGISTRATION_BUTTON);\n        this.$('.btn-login-form').hideIf(!constants.LOGIN_CUSTOM_DOMAIN && !constants.LOGIN_DOMAINS.length);\n        this.$('.register-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.REGISTRATION_CUSTOM_DOMAIN);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        this.updateOptions && this.updateOptions();\n        this.$('#select-xmpp-server').hideIf(xabber.url_params.rkey)\n        this.$('.select-xmpp-server .caret').hideIf(xabber.url_params.rkey)\n        if (xabber.url_params.anchor == 'signup' || xabber.url_params.rkey)\n            this.data.set('step', 2)\n        else if (xabber.url_params.anchor == 'signin')\n            this.data.set('step', 0)\n    },\n\n    openButtonsMenu: function () {\n        this.data.set('step', 1)\n    },\n\n    register: function () {\n        if (this.data.get('registration')) {\n            this.cancel();\n            return;\n        }\n        this.data.set('registration', true);\n        this.$jid_input.prop('disabled', true);\n        this.$password_input.prop('disabled', true);\n        this.submit();\n    },\n\n    login: function () {\n        this.submit();\n    },\n\n    keyUpNickname: function (ev) {\n        if(this.$nickname_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$nickname_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpJid: function (ev) {\n        clearTimeout(this._check_user_timeout);\n        if (!this.$('.btn-next').prop('disabled') && ev && ev.keyCode === constants.KEY_ENTER) {\n            this.openNextStep();\n            return;\n        }\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.REGISTRATION_CUSTOM_DOMAIN){\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'))\n            this.$domain_input.val(this.$jid_input.val().split('@')[1]);\n            this.$jid_input.val(this.$jid_input.val().split('@')[0]);\n            this.$domain_input.focus();\n            return;\n        }\n        this.$('.btn-next').prop('disabled', true);\n        if(this.$jid_input.val()){\n            let regexp_local_part = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))$/,\n                regexp_domain = /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n            if (!regexp_local_part.test(this.$jid_input.val()))\n                return this.registerFeedback({jid: xabber.getString(\"account_add__alert_localpart_invalid\")});\n            else if (!(regexp_domain.test(domain)))\n                return this.registerFeedback({domain: xabber.getString(\"account_add__alert_invalid_domain\")});\n            else\n                this.registerFeedback({});\n            if (!constants.REGISTRATION_CUSTOM_DOMAIN && !(constants.REGISTRATION_DOMAINS.indexOf(domain) > -1))\n                return this.registerFeedback({domain: xabber.getString(\"account_auth__error__registration_custom_domain\")});\n            this._check_user_timeout = setTimeout(() => {\n                domain = this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text();\n                this.$('.btn-next').prop('disabled', true);\n                this._registration_username = this.$jid_input.val()\n                this._registration_domain = domain\n                if (domain) {\n                    if (this.auth_connection && this.auth_connection.domain != domain)\n                        this.auth_connection.disconnect()\n                    if (!this.auth_connection) {\n                        this.getWebsocketURL(domain, (response) => {\n                            this.CONNECTION_URL = response || constants.CONNECTION_URL;\n                            this.auth_conn_manager = new Strophe.ConnectionManager(this.CONNECTION_URL);\n                            this.auth_connection = this.auth_conn_manager.connection;\n                            this.auth_connection.register.connect_check_user(domain, this.checkUserCallback.bind(this))\n                        });\n                    }\n                    else if(this.auth_connection && this.auth_connection.connected) {\n                        this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                            null, \"iq\", null, null);\n                        this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                            {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n                    }\n                }\n                else {\n                    this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                }\n            }, 1000);\n        }\n        else\n            this.registerFeedback({});\n    },\n\n    keyUpPassword: function (ev) {\n        if(this.$password_input.val()){\n            this.$('.btn-next').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-next').prop('disabled', true);\n        }\n        if (this.$password_input.val() && ev)\n            ev.keyCode === constants.KEY_ENTER && this.openNextStep();\n    },\n\n    keyUpDomain: function () {\n    },\n\n    keyUpLogin: function (ev) {\n        if(this.$jid_input.val() && this.$password_input.val()){\n            this.$('.btn-log-in').prop('disabled', false);\n        }\n        else {\n            this.$('.btn-log-in').prop('disabled', true);\n        }\n        this.$('.login-step-wrap').hideIf(true);\n        this.authFeedback({});\n        this.$('.input-field-jid .xmpp-server-dropdown-wrap').hideIf(this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN)\n        if (this.$jid_input.val() && this.$jid_input.val().includes('@') && constants.LOGIN_CUSTOM_DOMAIN){\n            this.$('.input-field-jid').addClass('input-field-jid-borders')\n        }else {\n            this.$('.input-field-jid').removeClass('input-field-jid-borders')\n        }\n        if (ev && this.$jid_input.val() && this.$password_input.val())\n            ev.keyCode === constants.KEY_ENTER && this.login();\n    },\n\n    focusoutDomain: function () {\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    handleRegisterStanza: function (stanza) {\n        let i, query, field, username_taken, conn = this._connection;\n        query = stanza.getElementsByTagName(\"query\");\n        if (query.length !== 1) {\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"unknown\");\n            return false;\n        }\n        query = query[0];\n        for (i = 0; i < query.childNodes.length; i++) {\n            field = query.childNodes[i];\n            if (field.tagName.toLowerCase() === 'instructions') {\n                conn.register.instructions = Strophe.getText(field);\n                continue;\n            } else if (field.tagName.toLowerCase() === 'username') {\n                if (Strophe.getText(field))\n                    this._supports_check_user = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'registered') {\n                username_taken = true\n                continue;\n            } else if (field.tagName.toLowerCase() === 'x') {\n                continue;\n            }\n            conn.register.fields[field.tagName.toLowerCase()] = Strophe.getText(field);\n        }\n        if (this._supports_check_user){\n            if (username_taken)\n                conn._changeConnectStatus(Strophe.Status.CONFLICT, null);\n            else\n                conn._changeConnectStatus(Strophe.Status.REGISTERED, null);\n        }\n        else\n            conn._changeConnectStatus(Strophe.Status.REGIFAIL, \"not-supported\");\n\n        return false;\n    },\n\n    checkUserCallback: function (status, condition) {\n        if (status === Strophe.Status.REGISTER || status === Strophe.Status.REGIFAIL) {\n            if (!this.$('.select-xmpp-server .property-variant[data-value=\"' + this.auth_connection.register.domain + '\"]').length && constants.REGISTRATION_CUSTOM_DOMAIN) {\n                $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                    .text(this.auth_connection.register.domain)\n                    .attr('data-value', this.auth_connection.register.domain)\n                    .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n            }\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n            this.$('.select-xmpp-server .xmpp-server-item-wrap .property-value').text(this.auth_connection.register.domain)\n                .removeClass('hidden').attr('data-value', this.auth_connection.register.domain);\n        }\n        if (status === Strophe.Status.REGISTER) {\n            if (this.auth_connection && this.auth_connection.connected) {\n                this.auth_connection.register._connection._addSysHandler(this.handleRegisterStanza.bind(this.auth_connection.register),\n                    null, \"iq\", null, null);\n                this.auth_connection.register._connection.send($iq({type: \"get\", id: uuid(), to: this.auth_connection.register.domain }).c(\"query\",\n                    {xmlns: Strophe.NS.REGISTER}).c(\"username\").t(this._registration_username.trim()).tree());\n            }\n        } else if (status === Strophe.Status.REGISTERED) {\n            this.registerFeedback({user_success: true, jid: xabber.getString(\"xmpp_login__registration_jid_available\")});\n            this.$('.btn-next').prop('disabled', false);\n        } else if (status === Strophe.Status.CONFLICT) {\n            this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_occupied\")});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.CONNFAIL) {\n            this.registerFeedback({jid: xabber.getString(\"CONNECTION_FAILED\") + ': ' + condition});\n            this.$('.btn-next').prop('disabled', true);\n        } else if (status === Strophe.Status.REGIFAIL) {\n            if (condition === 'not-supported'){\n                this.registerFeedback({});\n                this.$('.btn-next').prop('disabled', false);\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"xmpp_login__registration_jid_not_supported\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_connection.disconnect()\n        } else if (status === Strophe.Status.CONNECTING) {\n            clearTimeout(this._check_user_connection_timeout);\n                this._check_user_connection_timeout = setTimeout(() => {\n                    if(this.auth_connection && !this.auth_connection.connected){\n                        this.auth_connection._no_response = true\n                        this.auth_connection.disconnect()\n                    }\n                }, 10000);\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            if (this.auth_connection && this.auth_connection._no_response) {\n                this.registerFeedback({jid: xabber.getString(\"account_add__alert_invalid_domain\")});\n                this.$('.btn-next').prop('disabled', true);\n            }\n            this.auth_conn_manager = undefined;\n            this.auth_connection = undefined;\n        }\n    },\n\n    openPreviousStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step--;\n            this.data.set('step', step)\n        }\n    },\n\n    openNextStep: function () {\n        let step = this.data.get('step')\n        if(typeof step === 'number') {\n            step++;\n            this.data.set('step', step)\n        }\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.login-form-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-server-features .register-form-step-header').text(xabber.getString(\"signin_checking_features_message\", [this.account.domain]));\n            this.$('.btn-go-back-menu').hideIf(true);\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n        if (step === 0){\n            this.$jid_input = this.$('input[name=jid]');\n            this.$password_input = this.$('input[name=password]');\n            this.$domain_input = this.$('input[name=sign_in_domain]');\n            this.$domain_input.val('')\n            this.$jid_input.val('')\n            this.$password_input.val('')\n            this.keyUpLogin();\n            this.$('.login-step-wrap').hideIf(true);\n            this.authFeedback({});\n            this.resetAuthStepper();\n            this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n            this.$('.login-form-header').text(xabber.getString(\"title_login_xabber_account\"));\n            this.$('.btn-go-back-menu').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(false);\n            this.$('.login-form-jid').hideIf(false);\n            this.$('.login-form-server-features').hideIf(true);\n            this.$('.btn-log-in').hideIf(false);\n            this.$('.btn-finish-log-in').hideIf(true);\n            this.$('.btn-sign-up-instead').hideIf(true);\n            this.$jid_input.focus();\n        }\n        else if (step === 1){\n            this.$('.login-panel-intro').hideIf(false);\n            this.$('.register-form').hideIf(true);\n            this.$('.xmpp-login-form').hideIf(true);\n        }\n        else if (step === 2){\n            this.$jid_input = this.$('input[name=register_jid]');\n            this.$password_input = this.$('input[name=register_password]');\n            this.$domain_input = this.$('input[name=register_domain]');\n            this.keyUpNickname();\n            this.$('.login-form-header').text(xabber.getString(\"title_register_xabber_account\"));\n            this.$('.login-form-url').hideIf(false);\n            this.$('.login-panel-intro').hideIf(true);\n            this.$('.register-form').hideIf(false);\n            this.$('.xmpp-login-form').hideIf(true);\n            this.$('.register-form-nickname').hideIf(false);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(true);\n            this.$nickname_input.focus();\n        }\n        else if (step === 3){\n            if (this.$nickname_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_username\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(false);\n                this.$('.register-form-password').hideIf(true);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpJid();\n                this.$jid_input.focus();\n                this.$password_input.val('');\n            }\n            else {\n                this.registerFeedback({nickname: xabber.getString(\"dialog_add_circle__error__text_input_name\")});\n                return this.data.set('step', 2);\n            }\n\n        }\n        else if (step === 4){\n            if (this.$jid_input.val()) {\n                this.$('.login-form-header').text(xabber.getString(\"hint_pass\"));\n                this.$('.register-form-nickname').hideIf(true);\n                this.$('.register-form-jid').hideIf(true);\n                this.$('.register-form-password').hideIf(false);\n                this.$('.register-form-picture').hideIf(true);\n                this.keyUpPassword();\n                this.$password_input.focus();\n            }\n            else {\n                this.registerFeedback({jid: xabber.getString(\"account_auth__error__text_input_username\")});\n                return this.data.set('step', 3);\n            }\n\n        }\n        else if (step === 5){\n            if (this.$password_input.val()) {\n                this.register();\n            }\n            else {\n                this.registerFeedback({password: xabber.getString(\"dialog_change_password__error__text_input_pass\")});\n                return this.data.set('step', 4);\n            }\n        }\n        else if (step === 6){\n            this.$('.login-form-header').text(xabber.getString(\"xmpp_login__registration_header_avatar\"));\n            this.$('.login-form-url').hideIf(true);\n            this.$('.btn-go-back').hideIf(true);\n            this.$('.btn-skip').hideIf(false)\n            this.$('.register-form-nickname').hideIf(true);\n            this.$('.register-form-jid').hideIf(true);\n            this.$('.register-form-password').hideIf(true);\n            this.$('.register-form-picture').hideIf(false);\n            this.$('.btn-next').prop('disabled', true);\n        }\n        else if (step >= 7){\n            if(this.avatar)\n                this.account.pubAvatar(this.avatar, () => {\n                }, () => {\n                    utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n                });\n            this.successRegistrationFeedback();\n        }\n    },\n\n    registerWithoutAvatar: function () {\n        this.successRegistrationFeedback();\n    },\n\n    logoutAndRegister: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.openRegisterForm()\n    },\n\n    openRegisterForm: function () {\n        this.data.set('step', 2)\n    },\n\n    openLoginForm: function () {\n        this.data.set('step', 0)\n    },\n\n    updateButtons: function () {\n        let authentication = this.data.get('authentication');\n        this.$('.btn-log-in').prop('disabled', authentication);\n    },\n\n    updateDomains: function () {\n        let all_servers = constants.REGISTRATION_DOMAINS;\n        if (xabber.url_params.rkey && all_servers.length){\n            for (let i = all_servers.length - 1; i >= 0; i--) {\n                if (!sha1(all_servers[i]).substr(0, 10).includes(xabber.url_params.rkey.substr(0, 10))){\n                    all_servers.splice(i, 1)\n                }\n            }\n        }\n        this.$('.register-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.register-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainRegistration(this.$('.register-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.register-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.register-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    updateAuthDomains: function () {\n        let all_servers = constants.LOGIN_DOMAINS;\n\n        this.$('.login-form-jid .field-jid.property-variant').remove()\n        if (all_servers.length)\n            this.$('.login-form-jid .xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n        else\n            this.setCustomDomainAuth(this.$('.login-form-jid .property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.login-form-jid .modal-content .jid-field .set-default-domain').remove();\n\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'})\n                .text(all_servers[i])\n                .attr('data-value', all_servers[i])\n                .insertBefore(this.$('.login-form-jid .dropdown-content .set-custom-domain'));\n        }\n    },\n\n    setCustomDomainRegistration: function ($property_value) {\n        this.$('#new_account_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        this.$('.select-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    setCustomDomainAuth: function ($property_value) {\n        this.$('#sign_in_domain').val(\"\");\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.select-auth-xmpp-server .caret').addClass('hidden');\n        this.$('.select-auth-xmpp-server .input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValueRegistration: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainRegistration($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#new_account_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden');\n        if(this.$jid_input.val() && (this.$domain_input.val() || this.$('.register-form-jid .xmpp-server-dropdown-wrap .property-value').text()))\n            this.keyUpJid();\n    },\n\n    changePropertyValueAuth: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomainAuth($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.select-auth-xmpp-server .input-group-chat-domain').addClass('hidden');\n            this.$('#sign_in_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-auth-xmpp-server .caret').removeClass('hidden');\n    },\n\n    chooseAvatar: function () {\n        this.$('.circle-avatar input').click();\n    },\n\n    openEmojiPanel: function () {\n        let emoji_panel_view = new xabber.EmojiProfileImageView();\n        emoji_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    openWebcamPanel: function () {\n        let webcam_panel_view = new xabber.WebcamProfileImageView();\n        webcam_panel_view.open({model: this.account, registration: true, registration_view: this});\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.avatar = file;\n                this.$('.btn-next').prop('disabled', false);\n                this.$('.circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n            }\n        });\n    },\n\n    successFeedback: function () {\n        this.data.set('step', -1)\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').addClass('server-features-additional-button');\n                                        this.$('.btn-sign-up-instead').hideIf(false);\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6) {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                        this.$('.btn-finish-log-in').addClass('btn-main').removeClass('btn-main-filled')\n                                    }\n                                    else {\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                        this.$('.btn-finish-log-in').removeClass('btn-main').addClass('btn-main-filled')\n                                    }\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    endAuth: function (account) {\n        this.account.save('is_new', undefined);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n    },\n\n    authFeedback: function (options) {\n        this.$jid_input.switchClass('invalid', options.jid);\n        this.$('.login-form-jid .login-jid-error').text(options.jid || '').showIf(options.jid);\n        this.$password_input.switchClass('invalid', options.password);\n        this.$('.login-form-jid .login-password-error').text(options.password || '').showIf(options.password);\n        this.$('.login-form-jid .register-form-step-description').hideIf(options.password || options.jid);\n    },\n\n    resetAuthStepper: function (){\n        this.$(`.login-step .preloader-wrapper`).addClass('active').addClass('visible');\n        this.$(`.login-step .mdi`).hideIf(true);\n        this.$(`.login-step`).removeClass('active-feature')\n        this.$(`.login-step .mdi`).addClass('mdi-alert-circle').removeClass('mdi-checkbox-marked-circle')\n    },\n\n    authStepperShow: function (){\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step`).hideIf(true);\n    },\n\n    authStepperStart: function (){\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            this.$(`.login-step.connecting-step`).addClass('active-feature');\n            this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n            this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n            this.$(`.login-step.credentials-step`).hideIf(false);\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step`).addClass('active-feature');\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                setTimeout(() => {\n                    if (constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1){\n                        this.endAuth();\n                    } else {\n                        this.stepped_auth_complete = true\n                        if (this.first_features_received)\n                            this.successFeedback();\n                    }\n                },timeout_timer)\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    authStepperError: function (auth_error, options){\n        let timeout_timer = 1000;\n        this.$('.login-step-wrap').hideIf(false);\n        this.$(`.login-step.connecting-step`).hideIf(false);\n        setTimeout(() => {\n            if (auth_error){\n                this.$(`.login-step.connecting-step`).addClass('active-feature');\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false).removeClass('mdi-alert-circle').addClass('mdi-checkbox-marked-circle');\n                this.$(`.login-step.credentials-step`).hideIf(false);\n            }\n            else {\n                this.$(`.login-step.connecting-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.connecting-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n                return;\n            }\n            setTimeout(() => {\n                this.$(`.login-step.credentials-step .preloader-wrapper`).removeClass('active').removeClass('visible');\n                this.$(`.login-step.credentials-step .mdi`).hideIf(false);\n                this.errorFeedback(options);\n            },timeout_timer)\n        },timeout_timer)\n    },\n\n    registerFeedback: function (options) {\n        if(options.user_success) {\n            this.$('.register-form-jid .register-form-step-error').addClass('available').text(options.jid || '').showIf(options.jid);\n            this.$jid_input.removeClass('invalid');\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid);\n        }\n        else if(options.registration_success) {\n            this.$('.register-form-password .register-form-step-error').addClass('available').text(options.password || '').showIf(options.password);\n            this.$password_input.removeClass('invalid');\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n        else {\n            this.$nickname_input.switchClass('invalid', options.nickname);\n            this.$('.register-form-nickname.register-form-step-error').text(options.nickname || '').showIf(options.nickname);\n            this.$('.register-form-nickname .register-form-step-description').hideIf(options.nickname);\n            this.$jid_input.switchClass('invalid', options.jid);\n            this.$domain_input.switchClass('invalid', options.domain);\n            this.$('.register-form-jid .register-form-step-error').removeClass('available').text(options.jid || options.domain || '').showIf(options.jid || options.domain);\n            this.$('.register-form-jid .register-form-step-description').hideIf(options.jid || options.domain);\n            this.$password_input.switchClass('invalid', options.password);\n            this.$('.register-form-password .register-form-step-error').removeClass('available').text(options.password || '').showIf(options.password);\n            this.$('.register-form-password .register-form-step-description').hideIf(options.password);\n        }\n    },\n\n    errorRegistrationFeedback: function (options) {\n        this.registerFeedback(options);\n        this.data.set('registration', false);\n        this.data.set('authentication', false);\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false);\n        if(this.account)\n            this.account.destroy();\n    },\n\n    successRegistrationFeedback: function () {\n        this.$jid_input.prop('disabled', false);\n        this.$password_input.prop('disabled', false)\n        this.account.trigger('start');\n    },\n});\n\n\nxabber.AddAccountView = xabber.XmppLoginPanel.extend({\n    className: 'modal main-modal add-account-modal',\n    template: templates.add_account,\n\n    events: {\n        \"click .login-type\": \"changeLoginType\",\n        \"click .btn-log-in\": \"login\",\n        \"click .btn-cancel\": \"logout\",\n        \"click .btn-go-back-menu\": \"close\",\n        \"click .btn-finish-log-in\": \"endAuth\",\n        \"keyup input[name=jid]\": \"keyUpLogin\",\n        \"keyup input[name=password]\": \"keyUpLogin\",\n        \"keyup input[name=sign_in_domain]\": \"keyUpLogin\",\n        \"click .property-variant\": \"changePropertyValueAuth\"\n    },\n\n    render: function (options) {\n        this.$el.openModal({\n            ready: this.onRender.bind(this),\n            complete: this.close.bind(this)\n        });\n    },\n\n    onRender: function () {\n        this.data.set('step', 0)\n        this.account = null;\n        this.stepped_auth = true;\n        this.stepped_auth_complete = false;\n        this.authFeedback({});\n        this.$jid_input = this.$('input[name=jid]');\n        this.$password_input = this.$('input[name=password]');\n        this.$domain_input = this.$('input[name=sign_in_domain]');\n        this.$jid_input.val('')\n        this.$password_input.val('')\n        this.keyUpLogin();\n        this.updateAuthDomains();\n        this.$('.login-step-wrap').hideIf(true);\n        this.resetAuthStepper();\n        this.$('.login-panel-form.xmpp-login-form .buttons-wrap').removeClass('server-features-additional-button')\n        this.$('.modal-header').text(xabber.getString(\"account_add\"));\n        this.$('.login-form-jid').hideIf(false);\n        this.$('.login-form-server-features').hideIf(true);\n        this.$('.btn-log-in').hideIf(false);\n        this.$('.btn-cancel').hideIf(true);\n        this.$('.btn-finish-log-in').hideIf(true);\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.property-field .select-auth-xmpp-server .caret').dropdown(dropdown_settings);\n        this.$('.property-field .select-auth-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n        this.$('.login-form-jid .dropdown-content .set-custom-domain').hideIf(!constants.LOGIN_CUSTOM_DOMAIN);\n        Materialize.updateTextFields();\n        this.updateButtons();\n        this.updateOptions && this.updateOptions();\n    },\n\n    handleRegistrationStep: function () {\n        let step = this.data.get('step')\n        if (step === -1){\n            this.$(`.server-feature .preloader-wrapper`).addClass('active').addClass('visible');\n            this.$(`.server-feature .mdi`).hideIf(true);\n            this.$(`.server-feature`).removeClass('active-feature')\n            this.$(`.server-feature .mdi`).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n            this.$('.modal-header').text(xabber.getString(\"signin_server_features\"));\n            this.$('.login-form-jid').hideIf(true);\n            this.$('.login-form-server-features').hideIf(false);\n            this.$('.btn-log-in').hideIf(true);\n            this.checkFeaturesStepper();\n        }\n    },\n\n    logout: function () {\n        this.account.session.set('delete', true);\n        this.account.deactivate();\n        this.closeModal();\n    },\n\n    endAuth: function () {\n        this.account.save('is_new', undefined);\n        this.data.set('authentication', false);\n        xabber.body.setScreen('all-chats', {right: null});\n        this.account.sendPresence();\n        this.account.trigger('ready_to_get_roster');\n        this.account.auth_view = null;\n        this.closeModal();\n    },\n\n    checkFeaturesStepper: function () {\n        this.$('.server-features-error').text('');\n        let timeout_timer = 1000;\n        setTimeout(() => {\n            if (this.account.server_features.get(Strophe.NS.MAM)){\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"]`).addClass('active-feature');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n            }\n            else\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.MAM}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n            setTimeout(() => {\n                if (this.account.server_features.get(Strophe.NS.SYNCHRONIZATION)){\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).addClass('active-feature');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                }\n                else\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                setTimeout(() => {\n                    if (this.account.server_features.get(Strophe.NS.REWRITE)){\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"]`).addClass('active-feature');\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                    }\n                    else\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.REWRITE}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                    setTimeout(() => {\n                        if (this.account.server_features.get(Strophe.NS.AUTH_DEVICES)) {\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`).addClass('active-feature');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                        }\n                        else\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle')\n                        this.$(`.server-feature[data-xmlns=\"${Strophe.NS.AUTH_DEVICES}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');;\n                        setTimeout(() => {\n                            if (this.account.server_features.get(Strophe.NS.PUBSUB)){\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"]`).addClass('active-feature');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                            }\n                            else\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                            this.$(`.server-feature[data-xmlns=\"${Strophe.NS.PUBSUB}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                            setTimeout(() => {\n                                if (this.account.server_features.get(Strophe.NS.HTTP_UPLOAD)){\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`).addClass('active-feature');\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).removeClass('.mdi-alert').addClass('mdi-checkbox-marked-circle');\n                                }\n                                else\n                                    this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .mdi`).hideIf(false).addClass('.mdi-alert').removeClass('mdi-checkbox-marked-circle');\n                                this.$(`.server-feature[data-xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"] .preloader-wrapper`).removeClass('active').removeClass('visible');\n                                setTimeout(() => {\n                                    if (constants.RECOMMENDED_DOMAIN && (this.$('.server-feature.active-feature').length != 6)){\n                                        this.$('.server-features-error').text(xabber.getString('signin_not_all_features', [constants.RECOMMENDED_DOMAIN]));\n                                    }\n                                    if (this.$('.server-feature.active-feature').length != 6)\n                                        this.$('.btn-finish-log-in').text(xabber.getString('signin_proceed_anyway'))\n                                    else\n                                        this.$('.btn-finish-log-in').text(xabber.getString('xaccount_next'))\n                                    this.$('.btn-finish-log-in').hideIf(false);\n                                    this.$('.btn-cancel').hideIf(false);\n                                }, timeout_timer);\n                            }, timeout_timer);\n                        }, timeout_timer);\n                    }, timeout_timer);\n                }, timeout_timer);\n            }, timeout_timer);\n        }, timeout_timer);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.cancel();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.xmpp_login_panel = xabber.login_page.addChild('xmpp_login', this.XmppLoginPanel);\n    this.account_settings = xabber.wide_panel.addChild('account_settings',\n        this.NodeView, {classlist: 'settings-panel account-settings-panel'});\n    this.acc_settings_left = xabber.account_settings.addChild('left',\n        this.Container, {classlist: 'account-settings-left-container'});\n    this.acc_settings_right = xabber.account_settings.addChild('right',\n        this.Container, {classlist: 'account-settings-right-container'});\n\n    this.accounts = new this.Accounts(null, {\n        storage_name: this.getStorageName() + '-accounts'\n    });\n    this.accounts.fetch();\n\n    this.toolbar_view.addChild('accounts', this.ToolbarAccountsBlockView,\n        {model: this.accounts, el: this.toolbar_view.$('.accounts')[0]});\n    this.settings_view.addChild('accounts', this.SettingsAccountsBlockView,\n        {model: this.accounts, el: this.settings_view.$('.xmpp-accounts')[0]});\n\n\n    this.on(\"add_account\", function () {\n        if (!this.add_account_view)\n            this.add_account_view = new this.AddAccountView();\n        this.add_account_view.show();\n    }, this);\n\n    $(window).bind('beforeunload',function(){\n        xabber.current_voip_call && xabber.current_voip_call.reject();\n        return;\n    });\n\n    window.onbeforeunload = () => {\n        _.each(this.accounts.connected, function (account) {\n            account.sendPresence('offline');\n        });\n    };\n\n    this.login_page.patchTree = function (tree, options) {\n        let login_screen = options.login_screen || constants.DEFAULT_LOGIN_SCREEN;\n        return login_screen === 'xmpp' ? { xmpp_login: null } : { xabber_login: null };\n    };\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    $ = env.$,\n    _ = env._,\n    moment = env.moment,\n    Strophe = env.Strophe,\n    $iq = env.$iq;\n\nxabber.ClientFeature = Backbone.Model.extend({\n    idAttribute: 'namespace'\n});\n\nxabber.FeatureView = xabber.BasicView.extend({\n    className: 'client-feature',\n    template: function () {\n        this.$el.append('<div class=\"feature-name one-line\"/>')\n                .append('<div class=\"supports\"/>');\n    },\n\n    _initialize: function () {\n        this.render();\n        this.$el.appendTo(this.model.collection.account.settings_right.$('.capabilities'));\n        this.model.on(\"change\", this.render, this);\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    render: function () {\n        let name = this.model.get('verbose_name'),\n            supports = this.model.get('supports');\n        this.$('.feature-name').text(name);\n        this.$('.supports').text(supports ? xabber.getString(\"account_settings__server_info__status_available\") : xabber.getString(\"account_settings__server_info__status_unavailable\"))\n    }\n});\n\nxabber.ClientFeatures = Backbone.Collection.extend({\n    model: xabber.ClientFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on('render_settings', this.render, this);\n        this.connection = this.account.connection;\n        this.connection.disco.addIdentity(\n            'client',\n            'web',\n            xabber.get('client_name'),\n            'en'\n        );\n        this.addFeature(Strophe.NS.LAST, 'XEP-0012: Last Activity');\n        this.addFeature(Strophe.NS.VCARD, 'XEP-0054: vCard-temp');\n        this.addFeature(Strophe.NS.RSM, 'XEP-0059: Result Set Management');\n        this.connection.disco.addFeature(Strophe.NS.CHATSTATES);\n        this.addFeature(Strophe.NS.BLOCKING, 'XEP-0191: Blocking Command');\n        this.addFeature(Strophe.NS.PING, 'XEP-0199: XMPP Ping');\n        this.connection.disco.addFeature(Strophe.NS.ATTENTION, 'XEP-0244: Attention');\n        this.addFeature(Strophe.NS.CARBONS, 'XEP-0280: Message carbons');\n        this.addFeature(Strophe.NS.MAM, 'XEP-0313: Message archive management');\n        this.connection.disco.addFeature(Strophe.NS.CHAT_MARKERS);\n        this.connection.disco.addFeature(Strophe.NS.PUBSUB_AVATAR_METADATA + '+notify');\n        this.addFeature(Strophe.NS.HTTP_UPLOAD, 'XEP-0363: HTTP File Upload');\n        this.addFeature(Strophe.NS.SYNCHRONIZATION, 'XEP-SYNC: Client Synchronization');\n        this.addFeature(Strophe.NS.AUTH_DEVICES, 'XEP-DEVICES: HOTP and Device Management');\n        this.addFeature(Strophe.NS.GEOLOC, 'XEP-0080: User Location');\n        this.addFeature(Strophe.NS.PUBSUB, 'XEP-0060: Publish-Subscribe');\n        this.addFeature(Strophe.NS.ARCHIVE, 'XEP-ARCHIVED: Archived Chats');\n        this.addFeature(Strophe.NS.DELIVERY, 'XEP-DELIVERY: Reliable message delivery');\n        this.addFeature(Strophe.NS.GROUP_CHAT, 'XEP-GROUPS: Groups');\n        this.addFeature(Strophe.NS.REWRITE, 'XEP-RETRACT: Message Delete and Rewrite');\n        this.addFeature(Strophe.NS.REGISTER, 'XEP-0077: In-Band Registration');\n    },\n\n    addFeature: function (namespace, verbose_name) {\n        let feature = this.create({\n            namespace: namespace,\n            verbose_name: verbose_name\n        });\n        this.connection.disco.addFeature(namespace);\n    },\n\n    render: function () {\n        this.models.forEach((feature) => {\n            let view = new xabber.FeatureView({model: feature});\n        });\n    }\n});\n\nxabber.ServerFeature = Backbone.Model.extend({\n    idAttribute: 'var'\n});\n\nxabber.ServerFeatures = Backbone.Collection.extend({\n    model: xabber.ServerFeature,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.connection = this.account.connection;\n        this.on(\"add\", this.onFeatureAdded, this);\n    },\n\n    request: function () {\n        this.account.cached_server_features.getAllFromCachedFeatures((res) => {\n            if (res && res.length){\n                res.forEach((item) => {\n                    this.create({\n                        'var': item.var,\n                        from: item.from\n                    });\n                });\n                this.is_cached = true;\n            } else {\n                this.connection.disco.info(this.account.domain, null, this.onInfo.bind(this));\n            }\n            this.connection.disco.items(this.account.domain, null, this.onItems.bind(this));\n        });\n    },\n\n    onItems: function (stanza) {\n        let groupchat_servers_list = [];\n        $(stanza).find('query item').each((idx, item) => {\n            let jid = $(item).attr('jid'),\n                name = $(item).attr('name'),\n                node = $(item).attr('node');\n            if (node === Strophe.NS.GROUP_CHAT) {\n                groupchat_servers_list.push(jid);\n                this.account.set('groupchat_servers_list', groupchat_servers_list);\n            }\n            this.connection.disco.addItem(jid, name, node, () => {});\n            (!this.is_cached) && this.connection.disco.info(\n                jid,\n                null,\n                this.onInfo.bind(this));\n        });\n    },\n\n    onInfo: function (stanza) {\n        let $stanza = $(stanza),\n            from = $stanza.attr('from'),\n            self = this;\n        $stanza.find('feature').each(function () {\n            let namespace = $(this).attr('var');\n            self.create({\n                'var': namespace,\n                from: from\n            });\n            if (namespace === Strophe.NS.AUTH_DEVICES)\n                self.account.getAllXTokens();\n        });\n        $stanza.find('x').each(function () {\n            let form_type_val = $(this).find('field[var=\"FORM_TYPE\"] value');\n            if (form_type_val.length && form_type_val.text() === Strophe.NS.URLDISCO && self.account.domain === from){\n                let media_gallery_url = $(this).find('field[var=\"' + Strophe.NS.MEDIAGALLERY + '\"] value');\n                if (media_gallery_url.length && media_gallery_url.text()){\n                    self.create({\n                        'var': 'media-gallery',\n                        from: media_gallery_url.text()\n                    });\n                }\n            }\n        });\n        if (this.account.auth_view && !(constants.TRUSTED_DOMAINS.indexOf(this.account.connection.domain) > -1)){\n            this.account.auth_view.first_features_received = true\n            if (this.account.auth_view.stepped_auth_complete)\n                this.account.auth_view.successFeedback();\n        }\n    },\n\n    onFeatureAdded: function (feature) {\n        let _var = feature.get('var'),\n            client_feature = this.account.client_features.get(_var);\n        client_feature && client_feature.set('supports', true);\n        (_var != Strophe.NS.SUBSCRIPTION_PREAPPROVAL && _var != Strophe.NS.SYNCHRONIZATION) && this.account.cached_server_features.putInCachedFeatures({\n            var: _var,\n            from: feature.get('from'),\n        })\n\n        if (_var === 'media-gallery') {\n            this.account.set('gallery_auth', false)\n            if (!(this.account.get('gallery_token') && this.account.get('gallery_url')) || (this.account.get('gallery_url') != feature.get('from')))\n                this.account.initGalleryAuth(feature);\n        }\n    },\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.client_features = new xabber.ClientFeatures(null, {account: this});\n    this.server_features = new xabber.ServerFeatures(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.last_stanza_timestamp = moment.now();\n\n    this.connection.deleteHandler(this._last_stanza_handler);\n    this._last_stanza_handler = this.connection.addHandler(() => {\n        this.last_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.connection.deleteHandler(this._pong_handler);\n    this._pong_handler = this.connection.ping.addPingHandler((ping) => {\n        this.last_stanza_timestamp = moment.now();\n        this.connection.ping.pong(ping);\n        return true;\n    });\n\n    this.connection.deleteTimedHandler(this._ping_handler);\n    this._ping_handler = this.connection.addTimedHandler(30000, () => {\n        let downtime = moment.now() - this.last_stanza_timestamp;\n        if (downtime / 1000 > (xabber.settings.reconnect_interval || 90)) {\n            if (this.connection.connected)\n                this.connection.disconnect();\n            else\n                this.connect();\n            return false;\n        }\n        if (downtime / 1000 > (xabber.settings.ping_interval || 60)) {\n            this.connection.ping.ping(this.get('jid'));\n        }\n        return true;\n    });\n\n    this.server_features.request();\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.last_fast_stanza_timestamp = moment.now();\n\n    this.fast_connection.deleteHandler(this._last_fast_stanza_handler);\n    this._last_fast_stanza_handler = this.fast_connection.addHandler(() => {\n        this.last_fast_stanza_timestamp = moment.now();\n        return true;\n    });\n\n    this.fast_connection.deleteHandler(this._fast_pong_handler);\n    this._fast_pong_handler = this.fast_connection.ping.addPingHandler((ping) => {\n        this.last_fast_stanza_timestamp = moment.now();\n        this.fast_connection.ping.pong(ping);\n        return true;\n    });\n\n    this.fast_connection.deleteTimedHandler(this._fast_ping_handler);\n    this._fast_ping_handler = this.fast_connection.addTimedHandler(30000, () => {\n        let downtime = moment.now() - this.last_fast_stanza_timestamp;\n        if (downtime / 1000 > (xabber.settings.reconnect_interval || 90)) {\n            if (this.fast_connection.connected)\n                this.fast_connection.disconnect();\n            else\n                this.fast_connection.connect('password', this.fast_connection.jid, this.fast_connection.pass);\n            return false;\n        }\n        if (downtime / 1000 > (xabber.settings.ping_interval || 60)) {\n            this.fast_connection.ping.ping(this.fast_connection.jid);\n        }\n        return true;\n    });\n}, true, true);\n\nxabber.Account.addConnPlugin(function () {\n    let disco = this.connection.disco;\n    this.connection.addHandler(disco._onDiscoInfo.bind(disco),\n            Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n    this.connection.addHandler(disco._onDiscoItems.bind(disco),\n            Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n}, false, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.contacts,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $pres = env.$pres,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Contact = Backbone.Model.extend({\n    idAttribute: 'jid',\n    defaults: {\n        status: \"offline\",\n        status_message: \"\",\n        subscription: undefined,\n        subscription_request_in: false,\n        subscription_request_out: false,\n        groups: [],\n        group_chat: false\n    },\n\n    initialize: function (_attrs, options) {\n        this.on(\"change:group_chat\", this.onChangedGroupchat, this);\n        this.account = options.account;\n        if (_attrs.avatar) {\n            _attrs.image = _attrs.avatar;\n            delete _attrs.avatar;\n        }\n        let attrs = _.clone(_attrs);\n        if (attrs.resource) {\n            attrs.full_jid = attrs.jid + '/' + attrs.resource;\n        } else if (attrs.group_chat) {\n            attrs.full_jid = attrs.jid + '/Group';\n        }\n        (this.account && this.account.domain === attrs.jid) && _.extend(attrs, {server: true, status: 'online'});\n        attrs.name = attrs.roster_name || attrs.name || attrs.jid;\n        if (!attrs.image) {\n            attrs.photo_hash = \"\";\n            attrs.image = Images.getDefaultAvatar(attrs.name);\n        }\n        if (this.account.blocklist.isBlocked(attrs.jid))\n            attrs.blocked = true;\n        this.cached_image = Images.getCachedImage(attrs.image);\n        attrs.vcard = utils.vcard.getBlank(attrs.jid);\n        this.set(attrs);\n        this.onChangedGroupchat();\n        this.domain = Strophe.getDomainFromJid(this.get('jid'));\n        !this.get('group_chat') && this.set('group_chat', _.contains(this.account.chat_settings.get('group_chat'), this.get('jid')));\n        this.hash_id = env.b64_sha1(this.account.get('jid') + '-' + attrs.jid);\n        this.resources = new xabber.ContactResources(null, {contact: this});\n        this.on(\"update_avatar\", this.updateAvatar, this);\n        this.on(\"change:full_jid\", this.updateCachedInfo, this);\n        this.on(\"change:roster_name\", this.updateName, this);\n        this.account.dfd_presence.done(() => {\n            if (!this.get('blocked') && !this.get('vcard_updated'))\n                this.getVCard();\n        });\n    },\n\n    getStatusMessage: function () {\n        let subscription = this.get('subscription'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_text = \"\";\n        if (this.get('blocked'))\n            status_text = xabber.getString(\"action_contact_blocked\");\n        else if (this.get('group_chat')) {\n            if (this.get('group_info')) {\n                if (this.get('group_info').members_num)\n                    status_text += xabber.getQuantityString(\"contact_groupchat_status_member\", this.get('group_info').members_num);\n                if (this.get('group_info').online_members_num > 0)\n                    status_text += xabber.getString(\"contact_groupchat_status_online\", [this.get('group_info').online_members_num || 0]);\n            } else if (!subscription)\n                status_text = xabber.getString(\"contact_state_no_subscriptions\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        } else {\n            if (subscription === 'from') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else\n                    status_text = xabber.getString(\"chat_receives_presence_updates\");\n            } else if (subscription === 'none') {\n                if (out_request)\n                    status_text = xabber.getString(\"contact_state_outgoing_request\");\n                else if (in_request)\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n                else\n                    status_text = xabber.getString(\"contact_state_in_contact_list\");\n            }\n            else if (!subscription)\n                status_text = xabber.getString(\"contact_state_not_in_contact_list\");\n            else\n                status_text = this.get('status_message') || xabber.getString(this.get('status'));\n        }\n        return status_text;\n    },\n\n    getSubscriptionStatuses: function () {\n        let subscription = this.get('subscription'),\n            subscription_preapproved = this.get('subscription_preapproved'),\n            in_request = this.get('subscription_request_in'),\n            out_request = this.get('subscription_request_out'),\n            status_description = \"\",\n            status_out_color = \"\",\n            status_in_color = \"\",\n            status_out_text = \"\",\n            status_in_text = \"\";\n        if (this.get('blocked'))\n            status_out_text = xabber.getString(\"action_contact_blocked\");\n        if (subscription === 'both') {\n            status_out_text = xabber.getString(\"subscription_status_out_to\");\n            status_in_text = xabber.getString(\"subscription_status_in_from\");\n            status_description = xabber.getString(\"subscription_status_description_both\");\n        }\n        else if (subscription === 'from') {\n            if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_from\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_from\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_from\");\n            }\n        }\n        else if (subscription === 'to') {\n            if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_to\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_to_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_to_in_allowed\");\n                }\n            }\n        } else if (subscription === 'none') {\n            if (out_request && in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_request_incoming\");\n            }\n            else if (out_request){\n                status_out_text = xabber.getString(\"subscription_status_out_requested\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_requested_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_request_in_allowed\");\n                }\n            }\n            else if (in_request){\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_request_incoming\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_request_incoming\");\n            }\n            else {\n                status_out_text = xabber.getString(\"subscription_status_out_none\");\n                status_in_text = xabber.getString(\"subscription_status_in_not_allowed\");\n                status_description = xabber.getString(\"subscription_status_description_out_none_in_not_allowed\");\n                if (subscription_preapproved){\n                    status_in_text = xabber.getString(\"subscription_status_is_allowed\");\n                    status_description = xabber.getString(\"subscription_status_description_out_none_in_allowed\");\n                }\n            }\n        }\n        else if (!subscription)\n            status_out_text = xabber.getString(\"contact_add\");\n\n        if (out_request)\n            status_out_color = \"request\";\n        if (in_request)\n            status_in_color = \"request\";\n        if (subscription === 'to')\n            status_out_color = \"subbed\";\n        if (subscription === 'from')\n            status_in_color = \"subbed\";\n        if (subscription === 'both') {\n            status_out_color = \"subbed\";\n            status_in_color = \"subbed\";\n        }\n        return {\n            status_out: status_out_text,\n            status_in: status_in_text,\n            status_out_color: status_out_color,\n            status_in_color: status_in_color,\n            status_description: status_description,\n        };\n    },\n\n    getIcon: function () {\n        if (this.get('blocked'))\n            return 'blocked';\n        if (this.get('invitation'))\n            return 'group-invite';\n        if (this.get('group_chat')) {\n            if (this.get('jid').includes('redmine_issue_'))\n                return 'task';\n            if (this.get('private_chat'))\n                return 'group-private';\n            if (this.get('incognito_chat'))\n                return 'group-incognito';\n            return 'group-public';\n        }\n        if (this.get('server'))\n            return 'server';\n        if (this.get('bot'))\n            return 'bot';\n        return;\n    },\n\n    updateAvatar: function () {\n        this.account.cached_roster.getFromRoster(this.get('jid'), (cached_info) => {\n            if (cached_info && this.get('photo_hash') === cached_info.photo_hash)\n                return;\n            this.getVCard();\n        });\n    },\n\n    getVCard: function (callback) {\n        let jid = this.get('jid'),\n            is_callback = _.isFunction(callback);\n        this.account.getConnectionForIQ().vcard.get(jid,\n             (vcard) => {\n                if (vcard.group_info) {\n                    let group_info = this.get('group_info') || {};\n                    group_info = _.extend(group_info, vcard.group_info);\n                    this.set({group_info});\n                    delete vcard.group_info;\n                }\n                let attrs = {\n                    vcard: vcard,\n                    vcard_updated: moment.now(),\n                    name: this.get('roster_name')\n                };\n                if (!attrs.name) {\n                    if (this.get('group_chat'))\n                        attrs.name = vcard.nickname || this.get('name');\n                    else\n                        attrs.name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || jid;\n                }\n                if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n                    if (vcard.photo.image) {\n                        attrs.avatar_priority = constants.AVATAR_PRIORITIES.VCARD_AVATAR;\n                        attrs.image = vcard.photo.image;\n                    }\n                    else\n                        attrs.image = Images.getDefaultAvatar(attrs.name);\n                    this.cached_image = Images.getCachedImage(attrs.image);\n                }\n                this.set(attrs);\n                if (this.get('in_roster')) {\n                    this.updateCachedInfo();\n                }\n                is_callback && callback(vcard);\n            },\n            function () {\n                is_callback && callback(null);\n            }\n        );\n    },\n\n    updateCachedInfo: function () {\n        let roster_info = {\n            jid: this.get('jid'),\n            in_roster: this.get('in_roster'),\n            groups: this.get('groups'),\n            subscription: this.get('subscription'),\n            roster_name: this.get('roster_name'),\n            subscription_request_out: this.get('subscription_request_out'),\n            subscription_request_in: this.get('subscription_request_in'),\n            name: this.get('name'),\n            vcard_updated: this.get('vcard_updated')\n        }, full_jid = this.get('full_jid');\n        if (this.get('photo_hash') || this.get('image'))\n            _.extend(roster_info, {\n                photo_hash: (this.get('photo_hash') || this.account.getAvatarHash(this.get('image'))),\n                avatar_priority: this.get('avatar_priority'),\n                avatar: this.get('image')\n            });\n        if (full_jid)\n            roster_info.resource = Strophe.getResourceFromJid(full_jid);\n        this.account.cached_roster.putInRoster(roster_info);\n    },\n\n    onChangedGroupchat: function () {\n        if (this.get('group_chat')) {\n            this.updateCounters();\n            this.participants = new xabber.Participants(null, {contact: this});\n        }\n    },\n\n    getBlockedParticipants: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.get('full_jid') || this.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#block'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    updateCounters: function () {\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    getLastSeen: function() {\n        if (this.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.get('jid'))) {\n                this.set({status_message: 'Server'});\n                return;\n            }\n            let iq = $iq({type: 'get', to: this.get('jid') }).c('query', {xmlns: Strophe.NS.LAST});\n            this.account.sendIQFast(iq, (iq) => {\n                let last_seen = this.getLastSeenStatus(iq);\n                if (this.get('status') == 'offline')\n                    this.set({status_message: last_seen});\n                return this;\n            });\n        }\n    },\n\n    getMyInfo: function (callback) {\n        this.participants.participantsRequest({id: '', properties: true}, (response) => {\n            let $item = $($(response).find('query user')),\n                cached_avatar = this.account.chat_settings.getAvatarInfoById($item.find('id').text());\n            $item.length && this.participants && this.participants.createFromStanza($item);\n            cached_avatar && (cached_avatar.avatar_hash == this.my_info.get('avatar')) && this.my_info.set('b64_avatar', cached_avatar.avatar_b64);\n            this.trigger('update_my_info');\n            this.participants.participantsRequest({id: ''}, (response) => {\n                let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                this.my_rights = data_form;\n                this.trigger('permissions_changed');\n                callback && callback();\n            });\n        });\n    },\n\n    getAvatar: function (avatar, node, callback, errback) {\n        let jid = this.get('group_chat') ? this.get('full_jid') : this.get('jid'),\n            iq_request_avatar = $iq({type: 'get', to: jid})\n            .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n            .c('items', {node: node})\n            .c('item', {id: avatar});\n        this.account.sendIQFast(iq_request_avatar, (iq) => {\n            let pubsub_avatar = $(iq).find('data').text();\n            if (pubsub_avatar == \"\")\n                errback && errback(xabber.getString(\"pubsub__error__text_empty_node\"));\n            else\n                callback && callback(pubsub_avatar);\n        });\n    },\n\n    pubAvatar: function (image, node, callback, errback) {\n        let avatar_hash = sha1(image.base64),\n            iq_pub_data = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_DATA + node})\n                .c('item', {id: avatar_hash})\n                .c('data', {xmlns: Strophe.NS.PUBSUB_AVATAR_DATA}).t(image.base64),\n            iq_pub_metadata = $iq({type: 'set', to: this.get('jid') })\n                .c('pubsub', {xmlns: Strophe.NS.PUBSUB})\n                .c('publish', {node: Strophe.NS.PUBSUB_AVATAR_METADATA + node})\n                .c('item', {id: avatar_hash})\n                .c('metadata', {xmlns: Strophe.NS.PUBSUB_AVATAR_METADATA})\n                .c('info', {bytes: image.size, id: avatar_hash, type: image.type});\n        this.account.sendIQFast(iq_pub_data, () => {\n                this.account.sendIQFast(iq_pub_metadata, () => {\n                        callback && callback(avatar_hash);\n                    },\n                    function (data_error) {\n                        errback && errback(data_error);\n                    });\n            }, (data_error) => {\n                errback && errback(data_error);\n            });\n    },\n\n    getLastSeenStatus: function(iq) {\n        let seconds = $(iq).children('query').attr('seconds'),\n            message_time = moment.now() - 1000*seconds;\n        this.set({ last_seen: message_time });\n        return xabber.pretty_last_seen(seconds);\n    },\n\n    pres: function (type) {\n        let pres = $pres({to: this.get('jid'), type: type});\n        this.account.sendPres(pres);\n        return this;\n    },\n\n    pushInRoster: function (attrs, callback, errback) {\n        attrs || (attrs = {});\n        let name = attrs.name || this.get('roster_name'),\n            groups = attrs.groups || this.get('groups');\n        let iq = $iq({type: 'set'})\n            .c('query', {xmlns: Strophe.NS.ROSTER})\n            .c('item', {jid: this.get('jid'), name: name});\n        _.each(groups, function (group) {\n            iq.c('group').t(group).up();\n        });\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('known', true);\n        this.set('removed', false);\n        return this;\n    },\n\n    removeFromRoster: function (callback, errback) {\n        if (!this.get('removed')){\n            let iq = $iq({type: 'set'})\n                .c('query', {xmlns: Strophe.NS.ROSTER})\n                .c('item', {jid: this.get('jid'), subscription: \"remove\"});\n            this.account.cached_roster.removeFromRoster(this.get('jid'));\n            this.account.sendIQFast(iq, callback, errback);\n            this.set('known', false);\n            this.set('removed', true);\n        }\n        return this;\n    },\n\n    acceptRequest: function (callback) {\n        this.pres('subscribed');\n        callback && callback();\n    },\n\n    askRequest: function (callback) {\n        this.pres('subscribe');\n        callback && callback();\n    },\n\n    blockRequest: function (callback) {\n        this.block(callback);\n    },\n\n    declineRequest: function (callback) {\n        this.pres('unsubscribed');\n        this.removeFromRoster(callback);\n    },\n\n    declineSubscription: function () {\n        this.pres('unsubscribe');\n        this.set('subscription_request_out', false);\n    },\n\n    declineSubscribe: function () {\n        this.pres('unsubscribed');\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', false)\n    },\n\n    deleteWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            header = is_group ? xabber.getString(\"group_remove\") : xabber.getString(\"remove_contact\"),\n            msg_text = is_group ? xabber.getString(\"group_remove_confirm\", [this.get('name').bold()]) : xabber.getString(\"contact_delete_confirm_short\", [this.get('name').bold()]),\n            optional_buttons = is_group ? null : [{ name: 'delete_history', checked: false, text: xabber.getString(\"delete_contact__label_delete_history\")}];\n        utils.dialogs.ask(header, msg_text, optional_buttons, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (is_group) {\n                    let domain = this.domain,\n                        localpart = Strophe.getNodeFromJid(this.get('jid')),\n                        iq = $iq({to: domain, type: 'set'})\n                            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#delete`}).t(localpart);\n                    this.account.sendIQFast(iq, () => {\n                        this.declineSubscription();\n                        this.removeFromRoster();\n                        let chat = this.account.chats.getChat(this);\n                        chat.trigger(\"close_chat\");\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    });\n                } else {\n                    this.removeFromRoster();\n                    if (result.delete_history) {\n                        let chat = this.account.chats.getChat(this);\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n                    }\n                    xabber.trigger(\"clear_search\");\n                }\n            }\n        });\n    },\n\n    blockWithDialog: function () {\n        let is_group = this.get('group_chat'),\n            contact = this,\n            header = is_group ? xabber.getString(\"block_group__header\") : xabber.getString(\"contact_block\"),\n            buttons = { ok_button_text: xabber.getString(\"contact_bar_block\")},\n            msg_text = xabber.getString(\"block_contact_confirm_short\", [this.get('name').bold()]);\n        if (!is_group) {\n            buttons.optional_button = xabber.getString(\"contact_block_and_delete\");\n            msg_text += `\\n${xabber.getString(\"block_contact_warning\", [this.get('jid')])}`;\n        }\n        utils.dialogs.ask(header, msg_text, null, buttons).done(function (result) {\n            if (result) {\n               if (!is_group) {\n                    let chat = contact.account.chats.getChat(contact);\n                    if (result === 'block & delete') {\n                        contact.removeFromRoster();\n                        chat.retractAllMessages(false);\n                        chat.deleteFromSynchronization();\n                        chat.set('active', false);\n                    }\n                }\n                contact.blockRequest();\n                xabber.trigger(\"clear_search\");\n                if (!is_group)\n                    xabber.body.setScreen('all-chats', {right_contact: '', right: undefined});\n            }\n        });\n    },\n\n    unblockWithDialog: function () {\n        let contact = this;\n        utils.dialogs.ask(xabber.getString(\"chat_settings__button_unblock_contact\"), xabber.getString(\"unblock_contact_confirm_short\", [this.get('name')]), null, { ok_button_text: xabber.getString(\"contact_bar_unblock\")}).done(function (result) {\n            if (result) {\n                contact.unblock();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n    },\n\n    block: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', true);\n        this.set('known', false);\n    },\n\n    unblock: function (callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.get('jid')});\n        this.account.sendIQFast(iq, callback, errback);\n        this.set('blocked', false);\n    },\n\n    sendPresent: function () {\n        let pres = $pres({to: this.get('jid')})\n            .c('x', {xmlns: `${Strophe.NS.GROUP_CHAT}#present`});\n        this.account.sendPres(pres);\n        clearInterval(this._sending_present_interval);\n        this._sending_present_interval = setInterval(() => {\n            this.account.sendPres(pres);\n        }, constants.PRESENT_INTERVAL);\n    },\n\n    sendNotPresent: function () {\n        let pres = $pres({to: this.get('jid')})\n            .c('x', {xmlns: `${Strophe.NS.GROUP_CHAT}#not-present`});\n        this.account.sendPres(pres);\n        clearInterval(this._sending_present_interval);\n    },\n\n    handlePresence: function (presence) {\n        let $presence = $(presence),\n            type = presence.getAttribute('type'),\n            $vcard_update = $presence.find(`x[xmlns=\"${Strophe.NS.VCARD_UPDATE}\"]`);\n        if ($vcard_update.length && this.get('avatar_priority') && this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.VCARD_AVATAR) {\n            this.set('photo_hash', $vcard_update.find('photo').text());\n            this.trigger('update_avatar');\n        }\n        let $group_chat_info = $(presence).find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`);\n        if ($group_chat_info.length > 0 && $group_chat_info.children().length) {\n            this.set('full_jid', $presence.attr('from'));\n            if (!this.get('group_chat')) {\n                this.set('group_chat', true);\n                this.account.chat_settings.updateGroupChatsList(this.get('jid'), this.get('group_chat'));\n            }\n            if (this.details_view && !this.details_view.child('participants')) {\n                this.details_view = new xabber.GroupChatDetailsView({model: this});\n            }\n            let group_chat_info = this.parseGroupInfo($(presence)),\n                prev_group_info = this.get('group_info') || {};\n            if (this.details_view && this.details_view.isVisible() && group_chat_info.online_members_num != prev_group_info.online_members_num)\n                this.trigger('update_participants');\n            _.extend(prev_group_info, group_chat_info);\n            this.set('group_info', prev_group_info);\n            if (!this.get('roster_name') && (prev_group_info.name !== this.get('name')))\n                this.set('name', prev_group_info.name);\n            this.set({status: prev_group_info.status, status_updated: moment.now(), status_message: (prev_group_info.members_num + ' members' + xabber.getString(\"contact_groupchat_status_online\", [prev_group_info.online_members_num || 0]))});\n        }\n        if (type === 'subscribe') {\n            this.set('subscription_request_in', true);\n            if (this.get('subscription_preapproved')) {\n                this.pres('subscribed');\n            } else {\n                this.trigger('presence', this, 'subscribe');\n            }\n        } else if (type === 'subscribed') {\n            if (this.get('group_chat') && (this.get('subscription_request_out') || this.get('subscription') === 'to')) {\n\n            }\n            if (this.get('subscription') === 'to') {\n                // this.pres('subscribed');\n            }\n            this.trigger('presence', this, 'subscribed');\n        } else if (type === 'unsubscribe') {\n            this.set('subscription_request_in', false);\n            if (this.get('group_chat')) {\n                this.removeFromRoster();\n                let chat = this.account.chats.getChat(this);\n                if (!this.get('sync_deleted')){\n                    chat.deleteFromSynchronization(() => {\n                        chat.trigger(\"close_chat\");\n                        this.destroy();\n                    }, () => {\n                        chat.trigger(\"close_chat\");\n                        this.destroy();\n                    });\n                } else {\n                    chat.trigger(\"close_chat\");\n                    this.destroy();\n                }\n            }\n        } else if (type === 'unsubscribed') {\n            this.set('subscription_request_out', false);\n            // this.trigger('presence', this, 'unsubscribed');\n        } else {\n            let jid = presence.getAttribute('from'),\n                resource = Strophe.getResourceFromJid(jid),\n                priority = Number($presence.find('priority').text()),\n                status = $presence.find('show').text() || 'online',\n                $status_message = $presence.find('status'),\n                status_message = $status_message.text();\n            _.isNaN(priority) && (priority = 0);\n            clearTimeout(this._reset_status_timeout);\n            let resource_obj = this.resources.get(resource);\n            if (type === 'unavailable') {\n                this.set({ last_seen: moment.now() });\n                resource_obj && resource_obj.destroy();\n            } else {\n                this.set({ last_seen: undefined });\n                let attrs = {\n                    resource: resource,\n                    priority: priority,\n                    status: status\n                };\n                $status_message.length && (attrs.status_message = status_message);\n                if (!resource_obj) {\n                    resource_obj = this.resources.create(attrs);\n                } else {\n                    resource_obj.set(attrs);\n                }\n            }\n        }\n    },\n\n    parseGroupInfo: function ($presence) {\n        let jid = this.get('jid'),\n            $group_chat = $presence.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`),\n            name = $group_chat.find('name').text(),\n            $model = $group_chat.find('membership'),\n            status = $presence.children('show').text() || (($presence.attr('type') === 'unavailable') ? 'unavailable' : 'online'),\n            status_msg = $presence.children('status').text(),\n            privacy = $group_chat.find('privacy').text(),\n            $index = $group_chat.find('index'),\n            $description = $group_chat.find('description'),\n            pinned_message = Number($group_chat.find('pinned-message').text()),\n            prev_pinned_message = this.get('pinned_message') ? this.get('pinned_message').get('stanza_id') : 0,\n            private_chat = $group_chat.find('parent-chat').text() || false,\n            members_num = Number($group_chat.find('members').text()),\n            $online_members_num = $group_chat.find('present'),\n            info = {jid, name, status_msg, privacy, status, members_num};\n        $index.length && (info.searchable = $index.text());\n        $model.length && (info.model = $model.text());\n        $description.length && (info.description = $description.text());\n        $online_members_num.length && (info.online_members_num = Number($online_members_num.text()));\n        private_chat && this.set('private_chat', private_chat);\n        privacy === 'incognito' && this.set('incognito_chat', true);\n        let chat = this.account.chats.get(this.hash_id), pinned_msg_elem;\n        if ($group_chat.find('pinned-message').length) {\n            if (prev_pinned_message != pinned_message) {\n                if (chat) {\n                    if (chat.item_view && !chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    pinned_msg_elem = chat.item_view.content.$pinned_message;\n                }\n                if (pinned_msg_elem) {\n                    if (pinned_message) {\n                        this.getMessageByStanzaId(pinned_message, ($message) => {\n                            this.parsePinnedMessage($message, pinned_msg_elem);\n                        });\n                    }\n                    else {\n                        this.set('pinned_message', undefined);\n                        this.parsePinnedMessage(undefined, pinned_msg_elem);\n                    }\n                }\n            }\n        }\n        return info;\n    },\n\n    getAllRights: function (callback) {\n        let iq_get_rights = $iq({type: 'get', to: this.get('full_jid') || this.get('jid') })\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights` });\n        this.account.sendIQFast(iq_get_rights, (iq_all_rights) => {\n            let all_permissions = $(iq_all_rights).find('permission'),\n                all_restrictions = $(iq_all_rights).find('restriction');\n            this.all_rights = {permissions: all_permissions, restrictions: all_restrictions};\n            callback && callback();\n        });\n    },\n\n        getMessageByStanzaId: function (stanza_id, callback) {\n            let queryid = uuid(),\n                account = this.account,\n                is_fast = account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n                conn = is_fast ? account.fast_connection : account.connection,\n                iq = $iq({type: 'set', to: this.get('full_jid') || this.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                    .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                    .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                    .c('value').t(Strophe.NS.MAM).up().up()\n                    .c('field', {'var': '{urn:xmpp:sid:0}stanza-id'})\n                    .c('value').t(stanza_id);\n            let handler = conn.addHandler((message) => {\n                let $msg = $(message);\n                if ($msg.find('result').attr('queryid') === queryid)\n                    callback && callback($msg);\n                return true;\n            }, Strophe.NS.MAM);\n            this.account.sendIQFast(iq, () => {\n                    conn.deleteHandler(handler);\n                }, () => {\n                    conn.deleteHandler(handler);\n                }\n            );\n        },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this,\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n            .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n            .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n            .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE) && options.encrypted)    {\n            iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_encrypted`})\n                .c('value').t(options.encrypted).up().up();\n        }\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE) && !options.encrypted)    {\n            if (options.filter_image)\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_image`})\n                    .c('value').t(options.filter_image).up().up();\n            if (options.filter_video)\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_video`})\n                    .c('value').t(options.filter_video).up().up();\n            if (options.filter_voice)\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_voice`})\n                    .c('value').t(options.filter_voice).up().up();\n            if (options.filter_files){\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_image`})\n                    .c('value').t('false').up().up();\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_video`})\n                    .c('value').t('false').up().up();\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_voice`})\n                    .c('value').t('false').up().up();\n                iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_sticker`})\n                    .c('value').t('false').up().up();\n            }\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            let handler = conn.addHandler(function (message) {\n                if ((contact && is_groupchat == contact.get('group_chat'))) {\n                    let $msg = $(message);\n                    if ($msg.find('result').attr('queryid') === queryid) {\n                        messages.push(message);\n                    }\n                }\n                else {\n                    messages = [];\n                    success = false;\n                }\n                return true;\n            }, Strophe.NS.MAM);\n            let callb = function (res) {\n                    conn.deleteHandler(handler);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n            if (is_fast)\n                account.sendFast(iq, callb, errb);\n            else\n                account.sendIQ(iq, callb, errb);\n        });\n    },\n\n    getFilesFromStanza: function ($message, options) {\n        $message = $message.find('message')\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n            items = [];\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type');\n            if (type === 'mutable') {\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        uniqueid: $message.attr('id'),\n                        id: $file.children('gallery-id').text(),\n                        created_at: $file.children('created').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        media_type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        file_attrs.has_encrypted_files = true;\n                    }\n                    items.push(file_attrs);\n                }\n            }\n        });\n        return items\n    },\n\n    parsePinnedMessage: function ($message, pinned_msg_elem) {\n        if (!$message) {\n            this.renderPinnedMessage(null, pinned_msg_elem);\n        }\n        else {\n            let $msg = $message.find('result message').first();\n            if (this.get('pinned_message'))\n                if (this.get('pinned_message').stanza_id === $msg.find('stanza-id').attr('id'))\n                    return;\n            let message = this.account.chats.receiveChatMessage($message, {pinned_message: true});\n            this.set('pinned_message', message);\n            this.renderPinnedMessage(message, pinned_msg_elem);\n        }\n    },\n\n    renderPinnedMessage: function (message, pinned_msg_elem) {\n        if (!message) {\n            pinned_msg_elem.html(\"\");\n            pinned_msg_elem.siblings('.chat-content').css({'height':'100%'});\n        }\n        else {\n            let images = message.get('images') || [],\n                files = message.get('files') || [],\n                locations = message.get('locations'),\n                fwd_message = message.get('forwarded_message'),\n                fwd_msg_author = null,\n                msg_text = _.escape(message.get('message'));\n            message.get('videos') && message.get('videos').length && (files = files.concat(message.get('videos')));\n            if (fwd_message) {\n                let user_info = fwd_message[0].get('user_info') || {};\n                if (msg_text) {\n                } else if (fwd_message.length > 1)\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", fwd_message.length);\n                else {\n                    msg_text = fwd_message[0].get('message') || fwd_message[0].get('forwarded_message') && xabber.getString(\"forwarded_messages_count_plural_0\", [fwd_message[0].get('forwarded_message').length]);\n                    fwd_msg_author = user_info.nickname || fwd_message[0].get('from_jid') || user_info.id;\n                }\n            }\n            if ((images && images.length) && (files && files.length))\n                msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__attachments\", [images.length + files.length])}</span>`;\n            else {\n                if (images && images.length) {\n                    if (images.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__images_plural_0\")}: </span>` + images[0].name;\n                    if (images.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__images\", images.length)}</span>`;\n                }\n                if (files && files.length) {\n                    if (files.length == 1)\n                        msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__files_plural_0\")}: </span>` + files[0].name + ' (' + files[0].size + ')';\n                    if (files.length > 1)\n                        msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__files\", files.length)}</span>`;\n                }\n            }\n            if (locations && locations.length) {\n                if (locations.length == 1)\n                    msg_text = `<span class=text-color-500>${xabber.getString(\"recent_chat__last_message__locations_plural_0\")}</span>`;\n                if (locations.length > 1)\n                    msg_text = `<span class=text-color-500>${xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length)}</span>`;\n            }\n            let user_info = message.get('user_info') || {},\n                chat_content = this.account.chats.get(this.hash_id).item_view.content,\n                is_scrolled = chat_content.isScrolledToBottom(),\n                msg_author = user_info.nickname || message.get('from_jid') || user_info.id,\n                pinned_msg = {\n                    author: msg_author,\n                    time: pretty_datetime(message.get('time')),\n                    message: msg_text,\n                    fwd_author: fwd_msg_author\n                },\n                pinned_msg_html = $(templates.group_chats.pinned_message(pinned_msg));\n            pinned_msg_elem.html(pinned_msg_html).emojify('.chat-msg-content', {emoji_size: 18});\n            let height_pinned_msg = pinned_msg_elem.height();\n            pinned_msg_elem.siblings('.chat-content').css({\n                'height': 'calc(100% - ' + height_pinned_msg + 'px)'\n            });\n            if (is_scrolled)\n                chat_content.scrollToBottom();\n            pinned_msg_elem.attr('data-uniqueid', message.get('unique_id'));\n        }\n    },\n\n    resetStatus: function (timeout) {\n        clearTimeout(this._reset_status_timeout);\n        this._reset_status_timeout = setTimeout(() => {\n            this.set({\n                status_updated: moment.now(),\n                status: 'offline',\n                status_message: ''\n            });\n        }, timeout || 5000);\n    },\n\n    searchByParticipants: function (query, callback) {\n        if (!this.participants.version) {\n            this.participants.participantsRequest({}, () => {\n                let participants_list = this.participants.search(query);\n                callback && callback(participants_list);\n            });\n        } else {\n            let participants_list = this.participants.search(query);\n            callback && callback(participants_list);\n        }\n    },\n\n    updateName: function () {\n        if (this.get('roster_name') && this.get('name') !== this.get('roster_name'))\n            this.set('name', this.get('roster_name'));\n    },\n\n    showDetails: function (screen) {\n        if (!this.details_view)\n            this.details_view = (this.get('group_chat')) ? new xabber.GroupChatDetailsView({model: this}) : new xabber.ContactDetailsView({model: this});\n        screen || (screen = 'contacts');\n        xabber.body.setScreen(screen, {right: 'contact_details', contact: this});\n    },\n\n    showDetailsRight: function (screen, options) {\n        let chat = this.account.chats.getChat(this),\n             scrolled_top_chats_view, scrolled_top_chat;\n        if (chat)\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            scrolled_top_chat = chat.item_view.content.getScrollTop()\n        if (xabber.chats_view)\n            scrolled_top_chats_view = xabber.chats_view.getScrollTop();\n        options = options || {};\n        if (!this.details_view_right && !options.encrypted)\n            this.details_view_right = (this.get('group_chat')) ? new xabber.GroupChatDetailsViewRight({model: this}) : new xabber.ContactDetailsViewRight({model: this});\n        if (!this.details_view_right_encrypted && options.encrypted)\n            this.details_view_right_encrypted = new xabber.ContactDetailsViewRight({model: this, encrypted: true});\n        screen || (screen = 'contacts');\n        if (xabber.body.screen.get('right_contact') && options.type != 'search' && options.type != 'members' && options.type != 'participant' && !options.right_saved) {\n            this.set('search_hidden', true)\n            xabber.body.setScreen(screen, {right_contact: '', contact: this});\n        }\n        else {\n            if (options.encrypted)\n                xabber.body.setScreen(screen, {right_contact: 'contact_details_encrypted', contact: this});\n            else\n                xabber.body.setScreen(screen, {right_contact: 'contact_details', contact: this});\n            if (this.details_view_right && this.details_view_right.contact_searched_messages_view){\n                this.details_view_right.contact_searched_messages_view.hideSearch();\n                if (options.type === 'search') {\n                    this.details_view_right.contact_searched_messages_view.clearSearch();\n                    this.details_view_right.showSearchMessages();\n                }\n                if (options.type === 'members') {\n                    this.details_view_right.$('.tabs:not(.participant-tabs) .list-variant[data-value=\"participants\"]').click()\n                }\n                this.details_view_right.onScroll()\n            }\n        }\n        if (scrolled_top_chat)\n            chat.item_view.content.scrollTo(scrolled_top_chat);\n        if (scrolled_top_chats_view)\n            xabber.chats_view.scrollTo(scrolled_top_chats_view);\n    },\n});\n\nxabber.SetGroupchatStatusView = xabber.BasicView.extend({\n    className: 'modal main-modal change-status-modal',\n    template: templates.group_chats.set_status,\n\n    events: {\n        \"click .status-values li\": \"changeStatus\"\n    },\n\n    open: function (contact) {\n        this.contact = contact;\n        this.account = this.contact.account;\n        this.show();\n        this.getStatuses();\n    },\n\n    updateIcons: function () {\n        let ic_name = this.contact.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    highlightStatus: function (status) {\n        this.$(`.status-values li[data-value=\"${status}\"]`).addClass('active')\n            .siblings().removeClass('active');\n        this.updateIcons();\n    },\n\n    getStatuses: function () {\n        let iq_get_properties = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'get'})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`});\n        this.account.sendFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find('x[xmlns=\"' + Strophe.NS.DATAFORM + '\"]'));\n            let status_field = this.data_form.fields.find(field => field.var == 'status'),\n                options = (this.data_form.fields.find(field => field.var == 'status') || []).options || [];\n            if (!options.length || status_field.type == 'fixed') {\n                this.closeModal();\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                return;\n            }\n            this.renderStatuses(options);\n        }, () => {\n            this.closeModal();\n            utils.dialogs.error(xabber.getString(\"set_group_status__error__service_unavailable\"));\n            return;\n        });\n    },\n\n    renderStatuses: function (options) {\n        this.$('.status-values').html(\"\");\n        options.forEach((option) => {\n            let status = option,\n                status_field = this.data_form.fields.find(f => f.var == status.value);\n            if (status_field)\n                status.show = status_field.values[0];\n            else\n                status.show = status.value;\n            let $status_item = $(templates.group_chats.status_item({status}));\n            this.$('.status-values').append($status_item);\n        });\n        this.highlightStatus(this.contact.get('status'));\n    },\n\n    changeStatus: function (ev) {\n        let status = $(ev.target).closest('li').data('value');\n        this.highlightStatus(status);\n        this.do_change();\n        this.closeModal();\n    },\n\n    do_change: function () {\n        let status = this.$('.status-values li.active').data('value');\n        this.setStatus(status);\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: this.close.bind(this)\n        });\n    },\n\n    setStatus: function (status) {\n        if (!this.data_form || this.contact.get('group_info').status === status)\n            return;\n        let iq_set_status = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#status`}),\n            status_field = this.data_form.fields.find(field => field.var === 'status'),\n            idx = this.data_form.fields.indexOf(status_field);\n        status_field.values = [status];\n        this.data_form.fields[idx] = status_field;\n        iq_set_status = this.account.addDataFormToStanza(iq_set_status, this.data_form);\n        this.account.sendFast(iq_set_status);\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        let value = this.$('.status-message').val();\n        if (!value)\n            this.do_change();\n        this.closeModal();\n    },\n\n    closeModal: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.ContactItemView = xabber.BasicView.extend({\n    className: 'roster-contact list-item',\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$el.attr({'data-id': uuid(), 'data-jid': this.model.get('jid')});\n        this.$('.jid').text(this.model.get('jid'));\n        this.interval_last;\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.selectView();\n        this.updateGroupChat();\n        this.updateIcon();\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:image\", this.updateAvatar, this);\n        this.model.on(\"change:status_updated\", this.updateStatus, this);\n        this.model.on(\"change:subscription\", this.updateStatus, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatus, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatus, this);\n        this.model.on(\"change:private_chat\", this.updateIcon, this);\n        this.model.on(\"change:incognito_chat\", this.updateIcon, this);\n        this.model.on(\"change:bot\", this.updateIcon, this);\n        this.model.on(\"change:blocked\", this.onBlocked, this);\n        this.model.on(\"change:status_message\", this.updateStatusMsg, this);\n        this.model.on(\"change:last_seen\", this.lastSeenUpdated, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateName: function () {\n        this.$('.name').text(this.model.get('name'));\n    },\n\n    updateAvatar: function () {\n        this.$('.circle-avatar').setAvatar(this.model.cached_image, this.avatar_size);\n    },\n\n    updateStatus: function () {\n        this.$('.status').attr('data-status', this.model.get('status'));\n        this.$('.chat-icon').attr('data-status', this.model.get('status'));\n        this.$('.status-message').text(this.model.getStatusMessage());\n        if (this.model.get('status') == 'offline') {\n            if (!Strophe.getNodeFromJid(this.model.get('jid'))) {\n                this.model.set({status_message: 'Server'});\n                return;\n            }\n            if (this.model.get('last_seen')) {\n            let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.model.set({ status_message: new_status });\n            }\n        }\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    selectView: function () {\n        if (this.model.get('group_chat')) {\n            this.$('.private-chat').addClass('hidden');\n            this.$('.group_chat').removeClass('hidden');\n        }\n    },\n\n    lastSeenUpdated: function () {\n        if (this.model.get('status') == 'offline' && this.model.get('last_seen') && _.isUndefined(this.interval_last)) {\n            this.interval_last = setInterval(() => {\n                let seconds = (moment.now() - this.model.get('last_seen'))/1000,\n                    new_status = xabber.pretty_last_seen(seconds);\n                this.model.set({ status_message: new_status });\n            }, 60000);\n        }\n        else\n        {\n            clearInterval(this.interval_last);\n        }\n    },\n\n    updateGroupChat: function () {\n        let is_group_chat = this.model.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.updateIcon();\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.chat-icon').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    updateStatusMsg: function() {\n        this.$('.status-message').text(this.model.getStatusMessage());\n    }\n});\n\nxabber.ContactItemRightView = xabber.ContactItemView.extend({\n    template: templates.contact_right_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_RIGHT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\",\n        \"mouseover\": \"showJid\",\n        \"mouseleave\": \"hideJid\",\n    },\n\n    showJid: function () {\n        if (this.$('.name').text() !== this.model.get('jid')) {\n            this.$('.status-message').addClass('hidden');\n            this.$('.jid').removeClass('hidden');\n        }\n    },\n\n    hideJid: function () {\n        this.$('.jid').addClass('hidden');\n        this.$('.status-message').removeClass('hidden');\n    },\n\n    clickOnItem: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    }\n});\n\nxabber.ContactItemLeftView = xabber.ContactItemView.extend({\n    template: templates.contact_left_item,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_LEFT_ITEM,\n\n    events: {\n        \"click\": \"clickOnItem\"\n    },\n\n    __initialize: function () {\n        this.updateDisplayStatus();\n        this.updateBlockedState();\n        this.updateMutedState();\n        this.updateGroupChat();\n        this.model.on(\"change:display\", this.updateDisplayStatus, this);\n        this.model.on(\"change:blocked\", this.updateBlockedState, this);\n        this.model.on(\"change:group_chat\", this.updateGroupChat, this);\n    },\n\n    updateDisplayStatus: function () {\n        this.$el.switchClass('active', this.model.get('display'));\n    },\n\n    updateBlockedState: function () {\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n    updateMutedState: function () {\n        this.$('.muted-icon').hide();\n    },\n\n    clickOnItem: function () {\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    }\n});\n\nxabber.ContactResources = xabber.Resources.extend({\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.jid = options.contact.get('jid');\n        this.connection = options.contact.account.connection;\n        this.on(\"add change\", this.onResourceUpdated, this);\n        this.on(\"remove\", this.onResourceRemoved, this);\n    },\n\n    onResourceUpdated: function (resource) {\n        if (resource === this.first()) {\n            this.contact.set({\n                status_updated: moment.now(),\n                status: resource.get('status'),\n                status_message: resource.get('status_message')\n            });\n        }\n    },\n\n    onResourceRemoved: function () {\n        let attrs = {status_updated: moment.now()};\n        if (this.length) {\n            attrs.status = this.first().get('status');\n            attrs.status_message = this.first().get('status_message');\n        } else {\n            attrs.status = 'offline';\n            attrs.status_message = '';\n        }\n        this.contact.set(attrs);\n    }\n});\n\nxabber.ContactResourcesView = xabber.ResourcesView.extend({\n    onResourceAdded: function (resource) {\n        this.addChild(resource.get('resource'),\n            xabber.ResourceView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n        this.parent.updateScrollBar();\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n        this.parent.updateScrollBar();\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactResourcesRightView = xabber.ResourcesView.extend({\n    className: 'modal main-modal resource-modal',\n\n    _initialize: function () {\n        this.model.on(\"remove\", this.onResourceRemoved, this);\n        this.model.on(\"reset\", this.onReset, this);\n        this.model.on(\"change:priority\", this.onPriorityChanged, this);\n    },\n\n    renderByInit: function () {\n        this.model.each((resource) => {\n            this.onResourceAdded(resource);\n        });\n    },\n\n    open: function () {\n        if (this.model.length) {\n            this.$el.openModal({\n                ready: () => {\n                    this.$el.html('<svg class=\"details-icon mdi mdi-24px \"></svg><div class=\"resources-wrap\"></div>')\n                    this.$el.find('.details-icon').html(env.templates.svg['ic-jabber']())\n                    this.renderByInit();\n                },\n                // complete: () => {\n                //     this.$el.detach();\n                //     this.data.set('visible', false);\n                // }\n            });\n        }\n    },\n\n    onResourceAdded: function (resource) {\n        this.model.requestInfo(resource);\n        this.addChild(resource.get('resource'),\n            xabber.ResourceRightView, {model: resource});\n        this.updatePosition(resource);\n        this.$el.removeClass('hidden');\n    },\n\n    onResourceRemoved: function (resource) {\n        this.removeChild(resource.get('resource'));\n        this.$el.showIf(this.model.length);\n    },\n\n    onReset: function () {\n        this.removeChildren();\n        this.$el.addClass('hidden');\n    },\n\n    updatePosition: function (resource) {\n        let view = this.child(resource.get('resource'));\n        if (!view) return;\n        view.$el.detach();\n        let index = this.model.indexOf(resource);\n        if (index === 0) {\n            this.$('.resources-wrap').prepend(view.$el);\n        } else {\n            this.$('.resource-wrap').eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    }\n});\n\nxabber.ContactVCardView = xabber.VCardView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .details-icon\": \"onClickIcon\"\n    }\n});\n\nxabber.ContactRightVCardView = xabber.VCardRightView.extend({\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .info-wrap.more\": \"showVCard\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.main-info').removeClass('fixed-scroll');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n});\n\nxabber.ContactDetailsView = xabber.BasicView.extend({\n    className: 'details-panel contact-details-panel',\n    template: templates.contact_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n        \"change .subscription-info-wrap input\": \"onChangedSubscription\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.resources_view = this.addChild('resources',\n            xabber.ContactResourcesView, {model: this.model.resources,\n                el: this.$('.resources-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.model.on(\"change\", this.update, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.setButtonsWidth();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-delete').showIf(in_roster);\n        this.$('.btn-block-wrap i').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap)').switchClass('non-active', is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    onChangedSubscription: function (ev) {\n        let contact = this.model,\n            $target = $(ev.target),\n            is_checked = $target.prop('checked');\n        if (is_checked) {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.askRequest();\n            else {\n                contact.set('subscription_preapproved', true);\n                contact.acceptRequest();\n            }\n        }\n        else {\n            if ($target.attr('id') === \"outcoming-subscription\")\n                contact.declineSubscription();\n            else\n                contact.declineSubscribe();\n        }\n    },\n\n    openChat: function (ev) {\n        if (ev && ($(ev.target).closest('.button-wrap').hasClass('non-active') || $(ev.target).closest('.button-wrap').length && this.model.get('blocked')))\n            return;\n        let options = {};\n        (xabber.chats_view.active_chat && xabber.chats_view.active_chat.model.get('jid') === this.model.get('jid') && xabber.chats_view.active_chat.model.get('encrypted')) && (options.encrypted = true);\n        this.model.trigger(\"open_chat\", this.model, options);\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        this.openChat();\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.ContactDetailsViewRight = xabber.ContactDetailsView.extend({\n    className: 'details-panel-right contact-details-panel',\n    template: templates.contact_details_right,\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-voice-call\": \"voiceCall\",\n        \"click .btn-add\": \"addContact\",\n        \"click .btn-delete\": \"deleteContact\",\n        \"click .btn-block\": \"blockContact\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-unblock\": \"unblockContact\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .list-variant\": \"changeList\",\n        \"click .btn-auth-request\": \"requestAuthorization\",\n    },\n\n    _initialize: function (options) {\n        this.encrypted = options.encrypted;\n        this.ps_container = this.$('.panel-content-wrap');\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model, options.encrypted && 'encrypted');\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        if (!this.encrypted){\n            this.contact_edit_view = this.addChild('edit', xabber.ContactEditView,\n                {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        }\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.vcard_view = this.addChild('vcard', xabber.ContactRightVCardView,\n            {model: this.model, el: this.$('.vcard')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateButtons();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        xabber.on(\"change:video\", this.updateJingleButtons, this);\n        xabber.on(\"change:audio\", this.updateJingleButtons, this);\n    },\n\n    render: function (options) {\n        if (!this.model.get('vcard_updated')) {\n            this.vcard_view.refresh();\n        }\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        if (this.encrypted){\n            this.$('.btn-search-messages').remove()\n            this.$('.btn-edit').remove()\n            this.$('.btn-qr-code').remove()\n        }\n        this.updateChilds();\n        this.updateSubscriptions();\n        this.updateJingleButtons();\n        this.updateStatusMsg();\n        this.updateName();\n        this.updateNotifications();\n        this.setButtonsWidth();\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.onScroll();\n        this.model.resources.models.forEach((resource) => {this.model.resources.requestInfo(resource)});\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n    },\n\n    updateChilds: function () {\n        if (this.vcard_view && !this.model.get('vcard_hidden'))\n            this.vcard_view.hideVCard();\n        if (this.contact_edit_view && !this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    scrollToTopSmooth: function () {\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    onChangedVisibility: function () {\n        this.model.set('display', this.isVisible());\n    },\n\n    updateJingleButtons: function () {\n        this.$('.btn-voice-call').switchClass('non-active', !xabber.get('audio'));\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        if (_.has(changed, 'status_updated')) this.updateStatus();\n        if (_.has(changed, 'subscription')) this.updateSubscriptions();\n        if (_.has(changed, 'subscription_request_in')) this.updateSubscriptions();\n        if (_.has(changed, 'blocked')) this.updateStatusMsg();\n        if (_.has(changed, 'status_message')) this.updateStatusMsg();\n        if (_.has(changed, 'in_roster') || _.has(changed, 'blocked') ||\n            _.has(changed, 'subscription')) {\n            this.updateButtons();\n        }\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('roster_name') && this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 200) {\n            this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,1)'});\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.block-wrap.vcard').css({'padding-top': '340px'})\n            this.$('.main-info .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,0.5)'});\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.block-wrap.vcard').css({'padding-top': '0'});\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,0)'});\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.block-wrap.vcard').css({'padding-top': '0'});\n            this.$('.main-info .block-name').addClass('fade-out');\n        }\n        if (bottom_block_scroll && bottom_block_scroll < 150) {\n            this.$('.bottom-block:not(.edit-bottom-block) .tabs').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.main-info .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.main-info .block-name.second-text').removeClass('fade-out');\n            this.$('.main-info .block-name.second-text').text(this.$('.list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block) .tabs').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status').attr('data-status', this.model.get('status'));\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateStatusMsg: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateButtons: function () {\n        let in_roster = this.model.get('in_roster'),\n            is_blocked = this.model.get('blocked'),\n            is_server = this.model.get('server'),\n            subscription = this.model.get('subscription');\n        this.$('.btn-add').hideIf(in_roster);\n        this.$('.btn-block-wrap .contact-btn').switchClass('btn-block', !is_blocked).switchClass('btn-unblock', is_blocked);\n        this.$('.btn-block-wrap .btn-name').text(is_blocked ? xabber.getString(\"contact_bar_unblock\") : xabber.getString(\"contact_bar_block\"));\n        this.$('.buttons-wrap .button-wrap:not(.btn-block-wrap):not(.btn-search-messages)').switchClass('non-active', is_blocked);\n        this.$('.contact-mute-dropdown').hideIf(is_blocked);\n        this.$('.btn-auth-request').showIf(!is_server && in_roster && !is_blocked &&\n            subscription !== 'both' && subscription !== 'to');\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.chat.isMuted());\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    updateSubscriptions: function () {\n        let subscription = this.model.get('subscription'),\n            in_request = this.model.get('subscription_request_in'),\n            out_request = this.model.get('subscription_request_out'),\n            $label_outcoming = this.$('label[for=\"outcoming-subscription\"]'),\n            $label_incoming = this.$('label[for=\"incoming-subscription\"]');\n        if (subscription === 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        } else if (subscription === 'from') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', true);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        } else if (subscription === 'to') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_receive\")).prev('input').prop('checked', true);\n        }\n        else if (!subscription || subscription === 'none') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_accept\")).prev('input').prop('checked', this.model.get('subscription_preapproved') ? true : false);\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', false);\n        }\n        if (in_request && subscription !== 'both') {\n            $label_incoming.text(xabber.getString(\"contact_subscription_send\")).prev('input').prop('checked', false);\n        }\n        if (out_request) {\n            $label_outcoming.text(xabber.getString(\"contact_subscription_ask\")).prev('input').prop('checked', true);\n        }\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    voiceCall: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        if (xabber.get('audio'))\n            this.initCall(ev);\n    },\n\n    initCall: function () {\n        if (xabber.current_voip_call) {\n            utils.callback_popup_message(xabber.getString(\"jingle__error__call_in_progress\"), 1000);\n            return;\n        }\n        let chat = this.account.chats.getChat(this.model);\n        if (!chat.item_view.content)\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        chat.item_view.content.initJingleMessage();\n    },\n\n    deleteContact: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    addContact: function () {\n        xabber.add_contact_view.show({account: this.account, jid: this.model.get('jid')});\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.ps_container.animate(\n            {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-110},\n            200,\n            () => {\n                this.onScroll();\n                this.ps_container.animate(\n                    {scrollTop: this.$('.bottom-block:not(.edit-bottom-block)').position().top + this.ps_container.scrollTop()-110},\n                    0,\n                );\n        });\n        this.$('.header-buttons .block-name.second-text').text($target.text())\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, encrypted: this.encrypted, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    requestAuthorization: function () {\n        this.model.pres('subscribe');\n        this.model.trigger('presence', this.model, 'subscribe_from');\n        this.openChat();\n    }\n});\n\nxabber.GroupChatDetailsView = xabber.BasicView.extend({\n    className: 'details-panel groupchat-details-panel',\n    template: templates.group_chats.group_chat_details,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute\": \"changeNotifications\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"editDefaultRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .btn-escape\": \"openChat\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.participants = this.addChild('participants', xabber.ParticipantsView, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesView, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusView, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit = new xabber.DefaultRestrictionsView({model: this.model});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.updateList('participants');\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n        this.setButtonsWidth();\n        return this;\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .contact-name').addClass('name-is-custom');\n        else\n            this.$('.main-info .contact-name').removeClass('name-is-custom');\n    },\n\n    changeNotifications: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active') || this.model.get('blocked'))\n            return;\n        let chat = this.account.chats.getChat(this.model);\n        chat.muteChat();\n    },\n\n    // updateNotifications: function () {\n    //     let chat = this.account.chats.getChat(this.model);\n    //     this.$('.btn-mute').switchClass('mdi-bell-off', chat.get('muted'));\n    //     this.$('.btn-mute').switchClass('mdi-bell', !chat.get('muted'));\n    // },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    editDefaultRestrictions: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active'))\n            this.default_restrictions_edit.open();\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                contact.removeFromRoster();\n                let chat = this.account.chats.getChat(contact);\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function () {\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    },\n});\n\nxabber.GroupChatDetailsViewRight = xabber.BasicView.extend({\n    className: 'details-panel-right groupchat-details-panel',\n    template: templates.group_chats.group_chat_details_right,\n    ps_selector: '.panel-content-wrap',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-mute.muted\": \"unmuteChat\",\n        \"click .btn-edit\": \"showEdit\",\n        \"click .btn-search\": \"showSearchMessages\",\n        \"click .btn-clear-history-chat\": \"clearHistory\",\n        \"click .btn-qr-code\": \"showQRCode\",\n        \"click .btn-leave\": \"leaveGroupChat\",\n        \"click .btn-invite\": \"inviteUser\",\n        \"click .btn-delete-group\": \"deleteGroup\",\n        \"click .btn-edit-settings\": \"editProperties\",\n        \"click .btn-default-restrictions\": \"showRestrictions\",\n        \"click .btn-chat\": \"openChat\",\n        \"click .panel-background-clickable\": \"openChat\",\n        \"click .btn-escape:not(.btn-top)\": \"openChat\",\n        \"click .btn-escape.btn-top\": \"scrollToTopSmooth\",\n        \"click .btn-clear-history\": \"retractAllMessages\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .tabs:not(.participant-tabs) .list-variant\": \"changeList\",\n        \"click .edit-pictured-buttons .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.chat = this.account.chats.getChat(this.model);\n        this.name_field = new xabber.ContactNameWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.name_field.$('.contact-name-input').prop('disabled', true)\n        this.participants = this.addChild('participants', xabber.ParticipantsViewRight, {model: this.model, el: this.$('.participants-wrap')[0]});\n        this.edit_groups_view = this.addChild('groups',\n            xabber.ContactEditGroupsView, {el: this.$('.groups-block-wrap')[0]});\n        this.contact_edit_view = this.addChild('edit', xabber.GroupEditView,\n            {model: this.model, el: this.$('.edit-block-wrap')[0]});\n        this.group_chat_properties = this.addChild('properties_view', xabber.GroupChatPropertiesViewRight, {model:this.model, el: this.$('.group-chat-properties-wrap')[0]});\n        this.group_chat_status = this.addChild('status_view', xabber.GroupChatStatusViewRight, {model:this.model, el: this.$('.status-block-wrap')[0]});\n        this.contact_searched_messages_view = this.addChild('search', xabber.ContactSearchedMessagesView,\n            {model: this.account.chats.getChat(this.model), query_text: '1', el: this.$('.search-messages-block-wrap')[0]});\n        this.group_chat_properties_edit = new xabber.GroupChatPropertiesEditView({model: this.model});\n        this.default_restrictions_edit_right = this.addChild('restrictions',\n            xabber.DefaultRestrictionsRightView,\n            {model: this.model, el: this.$('.restrictions-block-wrap')[0]});\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.model.on(\"change\", this.update, this);\n        this.chat.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"permissions_changed\", this.updateButtons, this);\n        this.model.on(\"change:subscription\", this.updateButtons, this);\n    },\n\n    render: function () {\n        this.updateName();\n        this.updateButtons();\n        if (!this.model.my_rights)\n            this.model.getMyInfo(() => {\n                this.updateButtons();\n            });\n        if (!this.model.get('saved_search_panel')) {\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n        }\n        else {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.$('.btn-mute').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-delete').showIf(this.model.get('subscription') === \"both\");\n        this.$('.btn-join').showIf(this.model.get('subscription') !== \"both\");\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.select-users-list-wrap .dropdown-button').dropdown(dropdown_settings);\n        this.$('.main-info .dropdown-button').dropdown(dropdown_settings);\n        this.onScroll();\n        this.updateChilds();\n        this.updateNotifications();\n        this.updateList('participants');\n        this.setButtonsWidth();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        $(window).bind(\"keydown.contact_panel\", this.keydownHandler.bind(this));\n        return this;\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs.not-edit .indicator').remove();\n        this.$('.tabs.not-edit').tabs();\n        this.$('.tabs.not-edit .indicator').addClass('ground-color-500');\n    },\n\n    updateChilds: function () {\n        if (!this.model.get('vcard_hidden'))\n            this.group_chat_properties.hideVCard();\n        if (!this.model.get('edit_hidden'))\n            this.contact_edit_view.hideEdit();\n        if (!this.model.get('restrictions_hidden'))\n            this.default_restrictions_edit_right.hideRestrictions();\n        this.model.set('participant_hidden', true);\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n    },\n\n    showEdit: function (ev) {\n        this.contact_edit_view.showEdit();\n    },\n\n    showRestrictions: function (ev) {\n        this.default_restrictions_edit_right.showRestrictions();\n    },\n\n    hideRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', true);\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'));\n        this.showEdit();\n    },\n\n\n    keydownHandler: function (ev) {\n        if (!xabber.body.$el.siblings('.mfp-ready').length && !$.magnificPopup.instance.isOpen && ev.keyCode === constants.KEY_ESCAPE && !xabber.body.$el.siblings('#modals').children('.open').length) {\n            this.model.showDetailsRight('all-chats');\n            $(window).unbind(\"keydown.contact_panel\");\n        }\n    },\n\n    updateNotifications: function () {\n        if (this.chat.isMuted()) {\n            if (this.chat.isMuted() > 4800000000)\n                this.$('.btn-mute').html(env.templates.svg['bell-off']());\n            else\n                this.$('.btn-mute').html(env.templates.svg['bell-sleep']());\n            this.$('.btn-mute').addClass('muted').addClass('active')\n        }\n        else {\n            this.$('.btn-mute').html(env.templates.svg['bell']());\n            this.$('.btn-mute').removeClass('muted')\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.chat.isMuted());\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n        // if (_.has(changed, 'muted')) this.updateNotifications();\n        if (_.has(changed, 'status_updated') || _.has(changed, 'status_message')) this.updateStatus();\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.main-info .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.main-info .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateButtons: function () {\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values),\n            change_group = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'change-group' && permission.values),\n            is_blocked = this.model.get('blocked');\n        this.$('.btn-settings-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-edit-settings').switchClass('hidden', !(is_owner || change_group));\n        this.$('.btn-leave-wrap').switchClass('non-active', this.model.get('subscription') != 'both');\n        this.$('.btn-invite-wrap').switchClass('non-active', this.model.get('private_chat') || this.model.get('subscription') != 'both');\n        this.$('.btn-default-restrictions-wrap').switchClass('non-active', !is_owner);\n        this.$('.btn-block').hideIf(is_blocked);\n        this.$('.btn-unblock').showIf(is_blocked);\n    },\n\n    updateName: function () {\n        this.$('.main-info .contact-name').text(this.model.get('name'));\n    },\n\n    muteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n            muted_seconds;\n        if (mute_type === 'minutes15')\n            muted_seconds = 900\n        if (mute_type === 'hours1')\n            muted_seconds = 3600\n        if (mute_type === 'hours2')\n            muted_seconds = 7200\n        if (mute_type === 'day')\n            muted_seconds = 86400\n        if (mute_type === 'forever')\n            muted_seconds = 0\n        this.chat.muteChat(muted_seconds);\n    },\n\n    unmuteChat: function (ev) {\n        if (this.model.get('blocked'))\n            return;\n        this.chat.muteChat('');\n    },\n\n    showSearchMessages: function (ev) {\n        this.scrollToTop();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy');\n        }\n        this.model.set('search_hidden', false);\n        this.$('.search-wrap').hideIf(this.model.get('search_hidden'));\n        this.contact_searched_messages_view.$search_form.find('input').focus();\n    },\n\n    onScroll: function () {\n        if (this.model.get('saved_search_panel') && !this.model.get('search_hidden')){\n            this.ps_container.perfectScrollbar('destroy');\n            return true;\n        }\n        let bottom_block_scroll;\n        if (this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)'))\n            bottom_block_scroll = this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').get(0).getBoundingClientRect().top;\n\n        if(this.ps_container[0].scrollTop >= 200) {\n            this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,1)'});\n            this.$('.main-info').addClass('fixed-scroll');\n            this.$('.main-info').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n            this.$('.block-wrap.vcard').css({'padding-top': '340px'})\n            this.$('.header-buttons .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,0.5)'});\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.block-wrap.vcard').css({'padding-top': '0'});\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        else{\n            this.$('.header-buttons').css({'background-color': 'rgba(255,255,255,0)'});\n            this.$('.main-info').removeClass('fixed-scroll');\n            this.$('.block-wrap.vcard').css({'padding-top': '0'});\n            this.$('.header-buttons .block-name').addClass('fade-out');\n        }\n        if (bottom_block_scroll && bottom_block_scroll < 150) {\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .tabs').addClass('fixed-scroll');\n            this.$('.btn-escape').addClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').addClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-escape').removeClass('btn-top');\n            this.$('.btn-escape i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .tabs').removeClass('fixed-scroll');\n            this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block) .participants-search-form').removeClass('fixed-scroll');\n            this.$('.main-info .buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clearHistory: function () {\n        if (this.chat && this.chat.item_view && this.chat.item_view.content && this.chat.item_view.content.head){\n            this.chat.item_view.content.head.clearHistory()\n        }\n    },\n\n    showQRCode: function () {\n        let qrcode = new VanillaQR({\n            url: 'xmpp:' + this.model.get('jid'),\n            noBorder: true\n        });\n        utils.dialogs.ask(xabber.getString(\"dialog_show_qr_code__header\"), null, {escape_button: true, canvas: qrcode.domElement, bottom_text: ('<div class=\"name\">' + this.model.get('name') + '</div><div class=\"jid\">' + this.model.get('jid') + '</div>')}, { cancel_button_text: ' ', ok_button_text: ' '}, 'hidden').done((result) => {\n        });\n    },\n\n    editProperties: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n                let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n                    .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n                this.account.sendIQFast(iq_get_properties, (properties) => {\n                    let data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n                    this.group_chat_properties_edit.open(data_form);\n                }, () => {\n                    utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n                });\n        }\n    },\n\n    leaveGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"groupchat_leave_full\"), xabber.getString(\"groupchat_leave_confirm\", [contact.get('name')]), null, { ok_button_text: xabber.getString(\"groupchat_leave\")}).done((result) => {\n            if (result) {\n                contact.declineSubscription();\n                contact.removeFromRoster();\n                let chat = this.account.chats.getChat(contact);\n                chat.deleteFromSynchronization(() => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                }, () => {\n                    chat.trigger(\"close_chat\");\n                    xabber.body.setScreen('all-chats', {right: undefined, right_contact: null});\n                });\n            }\n        });\n    },\n\n    inviteUser: function (ev) {\n        if (!$(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            if (!xabber.invite_panel)\n                xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n            xabber.invite_panel.open(this.account, this.model);\n        }\n    },\n\n    scrollToTopSmooth: function () {\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        if (list_name != 'blocked' && list_name != 'invitations') {\n            this.$('.main-info .header-buttons .block-name.second-text').text($target.text())\n            this.$('.tabs').animate({scrollLeft: $target.position().left - 80}, 400);\n            this.ps_container.animate(\n                {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 110},\n                400,\n                () => {\n                    this.onScroll();\n                    this.ps_container.animate(\n                        {scrollTop: this.$('.bottom-block:not(.edit-bottom-block):not(.participant-bottom-block)').position().top + this.ps_container.scrollTop() - 110},\n                        0,\n                    );\n                });\n        }\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            if (name === 'invitations' || name === 'blocked'){\n                this.$('.edit-wrap .tabs .list-variant a').removeClass('active');\n                this.$('.edit-wrap .tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            else {\n                this.$('.tabs.not-edit .list-variant a').removeClass('active');\n                this.$('.tabs.not-edit .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            }\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func, edit_view;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n            case 'blocked':\n                constructor_func = xabber.BlockedView;\n                edit_view = true;\n                break;\n            case 'invitations':\n                constructor_func = xabber.InvitationsView;\n                edit_view = true;\n                break;\n        };\n        if (constructor_func && edit_view)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-edit-wrap')[0]});\n        else if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, el: this.$('.participants-wrap')[0]});\n        else\n            return;\n    },\n\n    getInvitations: function (callback, errback) {\n        let iq = $iq({\n            type: 'get',\n            to: this.model.get('full_jid') || this.model.get('jid')})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#invite'});\n        this.account.sendFast(iq, callback, errback);\n    },\n\n    deleteGroup: function () {\n        this.model.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.model.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.model.unblockWithDialog();\n    },\n\n    updateStatus: function () {\n        this.$('.main-info .status-message').text(this.model.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    openChat: function (ev) {\n        this.model.showDetailsRight('all-chats');\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length) {\n            return;\n        }\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n        $(field).siblings('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.model.pubAvatar(file, \"\", function () {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                }, function (error) {\n                    $(field).siblings('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                    let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                    utils.dialogs.error(error_text);\n                });\n            }\n        });\n    },\n\n    retractAllMessages: function () {\n        let group_chat = this.account.chats.getChat(this.model);\n        utils.dialogs.ask(xabber.getString(\"delete_messages__header\"), xabber.getString(\"delete_messages__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                group_chat.retractAllMessages(true);\n            }\n        });\n    }\n});\n\nxabber.GroupChatStatusView = xabber.BasicView.extend({\n    template: templates.group_chats.group_status,\n    events: {\n        \"click .status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatStatusViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_status_right,\n    events: {\n        \"click .group-chat-status-wrap\": \"setStatus\",\n        \"click .btn-edit-status\": \"setStatus\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.render();\n        this.model.on(\"change:status\", this.render, this);\n        this.model.on(\"change:group_info\", this.render, this);\n    },\n\n    render: function () {\n        let group_info = this.model.get('group_info');\n        if (!group_info)\n            return;\n        this.updateIcon()\n        this.$('.status').attr('data-status', group_info.status || this.model.get('status'));\n        this.$('.status-message').text(group_info.status_msg);\n    },\n\n    updateIcon: function () {\n        let ic_name = this.model.getIcon();\n        this.$('.status-bulb').addClass('hidden');\n        if (this.model.get('invitation'))\n            return;\n        ic_name && this.$('.status-bulb').removeClass('hidden').switchClass(ic_name, ic_name == 'server' || ic_name == 'blocked').html(env.templates.svg[ic_name]());\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.model);\n    }\n});\n\nxabber.GroupChatPropertiesView = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties,\n\n    events: {\n        \"click .group-chat-properties .details-icon\": \"onClickIcon\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target).closest('.info-wrap'),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            if ($target_info.hasClass('searchable-info-wrap')) {\n                let label_name = $target_info.find('.label').first().text();\n                if (value_text === xabber.getString(\"groupchat_index_type_none\"))\n                    value_text += ' ' + label_name.toLowerCase();\n            }\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesViewRight = xabber.BasicView.extend({\n    template: templates.group_chats.group_chat_properties_right,\n\n    events: {\n        \"click .btn-vcard-refresh\": \"refresh\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-back\": \"hideVCard\"\n    },\n\n    _initialize: function () {\n        this.$el.html(this.template());\n        this.contact = this.model;\n        this.account = this.model.account;\n        this.model.on(\"change:group_info\", this.update, this);\n        this.model.on(\"change:vcard_updated\", this.update, this);\n        this.ps_container = this.$('.full-vcard-content');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.model.set('vcard_hidden', true)\n    },\n\n    render: function () {\n        if (!this.model.get('vcard_updated'))\n            this.model.vcard && this.model.vcard.refresh();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        if (this.parent.ps_container.length) {\n            if(!this.model.get('vcard_hidden'))\n                this.parent.ps_container.perfectScrollbar('destroy')\n            else\n                this.parent.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n        }\n        this.model.updateName();\n        this.model.updateAvatar();\n        this.hideMoreDescription();\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.update();\n        });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.vcard-header-title').addClass('fixed-scroll');\n            this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,1)'});\n        }\n        else if(this.ps_container[0].scrollTop >= 40) {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,0.5)'});\n        }\n        else {\n            this.$('.vcard-header-title').removeClass('fixed-scroll');\n            this.$('.vcard-header-title').css({'background-color': 'rgba(255,255,255,0)'});\n        }\n\n    },\n\n    hideMoreDescription: function (ev) {\n        if (!this.$('.vcard-wrap .info.description').hasClass('short')) {\n            this.$('.vcard-wrap .info.description').addClass('short');\n            this.$('.show-vcard').hideIf(false);\n        }\n    },\n\n\n    showVCard: function (ev) {\n        this.model.set('vcard_hidden', false);\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n        this.model.getVCard(() => {\n            this.updateName()\n            this.update();\n        });\n        this.parent.$('.main-info').removeClass('fixed-scroll');\n        this.$('.vcard-header').css({width: xabber.right_contact_panel.$el.find('.details-panel-right').width()});\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideVCard: function (ev) {\n        this.model.set('vcard_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.scrollToTop();\n        this.onScroll();\n        this.parent.onScroll();\n        this.$('.full-vcard-wrap').hideIf(this.model.get('vcard_hidden'))\n    },\n\n    updateName: function () {\n        this.$('.main-info .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name') != this.model.get('roster_name'))\n            this.$('.main-info .name-wrap').addClass('name-is-custom');\n        else\n            this.$('.main-info .name-wrap').removeClass('name-is-custom');\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {};\n        this.$('.block-name').text(this.model.get('incognito_group') ? xabber.getString(\"incognito_group_settings__header\") : xabber.getString(\"public_group_settings__header\"));\n        this.$('.jabber-id .value').text(info.jid);\n        this.$('.name .value').text(info.name);\n        this.$('.description .value').text(info.description);\n        this.$('.model .value').text(utils.pretty_name(info.model));\n        this.$('.status .value').text(utils.pretty_name(info.status));\n        this.$('.searchable .value').text((info.searchable === 'none') ? xabber.getString(\"groupchat_index_type_none\") : utils.pretty_name(info.searchable));\n        this.$('.name-info-wrap').switchClass('hidden', !info.name);\n        this.$('.description-info-wrap').switchClass('hidden', !info.description);\n        this.$('.model-info-wrap').switchClass('hidden', !info.model);\n        this.$('.status-info-wrap').switchClass('hidden', !info.status);\n        this.$('.searchable-info-wrap').switchClass('hidden', !info.searchable);\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    }\n});\n\nxabber.GroupChatPropertiesEditView = xabber.BasicView.extend({\n    className: 'modal dialog-modal group-chat-properties-edit',\n\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        \"click .btn-cancel\": \"close\",\n        \"change input\": \"updateSaveButton\",\n        \"keyup .property-wrap .text-field\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model;\n        this.model.on(\"change:name\", this.updateName, this);\n    },\n\n    open: function (data_form) {\n        this.data_form = data_form;\n        let all_fixed = this.data_form.fields.filter(f => f.type == 'fixed' || f.type == 'hidden').length == this.data_form.fields.length;\n        this.$el.html(templates.group_chats.group_chat_properties_edit({all_fixed: all_fixed, fields: data_form.fields, privacy: this.contact.get('incognito_group'), jid: this.model.get('jid')}));\n        this.$el.openModal({\n            ready: () => {\n                this.$('.modal-content').css('height', this.$el.height() - 115).perfectScrollbar({theme: 'item-list'});\n                this.updateScrollBar();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.$el.detach();\n                this.$('.modal-content').css('height', '100%');\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateName: function () {\n        this.$('.name-info-wrap').find('.name').find('.value').text(this.model.get('name'));\n    },\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('non-active'))\n            return;\n\n        let has_changes = false,\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            if (value !== new_value) {\n                let field_idx = this.data_form.fields.indexOf(field);\n                field.values = [new_value];\n                this.data_form.fields[field_idx] = field;\n                has_changes = true;\n            }\n        });\n\n        if (has_changes) {\n            iq = this.account.addDataFormToStanza(iq, this.data_form);\n            this.account.sendIQFast(iq, (result) => {\n                let $result  = $(result),\n                    group_info = _.clone(this.contact.get('group_info')),\n                    attrs = {\n                        name: $result.find('field[var=\"name\"] value').text(),\n                        searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                        model: $result.find('field[var=\"membership\"]').children('value').text(),\n                        description: $result.find('field[var=\"description\"] value').text(),\n                        status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n                this.$('button').addClass('non-active');\n                this.close();\n                _.extend(group_info, attrs);\n                this.model.set('group_info', group_info);\n            }, (error) => {\n                this.$('button').addClass('non-active');\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        } else\n            this.$('button').removeClass('non-active');\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null,\n                checked_inp = this.$('.' + field.var + '-field input:checked'),\n                text_inp = this.$('.' + field.var + '-field input[type=\"text\"]'),\n                textarea = this.$('.' + field.var + '-field textarea'),\n                new_value = \"\";\n            checked_inp.length && (new_value = checked_inp[0].id);\n            text_inp.length && (new_value = text_inp.val());\n            textarea.length && (new_value = textarea.val());\n            (value !== new_value) && (has_changes = true);\n        });\n        this.$('.btn-save').switchClass('non-active', !has_changes);\n    }\n\n});\n\nxabber.InvitationsView = xabber.BasicView.extend({\n    events: {\n    },\n    status: 'invitations',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.contact.participants.on(\"participants_updated\", this._render, this);\n        this.contact.on(\"invitations_send\", this._render, this);\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateInvitations();\n    },\n\n    updateInvitations: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"groupchat_invitations\"))\n        this.parent.getInvitations((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').find('user').each((idx, item) => {\n                let user = {jid: $(item).attr('jid'), status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').find('user').length)\n                this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showInviteButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user'),\n            member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    },\n\n    revokeInvitationByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            iq = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('revoke', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(member_jid);\n        this.account.sendIQFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"group_settings__invitations__no_pending_invitations\")));\n        });\n    }\n});\n\nxabber.MediaBaseView = xabber.BasicView.extend({\n    status: 'base',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.participant = options.participant;\n        this.encrypted = options.encrypted;\n        this.account = this.contact.account;\n        this.chat = this.account.chats.getChat(this.contact, this.encrypted && 'encrypted');\n        this.temporary_items = []\n        this.parent.ps_container.on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.all_messages_loaded = false;\n        this.temporary_items = [];\n        this.messagesFileRequest({}, () => {\n            this.$el.html(\"<div class='gallery-files'></div>\");\n            this.updateMedia();\n        });\n    },\n\n    onScroll: function () {\n        if (!this.active)\n            return\n        let scrollTop = this.parent.ps_container[0].scrollTop,\n            scrollHeight = this.parent.ps_container[0].scrollHeight,\n            offsetHeight = this.parent.ps_container[0].offsetHeight,\n            persentScrolled = scrollTop / (scrollHeight - offsetHeight);\n        if (persentScrolled > 0.8 && this.last_rsm_message && !this.all_messages_loaded && !this.loading_messages){\n            this.loadMoreFiles();\n        }\n    },\n\n    updateForParticipant: function () {\n        this.delegateEvents({})\n        this.parent.ps_container.off('ps-scroll-up.mediagallery').off('ps-scroll-down.mediagallery').on(\"ps-scroll-up.mediagallery ps-scroll-down.mediagallery\", this.onScroll.bind(this));\n        this.$('.gallery-file').on('click', (ev) => {\n            this.onClickFile(ev);\n        });\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.updateMedia(true);\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items;\n    },\n\n    encryptedFilesHandler: function () {\n        let files_count = 0;\n        this.temporary_items = this.filterEncryptedFiles();\n\n        if (this.temporary_items.length)\n            this.temporary_items.forEach((item, idx) => {\n                let source = item.sources[0];\n                if (!item.key){\n                    files_count++;\n                    return;\n                }\n                this.chat.messages.decryptFile(source, item.key).then((result) => {\n                    if (!this.active)\n                        return\n                    item.sources[0] = result\n                    files_count++;\n                    if (files_count === this.temporary_items.length) {\n                        this.updateEncryptedMedia()\n                        this.loading_messages = false;\n                    }\n                });\n            });\n        else {\n            this.updateEncryptedMedia()\n            this.loading_messages = false;\n            if (!this.all_messages_loaded){\n                this.loadMoreFiles();\n            }\n        }\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files').length && this.$el.html(\"<div class='gallery-files'></div>\");\n        this.updateMedia();\n    },\n\n    updateMedia: function (is_loaded) {\n        if (!this.active)\n            return;\n        if (this.temporary_items.length){\n            this.temporary_items.reverse();\n            this.temporary_items.forEach((item) => {\n                if (this.filter_type === 'filter_voice')\n                    item.true_voice = true;\n                let $gallery_file = $(templates.media_item({file: item, svg_icon: utils.file_type_icon_svg(item.media_type), filesize: utils.pretty_size(item.size), duration: utils.pretty_duration(item.duration)}));\n                $gallery_file.appendTo(this.$('.gallery-files'));\n            });\n        }\n        this.temporary_items = [];\n        this.$('.gallery-files .gallery-empty').remove();\n        $(templates.media_items_empty()).appendTo(this.$('.gallery-files'));\n        this.$('.gallery-files .preloader-wrapper').remove();\n    },\n\n    messagesFileRequest: function (query, callback) {\n        if (!this.active || this.loading_messages)\n            return;\n        let options = query || {},\n            queryid = uuid();\n        this.loading_messages = true;\n        !options.max && (options.max = xabber.settings.mam_messages_limit);\n        !options.after && !options.before && (options.before = '');\n        this.encrypted && (options.encrypted = this.encrypted)\n        this.parent.participant && (options.var = [{var: 'with', value: this.parent.participant.id}]);\n        this.contact.MAMRequest(options, (success, messages, rsm) => {\n            let messages_count = 0;\n            if (this.encrypted) {\n                $(templates.preloader()).appendTo(this.$('.gallery-files'))\n            }\n            $(messages).each((idx, message) => {\n                let $message = $(message),\n                    msg_items = [];\n                if (this.encrypted) {\n                    let deferred = new $.Deferred();\n                    deferred.done(($msg) => {\n                        msg_items = this.contact.getFilesFromStanza($msg);\n                        if (msg_items.length)\n                            this.temporary_items = this.temporary_items.concat(msg_items)\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.encryptedFilesHandler();\n                        }\n                    }).fail(() => {\n                        messages_count++;\n                        if (messages_count === messages.length){\n                            this.last_rsm_message = rsm.first;\n                            this.all_messages_loaded = true;\n                            this.encryptedFilesHandler();\n                        }\n                    });\n                    this.account.omemo.receiveChatMessage($message, {\n                        searched_message: true,\n                        gallery: true,\n                        query: query\n                    }, deferred);\n                } else{\n                    msg_items = this.contact.getFilesFromStanza($message);\n                    this.account.chats.receiveChatMessage($message, {\n                        searched_message: true,\n                        query: query\n                    });\n                    if (msg_items.length)\n                        this.temporary_items = this.temporary_items.concat(msg_items)\n                }\n            });\n            if (!this.encrypted){\n                this.last_rsm_message = rsm.first;\n                if (!messages.length)\n                    this.all_messages_loaded = true;\n                this.loading_messages = false;\n                (this.filter_type === 'filter_files') && (this.temporary_items = this.temporary_items.filter(file => !(file.media_type && (file.media_type.includes('image') || (file.media_type.includes('video') && !file.has_encrypted_files)))));\n                if (!(this.temporary_items.length >= xabber.settings.mam_messages_limit) && this.filter_type === 'filter_files' && !this.all_messages_loaded) {\n                    this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, callback);\n                }else\n                    callback && callback();\n            }\n        }, () => {\n\n        });\n    },\n\n    onClickFile: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('no-uploaded') || $elem.hasClass('gallery-audio-file-not-uploaded')) {\n            let $audio_elem = $elem.closest('.gallery-file'),\n                f_url = $audio_elem.attr('data-file');\n            $audio_elem.find('.mdi-play').removeClass('audio-file-play');\n            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.gallery-file-audio-container')[0], f_url);\n            this.prev_audio_message && this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            return;\n        }\n        else if ($elem.hasClass('mdi-play') || $elem.children('.mdi-play').length) {\n            let $audio_elem = $elem.closest('.gallery-file');\n            this.prev_audio_message.voice_message.pause();\n            this.prev_audio_message = $audio_elem[0];\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n        else if ($elem.hasClass('mdi-pause') || $elem.children('.mdi-pause').length) {\n            this.prev_audio_message.voice_message.pause();\n            return;\n        }\n        else if (!$elem.parents('.gallery-file-audio-container').length) {\n            let $file = $elem.closest('.gallery-file');\n            this.parent.saveScrollBarOffset()\n            xabber.body.data.set('contact_details_view', this.parent)\n            this.chat.getMessageContext($file.data('uniqueid'), {searched_messages: true, encrypted: this.encrypted});\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.gallery-file');\n        $elem.addClass('voice-message-rendering').html($(templates.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, unique_id);\n\n        aud.on('ready', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('no-uploaded');\n            $msg_element.find('.gallery-file-placeholder-background').removeClass('gallery-audio-file-not-uploaded');\n            let duration = Math.round(aud.getDuration());\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n            aud.play();\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').addClass('mdi-pause').removeClass('mdi-play');\n            $msg_element.addClass('playing');\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n        });\n\n        aud.on('finish', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.find('.gallery-file-placeholder-background .mdi').removeClass('mdi-pause').addClass('mdi-play');\n            $msg_element.removeClass('playing');\n        });\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createAudio: function(file_url, unique_id) {\n        let audio = WaveSurfer.create({\n            container: \"#\" + unique_id,\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n});\n\nxabber.MediaImagesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.images .gallery-file\": \"onClickFile\",\n    },\n    status: 'image',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_image';\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.$el.html(\"<div class='gallery-files images grid'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.images.grid').length && this.$el.html(\"<div class='gallery-files images grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'image')\n            this.updateMedia(true);\n        });\n    },\n\n});\n\nxabber.MediaVideosView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.videos .gallery-file\": \"onClickFile\",\n    },\n    status: 'video',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_video';\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video');\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.videos.grid').length && this.$el.html(\"<div class='gallery-files videos grid'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => utils.pretty_file_type(item.media_type) === 'video')\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaFilesView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.files .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.voice && (this.parent.children.voice.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_files';\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.$el.html(\"<div class='gallery-files files'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'));\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.files').length && this.$el.html(\"<div class='gallery-files files'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => (utils.pretty_file_type(item.media_type) != 'video' && utils.pretty_file_type(item.media_type) != 'image'))\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.MediaVoiceView = xabber.MediaBaseView.extend({\n    events: {\n        \"click .gallery-files.voice .gallery-file\": \"onClickFile\",\n    },\n    status: 'files',\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-details-media-wrap')\n        this.$el.html($(templates.preloader()));\n        this.active = true;\n        this.parent.children.image && (this.parent.children.image.active = false);\n        this.parent.children.video && (this.parent.children.video.active = false);\n        this.parent.children.files && (this.parent.children.files.active = false);\n        this.all_messages_loaded = false;\n        this.filter_type = 'filter_voice'\n        this.temporary_items = [];\n        this.messagesFileRequest({[this.filter_type]: true}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.$el.html(\"<div class='gallery-files voice'></div>\");\n            this.updateMedia();\n            this.participant && this.updateForParticipant();\n        });\n    },\n\n    filterEncryptedFiles: function () {\n        return this.temporary_items.filter(item => item.voice);\n    },\n\n    updateEncryptedMedia: function (is_loaded) {\n        !this.$('.gallery-files.voice').length && this.$el.html(\"<div class='gallery-files voice'></div>\");\n        this.updateMedia();\n    },\n\n    loadMoreFiles: function () {\n        $(templates.preloader()).appendTo(this.$('.gallery-files'))\n        this.messagesFileRequest({[this.filter_type]: true, before: this.last_rsm_message}, () => {\n            this.temporary_items = this.temporary_items.filter(item => item.voice)\n            this.updateMedia(true);\n        });\n    },\n});\n\nxabber.BlockedView = xabber.BasicView.extend({\n    status: 'blocked',\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    _initialize: function (options) {\n        this.contact = options.model;\n        this.account = this.contact.account;\n        this.$error = $('<p class=\"errors\"/>');\n    },\n\n    _render: function () {\n        if (this.$el.length && this.$el.closest(\"body\").length == 0)\n            this.$el = this.parent.$('.participants-edit-wrap')\n        this.$el.html($(templates.preloader()));\n        this.updateBlockedParticipants();\n    },\n\n    updateBlockedParticipants: function () {\n        this.parent.$('.block-name-panel:not(.second-text)').html(xabber.getString(\"group_settings__block_list__header\"))\n        this.contact.getBlockedParticipants((response) => {\n            this.$el.html(\"\");\n            $(response).find('query').children().each((idx, item) => {\n                let jid = $(item).attr('jid') ? $(item).attr('jid') : $(item).text(),\n                    user = {jid: jid, status: this.status},\n                    $item_view = $(templates.group_chats.invited_member_item(user)),\n                    avatar = Images.getDefaultAvatar(user.jid);\n                this.$el.append($item_view);\n                $item_view.find('.circle-avatar').setAvatar(avatar, this.member_avatar_size);\n            });\n            if (!$(response).find('query').children.length)\n                this.$el.append(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.showBlockButton();\n        }, (err) => {\n\n            this.$el.html(this.$error.text($(err).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\")));\n        });\n    },\n\n    unblockUser: function (ev) {\n        let $member_item = $(ev.target).closest('.blocked-user'),\n            member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            if (this.parent.contact_edit_view)\n                this.parent.contact_edit_view.updateRemoveParticipantButton();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    unblockUserByElement: function ($member_item) {\n        let member_jid = $member_item.data('jid'),\n            tag = member_jid.toString().includes('@') ? 'jid' : 'domain',\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('unblock', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c(tag).t(member_jid);\n        this.account.sendFast(iq, () => {\n            $member_item.remove();\n            !this.$el.children().length && this.$el.html(this.$error.text(xabber.getString(\"groupchat_blocklist_empty\")));\n        });\n    },\n\n    blockId: function () {\n        utils.dialogs.ask_enter_value(xabber.getString(\"contact_bar_block\"), xabber.getString(\"groupchat_dialog_block__text\"), {input_placeholder_value: xabber.getString(\"groupchat_dialog_block__input_placeholder\")}, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done((result) => {\n            if (result) {\n                let tag = result.includes('@') ? 'jid' : 'domain',\n                    iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                        .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                        .c(tag).t(result);\n                this.account.sendIQFast(iq, () => {\n                    this.updateBlockedParticipants()\n                }, function (err) {\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n            }\n        });\n    },\n});\n\nxabber.ParticipantsView = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_selector: '.members-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-block\": \"blockParticipant\",\n        \"click .btn-kick\": \"kickParticipant\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.$(this.ps_selector).perfectScrollbar(this.ps_settings);\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.participant_properties_panel = new xabber.ParticipantPropertiesView({model: this.model});\n        this.updateParticipants();\n        this.$('.members-list-wrap').perfectScrollbar({theme: 'item-list'});\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.model.get('group_info')) {\n                (this.participants.version === 0) && (this.model.get('group_info').members_num = this.participants.length);\n                if (this.participants.length != this.model.get('group_info').members_num) {\n                    this.account.groupchat_settings.resetParticipantsList(this.model.get('jid'));\n                    this.participants.resetParticipants();\n                    this.updateParticipants();\n                    return;\n                }\n            }\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.$el.find('.members-list-wrap tbody').html('');\n        this.updateParticipants();\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n    },\n\n    onParticipantsUpdated: function () {\n        this.isVisible() && this.renderParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        $item_view.emojify('.badge', {emoji_size: 16});\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantsViewRight = xabber.BasicView.extend({\n    className: 'overflow-visible',\n    ps_settings: {theme: 'item-list'},\n    template: templates.group_chats.participants_right_panel,\n    member_avatar_size: constants.AVATAR_SIZES.GROUPCHAT_MEMBER_ITEM,\n\n    events: {\n        \"click .participant-wrap\": \"showParticipantProperties\",\n        \"keyup .participants-search-form\" : \"keyUpSearch\",\n        \"click .close-search-icon\": \"clearSearch\",\n        \"click .btn-kick\": \"kickParticipantDialog\",\n        \"click .btn-edit-member\": \"showParticipantPropertiesEdit\",\n        \"click .btn-mute\": \"kickParticipantDialog\",\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.participants = this.model.participants;\n        this.participants.on(\"change\", this.onParticipantsChanged, this);\n        this.participants.on(\"participants_updated\", this.onParticipantsUpdated, this);\n        this.model.on(\"change:status_updated\", this.updateParticipantsList, this);\n        this.participant_properties_panel = this.addChild('participant_properties_panel', xabber.ParticipantPropertiesViewRight, {model: this.model, el: this.parent.$('.participant-view-wrap')[0], parent: this.parent});\n    },\n\n    _render: function () {\n        this.$el.html(this.template()).addClass('request-waiting');\n        this.updateParticipants();\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n        return this;\n    },\n\n    updateParticipants: function () {\n        this.model.participants.participantsRequest({version: this.participants.version }, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            if (this.model.get('group_info')) {\n                (this.participants.version === 0) && (this.model.get('group_info').members_num = this.participants.length);\n                if (this.participants.length != this.model.get('group_info').members_num) {\n                    this.account.groupchat_settings.resetParticipantsList(this.model.get('jid'));\n                    this.participants.resetParticipants();\n                    this.updateParticipants();\n                    return;\n                }\n            }\n            if (this.participants.version > version)\n                return;\n            version && this.account.groupchat_settings.setParticipantsListVersion(this.model.get('jid'), version);\n            (this.participants.version < version) && this.participants.updateVersion();\n            this.renderParticipants();\n        }, () => {\n            this.$el.removeClass('request-waiting');\n        });\n    },\n\n    updateParticipantsList: function () {\n        this.updateParticipants();\n        if (!this.model.all_rights)\n            this.model.getAllRights();\n    },\n\n    onParticipantsUpdated: function () {\n        this.isVisible() && this.renderParticipants();\n    },\n\n    onParticipantsChanged: function () {\n        this.updateParticipants();\n    },\n\n    renderParticipants: function () {\n        this.participants.each((participant) => {\n            this.renderMemberItem(participant);\n        });\n        if (this.$('.participants-search-form input').val())\n            this.searchParticipant();\n        this.$el.removeClass('request-waiting');\n    },\n\n    blockParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipant: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                let participant = this.participants.get($target.attr('data-id'));\n                if (participant)\n                    participant.kick(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        let $target = $(ev.target).closest('.participant-wrap');\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [$target.find('.participant-info .nickname').text()]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    let participant = this.participants.get($target.attr('data-id'));\n                    if (participant)\n                        participant.block(() => {\n                            $target.remove();\n                            this.parent.updateScrollBar();\n                        }, (error) => {\n                            if ($(error).find('not-allowed').length)\n\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    let participant = this.participants.get($target.attr('data-id'));\n                    participant.kick(() => {\n                        $target.remove();\n                        this.parent.updateScrollBar();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    renderMemberItem: function (participant) {\n        let attrs = _.clone(participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_me = attrs.jid == this.account.get('jid');\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        let $item_view = $(templates.group_chats.group_member_item_right(attrs)),\n            view = this.$('tr[data-id=\"' + attrs.id + '\"]');\n        if (view.length) {\n            view.hasClass('active') && $item_view.addClass('active');\n            $item_view.insertBefore(view);\n            view.detach();\n        }\n        else {\n            if (attrs.is_me) {\n                $item_view.prependTo(this.$('.members-list-wrap tbody'));\n            }\n            else\n                $item_view.appendTo(this.$('.members-list-wrap tbody'));\n        }\n        this.updateMemberAvatar(attrs);\n    },\n\n    updateMemberAvatar: function (member) {\n        let image = Images.getDefaultAvatar(member.nickname || member.jid || member.id),\n            $avatar = (member.id) ? this.$('tr[data-id=\"'+ member.id +'\"] .circle-avatar') : this.$('.list-item[data-jid=\"'+ member.jid +'\"] .circle-avatar');\n        $avatar.setAvatar(image, this.member_avatar_size);\n        if (member.avatar) {\n            let cached_avatar = this.account.chat_settings.getB64Avatar(member.id);\n            if (this.account.chat_settings.getHashAvatar(member.id) == member.avatar && cached_avatar)\n                $avatar.setAvatar(cached_avatar, this.member_avatar_size);\n            else {\n                if (member.avatar_url){\n                    this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, member.avatar_url);\n                    this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(member.avatar_url, this.member_avatar_size);\n                    if (this.account.get('jid') === member.jid) {\n                        this.model.my_info.set({avatar: member.avatar, 'b64_avatar': member.avatar_url});\n                        this.model.trigger('update_my_info');\n                    }\n                }\n                else {\n                    let node = `${Strophe.NS.PUBSUB_AVATAR_DATA}#${member.id}`;\n                    this.model.getAvatar(member.avatar, node, (avatar) => {\n                        this.account.chat_settings.updateCachedAvatars(member.id, member.avatar, avatar);\n                        this.$('.list-item[data-id=\"'+ member.id +'\"] .circle-avatar').setAvatar(avatar, this.member_avatar_size);\n                        if (this.account.get('jid') === member.jid) {\n                            this.model.my_info.set('b64_avatar', avatar);\n                            this.model.trigger('update_my_info');\n                        }\n                    });\n                }\n            }\n        }\n    },\n\n    showParticipantProperties: function (ev) {\n        let $target = $(ev.target);\n        if ($target.closest('.buttons-wrap').length)\n            return;\n        let participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    showParticipantPropertiesEdit: function (ev) {\n        let $target = $(ev.target),\n            participant_item = $target.closest('.participant-wrap'),\n            participant_id = participant_item.attr('data-id'),\n            participant = this.model.participants.get(participant_id);\n        (participant_item.attr('data-jid') && participant_item.attr('data-jid') === this.account.get('jid')) && (participant_id = '');\n        this.model.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.participant_properties_panel.open(participant, data_form);\n            this.participant_properties_panel.showNamePanel();\n            this.participant_properties_panel.changeBackButton();\n        });\n    },\n\n    keyUpSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact'))\n            this.clearSearch(ev);\n        else\n            this.searchParticipant();\n    },\n\n    searchParticipant: function () {\n        let query = this.$('.participants-search-form input').val().toLowerCase();\n        this.$('.members-list-wrap .participant-wrap').each((idx, item) => {\n            let $this = $(item),\n                participant_id = $this.data('id'),\n                participant = this.model.participants.find(participant => participant.get('id') === participant_id),\n                jid = participant.get('jid').toLowerCase(),\n                name = participant.get('nickname').toLowerCase();\n            $this.hideIf(name.indexOf(query) < 0 && jid.indexOf(query) < 0);\n        });\n        if (query)\n            this.$('.close-search-icon').show();\n        else\n            this.$('.close-search-icon').hide();\n    },\n\n    clearSearch: function (ev) {\n        ev && ev.preventDefault();\n        this.$('.search-input').val('');\n        this.searchParticipant();\n    }\n});\n\nxabber.ParticipantPropertiesView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_rights,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .btn-cancel-changes\": \"close\",\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"click .participant-details-item:not(.unsubscribed) .nickname\": \"editNickname\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-block-participant\": \"block\",\n        \"click .btn-kick-participant\": \"kick\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.$el.openModal({\n            ready: () => {\n                this.$el.css('height', \"\");\n                if (($(window).height() * 0.1 + this.$el.height()) > $(window).height())\n                    this.$el.css('height', $(window).height() * 0.9);\n                this.$('.modal-content').css('max-height', 'calc(100% - ' + (64 + this.$('.header').height()) + 'px)');\n                this.scrollToTop();\n                this.updateSaveButton();\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n                this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n            },\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.render();\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    render: function () {\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item(attrs));\n        this.$('.header').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.$('.content').perfectScrollbar({theme: 'item-list'});\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.participant-details-item[data-id=\"${participant_id}\"] .circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        this.$('.participant-details-item[data-id=\"'+ member.id +'\"]').emojify('.badge', {emoji_size: 18});\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            this.close();\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.circle-avatar').addClass('changed').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                            .removeClass('default-value')\n                            .text(moment(Number(attrs.expires)*1000).fromNow());\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.pushInRoster(null, () => {\n                    contact.pres('subscribe');\n                    contact.getMyInfo();\n                    this.close();\n                    contact.sendPresent();\n                    this.account.chats.openChat(contact);\n                    let chat = this.account.chats.getChat(contact);\n                    chat.messages.createSystemMessage({\n                        from_jid: group_jid,\n                        message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                    });\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (!this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-info .nickname').text(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                this.$('.buttons-wrap button').removeClass('non-active');\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.ParticipantPropertiesViewRight = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-rights',\n    template: templates.group_chats.participant_details_right,\n    member_details_avatar_size: constants.AVATAR_SIZES.PARTICIPANT_DETAILS_ITEM,\n\n    events: {\n        \"click .btn-back:not(.btn-top)\": \"close\",\n        \"click .btn-back.btn-top\": \"scrollToTopSmooth\",\n        'click .btn-edit-participant': 'showNamePanel',\n        'click .btn-back-name': 'hidePanel',\n        \"change .clickable-field input\": \"changeRights\",\n        \"click .btn-reset\": \"render\",\n        \"click .btn-reset-name\": \"resetPanel\",\n        \"click .btn-save-user-rights\": \"saveRights\",\n        \"change .circle-avatar input\": \"changeAvatar\",\n        \"click .btn-kick-participant\": \"kickParticipantDialog\",\n        \"click .btn-set-visibility-wrap\": \"setVisibility\",\n        \"click .info-hover\": \"onClickIcon\",\n        \"click .btn-set-badge\": \"editBadge\",\n        \"click .btn-participant-messages\": \"getMessages\",\n        \"click .btn-chat-participant\": \"getPrivateChat\",\n        \"click .property-variant\": \"changeTimerValue\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"keydown .rich-textarea\": \"checkKeydown\",\n        \"keyup .rich-textarea\": \"checkKeyup\",\n        \"click .list-variant\": \"changeList\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.model.account;\n    },\n\n    open: function (participant, data_form) {\n        this.model.set('participant_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'))\n        if (!participant) return;\n        this.participant = participant;\n        this.participant.on(\"change:badge\", this.onBadgeUpdated, this);\n        this.data_form = data_form;\n        this.render();\n        this.updateSaveButton();\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        };\n        this.$('.select-timer .dropdown-button').dropdown(dropdown_settings);\n        this.$('.participant-details-item .dropdown-button').dropdown(_.extend(dropdown_settings, {alignment: 'right'}));\n    },\n\n    close: function () {\n        this.model.set('participant_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n            this.parent.onScroll();\n        };\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.participant-details-wrap').hideIf(this.model.get('participant_hidden'));\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.new_avatar = \"\";\n        let attrs = _.clone(this.participant.attributes);\n        attrs.nickname = _.escape(attrs.nickname);\n        attrs.blocked = attrs.blocked;\n        attrs.pretty_present = attrs.present ? (moment(attrs.present).isValid() ? moment(attrs.present).fromNow() : moment(attrs.present.substr(0, attrs.present.length - 1)).fromNow()) : \"\";\n        attrs.subscription = attrs.subscription === null ? null : 'both';\n        attrs.badge = _.escape(attrs.badge);\n        attrs.is_myself = attrs.jid === this.account.get('jid');\n        attrs.is_blocked_contact = this.account.blocklist.isBlocked(attrs.jid);\n        attrs.incognito_chat = (this.contact.get('group_info') && this.contact.get('group_info').privacy === 'incognito') ? true : false;\n        let $member_info_view;\n        if (this.contact.get('private_chat')) {\n            this.$el.addClass('edit-rights-private');\n            $member_info_view = $(templates.group_chats.private_participant_details_item_right(attrs));\n        }\n        else\n            $member_info_view = $(templates.group_chats.participant_details_item_right(attrs));\n        this.$('.participant-details-info-wrap').html($member_info_view);\n        this.$('.buttons-wrap .button-wrap:not(.btn-chat-wrap):not(.btn-participant-messages-wrap)').switchClass('non-active', attrs.subscription === null);\n        this.$('.btn-chat-wrap').switchClass('non-active', this.participant.get('jid') === this.account.get('jid'));\n        this.updateMemberAvatar(this.participant);\n        this.participant_messages = [];\n        this.actual_rights = [];\n        if (!this.contact.get('private_chat'))\n            this.setActualRights();\n        else {\n            this.$('.modal-content').addClass('hidden');\n            this.$('.modal-footer').switchClass('hidden', this.participant.get('jid') !== this.account.get('jid'));\n        }\n        this.updateScrollBar();\n        this.$('.participant-info #edit-nickname').on(\"focusout\", () => {\n            let new_nickname = this.$('#edit-nickname').getTextFromRichTextarea().trim();\n            if (new_nickname === \"\")\n                new_nickname = this.participant.get('nickname');\n            this.$('.participant-info #edit-nickname').hide();\n            this.$('.participant-info .nickname').show();\n            this.updateNickname(new_nickname);\n        });\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.onScroll();\n        this.participant_name_field = new xabber.ParticipantNameRightWidget({\n            el: this.$('.edit-participant-name-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.participant_badge_field = new xabber.ParticipantBadgeRightWidget({\n            el: this.$('.edit-participant-badge-wrap')[0],\n            model: this.participant,\n            parent: this,\n        });\n        this.updateList('image');\n        xabber.once(\"update_css\", this.updateIndicator, this);\n        this.updateIndicator()\n        this.$('.participant-details-edit-wrap').hideIf(true);\n        this.$('.block-name:not(.second-text)').hideIf(true);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    showNamePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(false)\n        this.$('.btn-edit-participant').hideIf(true)\n        this.$('.parent-btn').hideIf(true)\n        this.$('.child-btn').hideIf(false)\n        this.$('.block-header').css({'background-color': 'rgba(255,255,255,0)'});\n        this.$('.block-name.second-text').text('');\n        this.$('.block-name:not(.second-text)').text(xabber.getString(\"groupchat_member_edit\"));\n        this.$('.block-name:not(.second-text)').hideIf(false);\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participant-details-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    changeBackButton: function () {\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n    },\n\n    hidePanel: function () {\n        this.$('.participant-details-edit-wrap').hideIf(true)\n        this.$('.btn-edit-participant').hideIf(false)\n        this.$('.parent-btn').hideIf(false)\n        this.$('.child-btn').hideIf(true)\n        this.$('.block-name:not(.second-text)').hideIf(true);\n        this.ps_container = this.$('.participant-details-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        if (this.ps_container && this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n        this.onScroll();\n    },\n\n    resetPanel: function () {\n        this.participant_name_field.updateValue(true);\n        this.participant_badge_field.updateValue(true);\n        this.new_avatar = \"\";\n        this.updateMemberAvatar(this.participant);\n        this.updateSaveButton()\n    },\n\n    changeList: function (ev) {\n        let $target = $(ev.target).closest('.list-variant'),\n            list_name = $target.data('value');\n        this.$('.tabs').animate({scrollLeft: $target.position().left}, 400);\n        this.updateList(list_name);\n    },\n\n    updateList: function (name) {\n        let view = this.child(name);\n        !view && (view = this.addList(name));\n        if (view) {\n            this.$('.tabs .list-variant a').removeClass('active');\n            this.$('.tabs .list-variant[data-value=\"' + name + '\"] a').addClass('active');\n            view._render();\n        }\n    },\n\n    addList: function (name) {\n        let constructor_func;\n        switch (name) {\n            case 'image':\n                constructor_func = xabber.MediaImagesView;\n                break;\n            case 'video':\n                constructor_func = xabber.MediaVideosView;\n                break;\n            case 'files':\n                constructor_func = xabber.MediaFilesView;\n                break;\n            case 'voice':\n                constructor_func = xabber.MediaVoiceView;\n                break;\n        };\n        if (constructor_func)\n            return this.addChild(name, constructor_func, {model: this.model, participant: true, el: this.$('.participants-details-media-wrap')[0]});\n        else\n            return;\n    },\n\n    changeName: function (value) {\n        this.updateSaveButton()\n    },\n\n    changeBadge: function (value) {\n        this.updateSaveButton()\n    },\n\n    onClickIcon: function (ev) {\n        let $target_info = $(ev.target),\n            $target_value = $target_info.find('.value'), copied_text = \"\";\n        $target_value.each((idx, item) => {\n            let $item = $(item),\n                value_text = $item.text();\n            value_text && (copied_text != \"\") && (copied_text += '\\n');\n            value_text && (copied_text += value_text);\n            copied_text && utils.copyTextToClipboard(copied_text, xabber.getString(\"toast__copied_in_clipboard\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n        });\n    },\n\n    scrollToTopSmooth: function () {\n        this.ps_container.animate(\n            {scrollTop: 0},\n            400,\n            () => {\n                this.onScroll();\n            });\n    },\n\n    onScroll: function () {\n        if(this.ps_container[0].scrollTop >= 220) {\n            this.$('.block-header').css({'background-color': 'rgba(255,255,255,1)'});\n            this.$('.block-name.second-text').text(this.participant.get('nickname'));\n            this.$('.block-name.second-text').removeClass('fade-out');\n            this.$('.block-name:not(.second-text)').addClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 170) {\n            this.$('.block-header').css({'background-color': 'rgba(255,255,255,1)'});\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else if(this.ps_container[0].scrollTop >= 1) {\n            this.$('.block-header').css({'background-color': 'rgba(255,255,255,0.5)'});\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        else {\n            this.$('.block-header').css({'background-color': 'rgba(255,255,255,0)'});\n            this.$('.block-name.second-text').text('');\n            this.$('.block-name.second-text').addClass('fade-out');\n            this.$('.block-name:not(.second-text)').removeClass('fade-out');\n        }\n        let bottom_block_scroll\n        if (this.$('.bottom-block'))\n            bottom_block_scroll = this.$('.bottom-block').get(0).getBoundingClientRect().top;\n        if (bottom_block_scroll && bottom_block_scroll < 150) {\n            this.$('.bottom-block .tabs').addClass('fixed-scroll');\n            this.$('.btn-back').addClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-arrow-right').removeClass('mdi-close');\n            this.$('.bottom-block .participants-search-form').addClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(true);\n            this.$('.btn-edit').hideIf(true);\n            this.$('.btn-qr-code').hideIf(true);\n            this.$('.header-buttons .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').removeClass('fade-out');\n            this.$('.header-buttons .block-name.second-text').text(this.$('.tabs:not(.participant-tabs) .list-variant .active').text())\n        }\n        else {\n            this.$('.btn-back').removeClass('btn-top');\n            this.$('.btn-back i').addClass('mdi-close').removeClass('mdi-arrow-right');\n            this.$('.bottom-block .tabs').removeClass('fixed-scroll');\n            this.$('.bottom-block .participants-search-form').removeClass('fixed-scroll');\n            this.$('.buttons-wrap').hideIf(false);\n            this.$('.btn-edit').hideIf(false);\n            this.$('.btn-qr-code').hideIf(false);\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    updateMemberAvatar: function (member) {\n        let participant_id = member.get('id'),\n            $avatar = this.$(`.circle-avatar`);\n        member.image = Images.getDefaultAvatar(member.get('nickname') || member.get('jid') || participant_id);\n        $avatar.setAvatar(member.image, this.member_details_avatar_size);\n        $avatar.removeClass('changed');\n        if (member.get('avatar')) {\n            if (this.account.chat_settings.getHashAvatar(participant_id) == member.get('avatar') && (this.account.chat_settings.getB64Avatar(participant_id)))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n            else {\n                if (member.get('avatar_url')){\n                    $avatar.setAvatar(member.get('avatar_url'), this.member_details_avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + participant_id;\n                    this.contact.getAvatar(member.get('avatar'), node, (avatar) => {\n                        this.$(`.circle-avatar`).setAvatar(avatar, this.member_details_avatar_size);\n                    });\n                }\n            }\n        }\n        else {\n            if (this.account.chat_settings.getHashAvatar(participant_id))\n                $avatar.setAvatar(this.account.chat_settings.getB64Avatar(participant_id), this.member_details_avatar_size);\n        }\n    },\n\n    updateRightsView: function (ev) {\n        !$(ev.target).hasClass('non-active') && this.render(this.participant);\n    },\n\n    getMessages: function (options) {\n        let chat = this.account.chats.getChat(this.contact);\n        chat.messages_view = new xabber.ParticipantMessagesView({ model: chat, contact: this.contact, participant: this.participant.attributes });\n        chat.messages_view.messagesRequest(options, () => {\n            xabber.body.setScreen('all-chats', {right: 'participant_messages', model: chat});\n            this.open(this.participant, this.data_form);\n        });\n    },\n\n    changeAvatar: function (ev) {\n        let field = ev.target;\n        if (!field.files.length)\n            return;\n        let file = field.files[0];\n        field.value = '';\n        if (file.size > constants.MAX_AVATAR_FILE_SIZE) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__avatar_too_large\"));\n            return;\n        } else if (!file.type.startsWith('image')) {\n            utils.dialogs.error(xabber.getString(\"group_settings__error__wrong_image\"));\n            return;\n        }\n\n        utils.images.getAvatarFromFile(file).done((image) => {\n            if (image) {\n                file.base64 = image;\n                this.new_avatar = file;\n                this.$('.participant-details-edit-wrap .circle-avatar').addClass('changed');\n                this.$('.circle-avatar').setAvatar(image, this.member_details_avatar_size);\n                this.updateSaveButton();\n            }\n        });\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        if ($property_item.attr('data-value') !== $property_value.attr('data-value')) {\n            $property_item.closest('.right-item').addClass('changed-timer changed');\n            this.updateSaveButton();\n        }\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') === '0') {\n            $property_value.addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked')) {\n            $input_item.click();\n        }\n    },\n\n    onBadgeUpdated: function (participant) {\n        let badge = _.escape(participant.get('badge'));\n        this.updateBadge(badge);\n    },\n\n    updateBadge: function (badge) {\n        this.$('.badge').html(badge).switchClass('hidden', !badge);\n        this.$('.participant-info').emojify('.badge');\n        this.$('.participant-info').emojify('.participant-edit-badge');\n    },\n\n    updateButtons: function (has_changes) {\n        this.$('.btn-save-user-rights').switchClass('non-active', !has_changes);\n        this.$('.btn-save-user-rights').switchClass('fade-out', !has_changes);\n        this.$('.btn-edit-participant').switchClass('fade-out', has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.block-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').removeClass('btn-back').addClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').removeClass('btn-back-name').addClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.block-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.block-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.block-header .details-icon.parent-btn').addClass('btn-back').removeClass('btn-reset')\n            this.$('.block-header .details-icon.child-btn').addClass('btn-back-name').removeClass('btn-reset-name')\n            this.$('.block-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.block-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    updateSaveButton: function () {\n        let has_changes = this.$('.changed').length;\n        this.updateButtons(has_changes);\n    },\n\n    updateNickname: function (nickname) {\n        let $member_item = this.$('.participant-details-item[data-id=\"' + this.participant.get('id') + '\"]'),\n            $member_item_nickname = $member_item.find('.nickname');\n        $member_item_nickname.html(Strophe.xmlescape(nickname));\n        $member_item.emojify('.nickname');\n        if (nickname !== this.participant.get('nickname'))\n            $member_item_nickname.addClass('changed');\n        else\n            $member_item_nickname.removeClass('changed');\n        this.updateSaveButton();\n    },\n\n    editNickname: function () {\n        if (this.contact.get('private_chat') && this.account.get('jid') !== this.participant.get('jid'))\n            return;\n        this.$('.participant-info .nickname').hide();\n        this.$('.participant-info #edit-nickname').text(this.$('.participant-info .nickname').text()).show().placeCaretAtEnd();\n    },\n\n    editBadge: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        this.edit_badge_panel = new xabber.EditBadgeView({model: this});\n    },\n\n    checkKeydown: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            $(document.activeElement).blur();\n        }\n    },\n\n    checkKeyup: function (ev) {\n        let $richtextarea = $(ev.target),\n            new_value = $richtextarea.getTextFromRichTextarea().trim();\n        if (ev.target.id === 'edit-nickname') {\n            let has_changes = (new_value !== this.participant.get('nickname'));\n            this.updateButtons(has_changes);\n        }\n    },\n\n    retractUserMessages: function () {\n        utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__header\", [this.participant.get('nickname') || this.participant.get('jid') || this.participant.get('id')]), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n            if (result) {\n                if (this.participant.get('id')) {\n                    let group_chat = this.account.chats.getChat(this.contact);\n                    group_chat.retractMessagesByUser(this.participant.get('id'));\n                }\n            }\n        });\n    },\n\n    block: function () {\n        utils.dialogs.ask(xabber.getString(\"groupchat__dialog_block_member__header\"), xabber.getString(\"groupchat__dialog_block_member__confirm\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                this.participant.block(() => {this.close();},\n                    function (error) {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kick: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]),\n            null, { ok_button_text: xabber.getString(\"groupchat_kick\")}).done((result) => {\n            if (result) {\n                this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n            }\n        });\n    },\n\n    kickParticipantDialog: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        utils.dialogs.ask_extended(xabber.getString(\"groupchat_kick_member\"), xabber.getString(\"groupchat_do_you_really_want_to_kick_membername\", [this.participant.get('nickname')]), null, { ok_button_text: xabber.getString(\"groupchat_kick\"), optional_button: 'block', optional_button_text: xabber.getString(\"groupchat_block\")}).done((result) => {\n            if (result) {\n                if (result === 'block'){\n                    this.participant.block(() => {\n                        this.close();\n                        },\n                        function (error) {\n\n                            if ($(error).find('not-allowed').length)\n                                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                        });\n                }\n                else{\n                    this.participant.kick(() => {\n                        this.close();\n                    }, (error) => {\n\n                        if ($(error).find('not-allowed').length)\n                            utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                    });\n                }\n            }\n        });\n    },\n\n    setVisibility: function (ev) {\n            utils.dialogs.error('Feature not yet implemented')\n    },\n\n    setActualRights: function () {\n        this.$('.rights-wrap').html(\"\");\n        this.data_form.fields && this.data_form.fields.forEach((field) => {\n            field = _.clone(field);\n            if (field.type  === 'list-single' || field.type  === 'fixed' && (!field.values || field.values[0] == 0 || field.values && field.label)) {\n                !field.values && (field.values = []);\n                let attrs = {\n                        pretty_name: field.label,\n                        name: field.var,\n                        expires: field.values ? field.values[0] : undefined\n                    },\n                    restriction_item = $(templates.group_chats.restriction_item({name: attrs.name, pretty_name: attrs.pretty_name, type: field.type})),\n                    restriction_expire;\n                if (field.options) {\n                    restriction_expire = $(templates.group_chats.right_expire_variants({\n                        right_name: ('default-' + attrs.name),\n                        expire_options: field.options\n                    }));\n                    restriction_item.append(restriction_expire);\n                }\n                this.$('.rights-wrap').append(restriction_item);\n                if (attrs.expires) {\n                    this.actual_rights.push({name: attrs.name, expires: attrs.expires});\n                    this.$('.right-item #' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                    if (attrs.expires != 0) {\n                        let $current_restriction = this.$('.right-item.restriction-' + attrs.name);\n                        if ($current_restriction.find('.select-timer .property-value').length)\n                            $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                                .removeClass('default-value')\n                                .text(moment(Number(attrs.expires)*1000).fromNow());\n                        else{\n                            $current_restriction.append($('<div class=\"select-timer\"/>'));\n                            $current_restriction.find('.select-timer').attr('data-value', attrs.expires)\n                                .text(moment(Number(attrs.expires)*1000).fromNow())\n                        }\n                    }\n                }\n            } else if (field.type  === 'fixed')\n                field.values && this.$('.rights-wrap').append($('<div class=\"rights-header\"/>').text(field.values[0]));\n        });\n    },\n\n    getPrivateChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active'))\n            return;\n        let participant_jid = this.participant.get('jid'),\n            participant_in_roster = this.account.contacts.get(participant_jid);\n        if (!participant_jid || this.contact.get('incognito_chat')) {\n            let iq = $iq({to: this.contact.domain, type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#create`})\n                .c('peer-to-peer', { jid: this.contact.get('jid'),  id: this.participant.get('id')});\n            this.account.sendIQFast(iq, (iq_response) => {\n                let group_jid = $(iq_response).find('query localpart').text() + '@' + this.contact.domain,\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.pushInRoster(null, () => {\n                    contact.pres('subscribe');\n                    contact.getMyInfo();\n                    this.close();\n                    contact.sendPresent();\n                    this.account.chats.openChat(contact);\n                    let chat = this.account.chats.getChat(contact);\n                    chat.messages.createSystemMessage({\n                        from_jid: group_jid,\n                        message: xabber.getString(\"groupchat__private_chat__text_message_init\", [this.participant.get('nickname'), this.contact.get('jid')])\n                    });\n                });\n            }, (error) => {\n                let $error = $(error),\n                    private_chat_jid = $error.find(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"] jid`).text();\n                if (private_chat_jid) {\n                    let contact = this.account.contacts.mergeContact(private_chat_jid),\n                        chat = this.account.chats.getChat(contact);\n                    this.close();\n                    chat && chat.trigger('open');\n                    return;\n                }\n                let err_text = $(error).find('text[lang=\"en\"]').text() || $(error).find('text').first().text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                this.close();\n                utils.dialogs.error(err_text);\n            });\n        }\n        else {\n            if (participant_in_roster)\n                if (participant_in_roster.get('in_roster')) {\n                    this.close();\n                    participant_in_roster.trigger('open_chat', participant_in_roster);\n                    return;\n                }\n            this.close();\n            xabber.add_contact_view.show({\n                account: this.account,\n                jid: participant_jid\n            });\n        }\n    },\n\n    changeRights: function (ev) {\n        let $target = $(ev.target),\n            $right_item = $target.closest('.right-item'),\n            right_name = $target.prop('id');\n        if ($target.prop('checked')) {\n            if (this.actual_rights && !this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.addClass('changed');\n                else\n                    $right_item.removeClass('changed');\n        }\n        else {\n            if (this.actual_rights && this.actual_rights.find(right => right.name === right_name))\n                $right_item.addClass('changed');\n            else {\n                $right_item.removeClass('changed');\n                if ($right_item.hasClass('changed-timer'))\n                    $right_item.find('.timer-item-wrap .property-value').addClass('default-value').text(xabber.getString(\"dialog_rights__button_set_timer\")).attr('data-value', \"\");\n            }\n        }\n        this.updateSaveButton();\n    },\n\n    saveRights: function (ev) {\n        if ($(ev.target).hasClass('non-active'))\n            return;\n        let $btn = $(ev.target),\n            jid = this.account.get('jid'),\n            member_id = this.participant.get('id'),\n            $participant_avatar = this.$('.participant-details-item .circle-avatar'),\n            nickname_value = this.$('.participant-name-input').val(),\n            new_badge = this.$('.participant-badge-input').val(),\n            changed_avatar = this.new_avatar,\n            rights_changed = false,\n            has_changes = false,\n            iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + \"#members\"})\n                .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: member_id});\n        this.$('.buttons-wrap .btn-save-user-rights').addClass('non-active');\n        changed_avatar && $participant_avatar.find('.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        if (nickname_value != this.participant.get('nickname')) {\n            has_changes = true;\n            iq_changes.c('nickname').t(nickname_value).up();\n        }\n        if (Array.from(new_badge).length > 32)\n            utils.dialogs.error(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                has_changes = true;\n                iq_changes.c('badge').t(new_badge).up();\n            }\n        }\n        this.$('.right-item').each((idx, right_item) => {\n            if ($(right_item).hasClass('changed')) {\n                let $right_item = $(right_item),\n                    right_name = $right_item.find('.field input')[0].id;\n                if ($right_item.find('.field input:checked').val()) {\n                    let right_expire = $right_item.find('.select-timer .timer-item-wrap .property-value').attr('data-value'),\n                        field = this.data_form.fields.find(f => f.var === right_name),\n                        field_idx = this.data_form.fields.indexOf(field);\n                    field.values = [right_expire];\n                    this.data_form.fields[field_idx] = field;\n                    rights_changed = true;\n                }\n                else {\n                    let field = this.data_form.fields.find(f => f.var === right_name);\n                    if (field.values.length) {\n                        let field_idx = this.data_form.fields.indexOf(field);\n                        field.values = [];\n                        this.data_form.fields[field_idx] = field;\n                        rights_changed = true;\n                    }\n                }\n            }\n        });\n        if (changed_avatar)\n            this.contact.pubAvatar(changed_avatar, ('#' + member_id), () => {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                // this.$(`.participant-details-item[data-id=\"${member_id}\"] .circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.$(`.circle-avatar`).setAvatar(changed_avatar.base64, this.member_details_avatar_size);\n                this.close();\n            }, function (error) {\n                $participant_avatar.find('.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n\n                let error_text = $(error).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                !has_changes && utils.dialogs.error(error_text);\n                this.close();\n            });\n        if (has_changes)\n            this.account.sendIQFast(iq_changes,\n                () => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.participant.set('nickname', nickname_value);\n                    this.close();\n                },\n                (error) => {\n                    this.$('.buttons-wrap button').removeClass('non-active');\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        if (rights_changed) {\n            let iq_rights_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#rights'});\n            iq_rights_changes = this.account.addDataFormToStanza(iq_rights_changes, this.data_form);\n            this.account.sendIQFast(iq_rights_changes, () => {\n                    this.close();\n                },\n                (error) => {\n                    this.close();\n                    if ($(error).find('not-allowed').length)\n                        utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                });\n        }\n        $btn.blur();\n    }\n});\n\nxabber.EditBadgeView = xabber.BasicView.extend({\n    className: 'modal edit-badge',\n    template: templates.group_chats.badge_edit_view,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-save\": \"saveNewBadge\",\n        \"keydown .badge-text\": \"checkKey\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.participant = this.model.participant;\n        this.$el.openModal({\n            ready: () => {\n                if (this.participant.get('badge'))\n                    this.typeEmoticon(this.participant.get('badge'));\n                else\n                    this.$('.badge-text').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            $target.length && this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n        }});\n    },\n\n    saveNewBadge: function () {\n        let new_badge = this.$('.badge-text').getTextFromRichTextarea();\n        if (Array.from(new_badge).length > 32)\n            this.$('.modal-content .error').text(xabber.getString(\"groupchat__set_badge__error_length\"));\n        else {\n            if (new_badge != this.participant.get('badge')) {\n                let iq_changes = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                    .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`})\n                    .c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: this.participant.get('id')})\n                    .c('badge').t(new_badge);\n                this.account.sendIQFast(iq_changes, () => {\n                    this.model.updateBadge(new_badge);\n                    this.close();\n                }, () => {\n                    this.$('.modal-content .error').text(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n                })\n            }\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        let emoji_node = emoji.emojify({tag_name: 'span'}),\n            $textarea = this.$('.badge-text');\n        $textarea.focus().pasteHtmlAtCaret(emoji_node);\n    },\n\n    checkKey: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            ev.preventDefault();\n            this.saveNewBadge();\n        }\n    }\n\n});\n\nxabber.DefaultRestrictionsView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"close\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    close: function () {\n        this.$el.closeModal({\n            complete: () => {\n                this.hide.bind(this);\n            }\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('non-active');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('non-active', !has_changes);\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('non-active'))\n            return;\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.close();\n            }, (error) => {\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.close();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.DefaultRestrictionsRightView = xabber.BasicView.extend({\n    className: 'modal dialog-modal edit-default-restrictions',\n    template: templates.group_chats.default_restrictions_right,\n    events: {\n        \"click .btn-default-restrictions-save\": \"saveChanges\",\n        \"click .btn-default-restrictions-cancel\": \"hideRestrictions\",\n        \"click .btn-back\": \"hideRestrictions\",\n        \"click .btn-reset\": \"showRestrictions\",\n        \"change #default_restriction_expires\": \"changeExpiresTime\",\n        \"click .group-info-editor .property-variant\": \"changePropertyValue\",\n        \"click .select-timer .property-variant\": \"changeTimerValue\",\n        \"click .clickable-field input\": \"changeRestriction\",\n        \"keyup .clickable-field input\": \"keyUpInput\",\n        \"change .clickable-field input\": \"updateSaveButton\"\n    },\n\n    _initialize: function () {\n        this.contact = this.model;\n        this.account = this.contact.account;\n        this.model.set('restrictions_hidden', true)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n    },\n\n    showRestrictions: function (ev) {\n        this.model.set('restrictions_hidden', false);\n        this.update(() => {\n            this.$('.select-timer .dropdown-button').dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n            this.$('.restrictions-wrap').hideIf(this.model.get('restrictions_hidden'))\n            this.updateSaveButton()\n        });\n    },\n\n    hideRestrictions: function (ev) {\n        this.parent.hideRestrictions();\n    },\n\n    open: function () {\n        this.update(() => {\n            this.$el.openModal({\n                ready: () => {\n                    this.$('.select-timer .dropdown-button').dropdown({\n                        inDuration: 100,\n                        outDuration: 100,\n                        constrainWidth: false,\n                        hover: false,\n                        alignment: 'left'\n                    });\n                    this.updateScrollBar();\n                },\n                complete: () => {\n                    this.$el.detach();\n                    this.data.set('visible', false);\n                }\n            });\n        });\n    },\n\n    update: function (callback) {\n        this.$('.btn-default-restrictions-save').addClass('fade-out');\n        this.default_restrictions = [];\n        this.actual_default_restrictions = [];\n        this.$('button').blur();\n        let iq_get_rights = $iq({type: 'get', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n        this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n            this.showDefaultRestrictions(iq_all_rights);\n            callback && callback();\n        }, () => {\n\n            utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n        });\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked'))\n                    has_changes = true;\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name))\n                    has_changes = true;\n            }\n        });\n        this.$('.btn-default-restrictions-save').switchClass('fade-out', !has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.restrictions-header .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.restrictions-header .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.restrictions-header .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.restrictions-header .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.restrictions-header .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.restrictions-header .block-name.second-text').addClass('fade-out');\n        }\n    },\n\n    changeRestriction: function (ev) {\n        let $target = $(ev.target);\n        if (!$target.prop('checked')) {\n            $target.closest('.right-item').find('.select-timer .property-value').attr('data-value', \"\").addClass('default-value')\n                .text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        }\n    },\n\n    keyUpInput: function (ev) {\n        if (ev && ev.keyCode === constants.KEY_ENTER)\n            $(ev.target).click();\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n    },\n\n    changeTimerValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.select-timer').find('.property-value'),\n            $input_item = $property_item.closest('.right-item').find('input');\n        $property_value.text($property_item.text());\n        $property_value.attr('data-value', $property_item.attr('data-value'));\n        if ($property_item.attr('data-value') == 0) {\n            $property_value.addClass('default-value');\n            $property_value.text(xabber.getString(\"dialog_rights__button_set_timer\"));\n        } else if ($property_value.hasClass('default-value'))\n            $property_value.removeClass('default-value');\n        if (!$input_item.prop('checked'))\n            $input_item.prop('checked', true);\n        this.updateSaveButton();\n    },\n\n    showDefaultRestrictions: function (iq_all_rights) {\n        let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n        data_form && (this.default_restrictions = _.clone(data_form));\n        data_form.fields.forEach((field) => {\n            if (field.type === 'fixed' || field.type === 'hidden')\n                return;\n            let attrs = {\n                    pretty_name: field.label,\n                    name: field.var,\n                    expires: field.values ? field.values[0] : undefined\n                },\n                view = this.$('.default-restrictions-list-wrap .right-item.restriction-default-' + attrs.name),\n                restriction_item = $(templates.group_chats.restriction_item({name: ('default-' + attrs.name), pretty_name: attrs.pretty_name, type: field.type})),\n                restriction_expire = $(templates.group_chats.right_expire_variants({right_name: ('default-' + attrs.name), expire_options: field.options}));\n            if (view.length)\n                view.detach();\n            restriction_item.append(restriction_expire);\n            this.$('.default-restrictions-list-wrap').append(restriction_item);\n            if (attrs.expires) {\n                this.actual_default_restrictions.push({name: attrs.name, expires: attrs.expires});\n                this.$('.right-item #default-' + attrs.name).prop('checked', true).addClass(attrs.expires);\n                if (attrs.expires != 0) {\n                    let $current_restriction = this.$('.right-item.restriction-default-' + attrs.name);\n                    $current_restriction.find('.select-timer .property-value').attr('data-value', attrs.expires)\n                        .removeClass('default-value')\n                        .text(field.options.find(x => x.value === attrs.expires).label);\n                }\n            }\n        });\n    },\n\n    saveChanges: function () {\n        if (this.$('.btn-default-restrictions-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-default-restrictions-save').addClass('fade-out')\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        this.$('button').blur();\n        let iq_change_default_rights = $iq({to: this.contact.get('full_jid') || this.contact.get('jid'), type: 'set'})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`}),\n            has_new_default_restrictions = false,\n            data_form = _.clone(this.default_restrictions);\n        this.$('.default-restrictions-list-wrap .right-item').each((idx, item) => {\n            let $item = $(item),\n                restriction_name = $item.find('input').attr('id'),\n                restriction_expires = $item.find('.select-timer .property-value').attr('data-value');\n            restriction_name = restriction_name.slice(8, restriction_name.length);\n            if (!this.actual_default_restrictions.find(restriction => ((restriction.name == restriction_name) && (restriction.expires == restriction_expires)))) {\n                if ($item.find('input').prop('checked')) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [restriction_expires];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n                else if (this.actual_default_restrictions.find(restriction => restriction.name == restriction_name)) {\n                    let field = data_form.fields.find(f => f.var === restriction_name),\n                        field_idx = data_form.fields.indexOf(field);\n                    field.values = [\"\"];\n                    data_form.fields[field_idx] = field;\n                    has_new_default_restrictions = true;\n                }\n            }\n        });\n\n        if (has_new_default_restrictions) {\n            this.account.addDataFormToStanza(iq_change_default_rights, data_form);\n            this.account.sendIQFast(iq_change_default_rights, () => {\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            }, (error) => {\n\n                let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n                utils.dialogs.error(err_text);\n                this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n                this.hideRestrictions();\n            });\n        }\n    },\n\n    changeExpiresTime: function (ev) {\n        let expire_time_item = $(ev.target),\n            new_expire_time = expire_time_item.val(),\n            $restriction_item = expire_time_item.prev();\n        if (expire_time_item.val() == '0')\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__indefinitely\"));\n        else\n            $restriction_item .find('.restriction-description').text(xabber.getString(\"groupchat__rights_timer__text_expire\", [Number(new_expire_time)]));\n        $restriction_item .find('input').removeClass().addClass(new_expire_time);\n        expire_time_item.remove();\n    }\n});\n\nxabber.Participant = Backbone.Model.extend({\n    idAttribute: 'id',\n\n    initialize: function (_attrs, options) {\n        let attrs = _.clone(_attrs);\n        this.model = options.model;\n        this.contact = options.contact ? options.contact : this.model.contact;\n        this.account = this.contact.account;\n        this.on(\"change:avatar\", this.getBase64Avatar, this);\n        this.set(attrs);\n        this.getBase64Avatar();\n    },\n\n    getBase64Avatar: function () {\n        if (!this.get('id'))\n            return;\n        if (this.get('avatar')) {\n            let cached_info = this.account.chat_settings.getAvatarInfoById(this.get('id'));\n            if (cached_info) {\n                if (cached_info.avatar_hash == this.get('avatar')) {\n                    this.set('b64_avatar', cached_info.avatar_b64);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                    return;\n                }\n            }\n            if (this.get('avatar_url')){\n                this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), this.get('avatar_url'));\n                this.set('b64_avatar', this.get('avatar_url'));\n                (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n\n            } else {\n                let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + this.get('id');\n                this.contact.getAvatar(this.get('avatar'), node, (avatar) => {\n                    this.account.chat_settings.updateCachedAvatars(this.get('id'), this.get('avatar'), avatar);\n                    this.set('b64_avatar', avatar);\n                    (this.get('jid') === this.account.get('jid')) && this.contact.trigger('update_my_info');\n                });\n\n            }\n        }\n    },\n\n    kick: function (callback, errback) {\n        let id = this.get('id'),\n            jid = this.get('jid'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('kick', {xmlns: Strophe.NS.GROUP_CHAT});\n        if (jid)\n            iq.c('jid').t(jid);\n        else\n            iq.c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, (err) => {\n            errback && errback(err);\n        });\n    },\n\n    block: function (callback, errback) {\n        let id = this.get('id'),\n            iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n                .c('block', {xmlns: `${Strophe.NS.GROUP_CHAT}#block`})\n                .c('id').t(id);\n        this.account.sendIQFast(iq, () => {\n            callback && callback();\n        }, function (err) {\n            errback && errback(err);\n        });\n    }\n});\n\nxabber.Participants = Backbone.Collection.extend({\n    model: xabber.Participant,\n    comparator: 'nickname',\n\n    initialize: function (models, options) {\n        this.contact = options.contact;\n        this.account = this.contact.account;\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid'));\n        this.getCachedParticipants();\n        this.contact.on(\"update_participants\", this.updateParticipants, this);\n        this.on(\"change:nickname\", this.sort, this);\n    },\n\n    updateVersion: function () {\n        this.version = this.account.groupchat_settings.getParticipantsListVersion(this.contact.get('jid')) || this.version;\n    },\n\n    getCachedParticipants: function () {\n        this.account.groupchat_settings.getParticipantsList(this.contact.get('jid')).forEach((participant) => {\n            this.mergeParticipant(participant);\n        });\n    },\n\n    mergeParticipant: function (attrs) {\n        if (typeof attrs !== \"object\")\n            attrs = {id: attrs};\n        let participant = this.get(attrs.id);\n        if (participant)\n            participant.set(attrs);\n        else {\n            participant = this.create(attrs, {model: this});\n        }\n        return participant;\n    },\n\n    resetParticipants: function () {\n        this.version = 0;\n        _.each(_.clone(this.models), function (participant) {\n            participant.destroy();\n        });\n    },\n\n    getRights: function (rights) {\n        let pretty_rights = [];\n        $(rights).each((idx, permission) => {\n            let name = $(permission).attr('name'),\n                pretty_name = $(permission).attr('translation'),\n                issued_time = $(permission).attr('issued-at'),\n                expires_time = $(permission).attr('expires');\n            pretty_rights.push({\n                name: name,\n                pretty_name: pretty_name,\n                issued_time: issued_time,\n                expires_time: expires_time\n            });\n        });\n        return pretty_rights;\n    },\n\n        updateParticipants: function () {\n            this.participantsRequest({version: this.version}, () => {\n                this.trigger(\"participants_updated\");\n                let chat = this.account.chats.getChat(this.contact);\n                if (chat.item_view) {\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.updatePinnedMessage()\n                }\n            });\n        },\n\n    participantsRequest: function (options, callback, errback) {\n        options = options || {};\n        let participant_id = options.id,\n            version = options.version || 0,\n            iq = $iq({to: this.contact.get('full_jid'), type: 'get'});\n        if (participant_id != undefined) {\n            if (options.properties)\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, id: participant_id});\n            else\n                iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#rights`}).c('user', {xmlns: Strophe.NS.GROUP_CHAT, id: participant_id});\n        }\n        else\n            iq.c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#members`, version: version});\n        this.account.sendFast(iq, (response) => {\n            let $response = $(response),\n                version = $response.find('query').attr('version');\n            version && (this.version = Number(version));\n            $response.find(`query user`).each((idx, item) => {\n                let $item = $(item),\n                    subscription = $item.find('subscription').text(),\n                    id = $item.find('id').text();\n                if (subscription === 'none') {\n                    this.get(id) && this.get(id).destroy();\n                    this.account.groupchat_settings.removeParticipantFromList(this.get('jid'), id);\n                }\n                else\n                    this.createFromStanza($item);\n            });\n            callback && callback(response);\n        }, (error) => {\n            errback && errback(error);\n        });\n    },\n\n    search: function (query) {\n        let list = [];\n        this.models.forEach((participant) => {\n            let jid = participant.get('jid');\n            if (query) {\n                query = query.toLowerCase();\n                let nickname = participant.get('nickname');\n                if (jid && jid.toLowerCase().indexOf(query) > -1 || nickname && nickname.toLowerCase().indexOf(query) > -1)\n                    list.push(participant);\n            } else\n                list.push(participant);\n        });\n        return list;\n    },\n\n    createFromStanza: function ($item) {\n        let jid = $item.find('jid').text(),\n            nickname = $item.find('nickname').text(),\n            id = $item.attr('id'),\n            badge = $item.find('badge').text(),\n            present = $item.find('present').text(),\n            photo = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('id'),\n            photo_url = $item.find(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).find('info').attr('url'),\n            role = $item.find('role').text();\n        !nickname.trim().length && (nickname = jid || id);\n\n        let attrs = {\n            jid: jid,\n            id: id,\n            avatar: photo,\n            avatar_url: photo_url,\n            nickname: nickname,\n            badge: badge,\n            present: present,\n            role: role\n        };\n\n        let participant = this.mergeParticipant(attrs);\n        (this.account.get('jid') === participant.get('jid')) && (this.contact.my_info = participant) && this.contact.trigger('update_my_info');\n        this.account.groupchat_settings.updateParticipant(this.contact.get('jid'), attrs);\n        return participant;\n    }\n});\n\nxabber.GroupChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        participants_lists: []\n    },\n\n    getParticipantsListVersion: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result)\n            return result.version;\n        else\n            return 0;\n    },\n\n    setParticipantsListVersion: function (jid, version) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid),\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        if (!participants_list) {\n            participants_list = {jid: jid, participants_list: [], version: 0};\n        }\n        else\n            participants_list.version = version;\n        all_participants_lists.push(participants_list);\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    getParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            result = all_participants_lists.find(list => list.jid === jid);\n        if (result && result.participants_list)\n            return result.participants_list;\n        else\n            return [];\n    },\n\n    updateParticipant: function (jid, participant_info) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            chat_participants = all_participants_lists.find(list => list.jid === jid),\n            version = chat_participants && chat_participants.version || 0,\n            participants_list = chat_participants && chat_participants.participants_list || [],\n            participants_list_idx = all_participants_lists.indexOf(chat_participants);\n        if (participants_list.length) {\n            let participant = participants_list.find(participant_item => participant_item.id === participant_info.id),\n                participant_idx = participants_list.indexOf(participant);\n            if (participant_idx != -1)\n                participants_list[participant_idx] = participant_info;\n            else\n                participants_list.push(participant_info);\n        }\n        else\n            participants_list.push(participant_info);\n        if (participants_list_idx != -1) {\n            all_participants_lists.splice(participants_list_idx, 1);\n        }\n        all_participants_lists.push({jid: jid, participants_list: participants_list, version: version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    setParticipantsList: function (jid, updated_participants_list) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list = all_participants_lists.find(list => list.jid === jid) || [],\n            participants_list_idx = all_participants_lists.indexOf(participants_list);\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: updated_participants_list, version: participants_list.version});\n        this.save('participants_lists', all_participants_lists);\n    },\n\n    removeParticipantFromList: function (jid, participant_id) {\n        let participants_list = this.getParticipantsList(jid);\n        if (participants_list.length) {\n            let participant_idx = participants_list.indexOf(participants_list.find(participant => participant.id === participant_id));\n            if (participant_idx != -1)\n                participants_list.splice(participant_idx, 1);\n            this.setParticipantsList(jid, participants_list);\n        }\n    },\n\n    resetParticipantsList: function (jid) {\n        let all_participants_lists = _.clone(this.get('participants_lists')),\n            participants_list_idx = all_participants_lists.indexOf(all_participants_lists.find(list => list.jid === jid));\n        if (participants_list_idx != -1)\n            all_participants_lists.splice(participants_list_idx, 1);\n        all_participants_lists.push({jid: jid, participants_list: [], version: 0});\n        this.save('participants_lists', all_participants_lists);\n    }\n});\n\nxabber.GroupchatInvitationView = xabber.BasicView.extend({\n    className: 'details-panel invitation-view',\n    template: templates.group_chats.invitation,\n    ps_selector: '.panel-content',\n    avatar_size: constants.AVATAR_SIZES.CONTACT_DETAILS,\n\n    events: {\n        \"click .btn-join\": \"join\",\n        \"click .btn-decline\": \"reject\",\n        \"click .btn-block\": \"blockContact\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.$('.msg-text').text(options.message && options.message.get('message') ? options.message.get('message') : xabber.getString(\"groupchat__public_group__text_invitation\", [this.account.get('jid')]));\n        this.message = options.message;\n        this.model.on(\"change\", this.update, this);\n    },\n\n    render: function () {\n        this.model.set('visible', true);\n        this.updateAvatar();\n        this.updateName();\n    },\n\n    hide: function () {\n        this.trigger('before_hide', this);\n        this.data.set('visible', false);\n        this.model.set('visible', false);\n        this.onHide.apply(this, arguments);\n    },\n\n    update: function () {\n        let changed = this.model.changed;\n        if (_.has(changed, 'name')) this.updateName();\n        if (_.has(changed, 'image')) this.updateAvatar();\n    },\n\n    openChat: function () {\n        this.model.set('in_roster', true);\n        this.model.trigger(\"open_chat\", this.model);\n    },\n\n    closeChat: function () {\n        let chat = this.account.chats.getChat(this.model);\n        chat.set({'opened': false, 'display': false, 'active': false});\n        xabber.body.setScreen('all-chats', { right: undefined });\n        chat.item_view.content.readMessages();\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateName: function () {\n        this.$('.main-info  .name-wrap').text(this.model.get('name'));\n        if (this.model.get('name-wrap') == this.model.get('jid')) {\n            this.$('.main-info .name-wrap').addClass('name-is-jid');\n            this.$('.main-info  .jid').text('');\n        }\n        else {\n            this.$('.main-info .name-wrap').removeClass('name-is-jid');\n            this.$('.main-info  .jid').text(this.model.get('jid'));\n        }\n    },\n\n    blockInvitation: function () {\n        if (this.account.connection && this.account.connection.do_synchronization)\n            return;\n        let contact_jid = this.model.get('jid'),\n            iq_get_blocking = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING}),\n            iq_unblocking = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING}),\n            iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: this.model.get('jid') + '/' + moment.now()});\n        this.account.sendIQFast(iq_get_blocking, (iq_blocking_items) => {\n            let items = $(iq_blocking_items).find('item');\n            if (items.length > 0) {\n                items.each(function (idx, item) {\n                    let item_jid = $(item).attr('jid');\n                    if (item_jid.indexOf(contact_jid) > -1)\n                        iq_unblocking.c('item', {jid: item_jid}).up();\n                });\n            }\n            if ($(iq_unblocking.nodeTree).find('item').length)\n                this.account.sendIQFast(iq_unblocking, () => {\n                    this.account.sendIQFast(iq_set_blocking);\n                });\n            else\n                this.account.sendIQFast(iq_set_blocking);\n        });\n    },\n\n    join: function () {\n        let contact = this.model;\n        contact.set('subscription_preapproved', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            this.blockInvitation();\n            contact.getMyInfo();\n            contact.sendPresent();\n            this.openChat();\n        });\n        contact.trigger('remove_invite', contact);\n    },\n\n    reject: function () {\n        let contact = this.model;\n        this.closeChat();\n        let iq = $iq({to: contact.get('full_jid') || contact.get('jid'), type: 'set'})\n            .c('decline', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`});\n        this.account.sendFast(iq, () => {}, () => {\n            contact.declineRequest();\n            this.blockInvitation();\n        });\n    },\n\n    blockContact: function () {\n        let contact = this.model;\n        utils.dialogs.ask(xabber.getString(\"contact_block\"), xabber.getString(\"block_contact_confirm\", [contact.get('name'), this.account.get('jid')]), null, { ok_button_text: xabber.getString(\"contact_bar_block\")}).done(function (result) {\n            if (result) {\n                contact.trigger('remove_invite', contact);\n                contact.block();\n                xabber.trigger(\"clear_search\");\n            }\n        });\n        this.blockInvitation();\n        this.closeChat();\n    }\n});\n\nxabber.ContactNameWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    showInput: function () {\n        if (this.$input.prop('disabled'))\n            return;\n        this.data.set('input_mode', true);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    }\n});\n\nxabber.ContactNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'contact-name',\n    placeholder: \"\",\n    model_field: 'name',\n    template: templates.group_chats.group_name_input_widget,\n\n    setValue: function (value) {\n        if (name === \"\") {\n            this.model.set('roster_name', null);\n            let name = this.getDefaultName();\n            this.model.set('name', name);\n        }\n        this.model.pushInRoster({name: value});\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info'))\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        else {\n            let vcard = this.model.get('vcard');\n            name = vcard.nickname || (vcard.first_name + ' ' + vcard.last_name).trim() || vcard.fullname || this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function () {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val()) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('roster_name'))\n                this.$input.val(this.model.get('roster_name'))\n        }\n        if (!this.model.get('roster_name'))\n            this.$value.addClass('name-is-default');\n        else\n            this.$value.removeClass('name-is-default');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n    },\n});\n\nxabber.GroupNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                name = this.model.get('group_info').name;\n            else\n                name = this.model.get('jid');\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('group_info') && this.model.get('group_info').name)\n                this.$input.val(this.model.get('group_info').name)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').name;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantNameRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-name',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        if (this.$input.val())\n            this.parent.changeName(value);\n        else\n            this.parent.changeName(this.getDefaultName());\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('nickname'))\n            name = this.model.get('nickname');\n        else\n            name = this.model.get('jid');\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        this.$value.text(value);\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n            if (this.model.get('nickname'))\n                this.$input.val(this.model.get('nickname'))\n            if (force_reset)\n                this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        if (this.model.get('nickname'))\n            return this.model.get('nickname');\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', this.getDefaultName() || xabber.getString(\"contact_settings__hint_set_name\"));\n        else\n            this.changeValue();\n\n    },\n});\n\nxabber.ParticipantBadgeRightWidget = xabber.InputWidget.extend({\n    field_name: 'participant-badge',\n    placeholder: \"\",\n    template: templates.group_chats.group_name_input_widget,\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`),\n                list_name = emoji_list.replace(/ /g, '_');\n            $(`<div id=${list_name} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: list_name})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: list_name, title: constants.EMOJI_LIST_NAME(emoji_list), tag_name: 'a', emoji_size: 20}));\n        }\n        $emoji_panel.perfectScrollbar(\n            _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.hover((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            $emoji_panel_wrap.addClass('opened');\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        }, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                if (!$emoji_panel_wrap.is(':hover')) {\n                    $emoji_panel_wrap.removeClass('opened');\n                }\n            }, 800);\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(function () {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button)\n                return;\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            if ($target.length) {\n                this.$input.val(function () {\n                    return this.value + $target.data('emoji');\n                });\n                this.$input.scrollLeft(1000)\n                this.changeValue();\n            }\n        });\n        this.updateValue(true);\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.updateValue();\n        this.parent.changeBadge(value);\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        if (force_reset) {\n            this.$input.val(value);\n            this.changeValue();\n        }\n        this.$input.switchClass('changed', this.$input.val() !== value);\n    },\n\n    getValue: function () {\n        let badge = _.escape(this.model.get('badge'));\n        return badge;\n    },\n\n    keyUp: function () {\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_member_badge\"));\n        this.changeValue();\n    },\n});\n\nxabber.GroupDescriptionRightWidget = xabber.InputWidget.extend({\n    field_name: 'group-description',\n    template: templates.group_chats.description_input_widget,\n    placeholder: \"\",\n\n    initialize: function (options) {\n        this.parent = options.parent\n        this.$el.html(this.template({\n            field_name: this.field_name,\n            field_type: this.field_type,\n            placeholder: this.placeholder\n        }));\n        this.$value = this.$('.field-text');\n        this.$btn = this.$('.btn-rename');\n        this.$input = this.$('.field-input');\n        this.updateValue();\n        this.data = new Backbone.Model({input_mode: false});\n    },\n\n    changeValue: function () {\n        this.setValue(this.$input.val());\n    },\n\n    setValue: function (value) {\n        this.parent.changeDescription(value);\n        this.updateValue();\n    },\n\n    getDefaultName: function () {\n        let name = null;\n        if (this.model.get('group_chat')) {\n            if (this.model.get('group_info') && this.model.get('group_info').description)\n                name = this.model.get('group_info').description;\n        }\n        return name;\n    },\n\n    updateValue: function (force_reset) {\n        let value = this.getValue();\n        if (!this.$input.val() || force_reset) {\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n            if (force_reset && this.model.get('group_info'))\n                this.$input.val(this.model.get('group_info').description)\n            if (force_reset)\n                this.changeValue();\n        }\n    },\n\n    keyDown: function (ev) {\n        ev.stopPropagation();\n        let value = this.getValue();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.$input.removeClass('changed').val(value);\n            this.data.set('input_mode', false);\n        }\n    },\n\n    getValue: function () {\n        if (this.model.get('group_info'))\n            return this.model.get('group_info').description;\n    },\n\n    keyUp: function () {\n        let value = this.getValue();\n        this.$input.switchClass('changed', this.$input.val() !== value);\n        if (!this.$input.val())\n            this.$input.prop('placeholder', xabber.getString(\"groupchat_example_description\"));\n        this.changeValue();\n    },\n});\n\nxabber.ContactEditGroupsView = xabber.BasicView.extend({\n    template: templates.groups,\n    events: {\n        'click .group': 'removeGroup',\n        'click .existing-group-field label': 'editGroup',\n        'change .new-group-name input': 'checkNewGroup',\n        'keyup .new-group-name input': 'checkNewGroup',\n        'click .new-group-checkbox': 'addNewGroup',\n        \"keyup #new-group-name\": \"keyupAddNewGroup\",\n        \"focusin #new-group-name\": \"focusinAddNewGroup\",\n        \"focusout #new-group-name\": \"focusoutAddNewGroup\",\n        \"keydown #new-group-name\": \"keydownAddNewGroup\",\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('groups_hidden', true)\n        this.model.on(\"change:in_roster update_groups\", this.onUpdate, this);\n    },\n\n    render: function (view, args) {\n        this.$el.html(this.template());\n        if (this.model.get('in_roster')) {\n            let groups = _.clone(this.model.get('groups')),\n                all_groups = _.map(this.account.groups.notSpecial(), function (group) {\n                    let name = group.get('name');\n                    return {name: name, checked: _.contains(groups, name), id: uuid()};\n                }),\n                all_groups_unchecked = all_groups.filter(function(group) {\n                    if (group.checked)\n                        return false;\n                    return true;\n                }).length;\n            if (all_groups_unchecked)\n                this.$('.groups-wrap').removeClass('empty-groups-wrap')\n            else\n                this.$('.groups-wrap').addClass('empty-groups-wrap')\n\n            this.$('.checkbox-list').html(templates.groups_checkbox_list({\n                groups: all_groups\n            })).appendTo(this.$('.groups-wrap'));\n            this.ps_container = this.$('.checkbox-list');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.scrollToTop();\n            if (groups.length)\n                this.$('.groups').html(templates.groups_list({\n                    groups: all_groups\n                })).appendTo(this.$('.groups-wrap-list'));\n            else\n                this.$('.groups').html('<div class=\"empty-groups\">'+ xabber.getString(\"contact_circles_empty\") + '</div>')\n            this.$('.groups').append(templates.groups_new_group());\n\n        }\n        this.$el.showIf(this.model.get('in_roster'));\n        if (args && args.on_add)\n            this.$('.groups-wrap').hideIf(false)\n        else\n            this.$('.groups-wrap').hideIf(true)\n        this.parent.updateScrollBar();\n    },\n\n    onUpdate: function (ev) {\n        if (this._update_template){\n            this.render(this, {on_add: true});\n            this.$('.new-group-name input').addClass('visible');\n            this.$('.new-group-name input').focus();\n        }\n        else{\n            this.render();\n            this.$('.new-group-name input').addClass('visible');\n        }\n\n    },\n\n    removeGroup: function (ev) {\n        let $target = $(ev.target).closest('.group'),\n            group_name = $target.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = false\n        this.model.pushInRoster({groups: groups});\n    },\n\n    removeLastGroup: function (ev) {\n        let groups = _.clone(this.model.get('groups'));\n        if (groups.length) {\n            groups.pop();\n            this._update_template = true\n            this.model.pushInRoster({groups: groups});\n        }\n    },\n\n    editGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            groups.push(group_name);\n        } else if (idx >= 0) {\n            groups.splice(idx, 1);\n        }\n        this._update_template = true\n        this.model.pushInRoster({groups: groups});\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox');\n        $checkbox.showIf(name && !this.account.groups.get(name));\n    },\n\n    keyupAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_ENTER && name) {\n            this.addNewGroup();\n        }\n    },\n\n    keydownAddNewGroup: function (ev) {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val();\n        if (ev.keyCode === constants.KEY_BACKSPACE && !name) {\n            this.removeLastGroup();\n        }\n    },\n\n    focusinAddNewGroup: function (ev) {\n        clearTimeout(this._hide_timeout)\n        this.$('.groups-wrap').hideIf(false)\n        this.$('.empty-groups').hideIf(true)\n    },\n\n    focusoutAddNewGroup: function (ev) {\n        this.$('.empty-groups').hideIf(false)\n        if (this.$('.new-group-name input').val())\n            this.addNewGroup();\n        this._hide_timeout = setTimeout(() => {\n            this.$('.new-group-name input').removeClass('visible');\n            this.$('.groups-wrap').hideIf(true)\n            this.$('.new-group-name input').val('')\n        }, 100)\n    },\n\n    addNewGroup: function () {\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.model.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            groups.push(name);\n        }\n        this.model.pushInRoster({groups: groups});\n    }\n});\n\nxabber.ContactEditView = xabber.BasicView.extend({\n    template: templates.edit_contact,\n    events: {\n        'click .btn-back': 'hideEdit',\n        'click .btn-request': 'requestSubscription',\n        'click .btn-allow': 'allowSubscription',\n        'click .btn-cancel-request': 'cancelSubscriptionRequest',\n        'click .btn-allow-request': 'handleSubscriptionRequest',\n        'click .btn-disallow-request': 'cancelSubscriptionIn',\n        'click .btn-disallow-preapproved': 'cancelSubscriptionIn',\n        'click .btn-cancel-subscription-out': 'cancelSubscriptionOut',\n        'click .btn-cancel-subscription-in': 'cancelSubscriptionIn',\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on(\"change:status_updated\", this.updateStatuses, this);\n        this.model.on(\"change:subscription\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_preapproved\", this.updateStatuses, this);\n        this.model.on(\"change:blocked\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_in\", this.updateStatuses, this);\n        this.model.on(\"change:subscription_request_out\", this.updateStatuses, this);\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.name_field = new xabber.ContactNameRightWidget({\n            el: this.$('.name-wrap')[0],\n            model: this.model\n        });\n        this.$('.status-out.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.status-in.dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.updateStatuses();\n    },\n\n    showEdit: function () {\n        this.model.set('edit_hidden', false);\n        this.parent.scrollToTop();\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n    },\n\n    updateStatuses: function () {\n        let statuses = this.model.getSubscriptionStatuses(),\n            subscription_preapproved = this.model.get('subscription_preapproved');\n        if (statuses){\n            this.$('.status-out').addClass(statuses.status_out_class)\n            this.$('.status-out .value').text(statuses.status_out)\n            this.$('.status-out').showIf(statuses.status_out)\n            this.$('.status-in').addClass(statuses.status_in_class)\n            this.$('.status-in  .value').text(statuses.status_in)\n            this.$('.status-in').showIf(statuses.status_in)\n            this.$('.status-description .value').html(statuses.status_description)\n            this.$('.status-description').showIf(statuses.status_description)\n            this.$('.btn-delete').hideIf(!this.model.get('in_roster'));\n            if (statuses.status_out_color === 'request') {\n                this.$('.status-out').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'request') {\n                this.$('.status-in').addClass('text-color-500').addClass('request').removeClass('subbed')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === 'subbed') {\n                this.$('.status-out').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-out').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === 'subbed') {\n                this.$('.status-in').addClass('text-color-500').addClass('subbed').removeClass('request')\n                this.$('.status-in').addClass('text-decoration-color-300')\n            }\n            if (statuses.status_out_color === '') {\n                this.$('.status-out').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-out').removeClass('text-decoration-color-300')\n            }\n            if (statuses.status_in_color === '') {\n                this.$('.status-in').removeClass('text-color-500').removeClass('request').removeClass('subbed')\n                this.$('.status-in').removeClass('text-decoration-color-300')\n            }\n            this.$('.btn-request').hideIf(!(statuses.status_out_color === ''))\n            this.$('.btn-allow').hideIf(!(statuses.status_in_color === '' && !subscription_preapproved))\n            this.$('.btn-disallow-preapproved').hideIf(!(statuses.status_in_color === '' && subscription_preapproved))\n            this.$('.btn-cancel-request').hideIf(!(statuses.status_out_color === 'request'))\n            this.$('.btn-allow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-disallow-request').hideIf(!(statuses.status_in_color === 'request'))\n            this.$('.btn-cancel-subscription-out').hideIf(!(statuses.status_out_color === 'subbed'))\n            this.$('.btn-cancel-subscription-in').hideIf(!(statuses.status_in_color === 'subbed'))\n        }\n    },\n\n    requestSubscription: function () {\n        this.model.askRequest();\n    },\n\n    allowSubscription: function () {\n        this.model.acceptRequest();\n        !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && this.set('subscription_preapproved', true)\n    },\n\n    cancelSubscriptionRequest: function () {\n        this.model.declineSubscription();\n    },\n\n    handleSubscriptionRequest: function () {\n        this.model.acceptRequest();\n    },\n\n    cancelSubscriptionOut: function () {\n        this.model.declineSubscription();\n    },\n\n    cancelSubscriptionIn: function () {\n        this.model.declineSubscribe();\n        this.model.set('subscription_request_in', false);\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.GroupEditView = xabber.BasicView.extend({\n    template: templates.edit_group,\n    events: {\n        \"click .btn-save\": \"saveChanges\",\n        'click .edit-header:not(.property-header) .btn-back': 'hideEdit',\n        'click .btn-reset': 'resetPanel',\n        'click .btn-edit': 'showDescriptionProperty',\n        'click .btn-back-panel': 'hidePanel',\n        'click .membership-field .property-radio input': 'changeMembership',\n        'click .index-field .property-radio input ': 'changeIndex',\n        'click .index-property:not(.property-disabled)': 'showIndexProperty',\n        'click .membership-property:not(.property-disabled)': 'showMembershipProperty',\n        'click .btn-back.btn-property-back': 'hideProperty',\n        \"click .list-variant\": \"showPanel\",\n        \"click .revoke-invitation\": \"revokeInvitation\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .participants-edit-wrap .list-item\": \"selectParticipant\",\n        \"click .unblock-user\": \"unblockUser\",\n        \"click .set-groupchat-avatar-text\": \"clickAvatarInput\",\n        \"click .btn-add-block\": \"blockId\",\n        \"keydown .field-input\": \"keyDownName\",\n        \"keyup .field-input\": \"keyUp\",\n        \"focusout .field-input\": \"changeValue\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.parent.account;\n        this.model = this.parent.model;\n        this.model.set('edit_hidden', true)\n        this.model.on('change:group_info', this.update, this)\n    },\n\n    render: function () {\n        this.$el.html(this.template(_.extend({view: this}, constants)));\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        let dropdown_settings = {\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'right'\n        };\n        this.$('.property-dropdown').dropdown(dropdown_settings);\n        // this.name_field = new xabber.ContactNameRightWidget({\n        //     el: this.$('.name-wrap')[0],\n        //     model: this.model\n        // });\n        this.group_name_field = new xabber.GroupNameRightWidget({\n            el: this.$('.edit-group-name-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.group_description_field = new xabber.GroupDescriptionRightWidget({\n            el: this.$('.edit-group-description-wrap')[0],\n            model: this.model,\n            parent: this,\n        });\n        this.update();\n    },\n\n    update: function () {\n        let info = this.model.get('group_info') || {},\n            model, searchable, privacy;\n        if (info){\n            if (info.privacy === 'public')\n                privacy = xabber.getString(\"groupchat_public_group\");\n            if (info.privacy === 'incognito')\n                privacy = xabber.getString(\"groupchat_incognito_group\");\n            if (info.searchable === 'none') {\n                searchable = xabber.getString(\"groupchat_index_type_none\");\n                this.$('.property-wrap #none').prop(\"checked\", true);\n            }\n            if (info.searchable === 'local') {\n                searchable = xabber.getString(\"groupchat_index_type_local\");\n                this.$('.property-wrap #local').prop(\"checked\", true);\n            }\n            if (info.searchable === 'global') {\n                searchable = xabber.getString(\"groupchat_index_type_global\");\n                this.$('.property-wrap #global').prop(\"checked\", true);\n            }\n            if (info.model === 'open') {\n                model = xabber.getString(\"groupchat_membership_type_open\");\n                this.$('.property-wrap #open').prop(\"checked\", true);\n            }\n            if (info.model === 'member-only') {\n                model = xabber.getString(\"groupchat_membership_type_members_only\");\n                this.$('.property-wrap #member-only').prop(\"checked\", true);\n            }\n        }\n        this.$('.main-edit-header .block-name:not(.second-text)').text(privacy);\n        this.$('.membership-property span').text(model);\n        this.$('.index-property span').text(searchable);\n        this.$('.edit-group-name').text(info.name);\n        this.$('.edit-group-description').text(info.description);\n        this.group_name_field.updateValue(true);\n        this.group_description_field.updateValue(true);\n        this.$('.btn-save').switchClass('fade-out', true);\n        let is_owner = this.model.my_rights && this.model.my_rights.fields.find(permission => permission.var == 'owner' && permission.values);\n        if (is_owner){\n            let iq_get_rights = $iq({type: 'get', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: `${Strophe.NS.GROUP_CHAT}#default-rights`});\n            this.account.sendFast(iq_get_rights, (iq_all_rights) => {\n                let data_form = this.account.parseDataForm($(iq_all_rights).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)),\n                    restrictions_count = 0;\n                data_form.fields.forEach((field) => {\n                    if (field.type === 'fixed' || field.type === 'hidden')\n                        return;\n                    let expires = field.values ? field.values[0] : undefined;\n                    if (expires) {\n                        restrictions_count++;\n                    }\n                });\n                this.$('.btn-default-restrictions .edit-button-value').text(restrictions_count);\n            }, () => {\n                utils.callback_popup_message(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"), 3000);\n            });\n        }\n        this.updateAvatar();\n\n    },\n\n    updateAvatar: function () {\n        let image = this.model.cached_image;\n        this.$('.main-info .circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    showMembershipProperty: function () {\n        this.$('.membership-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showIndexProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(false)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    showDescriptionProperty: function () {\n        this.$('.description-edit-wrap').hideIf(false)\n        this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n    },\n\n    hideProperty: function () {\n        this.$('.index-property-edit-wrap').hideIf(true)\n        this.$('.description-edit-wrap').hideIf(true)\n        this.$('.membership-property-edit-wrap').hideIf(true)\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    revokeInvitation: function (ev) {\n        let $member_item = $(ev.target).closest('.invitations-user');\n        if (this.parent.children && this.parent.children.invitations)\n            this.parent.children.invitations.revokeInvitation(ev)\n    },\n\n    showBlockButton: function (ev) {\n        this.$('.edit-bottom-block .btn-add-block').hideIf(false);\n    },\n\n    showInviteButton: function (ev) {\n        this.$('.edit-bottom-block .btn-invite').hideIf(false);\n    },\n\n    unblockUser: function (ev) {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.unblockUser(ev)\n    },\n\n    actionSelectedParticipants: function (ev) {\n        let selected = this.$('.list-item.selected');\n        selected.each((index, item) => {\n            if ($(item).hasClass('invitations-user') && this.parent.children && this.parent.children.invitations)\n                this.parent.children.invitations.revokeInvitationByElement($(item))\n            if ($(item).hasClass('blocked-user') && this.parent.children && this.parent.children.blocked)\n                this.parent.children.blocked.unblockUserByElement($(item))\n            if ($(item).hasClass('blocked-user') || $(item).hasClass('invitations-user'))\n                $(item).removeClass('selected')\n        });\n        this.updateRemoveParticipantButton();\n    },\n\n    blockId: function () {\n        if (this.parent.children && this.parent.children.blocked)\n            this.parent.children.blocked.blockId()\n    },\n\n    deselectParticipants: function (ev) {\n        this.$('.list-item.selected').removeClass('selected')\n        this.updateRemoveParticipantButton();\n    },\n\n    selectParticipant: function (ev) {\n        if ($(ev.target).parent().hasClass('revoke-invitation') || $(ev.target).parent().hasClass('unblock-user') ||\n            $(ev.target).hasClass('revoke-invitation') || $(ev.target).hasClass('unblock-user'))\n            return;\n        let $member_item = $(ev.target).closest('.list-item'),\n            is_selected = $member_item.hasClass('selected');\n        $member_item.switchClass('selected', !is_selected)\n        this.updateRemoveParticipantButton();\n    },\n\n    updateRemoveParticipantButton: function () {\n        let has_changes = this.$('.list-item.selected').length;\n        this.$('.block-name-panel.second-text span').html(has_changes)\n        if (has_changes) {\n            this.$('.participants-edit-back').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.participants-edit-back').removeClass('btn-back-panel').addClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').addClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').addClass('fade-out');\n            this.$('.block-name-panel.second-text').removeClass('fade-out');\n            this.$('.btn-remove-selected').removeClass('fade-out');\n        }\n        else{\n            this.$('.participants-edit-back').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.participants-edit-back').addClass('btn-back-panel').removeClass('btn-reset-panel')\n            this.$('.block-name-panel:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-invite').removeClass('fade-out');\n            this.$('.edit-bottom-block .btn-add-block').removeClass('fade-out');\n            this.$('.block-name-panel.second-text').addClass('fade-out');\n            this.$('.btn-remove-selected').addClass('fade-out');\n        }\n    },\n\n    clickAvatarInput: function (ev) {\n        this.$('.circle-avatar input').click();\n    },\n\n    hidePanel: function () {\n        this.parent.getInvitations((response) => {\n            this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n        });\n        this.model.getBlockedParticipants((response) => {\n            this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n        });\n        this.$('.btn-back-panel').hideIf(true)\n        this.$('.block-name-panel').hideIf(true)\n        this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n        this.$('.edit-bottom-block .btn-invite').hideIf(true)\n        this.$('.btn-remove-selected').hideIf(true)\n        this.$('.participants-edit-wrap').hideIf(true)\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar('destroy')\n        // }\n        // this.ps_container = this.$('.edit-wrap');\n        // if (this.ps_container.length) {\n        //     this.ps_container.perfectScrollbar(\n        //         _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n        //     );\n        // }\n        // this.hideEdit();\n    },\n\n    showPanel: function () {\n        this.$('.btn-back-panel').hideIf(false)\n        this.$('.block-name-panel').hideIf(false)\n        this.$('.btn-remove-selected').hideIf(false)\n        this.$('.participants-edit-wrap').hideIf(false)\n        this.updateRemoveParticipantButton();\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.ps_container = this.$('.participants-edit-wrap');\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        }\n    },\n\n    resetPanel: function () {\n        this.updateSaveButton()\n        this.showEdit()\n    },\n\n    updateSaveButton: function () {\n        let has_changes = false;\n        this.data_form.fields.forEach((field) => {\n            if (field.type === 'hidden' || field.type === 'fixed')\n                return;\n            let value = field.values ? field.values[0] : null;\n            if ((field.var in this.original_data_form_values) && this.original_data_form_values[field.var] != value) {\n                has_changes = true;\n            }\n        });\n        this.$('.btn-save').switchClass('fade-out', !has_changes);\n        this.$('.btn-qr-code').hideIf(has_changes);\n        if (has_changes) {\n            this.$('.block-name.second-text').html(xabber.getString(\"edit_vcard\"))\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('mdi-arrow-right').addClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').removeClass('btn-back').addClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').addClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').removeClass('fade-out');\n        }\n        else{\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('mdi-arrow-right').removeClass('mdi-close')\n            this.$('.edit-header:not(.main-edit-header) .details-icon').addClass('btn-back').removeClass('btn-reset')\n            this.$('.edit-header:not(.main-edit-header) .block-name:not(.second-text)').removeClass('fade-out');\n            this.$('.edit-header:not(.main-edit-header) .block-name.second-text').addClass('fade-out');\n        }\n        let info = this.model.get('group_info') || {};\n        if (info){\n            if (info.privacy === 'public')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_public_group\"));\n            if (info.privacy === 'incognito')\n                this.$('.main-edit-header .block-name:not(.second-text)').html(xabber.getString(\"groupchat_incognito_group\"));\n        }\n    },\n\n    changeName: function (value) {\n        if (this.data_form && value){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'name')\n            if (!this.original_data_form_values.name)\n                this.original_data_form_values.name = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeDescription: function (value) {\n        if (this.data_form){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'description')\n            if (!this.original_data_form_values.description)\n                this.original_data_form_values.description = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [value]\n            this.updateSaveButton()\n        }\n    },\n\n    changeMembership: function (ev) {\n        let membership = $(ev.target).attr('id'),\n            membership_text;\n        if (this.data_form && membership){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'membership')\n            if (!this.original_data_form_values.membership)\n                this.original_data_form_values.membership = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [membership]\n            if (membership === 'open')\n                membership_text = xabber.getString(\"groupchat_membership_type_open\");\n            if (membership === 'member-only')\n                membership_text = xabber.getString(\"groupchat_membership_type_members_only\");\n            this.$('.membership-property span').text(membership_text);\n            this.updateSaveButton()\n        }\n    },\n\n    changeIndex: function (ev) {\n        let index = $(ev.target).attr('id'),\n            index_text;\n        if (this.data_form && index){\n            let data_form_index = this.data_form.fields.findIndex(x => x.var == 'index')\n            if (!this.original_data_form_values.index)\n                this.original_data_form_values.index = this.data_form.fields[data_form_index].values[0]\n            this.data_form.fields[data_form_index].values = [index]\n            if (index === 'none')\n                index_text = xabber.getString(\"groupchat_index_type_none\");\n            if (index === 'local')\n                index_text = xabber.getString(\"groupchat_index_type_local\");\n            if (index === 'global')\n                index_text = xabber.getString(\"groupchat_index_type_global\");\n            this.$('.index-property span').text(index_text);\n            this.updateSaveButton()\n        }\n    },\n\n\n    saveChanges: function() {\n        if (this.$('.btn-save').hasClass('fade-out'))\n            return;\n        this.$('.btn-save').addClass('fade-out')\n        this.group_name_field.$input.prop('disabled', true);\n        this.group_description_field.$input.prop('disabled', true);\n        this.$('.edit-save-preloader.preloader-wrap').addClass('visible').find('.preloader-wrapper').addClass('active');\n        let iq = $iq({type: 'set', to: this.model.get('full_jid') || this.model.get('jid')})\n                .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        iq = this.account.addDataFormToStanza(iq, this.data_form);\n        this.account.sendIQFast(iq, (result) => {\n            let $result  = $(result),\n                group_info = _.clone(this.model.get('group_info')),\n                attrs = {\n                    name: $result.find('field[var=\"name\"] value').text(),\n                    searchable: $result.find('field[var=\"index\"]').children('value').text(),\n                    model: $result.find('field[var=\"membership\"]').children('value').text(),\n                    description: $result.find('field[var=\"description\"] value').text(),\n                    status: $result.find('field[var=\"status\"]').children('value').text()\n                };\n            _.extend(group_info, attrs);\n            this.model.set('group_info', group_info);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n            this.resetPanel()\n        }, (error) => {\n\n            let err_text = $(error).find('error text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n            utils.dialogs.error(err_text);\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.hideProperty()\n            this.$('.edit-save-preloader.preloader-wrap').removeClass('visible').find('.preloader-wrapper').removeClass('active');\n        });\n    },\n\n    showEdit: function (ev) {\n        let iq_get_properties = $iq({to: this.model.get('full_jid') || this.model.get('jid'), type: 'get'})\n            .c('query', {xmlns: Strophe.NS.GROUP_CHAT});\n        this.parent.$('.group-edit-preloader').html(env.templates.contacts.preloader())\n        this.account.sendIQFast(iq_get_properties, (properties) => {\n            this.data_form = this.account.parseDataForm($(properties).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.original_data_form_values = {}\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.$('.group-property:not(.privacy-property)').removeClass('disabled')\n            this.group_name_field.$input.hideIf(false)\n            this.group_description_field.$input.hideIf(false)\n            this.group_name_field.$input.prop('disabled', false);\n            this.group_description_field.$input.prop('disabled', false);\n            this.$('.circle-avatar input').prop('disabled', false);\n            this.$('.set-groupchat-avatar-text').hideIf(false);\n            this.$('.group-property').removeClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(false);\n            this.$('.index-property .details-icon-right').hideIf(false);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(false);\n            this.$('.btn-edit').hideIf(false)\n            this.$('.edit-bottom-block').hideIf(false)\n            this.$('.btn-default-restrictions').hideIf(false)\n            this.$('.btn-delete-group').hideIf(false)\n            this.$('.btn-clear-history-chat').hideIf(false)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            this.parent.getInvitations((response) => {\n                this.$('.invitations-variant .counted').html($(response).find('query').find('user').length);\n            });\n            this.model.getBlockedParticipants((response) => {\n                this.$('.blocked-variant .counted').html($(response).find('query').children().length);\n            });\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        }, () => {\n            this.model.set('edit_hidden', false);\n            this.parent.scrollToTop();\n            if (this.parent.ps_container.length) {\n                this.parent.ps_container.perfectScrollbar('destroy')\n            }\n            this.ps_container = this.$('.edit-wrap');\n            if (this.ps_container.length) {\n                this.ps_container.perfectScrollbar(\n                    _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n                );\n            }\n            this.update()\n            this.group_name_field.$input.prop('disabled', true);\n            this.group_description_field.$input.prop('disabled', true);\n            if (!this.group_description_field.$input.val())\n                this.group_description_field.$input.hideIf(true)\n            this.$('.circle-avatar input').prop('disabled', true);\n            this.$('.set-groupchat-avatar-text').hideIf(true);\n            this.$('.group-property').addClass('property-disabled');\n            this.$('.membership-property .details-icon-right').hideIf(true);\n            this.$('.index-property .details-icon-right').hideIf(true);\n            this.$('.circle-avatar .set-groupchat-avatar').hideIf(true);\n            this.$('.group-property:not(.privacy-property)').addClass('disabled')\n            this.$('.btn-edit').hideIf(true)\n            this.$('.edit-bottom-block').hideIf(true)\n            this.$('.btn-default-restrictions').hideIf(true)\n            this.$('.btn-delete-group').hideIf(true)\n            this.$('.btn-clear-history-chat').hideIf(true)\n            this.$('.btn-back-panel').hideIf(true)\n            this.$('.block-name-panel').hideIf(true)\n            this.$('.edit-bottom-block .btn-add-block').hideIf(true)\n            this.$('.edit-bottom-block .btn-invite').hideIf(true)\n            this.$('.btn-remove-selected').hideIf(true)\n            this.$('.participants-edit-wrap').hideIf(true)\n            let info = this.model.get('group_info') || {};\n            this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'))\n            this.parent.$('.group-edit-preloader').html('')\n            this.group_description_field.$input.height(this.group_description_field.$input[0].scrollHeight - 8)\n            this.$('.tabs .indicator').remove();\n        });\n    },\n\n    hideEdit: function (ev) {\n        this.model.set('edit_hidden', true);\n        if (this.parent.ps_container.length) {\n            this.parent.ps_container.perfectScrollbar(\n                _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n            );\n        };\n        if (this.ps_container.length) {\n            this.ps_container.perfectScrollbar('destroy')\n        }\n        this.$('.edit-wrap').hideIf(this.model.get('edit_hidden'));\n    },\n});\n\nxabber.ContactsBase = Backbone.Collection.extend({\n    model: xabber.Contact\n});\n\nxabber.GroupContacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.group = options.group;\n        this.on(\"change\", this.onContactChanged, this);\n    },\n\n    comparator: function (contact1, contact2) {\n        if (xabber.settings.roster.sorting === 'online-first') {\n            let s1 = contact1.get('status'),\n                s2 = contact2.get('status'),\n                sw1 = constants.STATUS_WEIGHTS[s1],\n                sw2 = constants.STATUS_WEIGHTS[s2],\n                sw1_offline = sw1 >= constants.STATUS_WEIGHTS.offline,\n                sw2_offline = sw2 >= constants.STATUS_WEIGHTS.offline;\n            if (sw1_offline ^ sw2_offline) {\n                return sw1_offline ? 1 : -1;\n            }\n        }\n        let name1, name2;\n        name1 = contact1.get('name').toLowerCase();\n        name2 = contact2.get('name').toLowerCase();\n        return name1 < name2 ? -1 : (name1 > name2 ? 1 : 0);\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed;\n        if (_.has(changed, 'name') || _.has(changed, 'status_updated')) {\n            this.sort();\n            this.trigger('update_contact_item', contact);\n        }\n    }\n});\n\nxabber.Group = Backbone.Model.extend({\n    defaults: {\n        counter: {all: 0, online: 0}\n    },\n\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        attrs.name || (attrs.name = attrs.id);\n        this.set(attrs);\n        this._settings = this.account.groups_settings.get(attrs.name);\n        if (!this._settings)\n            this._settings = this.account.groups_settings.create({name: attrs.name});\n        this.settings = this._settings.attributes;\n        this.contacts = new xabber.GroupContacts(null, {group: this});\n        this.settings_view = new xabber.GroupSettingsView({model: this});\n        this.contacts.on(\"add update_contact_item\", this.updateCounter, this);\n        this.contacts.on(\"destroy\", this.onContactRemoved, this);\n        xabber._roster_settings.on(\"change\", this.onChangedRosterSettings, this);\n    },\n\n    isSpecial: function () {\n        return _.isNumber(this.get('id'));\n    },\n\n    updateCounter: function () {\n        let all = this.contacts.length,\n            online = all - this.contacts.where({status: 'offline'}).length;\n        this.set('counter', {all: all, online: online});\n    },\n\n    renameGroup: function (new_name) {\n        let name = this.get('name'),\n            attrs = _.clone(this.settings);\n        attrs.name = new_name;\n        this._settings.destroy();\n        this._settings = this.account.groups_settings.create(attrs);\n        this.settings = this._settings.attributes;\n        this.set({id: new_name, name: new_name});\n        this.trigger('rename', this, name);\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            index = groups.indexOf(new_name);\n            if (index < 0) {\n                groups.push(new_name);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    deleteGroup: function () {\n        let name = this.get('name');\n        this._settings.destroy();\n        _.each(_.clone(this.contacts.models), function (contact) {\n            let groups = _.clone(contact.get('groups')),\n                index = groups.indexOf(name);\n            if (index >= 0) {\n                groups.splice(index, 1);\n            }\n            contact.pushInRoster({groups: groups});\n        });\n    },\n\n    removeContact: function (contact) {\n        if (this.contacts.get(contact)) {\n            this.contacts.remove(contact);\n            this.onContactRemoved(contact);\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        this.updateCounter();\n        this.trigger('remove_contact', contact);\n        this.contacts.length || this.destroy();\n    },\n\n    onChangedRosterSettings: function () {\n        let changed = xabber._roster_settings.changed;\n        if (_.has(changed, 'show_offline')) {\n            this._settings.trigger('change:show_offline');\n        }\n        if (_.has(changed, 'sorting')) {\n            this.contacts.sort();\n            this._settings.trigger('change:sorting');\n        }\n    },\n\n    showSettings: function () {\n        this.settings_view.show();\n    }\n});\n\nxabber.GroupView = xabber.BasicView.extend({\n    className: 'roster-group',\n    events: {\n        \"click .group-head\": \"toggle\",\n        \"click .group-head .group-icon\": \"showGroupSettings\",\n        \"mouseover .group-head\": \"showSettingsIcon\",\n        \"mouseleave .group-head\": \"updateGroupIcon\"\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.updateName();\n        this.updateGroupIcon();\n        this.updateMembersCounter();\n        this.model.contacts.on(\"add\", this.onContactAdded, this);\n        this.model.on(\"remove_contact\", this.onContactRemoved, this);\n        this.model.contacts.on(\"update_contact_item\", this.updateContactItem, this);\n        this.model.on(\"change:name\", this.updateName, this);\n        this.model.on(\"change:counter\", this.updateMembersCounter, this);\n        this.model._settings.on(\"change:show_offline\", this.onChangedOfflineSetting, this);\n        this.model._settings.on(\"change:sorting\", this.onChangedSortingSetting, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.$('.arrow').switchClass('mdi-chevron-down', expanded);\n        this.$('.arrow').switchClass('mdi-chevron-right', !expanded);\n        this.$('.roster-contact').showIf(expanded);\n        this.parent.parent.onListChanged();\n    },\n\n    updateGroupIcon: function () {\n        let mdi_icon, show_offline = this.model.settings.show_offline;\n        if (show_offline === 'default') {\n            mdi_icon = 'settings';\n        } else if (show_offline === 'yes') {\n            mdi_icon = 'group-filled';\n        } else if (show_offline === 'no') {\n            mdi_icon = 'group-outline';\n        }\n        this.$('.group-icon').attr('data-mdi', mdi_icon).hideIf(mdi_icon === 'settings');\n    },\n\n    updateName: function () {\n        this.$('.group-name').text(this.model.get('name'));\n    },\n\n    updateMembersCounter: function () {\n        let counter = this.model.get('counter');\n        this.$('.participant-counter').text('('+counter.online+'/'+counter.all+')');\n    },\n\n    onContactAdded: function (contact) {\n        let view = this.addChild(contact.get('jid'), this.item_view, {model: contact});\n        this.updateContactItem(contact);\n    },\n\n    onContactRemoved: function (contact) {\n        this.removeChild(contact.get('jid'));\n        this.parent.parent.onListChanged();\n    },\n\n    updateContactItem: function (contact) {\n        let view = this.child(contact.get('jid'));\n        if (!view) return;\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes'),\n            is_offline = constants.STATUS_WEIGHTS[contact.get('status')] >= 6;\n\n        view.$el.switchClass('invisible', is_offline && !show_offline).detach();\n        let index = this.model.contacts.indexOf(contact);\n        if (index === 0) {\n            this.$('.group-head').after(view.$el);\n        } else {\n            this.$('.roster-contact').eq(index - 1).after(view.$el);\n        }\n        view.$el.showIf(this.data.get('expanded'));\n        this.parent.parent.onListChanged();\n        return view;\n    },\n\n    showSettingsIcon: function () {\n        this.$('.group-icon').attr('data-mdi', 'settings').removeClass('hidden');\n    },\n\n    showGroupSettings: function (ev) {\n        ev.stopPropagation();\n        this.model.showSettings();\n    },\n\n    onChangedOfflineSetting: function () {\n        this.updateGroupIcon();\n        let roster_settings = xabber.settings.roster,\n            group_settings = this.model.settings,\n            is_default_show_offline = group_settings.show_offline === 'default',\n            show_offline = group_settings.show_offline === 'yes' ||\n                (is_default_show_offline && roster_settings.show_offline === 'yes');\n        _.each(this.children, function (view) {\n            let is_offline = constants.STATUS_WEIGHTS[view.model.get('status')] >= 6;\n            view.$el.switchClass('invisible', is_offline && !show_offline);\n        });\n        this.parent.parent.onListChanged();\n    },\n\n    onChangedSortingSetting: function () {\n        _.each(this.children, function (view) { view.$el.detach(); });\n        this.model.contacts.each((c) => { this.updateContactItem(c); });\n        this.parent.parent.onListChanged();\n    }\n});\n\nxabber.GroupRightView = xabber.GroupView.extend({\n    template: templates.group_right,\n    item_view: xabber.ContactItemRightView,\n\n    __initialize: function () {\n        this.data.set('expanded', this.model.settings.expanded);\n    },\n\n    toggle: function () {\n        let expanded = !this.data.get('expanded');\n        this.data.set('expanded', expanded);\n        this.model._settings.save('expanded', expanded);\n    }\n});\n\nxabber.GroupLeftView = xabber.GroupView.extend({\n    template: templates.group_left,\n    item_view: xabber.ContactItemLeftView,\n\n    __initialize: function () {\n        this.data.set('expanded', true);\n    },\n\n    toggle: function (ev) {\n        ev.stopPropagation();\n        this.data.set('expanded', !this.data.get('expanded'));\n    }\n});\n\nxabber.GroupSettingsView = xabber.BasicView.extend({\n    className: 'modal main-modal group-settings',\n    template: templates.group_settings,\n    ps_selector: '.modal-content',\n    avatar_size: constants.AVATAR_SIZES.GROUP_SETTINGS,\n\n    events: {\n        \"change .offline input[type=radio][name=offline]\": \"setOffline\",\n        \"click .btn-apply\": \"applySettings\",\n        \"click .btn-delete\": \"deleteGroup\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this._settings = this.model._settings;\n        let name = this.model.get('name');\n        if (this.model.isSpecial()) {\n            this.$('.group-name input').attr('readonly', true);\n            this.$('.btn-delete').addClass('hidden');\n        }\n        this.model.on(\"destroy\", this.onDestroy, this);\n    },\n\n    render: function () {\n        this.$('.group-name input').val(this.model.get('name'));\n        this.$('.group-name .errors').addClass('hidden');\n        this.$('.offline input[type=radio][name=offline][value='+\n            (this.model.settings.show_offline)+']').prop('checked', true);\n        this.$el.openModal({\n            ready: function () {\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    setOffline: function (ev) {\n        this.model._settings.save('show_offline', ev.target.value);\n    },\n\n    validateName: function (name) {\n        if (!name) {\n            return xabber.getString(\"dialog_add_circle__error__text_input_name\");\n        }\n        if (this.model.collection.get(name)) {\n            return xabber.getString(\"dialog_add_circle__error__text_wrong_name\");\n        }\n    },\n\n    applySettings: function () {\n        let new_name = this.$('.group-name input').val();\n        if (new_name !== this.model.get('name')) {\n            let name_error = this.validateName(new_name);\n            if (name_error) {\n                this.$('.group-name .errors').text(name_error).removeClass('hidden');\n                return;\n            } else {\n                this.model.renameGroup(new_name);\n            }\n        }\n        this.close();\n    },\n\n    deleteGroup: function () {\n        let name = this.model.get('name');\n        utils.dialogs.ask(xabber.getString(\"circle_remove\"), xabber.getString(\"circle_remove_confirm\", [name]), null, { ok_button_text: xabber.getString(\"remove\")})\n            .done((result) => {\n                result && this.model.deleteGroup();\n            });\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onDestroy: function () {\n        this.$el.closeModal({ complete: this.remove.bind(this) });\n    }\n});\n\nxabber.Groups = Backbone.Collection.extend({\n    model: xabber.Group,\n\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"change:id\", this.sort, this);\n        this.account.on('render_settings', this.render, this);\n    },\n\n    comparator: function (a, b) {\n        if (a.isSpecial() === b.isSpecial()) {\n            return a.get('id') < b.get('id') ? -1 : 1;\n        }\n        return a.isSpecial() ? 1 : -1;\n    },\n\n    notSpecial: function () {\n        return this.filter(function (group) { return !group.isSpecial(); });\n    },\n\n    onGroupAdded: function (group) {\n        group.acc_view = new xabber.AccountGroupView({model: group});\n    },\n\n    render: function () {\n        this.on(\"add\", this.onGroupAdded, this);\n        this.models.forEach((group) => {\n            group.acc_view = new xabber.AccountGroupView({model: group});\n        });\n    }\n});\n\nxabber.Contacts = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"deactivate destroy\", this.removeAllContacts, this);\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    mergeContact: function (attrs) {\n        if (typeof attrs !== \"object\") {\n            attrs = {jid: attrs};\n        }\n        let contact = this.get(attrs.jid);\n        if (contact) {\n            if (attrs.avatar) {\n                attrs.image = attrs.avatar;\n                delete attrs.avatar;\n                contact.cached_image = Images.getCachedImage(attrs.image);\n            }\n            contact.set(attrs);\n        } else {\n            contact = this.create(attrs, {account: this.account});\n        }\n        return contact;\n    },\n\n    blockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    unblockContact: function (jid, callback, errback) {\n        let iq = $iq({type: 'set'}).c('unblock', {xmlns: Strophe.NS.BLOCKING})\n            .c('item', {jid: jid});\n        this.account.sendIQFast(iq, callback, errback);\n    },\n\n    removeAllContacts: function () {\n        _.each(_.clone(this.models), function (contact) {\n            contact.destroy();\n        });\n        this.account.trigger('remove_saved_chat');\n    },\n\n    handlePresence: function (presence, jid) {\n        let contact = this.mergeContact(jid);\n        contact.handlePresence(presence);\n    }\n});\n\nxabber.BlockList = Backbone.Model.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.list = {};\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    length: function () {\n        return Object.keys(this.list).length;\n    },\n\n    isBlocked: function (jid) {\n        return this.list.hasOwnProperty(jid);\n    },\n\n    onContactRemoved: function (jid) {\n        delete this.list[jid];\n    },\n\n    onContactAdded: function (attrs) {\n        this.list[attrs.jid] = attrs;\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onBlockingIQ.bind(this),\n            Strophe.NS.BLOCKING, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n        this.account.sendIQFast(iq, this.onBlockingIQ.bind(this));\n    },\n\n    onBlockingIQ: function (iq) {\n        let $elem = $(iq).find(`[xmlns=\"${Strophe.NS.BLOCKING}\"]`),\n            tag = $elem[0].tagName.toLowerCase(),\n            blocked = tag.startsWith('block');\n        $elem.find('item').each((idx, item) => {\n            let jid = item.getAttribute('jid'),\n                resource = Strophe.getResourceFromJid(jid),\n                domain = Strophe.getDomainFromJid(jid),\n                attrs = {jid},\n                contact = this.contacts.get(jid);\n            resource && (attrs.resource = true);\n            (domain === jid) && (attrs.domain = true);\n            if (blocked)\n                this.contacts.trigger(\"add_to_blocklist\", attrs);\n            else {\n                this.contacts.trigger(\"remove_from_blocklist\", jid);\n                contact && contact.trigger(\"remove_from_blocklist\", contact);\n            }\n            contact && contact.set('blocked', blocked);\n        });\n        return true;\n    }\n});\n\nxabber.Roster = xabber.ContactsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.roster_version = this.account.get('roster_version') || 0;\n        this.groups = this.account.groups;\n        this.contacts = this.account.contacts;\n        this.contacts.on(\"add_to_roster\", this.onContactAdded, this);\n        this.contacts.on(\"change_in_roster\", this.onContactChanged, this);\n        this.contacts.on(\"remove_from_roster\", this.onContactRemoved, this);\n    },\n\n    update: function (contact, event) {\n        let contains = contact.get('in_roster') || contact.get('known');\n        if (contains) {\n            if (!this.get(contact)) {\n                this.add(contact);\n                contact.trigger(\"add_to_roster\", contact);\n            } else if (event === 'change') {\n                contact.trigger(\"change_in_roster\", contact);\n            }\n        } else if (this.get(contact)) {\n            this.remove(contact);\n            contact.trigger(\"remove_from_roster\", contact);\n        }\n    },\n\n    onContactAdded: function (contact) {\n        if (!contact.get('in_roster'))\n            return;\n        let groups = contact.get('groups');\n        if (!groups.length) {\n            this.addContactToGroup(contact, constants.GENERAL_GROUP_ID);\n        } else {\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n        }\n    },\n\n    onContactChanged: function (contact) {\n        let changed = contact.changed,\n            known_changed = _.has(changed, 'known'),\n            in_roster_changed = _.has(changed, 'in_roster'),\n            groups_changed = _.has(changed, 'groups');\n        if (in_roster_changed || known_changed || groups_changed) {\n            let groups;\n            if (contact.get('in_roster')) {\n                groups = _.clone(contact.get('groups'));\n                if (!groups.length) {\n                    groups.push(constants.GENERAL_GROUP_ID);\n                }\n            } else if (contact.get('known')) {\n                groups = [];\n            }\n            // TODO: optimize\n            let groups_to_remove = this.groups.filter(function (group) {\n                return !_.contains(groups, group.get('id'));\n            });\n            _.each(groups_to_remove, function (group) {\n                group.removeContact(contact);\n            });\n            _.each(groups, _.bind(this.addContactToGroup, this, contact));\n            contact.trigger('update_groups');\n        }\n    },\n\n    onContactRemoved: function (contact) {\n        _.each(this.groups.filter(), function (group) {\n            group.removeContact(contact);\n        });\n    },\n\n    getGroup: function (name) {\n        let group = this.groups.get(name);\n        if (group)\n            return group;\n        let attrs = {id: name};\n        if (name === constants.GENERAL_GROUP_ID) {\n            attrs.name = xabber.settings.roster.general_group_name;\n        } else if (name === constants.NON_ROSTER_GROUP_ID) {\n            attrs.name = xabber.settings.roster.non_roster_group_name;\n        }\n        return this.groups.create(attrs, {account: this.account});\n    },\n\n    addContactToGroup: function (contact, name) {\n        let group = this.getGroup(name);\n        group.contacts.add(contact);\n    },\n\n    registerHandler: function () {\n        this.account.connection.deleteHandler(this._stanza_handler);\n        this._stanza_handler = this.account.connection.addHandler(\n            this.onRosterIQ.bind(this),\n            Strophe.NS.ROSTER, 'iq', \"set\", null, this.account.get('jid')\n        );\n    },\n\n    syncFromServer: function (options, synchronization_with_stamp, is_first_sync) {\n        options = options || {};\n        let request_attrs = {xmlns: Strophe.NS.SYNCHRONIZATION};\n        if (!options.after) {\n            if (options.stamp)\n                request_attrs.stamp = options.stamp;\n            else if (this.account.last_msg_timestamp)\n                request_attrs.stamp = this.account.last_msg_timestamp * 1000;\n        }\n        delete(options.stamp);\n        let iq = $iq({type: 'get'}).c('query', request_attrs).cnode(new Strophe.RSM(options).toXML());\n        this.account.sendFast(iq, (response) => {\n            this.onSyncIQ(response, request_attrs.stamp, synchronization_with_stamp, is_first_sync, options.last_version_sync);\n        });\n    },\n\n    syncCachedConversations: function (conv_list, request_with_stamp, is_first_sync) {\n        $(conv_list).each((idx, item) => {\n            this.syncConversation(null, null, item.conversation, is_first_sync);\n        });\n    },\n\n    syncConversations: function (iq, request_with_stamp, is_first_sync) {\n        $(iq).find('conversation').each((idx, item) => {\n            this.syncConversation(iq, request_with_stamp, item, is_first_sync);\n        });\n    },\n\n    syncConversation: function (iq, request_with_stamp, item, is_first_sync) {\n        if (!$(item).length){\n            return;\n        }\n        if (!iq)\n            item = $($.parseXML(item)).find('conversation')[0];\n        let $item = $(item),\n            jid = $item.attr('jid'), saved = false;\n        if (jid === this.account.get('jid'))\n            saved = true;\n        if ($item.attr('type') === Strophe.NS.SYNCHRONIZATION_OLD_OMEMO)\n            return true;\n        let $sync_metadata = $item.children('metadata[node=\"' + Strophe.NS.SYNCHRONIZATION + '\"]'),\n            type = $item.attr('type'),\n            presence = $item.children('presence'),\n            $group_metadata = $item.children('metadata[node=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_incognito =  type === Strophe.NS.GROUP_CHAT && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('privacy').text() === 'incognito',\n            is_private = is_incognito && $group_metadata.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').children('parent').text(),\n            is_group_chat =  type === Strophe.NS.GROUP_CHAT || is_private || is_incognito,\n            encrypted = type === Strophe.NS.SYNCHRONIZATION_OMEMO,\n            contact = !saved && this.contacts.mergeContact({jid: jid, group_chat: is_group_chat, private_chat: is_private, incognito_chat: is_incognito}),\n            chat = saved ? this.account.chats.getSavedChat() : this.account.chats.getChat(contact, encrypted && 'encrypted', true),\n            message = $sync_metadata.children('last-message').children('message'),\n            current_call = $item.children('metadata[node=\"' + Strophe.NS.JINGLE_MSG + '\"]').children('call'),\n            $unread_messages = $sync_metadata.children('unread'),\n            chat_timestamp = Math.trunc(Number($item.attr('stamp'))/1000),\n            last_read_msg = $unread_messages.attr('after'),\n            last_delivered_msg = $sync_metadata.children('delivered').attr('id'),\n            last_displayed_msg = $sync_metadata.children('displayed').attr('id'),\n            unread_msgs_count = Number($unread_messages.attr('count')) || 0,\n            is_invite =  message.find('invite').length,\n            msg_retraction_version = $item.children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            msg, options = {synced_msg: true,};\n        (iq && !($item.attr('status') === 'deleted')) && this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: $(item).attr('jid') +  '/' + $(item).attr('type'),\n            conversation: item.outerHTML,\n        });\n        if (!chat.item_view.content && (is_invite || encrypted && this.account.omemo)) {\n            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n        if ($item.attr('pinned') || $item.attr('pinned') === '0'){\n            chat.set('pinned', $item.attr('pinned'));\n        }\n        if (encrypted && this.account.omemo) {\n            chat.set('timestamp', chat_timestamp);\n            chat.set('opened', true);\n            if (iq && $(iq).attr('type') != 'set')\n                chat.item_view.updateEncryptedChat();\n        }\n        if (!saved) {\n            if ($item.attr('mute') || $item.attr('mute') === '0') {\n                if ($item.attr('mute') < (Date.now() / 1000))\n                    chat.set('muted', false);\n                else\n                    chat.set('muted', $item.attr('mute'));\n                this.account.chat_settings.updateMutedList(contact.get('jid'), $item.attr('mute'));\n                if (contact.details_view_right)\n                    contact.details_view_right.updateNotifications();\n            }\n            else{\n                chat.set('muted', false);\n            }\n        }\n        if ($item.attr('status') === 'archived')\n            chat.set('archived', true);\n        else if ($item.attr('status') === 'active' && !saved)\n            chat.set('archived', false);\n        if ($item.attr('status') === 'deleted') {\n            contact && contact.details_view && contact.details_view.isVisible() && xabber.body.setScreen(xabber.body.screen.get('name'), {right: undefined});\n            chat.get('display') && xabber.body.setScreen(xabber.body.screen.get('name'), {right_contact: '', right: undefined});\n            chat.set('opened', false);\n            chat.set('const_unread', 0);\n            this.account.cached_sync_conversations.removeFromCachedConversations($(item).attr('jid') +  '/' + $(item).attr('type'));\n            this.account.chat_settings.updateGroupChatsList(contact.get('jid'), false);\n            xabber.toolbar_view.recountAllMessageCounter();\n            xabber.chats_view.clearSearch();\n            contact && contact.set('sync_deleted', true);\n            if (is_group_chat) {\n                contact && contact.set('in_roster', false);\n                contact && contact.set('known', false);\n                contact && contact.set('removed', true);\n                this.account.cached_roster.removeFromRoster(jid);\n            }\n        }\n        else\n            contact && contact.set('sync_deleted', false);\n        if ($group_metadata.length) {\n            contact.participants && contact.participants.createFromStanza($group_metadata.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`));\n        }\n        if (current_call.length) {\n            let $jingle_message = current_call.children('message'),\n                full_jid = $jingle_message.attr('from'),\n                session_id = $jingle_message.children('propose').attr('id');\n            chat.getCallingAvailability(full_jid, session_id, () => {\n                if (xabber.current_voip_call) {\n                    let reason = Strophe.getBareJidFromJid(full_jid) === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                    chat.sendReject({session_id: session_id, reason: reason});\n                    chat.messages.createSystemMessage({\n                        from_jid: this.account.get('jid'),\n                        message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                    });\n                } else {\n                    chat.initIncomingCall(full_jid, session_id);\n                }\n            });\n        }\n        chat.set('last_delivered_id', last_delivered_msg);\n        chat.set('last_displayed_id', last_displayed_msg);\n        chat.set('last_read_msg', last_read_msg);\n        chat.set('sync_type', type);\n        if (!message.length) {\n            chat.set('timestamp', chat_timestamp);\n            if (!(Number(last_delivered_msg) || Number(last_displayed_msg) || Number(last_read_msg))\n                && !chat.item_view.content && !chat.get('group_chat')){\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n            }\n            chat.item_view.updateEmptyChat();\n        }\n        if (is_group_chat) {\n            if (request_with_stamp && !is_first_sync) {\n                if (chat.retraction_version < msg_retraction_version)\n                    chat.trigger(\"get_retractions_list\");\n            } else\n                chat.retraction_version = msg_retraction_version;\n        }\n        if (request_with_stamp && chat.item_view && chat.item_view.content) {\n            chat.trigger('get_missed_history', request_with_stamp/1000);\n        }\n        unread_msgs_count && (options.is_unread = true);\n        options.delay = message.children('time');\n        if (encrypted && this.account.omemo)\n            unread_msgs_count && unread_msgs_count--;\n        message.length && (msg = this.account.chats.receiveChatMessage(message, options));\n        if (!(encrypted && !this.account.omemo)){\n            chat.messages_unread.reset();\n            chat.set('unread', 0);\n            chat.set('const_unread', unread_msgs_count);\n        }\n        if (msg) {\n            if (!msg.get('is_unread') && $unread_messages.attr('count') > 0 && !msg.isSenderMe() && ($unread_messages.attr('after') < msg.get('stanza_id') || $unread_messages.attr('after') < msg.get('contact_stanza_id')))\n                msg.set('is_unread', true);\n            if(!(is_invite || encrypted && this.account.omemo)) {\n                if (msg.isSenderMe() && msg.get('stanza_id') == last_displayed_msg)\n                    msg.set('state', constants.MSG_DISPLAYED);\n                else if (msg.isSenderMe() && msg.get('stanza_id') == last_delivered_msg)\n                    msg.set('state', constants.MSG_DELIVERED);\n                this.account.messages.add(msg);\n                if ((chat.last_message && (msg.get('timestamp') > chat.last_message.get('timestamp'))) || !chat.last_message){\n                    chat.last_message = msg;\n                    chat.item_view.updateLastMessage(msg);\n                }\n            }\n            chat.set('first_archive_id', msg.get('stanza_id'));\n        }\n        if (presence.length)\n            contact && contact.handlePresence(presence[0]);\n        else {\n            contact && contact.set('subscription_request_in', false)\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onSyncIQ: function (iq, request_with_stamp, synchronization_with_stamp, is_first_sync, is_last_sync) {\n        let sync_timestamp = Number($(iq).children(`query[xmlns=\"${Strophe.NS.SYNCHRONIZATION}\"]`).attr('stamp')),\n            sync_rsm_after = $(iq).find(`query set[xmlns=\"${Strophe.NS.RSM}\"]`).children('last').text();\n        this.account.last_msg_timestamp = Math.round(sync_timestamp/1000);\n        let last_chat_msg_id = $(iq).find('set last'),\n            encrypted_retract_version = $(iq).find('query conversation[type=\"encrypted\"]').first().children('metadata[node=\"' + Strophe.NS.REWRITE + '\"]').children('retract').attr('version'),\n            retract_version = $(iq).find('query conversation[type=\"chat\"]').first().children(`metadata[node=\"${Strophe.NS.REWRITE}\"]`).children('retract').attr('version');\n        if (!request_with_stamp)\n            last_chat_msg_id.length ? (this.last_chat_msg_id = last_chat_msg_id.text()) : (this.conversations_loaded = true);\n        if (!_.isUndefined(encrypted_retract_version) && this.account.omemo && this.account.omemo.getRetractVersion() < encrypted_retract_version)\n            this.account.getAllMessageRetractions(true);\n        if (request_with_stamp) {\n            if (this.account.retraction_version < retract_version)\n                this.account.getAllMessageRetractions();\n        } else {\n            this.account.retraction_version = retract_version;\n        }\n        this.account.set('last_sync', sync_timestamp);\n        this.account.cached_sync_conversations.putInCachedConversations({\n            account_conversation_type: 'last_sync_timestamp',\n            timestamp: sync_timestamp,\n        });\n        this.account.settings.update_settings({last_sync_timestamp: sync_timestamp});\n        let dfd = new $.Deferred();\n        dfd.done((is_cached) => {\n            xabber.chats_view.hideChatsFeedback();\n            if (!request_with_stamp)\n                this.account.chats.getSavedChat();\n            if (is_first_sync)\n                this.account.set('first_sync', sync_timestamp);\n            if (!$(iq).find('conversation').length || $(iq).find('conversation').length < constants.SYNCHRONIZATION_RSM_MAX ){\n                if (is_first_sync) {\n                    this.getRoster();\n                }\n            }\n            else if ($(iq).find('conversation').length) {\n                if (!synchronization_with_stamp) {\n                    this.syncFromServer({max: constants.SYNCHRONIZATION_RSM_MAX, after: sync_rsm_after});\n                }\n                else {\n                    this.account.get('last_sync') && this.syncFromServer({stamp: this.account.get('last_sync'), max: constants.SYNCHRONIZATION_RSM_MAX}, true);\n                }\n            }\n        });\n        if (is_first_sync)\n            this.account.cached_sync_conversations.getAllFromCachedConversations((res) => {\n                let synced_conversations = $(iq).find('conversation').map(function () {\n                    return $(this).attr('jid') +  '/' + $(this).attr('type');\n                }).toArray();\n                res = res.filter(item => !synced_conversations.includes(item.account_conversation_type));\n                this.syncCachedConversations(res, request_with_stamp, is_first_sync);\n                this.syncConversations(iq, request_with_stamp, is_first_sync);\n                dfd.resolve(true);\n            });\n        else{\n            this.syncConversations(iq, request_with_stamp);\n            dfd.resolve();\n        }\n    },\n\n    getRoster: function () {\n        let request_ver = this.roster_version;\n        this.account.cached_roster.getAllFromRoster((roster_items) => {\n            // $(roster_items).each((idx, roster_item) => {\n            //     this.contacts.mergeContact(roster_item);\n            // });\n            if (!roster_items.length && request_ver != 0) {\n                this.roster_version = 0;\n            }\n            this.getFromServer();\n        });\n    },\n\n    getFromServer: function () {\n        let iq = $iq({type: 'get'}).c('query', {xmlns: Strophe.NS.ROSTER, ver: this.roster_version});\n        this.account.sendIQFast(iq, (iq) => {\n            this.onRosterIQ(iq);\n            this.account.get('first_sync') && this.syncFromServer({stamp: this.account.get('first_sync'), max: constants.SYNCHRONIZATION_RSM_MAX, last_version_sync: true}, true);\n            this.account.dfd_presence.resolve();\n        });\n    },\n\n    onRosterIQ: function (iq) {\n        let new_roster_version = $(iq).children('query').attr('ver');\n        if (iq.getAttribute('type') === 'set') {\n            this.account.onSetIQResult(iq);\n        }\n        else {\n            new_roster_version && (this.roster_version != new_roster_version) && this.account.cached_roster.clearDataBase();\n            if (iq.getAttribute('type') === 'result') {\n                new_roster_version && (this.roster_version = new_roster_version);\n                this.account.save('roster_version', this.roster_version);\n            }\n        }\n        $(iq).children('query').find('item').each((idx, item) => {\n            this.onRosterItem(item);\n        });\n        return true;\n    },\n\n    onRosterItem: function (item) {\n        let jid = item.getAttribute('jid');\n        if (jid === this.account.get('jid'))\n            return;\n        let contact = this.contacts.mergeContact(jid),\n            subscription = item.getAttribute(\"subscription\"),\n            subscription_preapproved = item.getAttribute(\"approved\"),\n            ask = item.getAttribute(\"ask\");\n        if (contact.get('invitation') && (subscription === 'both' || subscription === 'to')) {\n            contact.set('invitation', false);\n            contact.trigger('remove_invite');\n        }\n        if (subscription === 'remove') {\n            contact.set({\n                in_roster: false,\n                known: false,\n                name: contact.get('jid'),\n                subscription: undefined,\n                subscription_request_out: false\n            });\n            contact.set('subscription_preapproved', false)\n            this.account.cached_roster.removeFromRoster(jid);\n            return;\n        }\n        let groups = [];\n        $(item).find('group').each(function () {\n            let group = $(this).text();\n            groups.indexOf(group) < 0 && groups.push(group);\n        });\n        let attrs = {\n            subscription: subscription || 'none',\n            in_roster: true,\n            roster_name: item.getAttribute(\"name\"),\n            groups: groups\n        };\n        if (subscription === 'both') {\n            attrs.subscription_request_out = false;\n            attrs.subscription_request_in = false;\n        }\n        if (subscription === 'from')\n            attrs.subscription_request_in = false;\n        if (subscription === 'to')\n            attrs.subscription_request_out = false;\n        if (ask === 'subscribe')\n            attrs.subscription_request_out = true;\n        else\n            attrs.subscription_request_out = false;\n        attrs.roster_name && (attrs.name = attrs.roster_name);\n        this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && (attrs.subscription_preapproved = subscription_preapproved ? true : subscription_preapproved);\n        contact.set(attrs);\n        contact.updateCachedInfo();\n    }\n});\n\nxabber.AccountRosterView = xabber.BasicView.extend({\n    className: 'account-roster-wrap',\n\n    events: {\n        \"click .roster-account-info-wrap .status-button\": \"openChangeStatus\",\n        \"click .roster-account-info\": \"toggle\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.groups = this.account.groups;\n        this.roster = this.account.roster;\n        this.contacts = this.account.contacts;\n        this.$el.attr('data-jid', this.account.get('jid'));\n        this.$el.appendTo(this.parent.$('.contact-list'));\n        this.$info = this.$('.roster-account-info-wrap');\n        this.updateName();\n        this.updateStatus();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.account.on(\"change:name\", this.updateName, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on(\"change:status_updated\", this.updateStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.groups.on(\"add\", this.onGroupAdded, this);\n        this.groups.on(\"rename\", this.onGroupRenamed, this);\n        this.groups.on(\"destroy\", this.onGroupRemoved, this);\n        this.data.on(\"change:expanded\", this.updateExpanded, this);\n        this.data.set('expanded', true);\n    },\n\n    updateName: function () {\n        this.$info.find('.name').text(this.account.get('name'));\n    },\n\n    updateStatus: function () {\n        this.$info.find('.status').attr('data-status', this.account.get('status'));\n        this.$info.find('.status-message').text(this.account.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.account.cached_image;\n        this.$info.find('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateColorScheme: function () {\n        this.$el.attr('data-color', this.account.settings.get('color'));\n    },\n\n    updateExpanded: function () {\n        let expanded = this.data.get('expanded');\n        this.$el.switchClass('shrank', !expanded);\n        this.parent.updateScrollBar();\n    },\n\n    updateGroupPosition: function (view) {\n        view.$el.detach();\n        let index = this.groups.indexOf(view.model);\n        if (index === 0) {\n            this.$info.after(view.$el);\n        } else {\n            this.$('.roster-group').eq(index - 1).after(view.$el);\n        }\n        this.parent.updateScrollBar();\n    },\n\n    onGroupAdded: function (group) {\n        let view = this.addChild(group.get('id'), this.group_view, {model: group});\n        this.updateGroupPosition(view);\n    },\n\n    onGroupRenamed: function (group, old_name) {\n        let view = this.child(old_name);\n        delete this.children[old_name];\n        this.children[group.get('name')] = view;\n        view && this.updateGroupPosition(view);\n    },\n\n    onGroupRemoved: function (group) {\n        this.removeChild(group.get('id'));\n    },\n\n    toggle: function (ev) {\n        this.data.set('expanded', !this.data.get('expanded'));\n    },\n\n    openChangeStatus: function (ev) {\n        if (!xabber.change_status_view)\n            xabber.change_status_view = new xabber.ChangeStatusView();\n        xabber.change_status_view.open(this.account);\n    }\n});\n\nxabber.AccountRosterRightView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_right,\n    group_view: xabber.GroupRightView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_RIGHT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.contacts.on(\"add_to_roster change_in_roster remove_from_roster\",\n            this.updateCounter, this);\n        this.contacts.on(\"add_to_roster remove_from_roster\",\n            this.updateGlobalCounter, this);\n    },\n\n    updateCounter: function () {\n        let all = this.roster.length,\n            online = all - this.roster.where({status: 'offline'}).length;\n        this.$info.find('.counter').text(online + '/' + all);\n    },\n\n    updateGlobalCounter: function () {\n        this.parent.updateCounter();\n    }\n});\n\nxabber.AccountRosterLeftView = xabber.AccountRosterView.extend({\n    template: templates.account_roster_left,\n    group_view: xabber.GroupLeftView,\n    avatar_size: constants.AVATAR_SIZES.ROSTER_LEFT_ACCOUNT_ITEM,\n\n    __initialize: function () {\n        this.$info.find('.jid').text(this.account.get('jid'));\n    },\n\n    search: function (query) {\n        this.$el.removeClass('shrank');\n        this.$('.group-head').addClass('hidden');\n        let count = 0, hashes = {};\n        this.$('.roster-contact').each((idx, item) => {\n            let $item = $(item),\n                jid = $item.data('jid'),\n                contact = this.roster.get(jid);\n            if (!contact) return;\n            if (hashes[contact.hash_id]) {\n                $item.addClass('hidden');\n                return;\n            }\n            hashes[contact.hash_id] = true;\n            let name = contact.get('name').toLowerCase(),\n                hide = name.indexOf(query) < 0 && jid.indexOf(query) < 0;\n            $item.hideIf(hide);\n            hide || count++;\n        });\n        this.$('.roster-account-info-wrap').showIf(count);\n    },\n\n    searchAll: function () {\n        this.$el.switchClass('shrank', !this.data.get('expanded'));\n        this.$('.roster-account-info-wrap').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n        this.$('.list-item').removeClass('hidden');\n    }\n});\n\nxabber.BlockListView = xabber.BasicView.extend({\n    avatar_size: constants.AVATAR_SIZES.CONTACT_BLOCKED_ITEM,\n    events: {\n        \"click .blocked-item\": \"onTabClick\",\n        \"click .btn-reset-panel\": \"deselectParticipants\",\n        \"click .btn-remove-selected\": \"actionSelectedParticipants\",\n        \"click .blocked-contact input\": \"selectUnblock\",\n        \"click .btn-unblock-selected\": \"unblockSelected\"\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        for (let jid in this.account.blocklist.list) {\n            this.onContactAdded(this.account.blocklist.list[jid], false);\n        };\n        this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n        this.hideTabs();\n        this.account.contacts.on(\"add_to_blocklist\", this.onContactAdded, this);\n        this.account.contacts.on(\"remove_from_blocklist\", this.onContactRemoved, this);\n    },\n\n    render: function (options) {\n        this.deselectBlocked();\n        this.updateIndicator();\n        xabber.once(\"update_css\", this.updateIndicator, this);\n    },\n\n    updateIndicator: function () {\n        this.$('.tabs .indicator').remove();\n        this.$('.tabs').tabs();\n        this.$('.indicator').addClass('ground-color-500');\n    },\n\n    selectUnblock: function (ev) {\n        this.updateUnblockButton();\n    },\n\n    deselectBlocked: function (ev) {\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    updateUnblockButton: function () {\n        let has_changes = this.$('.blocked-contact input:checked').length;\n        this.parent.$('.btn-unblock-selected').hideIf(!has_changes)\n        this.parent.$('.btn-deselect-blocked').hideIf(!has_changes)\n        this.parent.$('.btn-block').hideIf(has_changes)\n    },\n\n    unblockSelected: function (ev) {\n        let selected = this.$('.blocked-contact input:checked').closest('.blocked-contact');\n        selected.each((index, item) => {\n            this.unblockContactByJid($(item).attr('data-jid'))\n        });\n    },\n\n    unblockContactByJid: function (jid) {\n        let contact = this.account.contacts.get(jid);\n        if (contact)\n            contact.unblock();\n        else {\n            this.account.contacts.unblockContact(jid);\n        }\n    },\n\n    onTabClick: function (ev) {\n        let tab = $(ev.target).closest('.blocked-item'),\n            tab_name = $(ev.target).closest('.blocked-item').attr('data-tab-name');\n        this.$('.blocked-item a').removeClass('active');\n        tab.find('a').addClass('active');\n        this.$('.blocked-items-container').addClass('hidden');\n        this.$('.' + tab_name).removeClass('hidden');\n        this.$('.blocked-contact input').prop('checked', false)\n        this.updateUnblockButton();\n    },\n\n    hideTabs: function () {\n        this.$('.tabs').hideIf(this.$('.blocked-item:not(.hidden)').length === 1)\n    },\n\n    hideEmptyContainers: function () {\n        let tabs = this.$('.blocked-list:empty');\n        tabs.each((idx, item) => {\n            let tab_name = $(item).closest('.blocked-items-container').addClass('hidden').attr('data-tab-name');\n            this.$('.' + tab_name).addClass('hidden').removeClass('tab');\n        });\n        if (this.$('.blocked-item.hidden .active').length){\n            this.$('.blocked-item:not(.hidden)').first().click().find('a').addClass('active');\n\n        }\n        this.hideTabs();\n        this.updateUnblockButton();\n        this.updateIndicator();\n    },\n\n    onContactAdded: function (attrs) {\n        let tmp = templates.contact_blocked_item({jid: attrs.jid});\n        if (attrs.resource) {\n            this.$('.invitations-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-invitations-wrap').find('.blocked-invitations').append(tmp);\n        }\n        else if (attrs.domain) {\n            this.$('.domains-item').removeClass('hidden').addClass('tab');\n            let $domain_wrap = this.$('.blocked-domains-wrap'),\n                $desc = $domain_wrap.find('.blocked-item-description');\n            $domain_wrap.find('.blocked-domains').append(tmp);\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        else {\n            this.$('.contacts-item').removeClass('hidden').addClass('tab');\n            this.$('.blocked-contacts-wrap').find('.blocked-contacts').append(tmp);\n            let $desc = this.$('.blocked-contacts-wrap .blocked-item-description');\n            $desc.text($desc.text() + ($desc.text() ? ', ' : \"\") + attrs.jid);\n        }\n        this.$('.placeholder').addClass('hidden');\n        this.hideTabs();\n        this.updateIndicator();\n        if (this.$('.blocked-items-container.hidden').length === 3)\n            this.$('.blocked-list:not(:empty)').closest('.blocked-items-container').removeClass('hidden');\n        this.isVisible() && this.parent.updateScrollBar();\n    },\n\n    onContactRemoved: function (jid) {\n        let $elem = this.$(`.blocked-contact[data-jid=\"${jid}\"]`);\n        let blocked_list = $elem.closest('.blocked-list'),\n            reg = new RegExp(('\\\\,\\\\s' + jid + '|' + jid + '\\\\,\\\\s' + '|' + jid)),\n            blocked_contacts_desc = $elem.closest('.blocked-contacts-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description'),\n            blocked_domains_desc = $elem.closest('.blocked-domains-wrap').showIf(blocked_list.children().length > 1).find('.blocked-item-description');\n        $elem.closest('.blocked-invitations-wrap').showIf(blocked_list.children().length > 1);\n        blocked_contacts_desc.text(blocked_contacts_desc.text().replace(reg, \"\"));\n        blocked_domains_desc.text(blocked_domains_desc.text().replace(reg, \"\"));\n        $elem.detach();\n        this.$('.placeholder').hideIf(this.account.blocklist.length());\n        this.parent.updateScrollBar();\n        this.hideEmptyContainers();\n    },\n});\n\nxabber.RosterView = xabber.SearchPanelView.extend({\n    ps_selector: '.contact-list-wrap',\n\n    _initialize: function () {\n        this._settings = xabber._roster_settings;\n        this.model.on(\"activate\", this.updateOneRosterView, this);\n        this.model.on(\"update_order\", this.updateRosterViews, this);\n        this.model.on(\"deactivate destroy\", this.removeRosterView, this);\n        this.on(\"before_hide\", this.saveScrollBarOffset, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    updateOneRosterView: function (account) {\n        let jid = account.get('jid'),\n            view = this.child(jid);\n        if (view) {\n            view.$el.detach();\n        } else if (account.isConnected()) {\n            view = this.addChild(jid, this.account_roster_view, {account: account});\n        } else {\n            return;\n        }\n        let index = this.model.connected.indexOf(account);\n        if (index === 0) {\n            this.$('.contact-list').prepend(view.$el);\n        } else {\n            this.$('.contact-list').children().eq(index - 1).after(view.$el);\n        }\n        this.updateScrollBar();\n    },\n\n    updateRosterViews: function () {\n        _.each(this.children, function (view) { view.detach(); });\n        this.model.each((account) => {\n            let jid = account.get('jid'), view = this.child(jid);\n            view && this.$('.contact-list').append(view.$el);\n        });\n        this.updateScrollBar();\n    },\n\n    removeRosterView: function (account) {\n        this.removeChild(account.get('jid'));\n        this.updateScrollBar();\n    }\n});\n\nxabber.RosterRightView = xabber.RosterView.extend({\n    className: 'roster-right-container container',\n    template: templates.roster_right,\n    ps_settings: {theme: 'roster-right'},\n    account_roster_view: xabber.AccountRosterRightView,\n\n    events: {\n        \"click .collapsed-wrap\": \"expand\",\n        \"mouseleave .expanded-wrap\": \"collaps\"\n    },\n\n    __initialize: function () {\n        this.updateCounter();\n        this.updateTheme();\n        this.updateBlur();\n        this.updateTransparency();\n        this.model.on(\"activate deactivate destroy\", this.updateCounter, this);\n        this.data.on(\"change\", this.updateLayout, this);\n        let pinned = this._settings.get('pinned');\n        this.data.set({expanded: false, pinned: false});\n    },\n\n    updateTheme: function (theme) {\n        theme = theme || xabber.settings.side_panel.theme;\n        this.$el.attr('data-theme', theme);\n        this.updateTransparency();\n    },\n\n    updateTransparency: function (transparency) {\n        transparency = transparency || xabber.settings.side_panel.transparency;\n        if (xabber.settings.side_panel.theme == 'dark')\n            this.$el.css('background-color', `rgba(0, 0, 0, ${1 - transparency/100})`);\n        else\n            this.$el.css('background-color', `rgba(255, 255, 255, ${1 - transparency/100})`);\n    },\n\n    updateBlur: function (blur) {\n        blur = _.isUndefined(blur) ? xabber.settings.side_panel.blur : blur;\n        this.$el.switchClass('with-blur', blur);\n    },\n\n    expand: function () {\n        this.data.set('expanded', true);\n    },\n\n    collaps: function () {\n        if (!this.data.get('pinned'))\n            this.data.set('expanded', false);\n    },\n\n    updateLayout: function () {\n        let changed = this.data.changed;\n        if (_.has(changed, 'expanded') || _.has(changed, 'pinned')) {\n            xabber.trigger('update_layout', {roster_state_changed: true});\n        }\n    },\n\n    updateCounter: function () {\n        this.$('.all-contacts-counter').text(\n            _.reduce(this.children, function (counter, view) {\n                return counter + view.roster.length;\n            }, 0)\n        );\n    },\n\n    onListChanged: function () {\n        this.updateScrollBar();\n    }\n});\n\nxabber.RosterLeftView = xabber.RosterView.extend({\n    className: 'roster-left-container container',\n    template: templates.roster_left,\n    ps_settings: {theme: 'item-list'},\n    main_container: '.contact-list',\n    account_roster_view: xabber.AccountRosterLeftView,\n\n    __initialize: function () {\n        this.model.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n    },\n\n    updateLeftIndicator: function () {\n        this.$el.attr('data-indicator', this.model.connected.length > 1);\n    },\n\n    getContactForItem: function (item) {\n        let $item = $(item),\n            account_jid = $item.parent().parent().data('jid'),\n            jid = $item.data('jid'),\n            roster_view = this.child(account_jid);\n        return roster_view && roster_view.roster.get(jid);\n    },\n\n    render: function (options) {\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    searchAll: function () {\n        _.each(this.children, function (view) {\n            view.searchAll();\n        });\n    },\n\n    selectItem: function (id, arrow) {\n        if (!id) {\n            (arrow === 'up') && (this.ps_container[0].scrollTop = 0);\n            return;\n        }\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            this.ps_container[0].scrollTop = 0;\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        if ($selection.length && arrow === 'down' && ($selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop >= this.ps_container[0].clientHeight + this.ps_container[0].scrollTop\n        || $selection[0].clientHeight + $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop < this.ps_container[0].scrollTop))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        if ($selection.length && arrow === 'up' && ($selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop <= this.ps_container[0].scrollTop\n        || $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop > this.ps_container[0].scrollTop + this.ps_container[0].clientHeight))\n            this.ps_container[0].scrollTop = $selection[0].offsetTop + $selection.parent()[0].offsetTop + $selection.closest('.account-roster-wrap')[0].offsetTop;\n        $selection.addClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            let contact = this.getContactForItem(selection);\n            contact && contact.showDetails();\n        }\n    },\n\n    onListChanged: function () {\n        this.updateSearch();\n    }\n});\n\nxabber.RosterSettingsView = xabber.BasicView.extend({\n    className: 'roster-settings-wrap',\n    template: templates.roster_settings,\n\n    events: {\n        \"change .offline-contacts input\": \"setOfflineSetting\",\n        \"change .sorting-contacts input\": \"setSortingSetting\"\n    },\n\n    _initialize: function () {\n        this.$el.appendTo(this.parent.$('.settings-subblock-wrap.contact-list'));\n    },\n\n    render: function () {\n        this.$('.offline-contacts input[type=radio][name=offline-contacts][value='+\n            (this.model.get('show_offline'))+']').prop('checked', true);\n        this.$('.sorting-contacts input[type=radio][name=sorting-contacts][value='+\n            (this.model.get('sorting'))+']').prop('checked', true);\n    },\n\n    setOfflineSetting: function () {\n        this.model.save('show_offline',\n            this.$('.offline-contacts input[type=radio][name=offline-contacts]:checked').val());\n    },\n\n    setSortingSetting: function () {\n        this.model.save('sorting',\n            this.$('.sorting-contacts input[type=radio][name=sorting-contacts]:checked').val());\n    }\n});\n\nxabber.AccountGroupView = xabber.BasicView.extend({\n    className: 'group',\n    template: function () {\n        this.$el.append('<div class=\"group-name one-line\"/><span class=\"group-members-count\"/>');\n    },\n\n    events: {\n        \"click\": \"showGroupSettings\"\n    },\n\n    _initialize: function (options) {\n        this.$('.group-name').text(this.model.get('name'));\n        this.$('.group-members-count').text(this.model.get('counter').all);\n        let index = this.model.collection.indexOf(this.model),\n            $parent_el = this.model.account.settings_right.$('.groups');\n        if (index === 0) {\n            $parent_el.prepend(this.$el);\n        } else {\n            $parent_el.children().eq(index - 1).after(this.$el);\n        }\n        this.model.on(\"destroy\", this.remove, this);\n    },\n\n    showGroupSettings: function () {\n        this.model.showSettings();\n    }\n});\n\nxabber.ContactPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap contact-placeholder-wrap noselect',\n    template: templates.contact_placeholder\n});\n\nxabber.AddContactView = xabber.BasicView.extend({\n    className: 'modal main-modal add-contact-modal',\n    template: templates.add_contact,\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .dropdown-content#select-account-for-add-contact\": \"selectAccount\",\n        \"click .existing-group-field label\": \"editGroup\",\n        \"change .new-group-name input\": \"checkNewGroup\",\n        \"keyup .new-group-name input\": \"checkNewGroup\",\n        \"keyup .name-field #new_contact_username\": \"checkJid\",\n        \"focusout .name-field #new_contact_username\": \"focusoutInputField\",\n        \"focusout .new-group-name #new-group-name\": \"addNewGroup\",\n        \"click .btn-add\": \"stepForward\",\n        \"click .btn-cancel\": \"close\"\n    },\n\n    _initialize: function () {\n        this.group_data = new Backbone.Model;\n        this.group_data.on(\"change\", this.updateGroups, this);\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        let accounts = options.account ? [options.account] : xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('input[name=\"username\"]').val(jid).attr('readonly', !!jid)\n            .removeClass('invalid');\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-add-contact').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-add-contact').append(\n                this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('span.errors').text('');\n        this.$el.openModal({\n            ready: () => {\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                });\n                this.$('input[name=\"username\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n        return this;\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.renderGroupsForAccount(account);\n    },\n\n    stepForward: function () {\n        let jid = this.$('input[name=username]').val().trim();\n        this.$el.append($(templates.preloader()))\n        this.$('.btn-add').addClass('hidden-disabled')\n        this.$('input[name=contact_name]').val('');\n        if (this.account.connection && this.account.connection.connected) {\n            this.account.getConnectionForIQ().vcard.get(jid, (vcard) => {\n                    let username = vcard.username ? vcard.username : vcard.fullname ? vcard.fullname : ''\n                    username && this.$('input[name=contact_name]').val(username);\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.addContact()\n                },\n                (err) => {\n                    this.$('.preloader-wrapper').remove();\n                    this.$('.btn-add').removeClass('hidden-disabled');\n                    this.$('input[name=username]').addClass('invalid')\n                        .siblings('.errors').text($(err).find('error text').text());\n                });\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_contact_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    renderGroupsForAccount: function (account) {\n        this.group_data.set({\n            selected: [],\n            groups: _.map(account.groups.notSpecial(), function (group) {\n                return group.get('name');\n            })\n        }, {silent: true});\n        this.updateGroups();\n    },\n\n    updateGroups: function () {\n        let selected = this.group_data.get('selected');\n        this.$('.groups').html(templates.groups_checkbox_list_contact({\n            groups: _.map(this.group_data.get('groups'), function (name) {\n                return { name: name, id: uuid(), checked: _.contains(selected, name) };\n            })\n        }));\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    editGroup: function (ev) {\n        ev.preventDefault();\n        let $target = $(ev.target),\n            $input = $target.siblings('input'),\n            checked = !$input.prop('checked'),\n            group_name = $input.attr('data-groupname'),\n            selected = _.clone(this.group_data.get('selected')),\n            idx = selected.indexOf(group_name);\n        $input.prop('checked', checked);\n        if (checked) {\n            idx < 0 && selected.push(group_name);\n        } else if (idx >= 0) {\n            selected.splice(idx, 1);\n        }\n        this.group_data.set('selected', selected);\n    },\n\n    checkNewGroup: function (ev) {\n        let name = $(ev.target).val(),\n            $checkbox = this.$('.new-group-checkbox #new_group_checkbox');\n        $checkbox.prop('disabled', !(name && !_.contains(this.group_data.get('groups'), name)));\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.addNewGroup();\n    },\n\n    addNewGroup: function (ev) {\n        ev && ev.preventDefault();\n        if (this.$('.new-group-checkbox #new_group_checkbox').prop('disabled'))\n            return;\n        let $input = this.$('.new-group-name input'),\n            name = $input.val(),\n            groups = _.clone(this.group_data.get('groups')),\n            idx = groups.indexOf(name);\n        if (idx < 0) {\n            let selected = _.clone(this.group_data.get('selected'));\n            selected.push(name);\n            groups.push(name);\n            this.group_data.set({groups: groups, selected: selected});\n        }\n    },\n\n    focusoutInputField: function () {\n        if (!this.$('input[name=username]').val().trim()) {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n        }\n    },\n\n    checkJid: function (ev) {\n        let jid = this.$('input[name=username]').val().trim(),\n            error_text,\n            regexp_full_jid = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))|(([0-9]{1,3}\\.){3}[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!regexp_full_jid.test(jid) && jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        }\n        else {\n            this.$('input[name=username]').removeClass('invalid');\n            this.$('span.errors').text('').addClass('hidden');\n            if (ev.keyCode === constants.KEY_ENTER)\n                this.stepForward();\n        }\n    },\n\n    addContact: function () {\n        this.$('span.errors').text('').addClass('hidden');\n        let jid = this.$('input[name=username]').removeClass('invalid').val().trim(),\n            name = this.$('input[name=contact_name]').removeClass('invalid').val(),\n            groups = this.group_data.get('selected'),\n            contact, error_text,\n            regexp = /^(([^<>()[\\]\\\\.,;:\\s%@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s%@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (jid)\n            jid = jid.toLowerCase()\n        jid = Strophe.getBareJidFromJid(jid);\n        if (!jid) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_input_username\");\n        } else if (jid === this.account.get('jid')) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_can_not_add_youself\");\n        } else if (!regexp.test(jid)) {\n            error_text = xabber.getString(\"dialog_add_contact__error__text_invalid_jid\");\n        }\n        else {\n            contact = this.account.contacts.mergeContact(jid);\n            if (contact.get('in_roster')) {\n                error_text = xabber.getString(\"dialog_add_contact__error__text_already_in_roster\");\n            }\n        }\n        if (error_text) {\n            this.$('input[name=username]').addClass('invalid')\n                .siblings('.errors').text(error_text);\n        } else {\n            !this.account.server_features.get(Strophe.NS.SUBSCRIPTION_PREAPPROVAL) && contact.set('subscription_preapproved', true);\n            contact.pres('subscribed');\n            contact.pushInRoster({name: name, groups: groups}, () => {\n                contact.pres('subscribe');\n                contact.trigger('presence', contact, 'subscribe_from');\n                contact.trigger(\"open_chat\", contact);\n            }, function () {\n                contact.destroy();\n            });\n            this.close();\n        }\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    }\n});\n\nxabber.GroupSettings = Backbone.Model.extend({\n    idAttribute: 'name',\n    defaults: {\n        expanded: true,\n        show_offline: 'default',\n        sorting: 'default',\n        custom_notifications: false,\n        notifications: false,\n        message_preview: false\n    }\n});\n\nxabber.GroupsSettings = Backbone.CollectionWithStorage.extend({\n    model: xabber.GroupSettings,\n\n    _initialize: function (models, options) {\n        this.account = options.account;\n        this.account.on(\"destroy\", this.clearStorage, this);\n        this.fetch();\n    }\n});\n\nxabber.RosterSettings = Backbone.ModelWithStorage.extend({\n\n    defaults: function () {\n        let general_group_name = xabber.getString(\"circles__name_general_circle\"),\n            non_roster_group_name = xabber.getString(\"circles__name_non_roster_circle\");\n        return {\n            pinned: false,\n            show_offline: 'yes',\n            sorting: 'online-first',\n            general_group_name,\n            non_roster_group_name\n        };\n    }\n});\n\nxabber.CachedRoster = Backbone.ModelWithDataBase.extend({\n    putInRoster: function (value, callback) {\n        this.database.put('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromRoster: function (value, callback) {\n        this.database.get('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromRoster: function (callback) {\n        this.database.get_all('roster_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromRoster: function (value, callback) {\n        this.database.remove('roster_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('roster_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('roster_items');\n    }\n});\n\nxabber.CachedSyncСonversations = Backbone.ModelWithDataBase.extend({\n    putInCachedConversations: function (value, callback) {\n        this.database.put('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedConversations: function (value, callback) {\n        this.database.get('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedConversations: function (callback) {\n        this.database.get_all('conversation_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedConversations: function (value, callback) {\n        this.database.remove('conversation_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('conversation_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('conversation_items');\n    }\n});\n\nxabber.CachedServerFeatures = Backbone.ModelWithDataBase.extend({\n    putInCachedFeatures: function (value, callback) {\n        this.database.put('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getFromCachedFeatures: function (value, callback) {\n        this.database.get('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    getAllFromCachedFeatures: function (callback) {\n        this.database.get_all('server_features_items', null, function (response_value) {\n            callback && callback(response_value || []);\n        });\n    },\n\n    removeFromCachedFeatures: function (value, callback) {\n        this.database.remove('server_features_items', value, function (response_value) {\n            callback && callback(response_value);\n        });\n    },\n\n    clearDataBase: function () {\n        this.database.clear_database('server_features_items');\n    },\n\n    deleteDataBase: function () {\n        this.database.delete_database('server_features_items');\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.groups_settings = new xabber.GroupsSettings(null, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-groups-settings-' + this.get('jid')\n    });\n    this.cached_roster = new xabber.CachedRoster(null, {\n        name:'cached-roster-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'roster_items',\n        primKey: 'jid'\n    });\n    this.cached_sync_conversations = new xabber.CachedSyncСonversations(null, {\n        name:'cached-conversation-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'conversation_items',\n        primKey: 'account_conversation_type'\n    });\n    this.cached_server_features = new xabber.CachedServerFeatures(null, {\n        name:'cached-features-list-' + this.get('jid') + '-' + this.get('account_unique_id'),\n        objStoreName: 'server_features_items',\n        primKey: 'var'\n    });\n\n    this.groupchat_settings = new xabber.GroupChatSettings({id: 'group-chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-group-chat-settings-' + this.get('jid'),\n        fetch: 'after'\n    });\n    this.groups = new xabber.Groups(null, {account: this});\n    this.contacts = new xabber.Contacts(null, {account: this});\n    this.contacts.addCollection(this.roster = new xabber.Roster(null, {account: this}));\n    this.blocklist = new xabber.BlockList(null, {account: this});\n\n    this._added_pres_handlers.push(this.contacts.handlePresence.bind(this.contacts));\n\n    this.on(\"ready_to_get_roster\", function () {\n        this.resources.reset();\n        this.contacts.each(function (contact) {\n            contact.resources.reset();\n            contact.resetStatus();\n        });\n        this.cached_roster.getAllFromRoster((roster_items) => {\n            $(roster_items).each((idx, roster_item) => {\n                this.contacts.mergeContact(roster_item);\n            });\n            if (this.connection && this.connection.do_synchronization && xabber.chats_view) {\n                let options = {};\n                this.cached_sync_conversations.getFromCachedConversations('last_sync_timestamp', (res) => {\n                    let last_sync_timestamp = res && res.timestamp ? res.timestamp : null;\n                    !this.roster.last_chat_msg_id && (options.max = constants.SYNCHRONIZATION_RSM_MAX);\n                    last_sync_timestamp && (options.stamp = last_sync_timestamp);\n                    this.roster.syncFromServer(options, Boolean(last_sync_timestamp), true);\n                });\n            }\n            else {\n                this.roster.getRoster();\n            }\n            this.blocklist.getFromServer();\n        });\n    }, this);\n});\n\nxabber.Account.addConnPlugin(function () {\n    this.registerIQHandler();\n    this.registerSyncedIQHandler();\n    this.roster.registerHandler();\n    this.blocklist.registerHandler();\n}, true, true);\n\nxabber.once(\"start\", function () {\n    this._roster_settings = new this.RosterSettings({id: 'roster-settings'},\n        {storage_name: this.getStorageName(), fetch: 'after'});\n    this.settings.roster = this._roster_settings.attributes;\n    this.roster_settings_view = xabber.settings_view.addChild(\n        'roster_settings', this.RosterSettingsView, {model: this._roster_settings});\n    this.contacts_view = this.left_panel.addChild('contacts', this.RosterLeftView,\n        {model: this.accounts});\n    this.roster_view = this.body.addChild('roster', this.RosterRightView,\n        {model: this.accounts});\n    this.contact_container = this.right_panel.addChild('details', this.Container);\n    this.details_container = this.right_contact_panel.addChild('details', this.Container);\n    this.contact_placeholder = this.right_contact_panel.addChild('contact_placeholder',\n        this.ContactPlaceholderView);\n    this.add_contact_view = new this.AddContactView();\n    this.on(\"add_contact\", function () {\n        this.add_contact_view.show();\n    }, this);\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.chats,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    $msg = env.$msg,\n    Strophe = env.Strophe,\n    _ = env._,\n    moment = env.moment,\n    uuid = env.uuid,\n    Images = utils.images,\n    Emoji = utils.emoji,\n    pretty_date = (timestamp) => { return utils.pretty_date(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'dddd, D MMMM YYYY')},\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\nxabber.Message = Backbone.Model.extend({\n    idAttribute: 'unique_id',\n\n    defaults: function () {\n        let msgid = uuid();\n        return {\n            msgid: msgid,\n            unique_id: msgid,\n            type: 'main',\n            state: constants.MSG_PENDING\n        };\n    },\n\n    initialize: function () {\n        let time = this.get('time'), attrs = {};\n        if (time) {\n            attrs.timestamp = Number(moment(time));\n        } else {\n            attrs.timestamp = moment.now();\n            attrs.time = moment(attrs.timestamp).format();\n        }\n        if (!this.get('origin_id'))\n            (this.isSenderMe() && !this.get('synced_from_server') && !this.get('carbon_copied') && !this.get('is_archived')) && this.set('origin_id', this.get('msgid'));\n        this.updateUniqueId();\n        this.set(attrs);\n        this.on(\"change:origin_id stanza_id archived_id\", this.updateUniqueId, this);\n    },\n\n    updateUniqueId: function () {\n        this.set('unique_id', this.get('origin_id') || this.get('stanza_id') || this.get('archived_id') || this.get('msgid'));\n    },\n\n    getText: function () {\n        let forwarded_message = this.get('forwarded_message');\n        if (forwarded_message && forwarded_message.length) {\n            return forwarded_message[0].get('message');\n        }\n        return this.get('message');\n    },\n\n    getState: function () {\n        return constants.MSG_STATE[this.get('state')];\n    },\n\n    getVerboseState: function () {\n        let state = xabber.getString(constants.MSG_VERBOSE_STATE[this.get('state')]);\n        if (this.account) {\n            if (!this.account.isOnline())\n                state = xabber.getString(\"account_is_offline\");\n        }\n        else if (!this.collection.account.isOnline())\n            state = xabber.getString(\"account_is_offline\");\n        return state;\n    },\n\n    isSenderMe: function () {\n        if (this.account)\n            return this.account.get('jid') === this.get('from_jid');\n        else if (this.collection.account)\n            return this.collection.account.get('jid') === this.get('from_jid');\n        else\n            false;\n    }\n});\n\nxabber.MessagesBase = Backbone.Collection.extend({\n    model: xabber.Message,\n});\n\n  xabber.SearchedMessages = xabber.MessagesBase.extend({\n      comparator: 'timestamp',\n\n      initialize: function () {\n          this.collections = [];\n          this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n          this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n      },\n\n      addCollection: function (collection) {\n          this.collections.push(collection);\n      },\n\n      updateInCollections: function (event, contact) {\n          _.each(this.collections, function (collection) {\n              collection.update(contact, event);\n          });\n      }\n  });\n\n  xabber.Messages = Backbone.Collection.extend({\n    model: xabber.Message,\n    comparator: 'timestamp',\n\n    initialize: function (models, options) {\n        this.account = options.account;\n    },\n\n    createInvitationFromStanza: function ($message, options) {\n        options = options || {};\n        let $invite_item = $message.find('invite'),\n            full_jid = $invite_item.attr('jid') || $message.attr('from'),\n            $delay = options.delay || $message.children('delay'),\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').text(),\n            markable = $message.find('markable').length > 0,\n            msgid = $message.attr('id'),\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            unique_id = origin_id || options.stanza_id || archive_id || msgid,\n            message = unique_id && this.get(unique_id),\n            $group_info = $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]'),\n            is_private_invitation,\n            group_info_attributes = {};\n\n        if (message)\n            return message;\n\n        if (!from_jid)\n            return;\n\n        let attrs = {\n            xml: options.xml || $message[0],\n            carbon_copied: options.carbon_copied && !options.is_archived,\n            markable: markable,\n            msgid: msgid,\n            is_forwarded: options.is_forwarded,\n            forwarded_message: options.forwarded_message || null,\n            from_jid: from_jid,\n            origin_id: origin_id,\n            stanza_id: options.stanza_id,\n            archive_id: archive_id,\n            contact_stanza_id: options.contact_stanza_id,\n            is_archived: options.is_archived\n        };\n\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        options.synced_msg && (attrs.synced_invitation_from_server = true);\n        body && (attrs.message = body);\n\n        let contact = this.account.contacts.mergeContact({jid: Strophe.getBareJidFromJid(from_jid), group_chat: true}),\n            chat = this.account.chats.getChat(contact);\n\n        !chat.item_view.content && (chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view}));\n\n        contact.set('in_roster', false);\n        contact.getVCard();\n        if ($group_info.length) {\n            let name = $group_info.find('name').text(),\n                model = $group_info.find('membership').text(),\n                privacy = $group_info.find('privacy').text(),\n                searchable = $group_info.find('index').text(),\n                parent_chat = $group_info.find('parent-chat').text(),\n                description = $group_info.find('description').text();\n            name && (group_info_attributes.name = name);\n            model && (group_info_attributes.model = name);\n            privacy && (group_info_attributes.privacy = privacy);\n            searchable && (group_info_attributes.searchable = searchable);\n            description && (group_info_attributes.description = description);\n            parent_chat.length && (is_private_invitation = true);\n            is_private_invitation && contact.set('private_chat', true);\n            privacy === 'incognito' && contact.set('incognito_chat', true);\n            let prev_group_info = contact.get('group_info') || {};\n            _.extend(prev_group_info, group_info_attributes);\n            contact.set('group_info', prev_group_info);\n        }\n\n        let invite_msg = chat.messages.createSystemMessage(_.extend(attrs, {\n            from_jid: from_jid,\n            auth_request: true,\n            invite: true,\n            private_invite: is_private_invitation || false,\n            is_accepted: false,\n            silent: false,\n            message: $message.find('reason').text()\n        }));\n        return invite_msg;\n    },\n\n    createFromStanza: function ($message, options) {\n        options || (options = {});\n        let $delay = options.delay || $message.children('delay'),\n            full_jid = $message.attr('from') || options.from_jid,\n            from_jid = Strophe.getBareJidFromJid(full_jid),\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text(),\n            markable = $message.find('markable').length > 0,\n            archive_id = $message.children('archived').attr('id'),\n            origin_id = $message.children('origin-id').attr('id'),\n            msgid = $message.attr('id'),\n            unique_id = origin_id || options.stanza_id || archive_id || msgid,\n            message = unique_id && this.get(unique_id);\n\n        if (options.replaced) {\n            let conversation = $message.children('replace').attr('conversation');\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.SYNCHRONIZATION_OLD_OMEMO}\"]`).length)\n                return;\n            if ($message.children('replace').children('message').children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && this.account.omemo && !options.forwarded) {\n                this.account.omemo.receiveChatMessage($message, _.extend(options, {from_jid: conversation, conversation: conversation}));\n                return;\n            }\n            $message = $message.children('replace').children('message');\n            body = $message.children('body').length ? $message.children('body').text() : $message.children('envelope').children('content').children('body').text();\n            let sid = $message.children('stanza-id').first().attr('id');\n            message = this.find(m => m.get('stanza_id') === sid || m.get('contact_stanza_id') === sid);\n            if (!message)\n                return;\n            from_jid = message.get('from_jid');\n            msgid = message.get('msgid');\n            let xml = message.get('xml');\n            xml.innerHTML = $message[0].innerHTML;\n            options.xml = xml;\n            options.forwarded_message = message.get('forwarded_message');\n        }\n\n        if (message && !options.replaced && !options.context_message && !options.searched_message && !options.pinned_message && !options.participant_message && !options.echo_msg && !options.is_searched)\n            return message;\n\n        let attrs = {\n                xml: options.xml || $message[0],\n                original_message: body,\n                carbon_copied: options.carbon_copied && !options.is_archived,\n                markable: markable,\n                msgid: msgid,\n                is_forwarded: options.is_forwarded,\n                forwarded_message: options.forwarded_message || null,\n                from_jid: from_jid,\n                contact_stanza_id: options.contact_stanza_id,\n                is_archived: options.is_archived\n            },\n            mentions = [], blockquotes = [], markups = [], mutable_content = [], files = [], images = [], videos = [], locations = [], link_references = [];\n\n        options.encrypted && _.extend(attrs, {encrypted: true});\n        options.hasOwnProperty('is_trusted') && _.extend(attrs, {is_trusted: options.is_trusted});\n        let references = $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n            $message.children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`) :\n            $message.children('envelope').children('content').children(`reference[xmlns=\"${Strophe.NS.REFERENCE}\"]`)\n\n        references.each((idx, reference) => {\n            let $reference = $(reference),\n                type = $reference.attr('type'),\n                begin = parseInt($reference.attr('begin')),\n                end = parseInt($reference.attr('end'));\n            if (type === 'decoration') {\n                if ($reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`).length) {\n                    let $mention = $reference.children(`mention[xmlns=\"${Strophe.NS.MARKUP}\"]`),\n                        target = $mention.text(),\n                        is_gc = $mention.attr('node') === Strophe.NS.GROUP_CHAT ? true : false;\n                    mentions.push({start: begin, end: end, target: target, is_gc: is_gc});\n                } else {\n                    let markup = [];\n                    $reference.children().each((i, child_ref) => {\n                        if (constants.MARKUP_TAGS.indexOf(child_ref.tagName) > -1 && $(child_ref).attr('xmlns') === Strophe.NS.MARKUP) {\n                            if (child_ref.tagName === 'link')\n                                markup.push({type: child_ref.tagName, uri: $(child_ref).text()});\n                            else if (child_ref.tagName === 'quote') {\n                                blockquotes.push({start: begin, end: end});\n                            } else\n                                markup.push(child_ref.tagName);\n                        }\n                    });\n                    markup.length && markups.push({start: begin, end: end, markup: markup});\n                }\n            } else if (type === 'mutable') {\n                let $geolocation = $reference.children(`geoloc[xmlns=\"${Strophe.NS.GEOLOC}\"]`).first(),\n                    loc_attrs = {};\n                if ($geolocation.children('lat').text() && $geolocation.children('lon').text()){\n                    loc_attrs = {\n                        lat: $geolocation.children('lat').text(),\n                        lon: $geolocation.children('lon').text()\n                    }\n                    locations.push(loc_attrs);\n                    mutable_content.push({ start: begin, end: end, type: 'geolocation'});\n                };\n                if ($reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).length) {\n                    let $ogp = $reference.children(`ogp[xmlns=\"${Strophe.NS.OGP}\"]`).first(),\n                        link_reference_attrs = {};\n                    if ($ogp.length) {\n                        link_reference_attrs = {\n                            site: $ogp.children('meta[property=\"og:site_name\"]').attr('content'),\n                            type: $ogp.children('meta[property=\"og:type\"]').attr('content'),\n                            url: $ogp.children('meta[property=\"og:url\"]').attr('content'),\n                            description: $ogp.children('meta[property=\"og:description\"]').attr('content'),\n                            title: $ogp.children('meta[property=\"og:title\"]').attr('content'),\n                            image: $ogp.children('meta[property=\"og:image\"]').attr('content'),\n                            image_width: $ogp.children('meta[property=\"og:image:width\"]').attr('content'),\n                            image_height: $ogp.children('meta[property=\"og:image:height\"]').attr('content'),\n                            video_url: $ogp.children('meta[property=\"og:video:url\"]').attr('content'),\n                            original_text: $ogp.attr('url'),\n                            start: begin,\n                            end: end,\n                        }\n                        link_references.push(link_reference_attrs);\n                        mutable_content.push({start: begin, end: end, type: 'link_reference'});\n                    };\n                }\n                let $file_sharing = $reference.find(`file-sharing[xmlns=\"${Strophe.NS.FILES}\"]`).first();\n                if ($reference.children('forwarded').length)\n                    mutable_content.push({ start: begin, end: end, type: 'forward'});\n                else if ($file_sharing.length) {\n                    let type = $file_sharing.parent(`voice-message[xmlns=\"${Strophe.NS.VOICE_MESSAGE}\"]`).length ? 'voice' : 'file',\n                        $file = $file_sharing.children('file'), file_attrs = {}, sources = [];\n                    mutable_content.push({ start: begin, end: end, type: type});\n                    $file_sharing.children('sources').children('uri').each((i, uri) => {sources.push($(uri).text());});\n                    file_attrs = {\n                        name: $file.children('name').text(),\n                        hash: $file.children(`hash[xmlns=\"${Strophe.NS.HASH}\"]`).text(),\n                        size: $file.children('size').text(),\n                        type: $file.children('media-type').text(),\n                        duration: $file.children('duration').text(),\n                        description: $file.children('desc').text(),\n                        height: $file.children('height').text(),\n                        width: $file.children('width').text(),\n                        thumbnail: $file.children('thumbnail-uri').text(),\n                        id: $file.children('gallery-id').text(),\n                        voice: type === 'voice',\n                        sources: sources\n                    };\n                    if (sources[0].indexOf('aescbc') == 0) {\n                        let uri = sources[0].replace(/^aescbc/, 'https'),\n                            key = utils.fromBase64toArrayBuffer(uri.slice(uri.length - 64));\n                        uri = uri.slice(0, uri.length - 64 - 1);\n                        _.extend(file_attrs, {sources: [uri], key: key});\n                        attrs.has_encrypted_files = true;\n                    }\n                    if (this.getFileType($file.children('media-type').text()) === 'image')\n                        images.push(file_attrs);\n                    else if (this.getFileType($file.children('media-type').text()) === 'video')\n                        videos.push(file_attrs);\n                    else\n                        files.push(file_attrs);\n                }\n            } else if (type === 'data') {}\n        });\n\n        $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '\"]').each((idx, x_elem) => {\n            let $reference = $(x_elem).children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`),\n                $user = $reference.children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                if ($reference.length) {\n                    let begin = parseInt($reference.attr('begin')),\n                        end = parseInt($reference.attr('end'));\n                    mutable_content.push({start: begin, end: end, type: 'groupchat'});\n                    let user_id = $user.attr('id'),\n                        user_jid = $user.children('jid').text();\n                    _.extend(attrs, {\n                        user_info: {\n                            id: user_id,\n                            jid: user_jid,\n                            nickname: $user.children('nickname').text() || user_jid || user_id,\n                            role: $user.children('role').text(),\n                            avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                            avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                            badge: $user.children('badge').text()\n                        },\n                        from_jid: user_jid || user_id,\n                        groupchat_jid: Strophe.getBareJidFromJid(options.is_sender ? $message.attr('to') : $message.attr('from'))\n                    });\n                }\n        });\n\n        blockquotes.length && (attrs.blockquotes = blockquotes);\n        mentions.length && (attrs.mentions = mentions);\n        markups.length && (attrs.markups = markups);\n        images.length && (attrs.images = images);\n        videos.length && (attrs.videos = videos);\n        files.length && (attrs.files = files);\n        locations.length && (attrs.locations = locations);\n        link_references.length && (attrs.link_references = link_references);\n        attrs.mutable_content = mutable_content;\n        if (!attrs.mutable_content.length)\n            attrs.forwarded_message = null;\n\n        options.stanza_id && (attrs.stanza_id = options.stanza_id);\n        origin_id && (attrs.origin_id = origin_id);\n        archive_id && (attrs.archive_id = archive_id);\n\n        (options.replaced || mentions.length) && (attrs.mentions = mentions);\n        (options.replaced || markups.length) && (attrs.markups = markups);\n        (options.replaced || files.length) && (attrs.files = files);\n        (options.replaced || images.length) && (attrs.images = images);\n        (options.replaced || videos.length) && (attrs.videos = videos);\n        (options.replaced || link_references.length) && (attrs.link_references = link_references);\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            attrs.type = 'system';\n            attrs.participants_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).length &&\n            $message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`).find('field[var=\"FORM_TYPE\"][type=\"hidden\"] value').text() === Strophe.NS.WEBCHAT) {\n            let addresses = [];\n            $message.children(`addresses[xmlns=\"${Strophe.NS.ADDRESS}\"]`).children('address').each((idx, address) => {\n                let $address = $(address);\n                addresses.push({type: $address.attr('type'), jid: $address.attr('jid')});\n            });\n            attrs.data_form = _.extend(this.account.parseDataForm($message.children(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`)), {addresses: addresses});\n        }\n\n        body && (body = utils.slice_pretty_body(body, mutable_content));\n\n        if (!attrs.forwarded_message && body.removeEmoji() === \"\")\n            attrs.only_emoji = Array.from(body).length;\n\n        attrs.message = body;\n\n        options.echo_msg && ($delay = $message.children('time'));\n        $delay.length && (attrs.time = $delay.attr('stamp'));\n        (attrs.carbon_copied || from_jid == this.account.get('jid') && (options.is_archived || options.synced_msg)) && (attrs.state = constants.MSG_SENT);\n        options.synced_msg && (attrs.synced_from_server = true);\n        options.missed_history && (attrs.missed_msg = true);\n        if (options.echo_msg) {\n            attrs.state = constants.MSG_DELIVERED;\n            attrs.timestamp = Number(moment(attrs.time));\n            attrs.from_jid = this.account.get('jid');\n        }\n        (options.context_message || options.participant_message || options.searched_message || options.is_searched) && (attrs.state = constants.MSG_ARCHIVED);\n\n        if (options.pinned_message)\n            return this.account.pinned_messages.create(attrs);\n\n        if (options.participant_message)\n            return this.account.participant_messages.create(attrs);\n\n        if (options.searched_message) {\n            options.query && (attrs.query = options.query);\n            options.searched_in_contact_messages && (attrs.searched_in_contact_messages = options.searched_in_contact_messages)\n            return this.account.searched_messages.create(attrs);\n        }\n\n        if (options.context_message)\n            return this.account.context_messages.create(attrs);\n\n        if ((options.echo_msg || options.replaced) && message) {\n            message.set(attrs);\n            if (options.replaced)\n                return;\n        }\n\n        if (options.is_searched) {\n            let msg_contact = Strophe.getBareJidFromJid($message.attr('from'));\n            (msg_contact === this.account.get('jid')) && (msg_contact = Strophe.getBareJidFromJid($message.attr('to')));\n            message = xabber.all_searched_messages.create(attrs);\n            message.contact = this.account.contacts.mergeContact(msg_contact);\n            message.account = this.account;\n            return message;\n        }\n\n        message = this.create(attrs);\n\n        (options.encrypted && options.is_unread) && message.set('is_unread', true);\n\n        return message;\n    },\n\n      decryptFile: async function (uri, key) {\n          return new Promise((resolve, reject) => {\n              fetch(uri).then((r) => {\n                  r.blob().then((blob) => {\n                      let filereader = new FileReader();\n                      filereader.onloadend = () => {\n                          let arrayBuffer = filereader.result,\n                              exportedMasterKey = key.slice(0, 32),\n                              HMACData = key.slice(32);\n                          utils.AES.decrypt(exportedMasterKey, HMACData, arrayBuffer).then((enc_file) => {\n                              resolve(enc_file);\n                          });\n                      };\n                      filereader.readAsArrayBuffer(blob);\n                  });\n              }).catch(() => {\n                  resolve(null)\n              });\n          });\n      },\n\n    getFilename: function (url_media) {\n        let idx = url_media.lastIndexOf(\"/\");\n        return url_media.substr(idx + 1, url_media.length - 1);\n    },\n\n    getFileType: function(full_type) {\n        let end_idx = (full_type.indexOf(\"/\") > -1) ? full_type.indexOf(\"/\") : full_type.length,\n            type = full_type.slice(0, end_idx);\n        return type;\n    },\n\n    createSystemMessage: function (attrs) {\n        return this.create(_.extend({\n            type: 'system',\n            silent: true,\n            state: constants.MSG_DISPLAYED\n        }, attrs));\n    }\n});\n\n  xabber.JingleMessage = Backbone.Model.extend({\n      defaults: {\n          duration: 0,\n          contact_full_jid: \"\",\n          session_id: 0,\n          audio: true,\n          volume_on: true,\n          video_in: false,\n          video_screen: false,\n          state: 0\n      },\n\n      initialize: function (attrs, options) {\n          attrs = attrs || {};\n          attrs.video_live = attrs.video_live || false;\n          attrs.video = attrs.video_live;\n          this.contact = options.contact;\n          this.account = this.contact.account;\n          this.registerIqHandler();\n          this.audio_notifiation = xabber.playAudio(attrs.call_initiator ? xabber.settings.sound_on_call : xabber.settings.sound_on_dialtone, true);\n          this.modal_view = new xabber.JingleMessageView({model: this});\n          this.conn = new RTCPeerConnection({\n              iceServers: [\n                  {\n                      urls: \"stun:stun.l.google.com:19302\"\n                  },\n                  {\n                      urls: \"stun:stun01.pool-01.fckrkn202102.cyou:3478\"\n                  },\n              ].concat(constants.TURN_SERVERS_LIST),\n              sdpSemantics: 'unified-plan'\n          });\n          this.$remote_video_el = $('<video autoplay class=\"webrtc-remote-video\"/>');\n          this.$remote_audio_el = $('<audio autoplay class=\"webrtc-remote-audio hidden\"/>');\n          this.$local_video = this.modal_view.$el.find('.webrtc-local-video');\n          this.current_timer = 0;\n          this.conn.onconnectionstatechange = this.onChangeConnectionState.bind(this);\n          this.set(attrs);\n          this.get('in') && this.updateStatus(xabber.getString(\"dialog_jingle_message__status_calling\"));\n          this.onChangedMediaType();\n          this.conn.ontrack = (ev) => {\n              this.remote_stream = ev.streams[0];\n              this.modal_view.$el.find('.webrtc-remote-audio')[0].srcObject = ev.streams[0];\n          };\n          this._waiting_timeout = setTimeout(() => {\n              (!this.get('state') && this.get('status') === 'calling' && this.get('call_initiator') === this.account.get('jid')) && this.reject();\n          }, constants.JINGLE_WAITING_TIME * 1000);\n          this.conn.onicecandidate = this.onIceCandidate.bind(this);\n          this.conn.oniceconnectionstatechange = this.onChangeIceConnectionState.bind(this);\n          this.on('change:audio', this.setEnabledAudioTrack, this);\n          this.on('change:video', this.onChangedVideoValue, this);\n          this.on('change:video_live', this.setEnabledVideoTrack, this);\n          this.on('change:video_screen', this.setEnabledScreenShareVideoTrack, this);\n          this.on('change:video_in', this.onChangedRemoteVideo, this);\n          this.on('change:volume_on', this.onChangedVolume, this);\n          this.on('destroy', this.onDestroy, this);\n      },\n\n      registerIqHandler: function () {\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.iq_handler = this.account.connection.addHandler((iq) => {\n                  this.onIQ(iq);\n                  return true;\n              }, null, 'iq', 'set');\n\n      },\n\n      updateStatus: function (status) {\n          this.modal_view.updateStatusText(status);\n      },\n\n      updateTimer: function () {\n          this.updateStatus(utils.pretty_duration(++this.current_timer));\n      },\n\n      startTimer: function () {\n          this.updateTimer();\n          clearInterval(this.call_timer);\n          this.call_timer = setInterval(() => {\n              this.updateTimer();\n          }, 1000);\n      },\n\n      onConnected: function () {\n          this.get('video_live') && this.onChangedVideoValue();\n          xabber.stopAudio(this.audio_notifiation);\n          setTimeout(() => {\n              this.set('status', 'connected');\n              xabber.trigger('update_jingle_button');\n              this.updateStatus();\n              this.startTimer();\n          }, 1000);\n      },\n\n      onChangeConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.connectionState;\n          if (conn_state === 'connected') {\n              this.onConnected();\n          } else {\n              this.updateStatus(utils.pretty_name(conn_state) + '...');\n              if (conn_state === \"failed\") {\n                  clearTimeout(this._timeout_failed);\n                  this._timeout_failed = setTimeout(() => {\n                      if (peer_conn.connectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                          this.set('status', conn_state);\n                          xabber.trigger('update_jingle_button');\n                          this.reject();\n                          this.destroy();\n                          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                          xabber.current_voip_call = null;\n                      }\n                  }, 40000);\n                  peer_conn.restartIce();\n              }\n              if (conn_state === 'disconnected') {\n                  this.set('status', conn_state);\n                  xabber.trigger('update_jingle_button');\n                  this.destroy();\n                  xabber.current_voip_call = null;\n              }\n          }\n      },\n\n      onIceCandidate: function (ice) {\n          if (!ice || !ice.candidate || !ice.candidate.candidate)\n              return;\n          this.sendCandidate(ice.candidate);\n      },\n\n      onChangeIceConnectionState: function (ev) {\n          let peer_conn = ev.target,\n              conn_state = peer_conn.iceConnectionState;\n          if (conn_state === \"failed\") {\n              clearTimeout(this._timeout_failed);\n              this._timeout_failed = setTimeout(() => {\n                  if (peer_conn.iceConnectionState === 'failed' || peer_conn.connectionState === 'disconnected') {\n                      this.set('status', conn_state);\n                      xabber.trigger('update_jingle_button');\n                      this.reject();\n                      this.destroy();\n                      this.updateStatus(xabber.getString(\"dialog_jingle_message__status_network_error\"));\n                      xabber.current_voip_call = null;\n                  }\n              }, 40000);\n              peer_conn.restartIce();\n          }\n          if (conn_state === \"connected\")\n              !this.conn.connectionState && this.onConnected();\n      },\n\n      onChangedMediaType: function () {\n          this.$local_video.switchClass('hidden', !this.get('video'));\n      },\n\n      onChangedRemoteVideo: function () {\n          let incoming_video = this.get('video_in');\n          if (incoming_video) {\n              this.$remote_video_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-audio').replaceWith(this.$remote_video_el);\n              this.modal_view.$el.switchClass('multiple-videos', this.get('video') && this.get('video_in'));\n          }\n          else {\n              this.$remote_audio_el[0].srcObject = this.remote_stream;\n              this.modal_view.$el.find('.webrtc-remote-video').replaceWith(this.$remote_audio_el);\n          }\n          this.modal_view.$el.find('.default-screen').switchClass('hidden', incoming_video);\n          this.onChangedVolume();\n      },\n\n      onChangedVolume: function () {\n          if (this.get('volume_on')) {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = false);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = false);\n          }\n          else {\n              this.modal_view.$el.find('.webrtc-remote-audio')[0] && (this.modal_view.$el.find('.webrtc-remote-audio')[0].muted = true);\n              this.modal_view.$el.find('.webrtc-remote-video')[0] && (this.modal_view.$el.find('.webrtc-remote-video')[0].muted = true);\n          }\n      },\n\n      setEnabledAudioTrack: function () {\n          this.local_stream.getAudioTracks()[0].enabled = this.get('audio');\n      },\n\n      setEnabledVideoTrack: function () {\n          let value = this.get('video_live'),\n              default_video = this.conn.getSenders().find(sender => sender.track && (sender.track.default || sender.track.screen));\n          value && this.set('video_screen', false);\n          (default_video && value) && this.createVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_screen'));\n      },\n\n      onDestroy: function () {\n          clearTimeout(this._waiting_timeout);\n          clearInterval(this.call_timer);\n          clearTimeout(this._timeout_failed);\n          xabber.stopAudio(this.audio_notifiation);\n          this.account.connection.deleteHandler(this.iq_handler);\n          this.stopTracks();\n          this.conn.close();\n      },\n\n      setEnabledScreenShareVideoTrack:  function () {\n          let value = this.get('video_screen'),\n              default_video = this.conn.getSenders().find(sender => sender.track && !sender.track.screen);\n          value && this.set('video_live', false);\n          (default_video && value) && this.createScreenShareVideoStream();\n          (!default_video && this.local_stream) && (this.local_stream.getVideoTracks()[0].enabled = value);\n          this.set('video', value || this.get('video_live'));\n      },\n\n      onChangedVideoValue: function () {\n          let video_state = this.get('video') ? 'enable' : 'disable';\n          this.sendVideoStreamState(video_state);\n          this.onChangedMediaType();\n      },\n\n      createScreenShareVideoStream: function () {\n          navigator.mediaDevices.getDisplayMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  _.extend(track, {screen: true});\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      sendVideoStreamState: function (state) {\n          let $iq_video = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n              .c('video', {state: state, id: this.get('session_id')});\n          this.account.sendIQFast($iq_video);\n      },\n\n      onIQ: function (iq) {\n          let $incoming_iq = $(iq),\n              $jingle_initiate = $incoming_iq.find('jingle[action=\"session-initiate\"]'),\n              $jingle_accept = $incoming_iq.find('jingle[action=\"session-accept\"]'),\n              $jingle_info = $incoming_iq.find('jingle[action=\"session-info\"]'),\n              $jingle_video = $incoming_iq.find(`query[xmlns=\"${Strophe.NS.JINGLE_MSG}\"] video`),\n              from_jid = $incoming_iq.attr('from'),\n              $result_iq = $iq({to: from_jid, type: 'result', id: $incoming_iq.attr('id')});\n          if ($jingle_initiate.length) {\n              if ($jingle_initiate.attr('sid') !== this.get('session_id'))\n                  return;\n              let offer_sdp = $jingle_initiate.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              offer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'offer', sdp: offer_sdp}));\n              this.acceptSession(offer_sdp);\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_accept.length) {\n              if ($jingle_accept.attr('sid') !== this.get('session_id'))\n                  return;\n              let answer_sdp = $jingle_accept.find(`description[xmlns=\"${Strophe.NS.JINGLE_RTP}\"]`).text();\n              answer_sdp && this.conn.setRemoteDescription(new RTCSessionDescription({type: 'answer', sdp: answer_sdp}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_info.length) {\n              if ($jingle_info.attr('sid') !== this.get('session_id'))\n                  return;\n              let candidate = $jingle_info.find('candidate');\n              candidate.length && this.conn.addIceCandidate(new RTCIceCandidate({candidate: candidate.text(), sdpMLineIndex: candidate.attr('sdpMLineIndex'), sdpMid: candidate.attr('sdpMid')}));\n              this.account.sendIQFast($result_iq);\n          }\n          if ($jingle_video.length) {\n              let session_id = $jingle_video.attr('id');\n              if (session_id === this.get('session_id')) {\n                  let video_state = $jingle_video.attr('state');\n                  if (video_state === 'enable')\n                      this.set('video_in', true);\n                  if (video_state === 'disable')\n                      this.set('video_in', false);\n              }\n              this.account.sendIQFast($result_iq);\n          }\n      },\n\n      startCall: function () {\n          this.set('call_initiator', this.account.get('jid'));\n          this.createAudioStream();\n          this.get('video_live') && this.createVideoStream();\n          this.propose();\n      },\n\n      createAudioStream: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n          });\n      },\n\n      createVideoStream: function () {\n          navigator.mediaDevices.getUserMedia({video: true}).then((media_stream) => {\n              this.$local_video[0].srcObject = media_stream;\n              media_stream.getVideoTracks().forEach((track) => {\n                  this.local_stream.addTrack(track);\n                  this.conn.addTrack(track, this.local_stream);\n                  this.conn.getSenders().find(sender => !sender.track || sender.track && sender.track.kind === 'video').replaceTrack(track);\n              });\n          });\n      },\n\n      stopTracks: function () {\n          this.local_stream && this.local_stream.getTracks().forEach((track) => {\n              track.stop();\n              this.local_stream.removeTrack(track);\n          });\n      },\n\n      propose: function () {\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_search\"));\n          let $propose_msg = $msg({type: 'chat', to: this.contact.get('jid')})\n              .c('propose', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up().up()\n              .c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('body').t(xabber.getString(\"jingle__text_body_message\")).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($propose_msg);\n      },\n\n      accept: function () {\n          let $accept_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('accept', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')}).up()\n              .c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.set('jingle_start', moment.now());\n          this.account.sendMsg($accept_msg);\n          xabber.stopAudio(this.audio_notifiation);\n          this.set('status', 'connecting');\n          xabber.trigger('update_jingle_button');\n          this.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n          this.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection, true);\n      },\n\n      reject: function (reason) {\n          if (this.get('status') === 'disconnected' || this.get('status') === 'disconnecting')\n              return;\n          let $reject_msg = $msg({type: 'chat', to: this.get('contact_full_jid') || this.contact.get('jid')})\n              .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: this.get('session_id')});\n          if (this.get('jingle_start')) {\n              let end = moment.now(),\n                  duration = Math.round((end - this.get('jingle_start'))/1000),\n                  call_attrs = {initiator: this.get('call_initiator')};\n              if (this.call_timer)\n                  _.extend(call_attrs, {start: moment(this.get('jingle_start')).format(), end: moment(end).format(), duration: duration});\n              reason && (call_attrs.reason = reason);\n              $reject_msg.c('call', call_attrs).up();\n          }\n          $reject_msg.up().c('store', {xmlns: Strophe.NS.HINTS}).up()\n              .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n              .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n          this.account.sendMsg($reject_msg);\n          this.createSystemMessage($reject_msg);\n          this.set('status', 'disconnected');\n          xabber.trigger('update_jingle_button');\n          this.destroy();\n          xabber.current_voip_call = null;\n      },\n\n      createSystemMessage: function (message) {\n          let $message = $(message.nodeTree),\n              chat = this.account.chats.getChat(this.contact),\n              time = $message.find('call').attr('end');\n          if (time) {\n              let duration = $message.find('call').attr('duration'),\n                  initiator = $message.find('call').attr('initiator');\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)])\n              });\n          }\n          else {\n              chat.messages.createSystemMessage({\n                  from_jid: this.account.get('jid'),\n                  session_id: $message.find('reject').attr('id'),\n                  message: xabber.getString(\"jingle__system_message__cancelled_call\")\n              });\n          }\n      },\n\n      initVideoTrack: function () {\n          let canvas = Object.assign(document.createElement(\"canvas\"), {width: 320, height: 240});\n          let ctx = canvas.getContext('2d');\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          let p = ctx.getImageData(0, 0, canvas.width, canvas.height);\n          requestAnimationFrame(function draw(){\n              for (let i = 0; i < p.data.length; i++)\n                  p.data[i++] = p.data[i++] = p.data[i++] = 1;\n              ctx.putImageData(p, 0, 0);\n              requestAnimationFrame(draw);\n          });\n          return _.extend(canvas.captureStream(60).getTracks()[0], {default: true});\n      },\n\n      initSession: function () {\n          navigator.mediaDevices.getUserMedia({audio: true}).then((media_stream) => {\n              this.local_stream = media_stream;\n              this.$local_video[0].srcObject = media_stream;\n              let video_track = this.initVideoTrack();\n              this.local_stream.addTrack(video_track);\n              this.conn.addTrack(video_track, this.local_stream);\n              media_stream.getAudioTracks().forEach(track => this.conn.addTrack(track, this.local_stream));\n              return this.conn.createOffer({offerToReceiveAudio:true, offerToReceiveVideo: true});\n          }).then((offer) => {\n                  this.set('session_initiator', this.account.get('jid'));\n                  this.conn.setLocalDescription(offer).then(() => {\n                      let offer_sdp = offer.sdp,\n                          $iq_offer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-initiate', initiator: this.account.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(offer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                      this.account.sendIQFast($iq_offer_sdp);\n                  });\n          });\n      },\n\n      sendCandidate: function (candidate) {\n          let $iq_candidate = $iq({to: this.get('contact_full_jid'), type: 'set'})\n              .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-info', initiator: this.get('session_initiator'), sid: this.get('session_id')})\n              .c('content', {creator: 'initiator', name: 'voice'})\n              .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'}).up()\n              .c('transport', {xmlns: Strophe.NS.JINGLE_TRANSPORTS_ICE})\n              .c('candidate', {sdpMLineIndex: candidate.sdpMLineIndex, sdpMid: candidate.sdpMid }).t(candidate.candidate);\n          this.account.sendIQFast($iq_candidate);\n      },\n\n      acceptSession: async function () {\n          this.set('session_initiator', this.contact.get('jid'));\n          this.conn.createAnswer().then((answer) => {\n              this.conn.setLocalDescription(answer).then(() => {\n                  let answer_sdp = answer.sdp,\n                      $iq_answer_sdp = $iq({to: this.get('contact_full_jid'), type: 'set'})\n                          .c('jingle', {xmlns: Strophe.NS.JINGLE, action: 'session-accept', initiator: this.contact.get('jid'), sid: this.get('session_id')})\n                          .c('content', {creator: 'initiator', name: 'voice'})\n                          .c('description', {xmlns: Strophe.NS.JINGLE_RTP, media: 'audio'})\n                          .c('sdp').t(answer_sdp).up().up()\n                          .c('security', {xmlns: Strophe.NS.JINGLE_SECURITY_STUB});\n                  this.account.sendIQFast($iq_answer_sdp);\n              });\n          });\n      }\n  });\n\n  xabber.Chat = Backbone.Model.extend({\n    defaults: {\n        opened: true,\n        active: false,\n        display: false,\n        displayed_sent: false,\n        last_displayed_id: 0,\n        last_delivered_id: 0,\n        unread: 0,\n        timestamp: 0,\n        const_unread: 0,\n        encrypted: false\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.sync_created = options.sync_created;\n        this.account = this.contact ? this.contact.account : options.account;\n        let jid = this.contact ? this.contact.get('jid') : attrs.jid;\n        this.set({\n            id: attrs && attrs.id || this.contact.hash_id,\n            jid: jid\n        });\n        (attrs && attrs.type === 'encrypted') && this.set('encrypted', true);\n        if (attrs && attrs.type === 'saved') {\n            this.set('saved', true);\n            this.account.on('remove_saved_chat', this.onContactDestroyed, this);\n        }\n        this.retraction_version = 0;\n        if (this.contact) {\n            this.set('group_chat', this.contact.get('group_chat'));\n            this.contact.on(\"destroy\", this.onContactDestroyed, this);\n            this.contact.on(\"change:group_chat\", this.onChangedContact, this);\n        } else {\n            this.set({'group_chat': false, 'name': attrs.name});\n        }\n        this.messages = new xabber.Messages(null, {account: this.account});\n        this.messages_unread = new xabber.Messages(null, {account: this.account});\n        this.item_view = new xabber.ChatItemView({model: this});\n        this.plyr_players = [];\n        this.on(\"get_retractions_list\", this.getAllMessageRetractions, this);\n        this.on(\"change:timestamp\", this.onChangedTimestamp, this);\n    },\n\n    onChangedTimestamp: function () {\n    },\n\n\n    isMuted: function () {\n          if (this.get('muted') && (this.get('muted') < (Date.now() / 1000)))\n              this.set('muted', false)\n          return this.get('muted')\n    },\n\n      onChangedContact: function () {\n          let changed = this.contact.changed;\n          if (_.has(changed, 'group_chat'))\n              this.set('group_chat', this.contact.get('group_chat'));\n          if (_.has(changed, 'blocked'))\n              this.set('blocked', this.contact.get('blocked'));\n      },\n\n    recountUnread: function () {\n        this.set('unread', this.messages_unread.length);\n        if (this.contact && this.get('archived') && this.isMuted()) {\n        }\n        else {\n            xabber.toolbar_view.recountAllMessageCounter();\n        }\n    },\n\n    onContactDestroyed: function () {\n        this.resetUnread();\n        this.destroy();\n    },\n\n    resetUnread: function () {\n        let unread = this.get('unread');\n        if (unread > 0) {\n            this.set('unread', 0);\n            xabber.recountAllMessageCounter(unread);\n            xabber.toolbar_view.recountAllMessageCounter(unread);\n        }\n    },\n\n    searchMessages: function (query, callback) {\n        this.messages_view = new xabber.SearchedMessagesView({\n            query_text: query,\n            model: this\n        });\n        this.messages_view.messagesRequest({}, () => {\n            xabber.body.setScreen('all-chats', {\n                right: 'searched_messages',\n                model: this\n            });\n        });\n    },\n\n    sendDataForm: function (message, variable) {\n        let data_form = message.get('data_form');\n        if (!data_form)\n            return;\n        let msg = $msg({type: 'chat'});\n        data_form.fields.forEach((field) => {\n            if (field.type  === 'boolean') {\n                if (field.var === variable)\n                    field.values = [true];\n                else\n                    field.values = [false];\n            }\n        });\n        msg = this.account.addDataFormToStanza(msg, data_form);\n        data_form.addresses.forEach((address) => {\n            if (address.type === 'replyto')\n                $(msg.nodeTree).attr('to', address.jid);\n            this.account.sendMsg(msg);\n        });\n    },\n\n    setStanzaId: function (unique_id, stanza_id) {\n        let message = this.messages.get(unique_id),\n            origin_id = message.get('origin_id');\n        message.set('stanza_id', stanza_id);\n        if (!message.get('origin_id'))\n            this.item_view.content.$(`.chat-message[data-uniqueid=\"${stanza_id}\"]`).data('uniqueid', stanza_id)[0].setAttribute('data-uniqueid', stanza_id);\n        if (this.get('encrypted'))\n            this.account.omemo && this.account.omemo.updateMessage({stanza_id, origin_id}, this.contact);\n    },\n\n    getCallingAvailability: function (to, session_id, callback) {\n        let iq = $iq({to: to, type: 'get'})\n            .c('query', {xmlns: Strophe.NS.JINGLE_MSG})\n            .c('session', {id: session_id});\n        this.account.sendIQFast(iq, callback);\n    },\n\n    sendReject: function (options) {\n        !options && (options = {});\n        let msg_to = options.to || this.contact.get('jid'),\n            $reject_msg = $msg({\n                type: 'chat',\n                to: msg_to\n            })\n                .c('reject', {xmlns: Strophe.NS.JINGLE_MSG, id: options.session_id})\n                .c('call', {reason: options.reason}).up().up()\n                .c('store', {xmlns: Strophe.NS.HINTS}).up()\n                .c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n                .c('origin-id', {id: uuid(), xmlns: 'urn:xmpp:sid:0'});\n        this.account.sendMsg($reject_msg);\n    },\n\n    initIncomingCall: function (full_jid, session_id) {\n        if (!xabber.get('audio')) {\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"jingle__system_message__no_devices_to_answer\")\n            });\n            return;\n        }\n        xabber.current_voip_call = new xabber.JingleMessage({contact_full_jid: full_jid, session_id: session_id, call_initiator: this.contact.get('jid')}, {contact: this.contact, });\n        xabber.current_voip_call.modal_view.show({status: 'in'});\n        xabber.trigger('update_jingle_button');\n        if (xabber.body.screen.get('name') === 'all-chats' && !xabber.body.screen.get('right') && this.item_view)\n            this.item_view.open();\n    },\n\n    endCall: function (status) {\n        status && xabber.current_voip_call.set('status', status);\n        xabber.trigger('update_jingle_button');\n        xabber.current_voip_call.destroy();\n        xabber.current_voip_call = null;\n        xabber.trigger('update_jingle_button');\n    },\n\n    getAllMessageRetractions: function () {\n        if (!this.contact.get('group_chat'))\n            return;\n        let retractions_query = $iq({type: 'get', to: this.contact.get('jid')})\n            .c('query', {xmlns: Strophe.NS.REWRITE, version: this.retraction_version});\n        this.account.sendIQFast(retractions_query);\n    },\n\n    receiveMessage: function ($message, options) {\n        let from_bare_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            carbon_copied = options.carbon_copied;\n        // searching chat marker message\n        let $marker = $message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`),\n            $receipt_request = $message.children(`request[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $receipt_response = $message.children(`received[xmlns=\"${Strophe.NS.RECEIPTS}\"]`),\n            $jingle_msg_propose = $message.children(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_accept = $message.children(`accept[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`),\n            $jingle_msg_reject = $message.children(`reject[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n        if ($jingle_msg_propose.length && !options.searched_message) {\n            if (carbon_copied && (from_bare_jid == this.account.get('jid'))) {\n                return;\n            }\n            if (options.is_archived || options.synced_msg)\n                return;\n            else {\n                let session_id = $jingle_msg_propose.attr('id'),\n                    iq_to = $message.attr('from');\n                this.getCallingAvailability(iq_to, session_id, () => {\n                    if (xabber.current_voip_call) {\n                        let reason = from_bare_jid === Strophe.getBareJidFromJid(xabber.current_voip_call.get('contact_full_jid')) ? 'device_busy' : 'busy';\n                        this.sendReject({session_id: session_id, reason: reason});\n                        this.messages.createSystemMessage({\n                            from_jid: this.account.get('jid'),\n                            message: xabber.getString(\"jingle__system_message__cancelled_call\")\n                        });\n                        return;\n                    }\n                    this.initIncomingCall(iq_to, session_id);\n                });\n            }\n        }\n        if ($jingle_msg_accept.length) {\n            if (options.is_archived || options.synced_msg)\n                return;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_accept.attr('id')) {\n                if (carbon_copied)\n                    this.endCall();\n                else {\n                    !xabber.current_voip_call.get('state') && xabber.current_voip_call.set('state', constants.JINGLE_MSG_ACCEPT);\n                    xabber.trigger('update_jingle_button');\n                    let jingle_start = $jingle_msg_accept.find('time').attr('stamp');\n                    jingle_start = jingle_start ? Number(moment(jingle_start)) : moment.now();\n                    xabber.current_voip_call.set('jingle_start', jingle_start);\n                    !xabber.current_voip_call.get('contact_full_jid') && xabber.current_voip_call.set('contact_full_jid', $message.attr('from'));\n                    xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                    xabber.current_voip_call.set('status', 'connecting');\n                    xabber.trigger('update_jingle_button');\n                    xabber.current_voip_call.updateStatus(xabber.getString(\"dialog_jingle_message__status_connecting\"));\n                    xabber.current_voip_call.audio_notifiation = xabber.playAudio(xabber.settings.sound_on_connection);\n                }\n            }\n        }\n        if ($jingle_msg_reject.length) {\n            if (this.messages.filter(m => m.get('session_id') === $jingle_msg_reject.attr('id')).length)\n                return;\n            let time = options.delay && options.delay.attr('stamp') || $message.find('delay').attr('stamp') || $message.find('time').attr('stamp'), message, msg_text = \"\";\n            if ($jingle_msg_reject.children('call').length) {\n                let duration = $jingle_msg_reject.children('call').attr('duration'),\n                    initiator = $jingle_msg_reject.children('call').attr('initiator');\n                if (duration && initiator)\n                    msg_text =xabber.getString(((initiator && initiator === this.account.get('jid')) ? \"jingle__system_message__outgoing_call\" : \"jingle__system_message__incoming_call\"), [utils.pretty_duration(duration)]);\n                else\n                    msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            }\n            else\n                msg_text =  xabber.getString(\"jingle__system_message__cancelled_call\");\n            options.is_unread && (options.reject_contact_stanza_id = options.contact_stanza_id);\n            message = this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                time: time,\n                session_id: $jingle_msg_reject.attr('id'),\n                stanza_id: options.stanza_id,\n                contact_stanza_id: options.reject_contact_stanza_id,\n                is_unread: options.is_unread,\n                message: msg_text\n            });\n            if (options.is_archived || options.synced_msg)\n                return message;\n            if (xabber.current_voip_call && xabber.current_voip_call.get('session_id') === $jingle_msg_reject.attr('id')) {\n                xabber.stopAudio(xabber.current_voip_call.audio_notifiation);\n                let busy_audio = xabber.playAudio('busy');\n                setTimeout(() => {\n                    xabber.stopAudio(busy_audio);\n                }, 1500);\n                this.endCall($jingle_msg_reject.children('call').attr('reason') == 'device_busy' ? 'device_busy' : $jingle_msg_reject.children('call').attr('reason') == 'busy' ? 'busy' : 'disconnected');\n            }\n            return message;\n        }\n        if (!options.is_archived) {\n            let $stanza_id, $contact_stanza_id;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n                stanza_id = $(stanza_id);\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length) {\n                    if (stanza_id.attr('by') === from_bare_jid) {\n                        !$stanza_id && ($stanza_id = stanza_id);\n                        $contact_stanza_id = stanza_id;\n                    }\n                    else\n                        $stanza_id = stanza_id;\n                }\n                else {\n                    if (stanza_id.attr('by') === from_bare_jid)\n                        $contact_stanza_id = stanza_id;\n                    else\n                        $stanza_id = stanza_id;\n                }\n            });\n            (!options.stanza_id && $stanza_id) && (options.stanza_id = $stanza_id.attr('id'));\n            (!options.contact_stanza_id && $contact_stanza_id) && (options.contact_stanza_id = $contact_stanza_id.attr('id'));\n        }\n        if ($marker.length) {\n            let marker_tag = $marker[0].tagName.toLowerCase();\n            if ((marker_tag === 'markable') && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread)) {\n                this.sendMarker($message.attr('id'), 'received', options.stanza_id, options.contact_stanza_id);\n                this.get('saved') && this.sendMarker($message.attr('id'), 'displayed', options.stanza_id, options.contact_stanza_id);\n            }\n            if ((marker_tag !== 'markable') && !carbon_copied) {\n                this.receiveMarker($message, marker_tag, carbon_copied);\n                return;\n            }\n            if ((marker_tag === 'displayed') && carbon_copied)\n                this.receiveCarbonsMarker($marker);\n        }\n\n        if ($receipt_request.length && !options.is_mam && !options.is_archived && !carbon_copied && (!options.synced_msg || options.synced_msg && options.is_unread))\n            this.sendDeliveryReceipt($message);\n\n        if ($receipt_response.length)\n            this.receiveDeliveryReceipt($message);\n\n        if (!$message.find('body').length || $jingle_msg_propose.length || $jingle_msg_accept.length || $jingle_msg_reject.length) {\n            if (this.get('saved'))\n                return;\n            let view = xabber.chats_view.child(this.contact.hash_id);\n            if (!view.content)\n                view.content = new xabber.ChatContentView({chat_item: view});\n            if (view && view.content)\n                view.content.receiveNoTextMessage($message, carbon_copied);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (from_bare_jid === this.account.get('jid'))\n                return;\n            let group_jid = $message.find('invite').attr('jid') || $message.find('message').attr('from'),\n                contact = this.account.contacts.get(group_jid), chat;\n            if (contact)\n                if (contact.get('subscription') == 'both')\n                    return;\n            if (this.account.connection && this.account.connection.do_synchronization) {\n                if (options.synced_msg || !options.synced_msg && !options.is_archived)\n                    return this.messages.createInvitationFromStanza($message, options);\n            } else {\n                let iq = $iq({type: 'get'}).c('blocklist', {xmlns: Strophe.NS.BLOCKING});\n                this.account.sendIQFast(iq, (iq) => {\n                        let items = $(iq).find('item'),\n                            current_timestamp = Number(moment($message.find('delay').attr('stamp') || $message.find('time').attr('stamp') || (options.delay) && Number(moment(options.delay.attr('stamp'))) || moment.now())),\n                            last_blocking_timestamp,\n                            has_blocking = false;\n                        if (items.length > 0) {\n                            items.each((idx, item) => {\n                                let $item = $(item),\n                                    item_jid = $item.attr('jid'), blocking_timestamp = \"\";\n                                if (item_jid.indexOf(group_jid) > -1) {\n                                    has_blocking = true;\n                                    blocking_timestamp = item_jid.substr(item_jid.lastIndexOf(\"/\") + 1, item_jid.length - group_jid.length);\n                                    if (!blocking_timestamp) {\n                                        last_blocking_timestamp = \"\";\n                                        return false;\n                                    } else if (!last_blocking_timestamp || last_blocking_timestamp < blocking_timestamp)\n                                        last_blocking_timestamp = blocking_timestamp;\n                                }\n                            });\n                        }\n                        if (_.isUndefined(last_blocking_timestamp) || last_blocking_timestamp && last_blocking_timestamp < current_timestamp)\n                            return this.messages.createInvitationFromStanza($message, options);\n                    }, () => {\n                        return this.messages.createInvitationFromStanza($message, options);\n                    });\n            }\n        }\n        else\n            return this.messages.createFromStanza($message, options);\n    },\n\n    getMessageContext: function (unique_id, options) {\n        options = options || {};\n        let messages = options.mention && this.account.messages || options.searched_messages && this.account.searched_messages || options.message && xabber.all_searched_messages || this.account.messages,\n            message = messages.get(unique_id);\n        if (message) {\n            if (options.searched_messages)\n                message.set('searched_message', false);\n            let stanza_id = message.get('stanza_id');\n            this.messages_view = new xabber.MessageContextView({\n                contact: this.contact,\n                mention_context: options.mention,\n                model: this,\n                stanza_id_context: stanza_id,\n                encrypted: options.encrypted\n            });\n            this.account.context_messages.add(message);\n            this.messages_view.messagesRequest({after: stanza_id}, () => {\n                let screen = 'all-chats';\n                if (options.mention)\n                    screen = 'mentions';\n                else if (options.message)\n                    screen = xabber.body.screen.get('name');\n                xabber.body.setScreen(screen, {\n                    right: 'message_context',\n                    model: this,\n                }, {\n                    right_contact_save: true\n                });\n            });\n        }\n    },\n\n    sendDeliveryReceipt: function ($message) {\n        let $delivery_msg = $msg({\n            to: this.contact.get('jid'),\n            type: 'chat',\n            id: uuid()})\n            .c('received', { xmlns: Strophe.NS.RECEIPTS, id: $message.attr('id')});\n        this.account.sendMsg($delivery_msg);\n    },\n\n    sendMarker: function (msg_id, status, stanza_id, contact_stanza_id) {\n        status || (status = 'displayed');\n        let stanza = $msg({\n            to: this.get('jid'),\n            type: 'chat',\n            id: uuid()\n        }).c(status).attrs({\n            xmlns: Strophe.NS.CHAT_MARKERS,\n            id: msg_id || stanza_id || contact_stanza_id || \"\"\n        });\n        stanza_id && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: stanza_id, by: this.account.get('jid')}).up();\n        (!this.get('saved') && contact_stanza_id) && stanza.c('stanza-id', {xmlns: 'urn:xmpp:sid:0', id: contact_stanza_id, by: this.contact.get('jid')}).up();\n        this.account.sendMsg(stanza);\n    },\n\n    receiveMarker: function ($message, tag, carbon_copied) {\n        let $displayed = $message.find('displayed'),\n            $received = $message.find('received'),\n            error = $message.attr('type') === 'error';\n        if (error || !$displayed.length && !$received.length)\n            return;\n        let marked_msg_id = $displayed.attr('id') || $received.attr('id'),\n            marked_stanza_id = $displayed.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id') || $received.find(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(`${this.id}:encrypted`),\n                enc_msg = enc_chat && enc_chat.messages.find(m => marked_stanza_id && (m.get('stanza_id') === marked_stanza_id || m.get('contact_stanza_id') === marked_stanza_id) || m.get('msgid') === marked_msg_id);\n            if (enc_msg)\n                enc_chat.receiveMarker($message, tag, carbon_copied);\n            return;\n        }\n        if (msg.isSenderMe()) {\n            if ($received.length) {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DELIVERED)\n                    return;\n                }\n                if (msg_state !== constants.MSG_DISPLAYED) {\n                    let delivered_time = $received.children('time').attr('stamp');\n                    if (delivered_time) {\n                        msg.set('time', pretty_datetime(delivered_time));\n                        msg.set('timestamp', Number(delivered_time));\n                    }\n                }\n                this.setMessagesDelivered(msg.get('timestamp'));\n            } else {\n                let msg_state = msg.get('state');\n                if (msg_state === constants.MSG_ERROR){\n                    msg.set('state', constants.MSG_DISPLAYED)\n                    return;\n                }\n                this.setMessagesDisplayed(msg.get('timestamp'));\n            }\n        } else {\n            msg.set('is_unread', false);\n        }\n    },\n\n    setMessagesDelivered: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DELIVERED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DELIVERED));\n    },\n\n    setMessagesDisplayed: function (timestamp) {\n        !timestamp && (timestamp = moment.now());\n        let undelivered_messages = this.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED));\n        if (!undelivered_messages.length) {\n            let chat =  this.account.chats.get(this.id + ':encrypted');\n            chat && (undelivered_messages = chat.messages.filter(message => message.isSenderMe() && (message.get('timestamp') <= timestamp) && (message.get('state') > constants.MSG_PENDING) && (message.get('state') < constants.MSG_DISPLAYED)));\n        }\n        undelivered_messages.forEach(message => message.set('state', constants.MSG_DISPLAYED));\n    },\n\n    receiveCarbonsMarker: function ($marker) {\n        let stanza_id = $marker.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg_id = $marker.attr('id'),\n            msg = this.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id), msg_idx;\n        msg && (msg_idx = this.messages.indexOf(msg));\n        if (!msg) {\n            let enc_chat =  this.account.chats.get(this.id + ':encrypted'),\n                enc_msg = enc_chat && enc_chat.messages.find(m => stanza_id && (m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id) || m.get('msgid') === msg_id);\n            if (enc_msg)\n                enc_chat.receiveCarbonsMarker($marker);\n            return;\n        }\n        if (msg_idx > -1) {\n            this.set('const_unread', 0);\n            for (let i = msg_idx; i >= 0; i--) {\n                let message = this.messages.models[i];\n                message.set('is_unread', false);\n            }\n        }\n        else {\n            let unread_msg = this.messages_unread.find(m => m.get('stanza_id') === stanza_id || m.get('contact_stanza_id') === stanza_id || m.get('msgid') === msg_id);\n            unread_msg && unread_msg.set('is_unread', false);\n        }\n    },\n\n    receiveDeliveryReceipt: function ($message) {\n        let $received = $message.find('received'),\n            delivered_origin_id = $received.attr('id'),\n            delivered_stanza_id = $received.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n            msg = this.account.messages.get(delivered_origin_id || delivered_stanza_id);\n        if (!msg)\n            return;\n        msg.isSenderMe() && msg.set('state', constants.MSG_DELIVERED);\n    },\n\n    onPresence: function (type) {\n        let jid = this.get('jid');\n        if (!this.contact.get('group_chat') && !this.contact.get('in_roster')) {\n            if (type === 'subscribe') {\n                this.messages.createSystemMessage({\n                    from_jid: jid,\n                    auth_request: true,\n                    message: xabber.getString(\"action_subscription_received\")\n                });\n            }\n        }\n    },\n\n    onRosterPush: function (type) {\n        let jid = this.get('jid');\n        // not used\n        if (type === 'remove')\n            this.messages.createSystemMessage({\n                from_jid: jid,\n                silent: false,\n                message: xabber.getString(\"action_contact_deleted\")\n            });\n\n    },\n\n    retractMessages: function (msgs, group_chat, symmetric) {\n        let msgs_responses = 0, count = msgs.length, dfd = new $.Deferred();\n        dfd.done((num) => {\n            if (num === 0) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n            else if (num !== msgs.length) {\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            }\n        });\n        $(msgs).each((idx, item) => {\n            let stanza_id = item.get('stanza_id'),\n                contact_stanza_id = item.get('contact_stanza_id');\n            if (stanza_id || contact_stanza_id) {\n                let iq_retraction = $iq({type: 'set', to: group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')})\n                    .c('retract-message', {id: (this.get('group_chat') && contact_stanza_id || stanza_id), xmlns: Strophe.NS.REWRITE, symmetric: symmetric, by: this.account.get('jid')});\n                this.account.sendIQFast(iq_retraction, (success) => {\n                        this.item_view.content.removeMessage(item);\n                        msgs_responses++;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    }, (error) => {\n                        msgs_responses++;\n                        if ($(error).find('not-allowed').length)\n                            count--;\n                        (msgs_responses === msgs.length) && dfd.resolve(count);\n                    });\n            }\n        });\n    },\n\n    retractMessagesByUser: function (user_id) {\n        let iq_retraction = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('retract-user', {id: user_id, xmlns: Strophe.NS.REWRITE, symmetric: true});\n        this.account.sendIQFast(iq_retraction, (success) => {\n            let user_msgs = this.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == user_id));\n            $(user_msgs).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    retractAllMessages: function (symmetric, callback, errback) {\n        let is_group_chat = this.get('group_chat'),\n            iq_retraction = $iq({type: 'set', to: is_group_chat ? (this.contact.get('full_jid') || this.contact.get('jid')) : this.account.get('jid')}),\n            retract_attrs = {xmlns: Strophe.NS.REWRITE, symmetric: symmetric};\n        !is_group_chat && (retract_attrs.conversation = this.get('jid'));\n        this.get('encrypted') && (retract_attrs.type = 'encrypted');\n        iq_retraction.c('retract-all', retract_attrs);\n        this.account.sendIQFast(iq_retraction, (iq_response) => {\n            let all_messages = this.messages.models;\n            $(all_messages).each((idx, msg) => {\n                this.item_view.content.removeMessage(msg);\n            });\n            callback && callback();\n        }, (error) => {\n            if ($(error).find('not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            errback && errback();\n        });\n    },\n\n    showBlockedRequestMessage: function () {\n        if (this.messages.length)\n            this.messages.createSystemMessage({\n                from_jid: this.account.get('jid'),\n                message: xabber.getString(\"action_contact_blocked\"),\n                time: this.messages.last().get('time')\n            });\n    },\n\n    muteChat: function (muted_seconds) {\n        let muted = this.isMuted(),\n            is_muted = muted && muted !== '0' ? true : false,\n            muted_value = is_muted ? '' : '0';\n        if (muted_seconds || muted_seconds === '')\n            muted_value = muted_seconds;\n        let conversation_options = {\n            jid: this.contact.get('jid'),\n            mute: muted_value,\n            type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this)\n        },\n        iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq);\n    },\n\n    getConversationType: function (chat) {\n        if(chat.get('encrypted'))\n            return Strophe.NS.SYNCHRONIZATION_OMEMO;\n        if(chat.contact.get('group_chat'))\n            return Strophe.NS.GROUP_CHAT;\n        return Strophe.NS.SYNCHRONIZATION_REGULAR_CHAT\n    },\n\n    deleteFromSynchronization: function (callback, errback) {\n        let conversation_options = {jid: this.get('jid'), status: 'deleted', type: this.get('sync_type') ? this.get('sync_type') : this.getConversationType(this) };\n        this.account.cached_sync_conversations.removeFromCachedConversations(conversation_options.jid +  '/' + conversation_options.type);\n        let iq = $iq({type: 'set', to: this.account.get('jid')})\n            .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n            .c('conversation', conversation_options);\n        this.account.sendIQFast(iq, (success) => {\n            callback && callback(success);\n        }, (error) => {\n            errback && errback(error);\n        });\n    }\n});\n\nxabber.ChatItemView = xabber.BasicView.extend({\n    className: 'chat-item list-item',\n    template: templates.chat_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.message_counter = 0;\n        this.$el.attr('data-id', this.model.id);\n        if (!this.model.sync_created)\n            this.content = new xabber.ChatContentView({chat_item: this});\n        this.updateName();\n        this.updateStatus();\n        this.updateCounter();\n        this.updateAvatar();\n        this.updateMutedState();\n        this.updatePinned();\n        this.updateArchivedState();\n        this.updateColorScheme();\n        this.updateGroupChats();\n        this.updateIcon();\n        this.updateEncrypted();\n        this.updateChatError();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.model.on(\"change:unread\", this.updateCounter, this);\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"change:const_unread\", this.updateCounter, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.model.on(\"change:archived\", this.updateArchivedState, this);\n        this.model.on(\"change:muted\", this.updateMutedState, this);\n        this.model.on(\"open\", this.open, this);\n        this.model.on(\"remove_opened_chat\", this.onClosed, this);\n        this.model.messages.on(\"add\", this.updateChatCard, this);\n        this.model.messages.on(\"destroy\", this.onMessageRemoved, this);\n        this.model.messages.on(\"change:state\", this.onChangedMessageState, this);\n        if (this.contact) {\n            this.updateIncomingSubscription();\n            this.contact.on(\"change:name\", this.updateName, this);\n            this.contact.on(\"change:invitation\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_in\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:subscription_request_out\", this.updateIncomingSubscription, this);\n            this.contact.on(\"change:status\", this.updateStatus, this);\n            this.contact.on(\"change:private_chat\", this.updateIcon, this);\n            this.contact.on(\"change:invitation\", this.updateIcon, this);\n            this.contact.on(\"change:incognito_chat\", this.updateIcon, this);\n            this.contact.on(\"change:image\", this.updateAvatar, this);\n            this.contact.on(\"change:blocked\", this.onBlocked, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChats, this);\n            this.contact.on(\"change:in_roster\", this.updateAcceptedStatus, this);\n            this.contact.on(\"remove_invite\", this.removeInvite, this);\n            this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        }\n        this.$el.switchClass('saved-chat', this.model.get('saved'));\n        this.$el.find('.circle-avatar').switchClass('ground-color-700', this.model.get('saved'));\n        this.model.get('saved') && this.$el.find('.circle-avatar').html(env.templates.svg['saved-messages']());\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n    },\n\n    updateChatCard: function (msg) {\n        if (this.content){\n            return;\n        }\n        if (this.message_counter == 0 ){\n            this.message_counter++;\n            return\n        }\n        this.content = new xabber.ChatContentView({ chat_item: this, new_message: msg });\n        this.updateLastMessage(msg);\n        return;\n    },\n\n    onChangedMessageState: function (message) {\n        if (message.get('state') === constants.MSG_DISPLAYED && this.model.get('last_displayed_id') < message.get('stanza_id')) {\n            this.model.set('last_displayed_id', message.get('stanza_id'));\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        } else if (message.get('state') === constants.MSG_DELIVERED && this.model.get('last_delivered_id') < message.get('stanza_id')) {\n            this.model.set('last_delivered_id', message.get('stanza_id'));\n        }\n        if (this.content) {\n            let $message = this.content.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n                $elem = $message.find('.msg-delivering-state');\n            $elem.attr({\n                'data-state': message.getState(),\n                'title': message.getVerboseState()\n            });\n            ($elem.attr('data-state') === constants.MSG_STATE[constants.MSG_ERROR]) && $elem.dropdown({\n                inDuration: 100,\n                outDuration: 100,\n                constrainWidth: false,\n                hover: false,\n                alignment: 'left'\n            });\n        }\n        if (message === this.model.last_message) {\n            this.updateLastMessage();\n        }\n        this.updateChatError();\n    },\n\n    updateName: function () {\n        if (this.model.get('saved')) {\n            this.$('.chat-title').text(xabber.getString(\"saved_messages__header\"));\n            return;\n        }\n        this.$('.chat-title').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        if (this.model.get('saved'))\n            return;\n        let status = this.contact.get('status');\n        this.$('.status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n    },\n\n    updateActiveStatus: function () {\n        this.$el.switchClass('active', this.model.get('active'));\n    },\n\n    updateAcceptedStatus: function () {\n        let in_roster = this.contact.get('in_roster');\n        if (in_roster)\n            this.model.set('is_accepted', true);\n    },\n\n    onBlocked: function () {\n        this.updateIcon();\n        this.$el.switchClass('blocked', this.model.get('blocked'));\n    },\n\n    updateCounter: function () {\n        let unread = this.model.get('unread') + this.model.get('const_unread');\n        this.$('.msg-counter').showIf(unread).text(unread || '');\n        this.updateTextClipping();\n    },\n\n    updateIncomingSubscription: function () {\n        this.$('.msg-incoming-subscription').showIf(this.contact.get('invitation') || (this.contact.get('subscription_request_in') && this.contact.get('subscription') != 'both'));\n        this.updateTextClipping();\n    },\n\n    updateChatError: function () {\n        let error_msgs = this.model.messages.filter(m => m.get('state') === -1)\n        this.$('.msg-chat-error').showIf(error_msgs.length);\n        this.updateTextClipping();\n    },\n\n    updateTextClipping: function () {\n        let indicators_count = this.$('.chat-item-notifications-wrap').children(':not(.hidden)').length;\n        this.$('.last-msg').switchClass('triple-indicators', indicators_count === 3)\n        this.$('.last-msg').switchClass('quad-indicators', indicators_count === 4)\n    },\n\n    updateAvatar: function () {\n        if (this.model.get('saved'))\n            return;\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updatePinned: function () {\n        let is_pinned = this.model.get('pinned');\n        this.$('.pinned-icon').showIf(is_pinned && is_pinned !== '0');\n        if (is_pinned)\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateIcon: function () {\n        if (!this.contact)\n            return;\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    updateMutedState: function () {\n        if (!this.contact)\n            return;\n        this.$('.msg-counter').switchClass('muted-chat-counter', this.model.isMuted());\n        this.$('.muted-icon').switchClass('mdi-bell-off', (this.model.isMuted() > 4800000000)).switchClass('mdi-bell-sleep', (this.model.isMuted() <= 4800000000));\n        this.$('.muted-icon').showIf(this.model.isMuted());\n    },\n\n    updateArchivedState: function () {\n        if (!this.contact)\n            return;\n        let archived = this.model.get('archived');\n        if (archived || (!archived && xabber.toolbar_view.$('.active').hasClass('archive-chats')))\n            this.$el.detach();\n        if (archived && xabber.toolbar_view.$('.active').hasClass('archive-chats') || !archived && !xabber.toolbar_view.$('.active').hasClass('archive-chats'))\n            xabber.chats_view.updateChatPosition(this.model);\n    },\n\n    updateGroupChats: function () {\n        if (!this.contact)\n            return;\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.status').hideIf(is_group_chat);\n        this.$('.chat-icon').showIf(is_group_chat);\n        this.updateIcon();\n        if (is_group_chat) {\n            this.$el.addClass('group-chat');\n            this.model.set('group_chat', true);\n        }\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onMessageRemoved: function (msg) {\n        if (this.model.last_message === msg) {\n            let last_message;\n            for (let idx = this.model.messages.length-1; idx >= 0; idx--) {\n                last_message = this.model.messages.at(idx);\n                if (!last_message.get('silent'))\n                    break;\n            }\n            this.model.last_message = last_message;\n            this.updateLastMessage();\n        }\n        this.deletePlayersFromMessage(msg);\n    },\n\n    deletePlayersFromMessage: function (message) {\n        let players = []\n        message.get('msg_player_videos') && (players = players.concat(message.get('msg_player_videos')));\n        message.get('msg_player_audios') && (players = players.concat(message.get('msg_player_audios')));\n        if (players.length){\n            if (xabber.current_plyr_player){\n                let is_current_player = xabber.current_plyr_player.is_popup ?\n                    players.includes(xabber.current_plyr_player.chat_item.model.plyr_players[xabber.current_plyr_player.player_index])\n                    : players.includes(xabber.current_plyr_player);\n\n                if (is_current_player){\n                    xabber.plyr_players.forEach((item) => {\n                        if (item.$audio_elem){\n                            if (item.$audio_elem.voice_message)\n                                item.$audio_elem.voice_message.stopTime()\n                        }\n                        else\n                            item.stop();\n                    })\n                    if (xabber.current_plyr_player.is_popup && xabber.plyr_player_popup){\n                        xabber.plyr_player_popup.closePopup();\n                    } else {\n                        xabber.current_plyr_player = null;\n                        xabber.trigger('plyr_player_updated');\n                    }\n                }\n            }\n            this.model.plyr_players = this.model.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.plyr_players = xabber.plyr_players.filter((obj) => !players.includes(obj));\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    updateEmptyChat: function () {\n        let msg_time = this.model.get('timestamp'),\n            is_empty = Number(this.model.get('last_delivered_id')) || Number(this.model.get('last_displayed_id')) || Number(this.model.get('last_read_msg'));\n        this.$('.last-msg').html(xabber.getString(is_empty ? \"recent_chat__last_message_retracted\" : \"no_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateEncryptedChat: function () {\n        let msg_time = this.model.get('timestamp');\n        this.$('.last-msg').html(xabber.getString(\"recent_chat__decrypting_messages\").italics());\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateLastMessage: function (msg) {\n        msg || (msg = this.model.last_message);\n        if (!msg) {\n            !this.model.messages.length && this.updateEmptyChat();\n            return;\n        }\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'), msg_from = \"\",\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = forwarded_message ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n            msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact && this.contact.my_info && this.contact.my_info.attributes || {};\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (this.model.get('group_chat'))\n            msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n        msg_from && (msg_from = $('<span class=text-color-700/>').text(msg_from + ': '));\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg.get('type') === 'file_upload') {\n                msg_images = msg_files.filter(f => f && f.type && utils.isImageType(f.type));\n                msg_files = msg_files.filter(f => f && !(f.type && utils.isImageType(f.type)));\n            }\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                    msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                else if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n        }\n        else {\n            if (msg.get('type') == 'system') {\n                msg_from = \"\";\n                if (msg.get('invite'))\n                    msg_text = xabber.getString(\"groupchat_invitation_to_group_chat\", [(this.contact && this.contact.get('incognito_chat')) ? 'incognito' : 'public']);\n                msg.get('private_invite') && (msg_text = xabber.getString(\"recent_chat__last_message__private_invitation\"));\n                if (this.model.get('group_chat'))\n                    msg_text = $('<i/>').text(msg_text);\n                else\n                    msg_text = $('<span class=text-color-500/>').text(msg_text);\n                this.$('.last-msg').html(msg_text);\n                if (msg.get('auth_request')){\n                    xabber.toolbar_view.recountAllMessageCounter();\n                }\n            }\n            else {\n                if (forwarded_message) {\n                    if (msg.get('message')) {\n                        msg_text = msg.get('message');\n                        this.$('.last-msg').text(msg_text);\n                    }\n                    else {\n                        let first_forwarded_msg = forwarded_message[0];\n                        if (first_forwarded_msg.get('message')) {\n                            let fwd_msg_files = first_forwarded_msg.get('files') || [],\n                                fwd_msg_images = first_forwarded_msg.get('images') || [],\n                                fwd_msg_locations = first_forwarded_msg.get('locations') || [];\n                            first_forwarded_msg.get('videos') && first_forwarded_msg.get('videos').length && (fwd_msg_files = fwd_msg_files.concat(first_forwarded_msg.get('videos')));\n                            if (fwd_msg_files.length || fwd_msg_images.length || fwd_msg_locations.length) {\n                                let $colored_span = $('<span class=\"text-color-500\"/>');\n                                if (msg.get('type') === 'file_upload') {\n                                    fwd_msg_images = fwd_msg_files.filter(f => f.type && utils.isImageType(f.type));\n                                    fwd_msg_files = fwd_msg_files.filter(f => !(f.type && utils.isImageType(f.type)));\n                                }\n                                if (fwd_msg_files.length && fwd_msg_images.length)\n                                    msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [fwd_msg_files.length + fwd_msg_images.length]));\n                                else {\n                                    if (fwd_msg_files.length == 1 && (fwd_msg_files[0].is_audio || fwd_msg_files[0].voice))\n                                        msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(fwd_msg_files[0].duration));\n                                    else if (fwd_msg_files.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_files.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_images.length > 0) {\n                                        let total_size = 0;\n                                        fwd_msg_images.forEach((f) => {total_size+=Number(f.size)});\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                                    }\n                                    if (fwd_msg_locations.length > 0) {\n                                        msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_msg_locations.length));\n                                    }\n                                }\n                                if (this.model.get('group_chat')) {\n                                    this.$('.last-msg').html(\"\").append(msg_from).append('» ').append(msg_text);\n                                } else {\n                                    this.$('.last-msg').html(\"» \").append(msg_text);\n                                }\n                            } else if (this.model.get('group_chat')) {\n                                msg_text = first_forwarded_msg.get('message');\n                                msg_text = '» ' + msg_text;\n                                this.$('.last-msg').text(msg_text);\n                            } else {\n                                msg_text = first_forwarded_msg.get('message');\n                                this.$('.last-msg').text(msg_text);\n                                msg_from = '» ';\n                            }\n                        }\n                        else {\n                            if (forwarded_message.length === 1) {\n                                let fwd_msg_txt = xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).slice(2)\n                                fwd_msg_txt = fwd_msg_txt.charAt(0).toUpperCase() + fwd_msg_txt.slice(1)\n                                msg_text = $('<i/>').text(fwd_msg_txt);\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                            else {\n                                msg_text = $('<i/>').text(xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length));\n                                this.$('.last-msg').html('» ').append(msg_text);\n                            }\n                        }\n                    }\n                }\n                else {\n                    msg_text = msg.getText();\n                    this.$('.last-msg').text(msg_text);\n                }\n            }\n            this.$('.last-msg').prepend(msg_from);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n        this.$('.msg-delivering-state').showIf(msg.get('type') !== 'system' && msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n            .attr('data-state', msg.getState());\n    },\n\n    openByClick: function () {\n        this.open();\n    },\n\n    open: function (options) {\n        if (!this.content){\n            this.content = new xabber.ChatContentView({chat_item: this});\n        }\n        options || (options = {right_contact_save: true, clear_search: false});\n        xabber.chats_view.openChat(this, options);\n        this.content.bottom.click_counter = 0;\n        this.content.bottom.setDefaultPlaceholder();\n    },\n\n    removeInvite: function (options) {\n        if (!this.account.server_features.get(Strophe.NS.REWRITE))\n            return;\n        options || (options = {});\n        let msgs = _.clone(this.model.messages.models);\n        this.model.set({'last_archive_id': undefined, 'first_archive_id': undefined});\n        msgs.forEach((item) => {\n            if (item.get('invite')) {\n                let iq_retraction = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('retract-message', {\n                        id: item.get('stanza_id'),\n                        xmlns: Strophe.NS.REWRITE,\n                        symmetric: false,\n                        by: this.account.get('jid')\n                    });\n                this.account.sendIQFast(iq_retraction);\n                item && this.content.removeMessage(item);\n            }\n        });\n        this.model.recountUnread();\n        delete this.contact.attributes.invitation;\n        this.updateIcon();\n    },\n\n    onClosed: function () {\n        this.parent.onChatRemoved(this.model, {soft: true});\n    }\n});\n\n  xabber.MessagesView = xabber.BasicView.extend({\n      template: templates.chat_content,\n      ps_selector: '.chat-content',\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n          this.$search_form = this.$('.search-form-header');\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this._scrolltop = this.getScrollTop();\n          this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          let wheel_ev = this.defineMouseWheelEvent();\n          this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n          this.$('.back-to-bottom').click(this.backToBottom.bind(this));\n      },\n\n      defineMouseWheelEvent: function () {\n          if (!_.isUndefined(window.onwheel)) {\n              return \"wheel\";\n          } else if (!_.isUndefined(window.onmousewheel)) {\n              return \"mousewheel\";\n          } else {\n              return \"MozMousePixelScroll\";\n          }\n      },\n\n      keyupSearch: function (ev) {\n          if (ev.keyCode === constants.KEY_ENTER) {\n              let query = this.$search_form.find('input').val();\n              this.model.searchMessages(query, (messages) => {\n              });\n          }\n          if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n              this.chat_content.head.renderSearchPanel();\n          }\n      },\n\n      onMouseWheel: function (ev) {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onClickMessage:function (ev) {\n          this.chat_content.onClickMessage(ev);\n      },\n\n      onClickLink:function (ev) {\n          this.chat_content.onClickLink(ev);\n      },\n\n      onClickLocationLink:function (ev) {\n          this.chat_content.onClickLocationLink(ev);\n      },\n\n      onClickLocation:function (ev) {\n          this.chat_content.onClickLocation(ev);\n      },\n\n      onHoverLocation:function (ev) {\n          this.chat_content.onHoverLocation(ev);\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || 0;\n          this._scrolltop = this.getScrollTop();\n          if (!this.history_loaded && !this.loading_history && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n              this.loading_history = true;\n              this.messagesRequest({before: this.first_msg_id}, () => {\n                  this.loading_history = false;\n              });\n          }\n      },\n\n      backToBottom: function () {\n          this.openChat();\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function () {},\n\n      emptyChat: function () {\n          this.$('.chat-content').html($('<span class=\"error\"/>').text(xabber.getString(\"no_messages\")));\n      },\n\n      openChat: function () {\n          this.model.item_view.open({right_contact_save: true, clear_search: false});\n      },\n\n      addMessageHTML: function ($message, index, last_index) {\n          let scrolled_from_top,\n              scrolled_from_bottom = this.getScrollBottom();\n          if (index === 0)\n              $message.prependTo(this.$('.chat-content'));\n          else\n              $message.insertAfter(this.$('.chat-message').eq(index - 1));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          this.chat_content.updateMessageInChat($message[0]);\n          if ($next_message.length) {\n              this.chat_content.updateMessageInChat($next_message[0]);\n          }\n          this.chat_content.initPopup($message);\n          if (scrolled_from_top)\n              this.scrollTo(scrolled_from_top);\n          else\n              this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n          return $message;\n      }\n\n  });\n\n  xabber.MessageContextView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap messages-context-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          options = options || {};\n          this.stanza_id = options.stanza_id_context;\n          this.encrypted = options.encrypted;\n          this.mention_context = options.mention_context;\n          if (!this.model.item_view.content)\n              this.chat_content = new xabber.ChatContentView({chat_item: this.model.item_view});\n          this.$history_feedback = this.$('.load-history-feedback');\n          this.account.context_messages = new xabber.Messages(null, {account: this.account});\n          this.account.context_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.context_messages.on(\"add\", this.addMessage, this);\n          xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n      },\n\n      render: function () {\n          this.scrollToTop();\n          this.onUpdatePlyr();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this.encrypted && this.$el.attr('data-trust', true)\n      },\n\n      onMouseWheel: function (ev) {\n          if (!this.loading_history)\n              if (ev.originalEvent.deltaY < 0) {\n                  if (!this.first_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({before: this.first_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n              else {\n                  if (!this.last_history_loaded) {\n                      this.loading_history = true;\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                      });\n                  }\n              }\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScroll: function () {\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n          this._prev_scrolltop = this._scrolltop || 0;\n          this._scrolltop = this.getScrollTop();\n          this._scrollbottom = this.getScrollBottom();\n\n          if (!this.loading_history)\n              if (!this.first_history_loaded && (this._scrolltop < this._prev_scrolltop) && (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n                  this.loading_history = true;\n                  this.showHistoryFeedback();\n                  this.messagesRequest({before: this.first_msg_id}, () => {\n                      this.loading_history = false;\n                      this.hideHistoryFeedback();\n                  });\n              }\n              else {\n                  if (!this.last_history_loaded && (this._scrolltop > this._prev_scrolltop) && (this._scrollbottom < 100 || this.getPercentScrolled() > 0.9)) {\n                      this.loading_history = true;\n                      this.showHistoryFeedback();\n                      this.messagesRequest({after: this.last_msg_id}, () => {\n                          this.loading_history = false;\n                          this.hideHistoryFeedback();\n                      });\n                  }\n              }\n      },\n\n      showHistoryFeedback: function () {\n          this.$history_feedback.text(xabber.getString(\"loading_history\")).removeClass('hidden');\n      },\n\n      hideHistoryFeedback: function () {\n          this.$history_feedback.addClass('hidden');\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          !options.max && (options.max = xabber.settings.mam_messages_limit);\n          !options.after && !options.before && (options.before = '');\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first) && (this.last_msg_id = rsm.last);\n                  if (options.after && (messages.length < options.max))\n                      this.last_history_loaded = true;\n                  if (options.before && (messages.length < options.max))\n                      this.first_history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {context_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          if (this.mention_context && (message.get('stanza_id') === this.stanza_id)) {} else message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('context-message'),\n              index = this.account.context_messages.indexOf(message);\n          if (message.get('stanza_id') === this.stanza_id) {\n              $message.addClass('message-from-context');\n              setTimeout(() => {\n                  $message.removeClass('message-from-context')\n              }, 3000);\n          }\n          this.addMessageHTML($message, index, this.account.context_messages.findLastIndex());\n      },\n\n      onUpdatePlyr: function (ev) {\n          this.$('.plyr-video-container').removeClass('active-plyr-container');\n          if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n              let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n              if ($message.length) {\n                  $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n              }\n          }\n      },\n  });\n\n  xabber.SearchedMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.query_text = options.query_text;\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          this.account.searched_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          return this;\n      },\n\n      render: function () {\n          this.$search_form.find('input').val(this.query_text);\n          this.$search_form.slideToggle(10, () => {\n              if (this.$search_form.css('display') !== 'none')\n                  this.$search_form.find('input').focus();\n              this.scrollToBottom();\n          });\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'withtext', value: this.query_text}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {searched_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n              index = this.account.searched_messages.indexOf(message);\n          this.addMessageHTML($message, index);\n      }\n  });\n\n  xabber.ContactSearchedMessagesView = xabber.MessagesView.extend({\n      template: templates.chat_content_contact,\n      ps_settings: {\n          wheelPropagation: true\n      },\n      avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n      className: 'chat-content-wrap searched-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          \"click .btn-cancel-searching\": \"openChat\",\n          \"keyup .messages-search-form\": \"keyupSearch\",\n          \"click .close-search-icon\": \"clearSearch\",\n          'click .btn-back': 'hideSearch'\n      },\n\n      _initialize: function (options) {\n          this.model = options.model;\n          this.contact = options.contact;\n          this.account = this.model.account;\n          this.$search_form = this.$('.search-form-header');\n          this.timer = null;\n          this.loading_history = false;\n          this.history_loaded = false;\n          this.first_msg_id = 0;\n          this.last_msg_id = 0;\n          this.chat_content = options.chat_content || this.model.item_view.content;\n          this.parent.model.set('search_hidden', true)\n          return this;\n      },\n\n      render: function () {\n          if (this.account.searched_messages)\n              this.searched_messages = this.account.searched_messages\n          this.account.searched_messages = new xabber.Messages(null, {account: this.account});\n          if (this.searched_messages)\n              this.account.searched_messages.add(this.searched_messages.toJSON(), {silent : true});\n          this.account.searched_messages.on(\"add\", this.addMessage, this);\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$el.html(this.parent.model.get('saved_search_panel'));\n              this.model.set('saved_search_panel', undefined);\n          }\n          else {\n              this.emptyChat();\n              this.$el.html(this.template());\n              this.emptyChat();\n              if (this.parent.model.get('search_hidden'))\n                  this.hideSearch();\n          }\n          this.ps_container = this.$('.search-messages-content-wrap');\n          if (this.ps_container.length) {\n              this.ps_container.perfectScrollbar(\n                  _.extend(this.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$search_form = this.$('.search-form-header');\n          if (this.parent.model.get('saved_search_panel')) {\n              this.$search_form.find('input').focus();\n              if (this.parent.model.get('saved_search_panel_scroll'))\n                  this.scrollTo(this.parent.model.get('saved_search_panel_scroll'));\n          }\n      },\n\n      clearSearch: function () {\n          this.$search_form.find('input').val('');\n          this.emptyChat();\n      },\n\n\n      keyupSearch: function (ev) {\n          this.$('.close-search-icon').hideIf(!this.$search_form.find('input').val());\n          if (ev.keyCode === constants.KEY_ENTER) {\n              this.emptyChat();\n              let query = this.$search_form.find('input').val();\n              this.$('.preloader-wrap').hideIf(false);\n              this.loading_timestamp = Number(moment.now());\n              this.messagesRequest(query, this.loading_timestamp, undefined, [], (messages, rsm) => {\n              });\n          }\n      },\n\n      emptyChat: function () {\n          if (this.account.searched_messages)\n              this.account.searched_messages.reset();\n          this.$('.chat-content').html('');\n          this.$('.messages-count').hideIf(true);\n          this.$('.preloader-wrap').hideIf(true);\n          this.$('.search-results').hideIf(true);\n          this.$('.close-search-icon').hideIf(true);\n      },\n\n      messagesRequest: function (query, timestamp, rsm, loaded_messages, callback) {\n          if(!query || this.loading_timestamp != timestamp) {\n              this.emptyChat();\n              return true;\n          }\n          let messages = [],\n              options = {},\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              var: [{var: 'withtext', value: query}]\n          });\n          if (rsm && rsm.last)\n              _.extend(options, {\n                  after: rsm.last,\n              });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid)\n                  messages.push(message);\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options, (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.searched_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  loaded_messages = loaded_messages.concat(messages)\n                  if (messages.length == options.max)\n                      this.messagesRequest(query, timestamp, rsm, loaded_messages, (messages, rsm) => {});\n                  else if (loaded_messages.length == rsm.count) {\n                      if (rsm.count != 0) {\n                          let message_count = rsm.count;\n                          this.emptyChat()\n                          // list.sort((a, b) => (a.color > b.color) ? 1 : -1)\n                          $(loaded_messages).each((idx, message) => {\n                              let $message = $(message),\n                                  $jingle_msg_propose = $message.find(`propose[xmlns=\"${Strophe.NS.JINGLE_MSG}\"]`);\n                              if ($jingle_msg_propose.length)\n                                  message_count--;\n                              this.account.chats.receiveChatMessage($message, {\n                                  searched_message: true,\n                                  searched_in_contact_messages: true,\n                                  query: query\n                              });\n                          });\n                          this.$('.messages-count').hideIf(!message_count);\n                          this.$('.close-search-icon').hideIf(!message_count);\n                          this.$('.search-results').hideIf(message_count);\n                          this.$('.messages-count').text(xabber.getQuantityString(\"searched_messages_count\", message_count));\n                      }\n                      else {\n                          this.emptyChat();\n                          this.$('.close-search-icon').hideIf(false);\n                          this.$('.search-results').hideIf(false);\n                      }\n\n                  }\n                  callback && callback(messages, rsm);\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessageHTML: function ($message, index, last_index) {\n          $message.prependTo(this.$('.chat-content'));\n          if (index === last_index)\n              scrolled_from_top = this.getScrollTop();\n          let $next_message = $message.nextAll('.chat-message').first();\n          // this.chat_content.updateMessageInChat($message[0]);\n          // if ($next_message.length) {\n          //     this.chat_content.updateMessageInChat($next_message[0]);\n          // }\n          // this.chat_content.initPopup($message);\n          return $message;\n      },\n\n      addMessage: function (message) {\n          if (!this.parent.model.get('search_hidden')) {\n              if (message.get('auth_request') || !message.get('searched_in_contact_messages'))\n                  return;\n              message.set('is_archived', true);\n              message.set('searched_message', true);\n              let $message = this.chat_content.buildMessageHtml(message).addClass('searched-message'),\n                  index = this.account.searched_messages.indexOf(message);\n              this.chat_content.showMessageAuthor($message);\n              this.addMessageHTML($message, index);\n          }\n      },\n\n      hideSearch: function (ev) {\n          this.parent.model.set('search_hidden', true);\n          this.$('.search-input').val('')\n          this.emptyChat();\n          if (this.parent.ps_container.length) {\n              this.parent.ps_container.perfectScrollbar(\n                  _.extend(this.parent.ps_settings || {}, xabber.ps_settings)\n              );\n          }\n          this.$('.search-wrap').hideIf(this.parent.model.get('search_hidden'))\n      },\n\n      onClickMessage: function (ev) {\n          let $elem = $(ev.target),\n              $msg = $elem.closest('.chat-message');\n          this.parent.model.set('saved_search_panel_scroll', this.ps_container[0].scrollTop);\n          this.ps_container.perfectScrollbar('destroy');\n          this.parent.model.set('saved_search_panel', this.$el.clone());\n          this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n      }\n  });\n\n  xabber.ParticipantMessagesView = xabber.MessagesView.extend({\n      className: 'chat-content-wrap participant-messages-wrap',\n\n      events: {\n          'click .chat-message': 'onClickMessage',\n          'click .chat-msg-location-content': 'onClickLocation',\n          'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n          'click .mdi-link-variant': 'onClickLink',\n          'click .msg-copy-location' : 'onClickLocationLink',\n          'click .btn-cancel-selection' : 'openChat',\n          'click .btn-retract-messages' : 'retractMessages',\n          \"keyup .messages-search-form\": \"keyupSearch\"\n      },\n\n      __initialize: function (options) {\n          this.participant = options.participant;\n          this.member_jid = this.participant.jid;\n          this.member_id = this.participant.id;\n          this.member_nickname = this.participant.nickname;\n          this.account.participant_messages = new xabber.Messages(null, {account: this.account});\n          this.account.participant_messages.on(\"add\", this.addMessage, this);\n          this.account.participant_messages.on(\"change:last_replace_time\", this.chat_content.updateMessage, this);\n          this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n          return this;\n      },\n\n      render: function () {\n          this.$('.chat-content').css('height', 'calc(100% - 32px)');\n          this.$('.participant-messages-header .messages-by-header .participant-nickname').text(this.member_nickname);\n          this.$('.participant-messages-header').removeClass('hidden');\n          this.scrollToBottom();\n          this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n      },\n\n      onScrollY: function () {\n\n      },\n\n      retractMessages: function () {\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_user_messages__header\"), xabber.getString(\"dialog_delete_user_messages__confirm\", [(this.member_nickname || this.member_jid || this.member_id)]),\n              null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n              if (result) {\n                  if (this.member_id) {\n                      this.chat_content.model.retractMessagesByUser(this.member_id, () => {\n                          this.emptyChat();\n                      });\n                  }\n              }\n          });\n      },\n\n      messagesRequest: function (query, callback) {\n          let messages = [],\n              options = query || {},\n              member_id = this.member_id,\n              queryid = uuid();\n          _.extend(options, {\n              max: xabber.settings.mam_messages_limit,\n              before: query.before || '',\n              var: [{var: 'with', value: member_id}]\n          });\n          let handler = this.account.connection.addHandler((message) => {\n              let $msg = $(message);\n              if ($msg.find('result').attr('queryid') === queryid) {\n                  messages.push(message);\n              }\n              return true;\n          }, Strophe.NS.MAM);\n          this.chat_content.MAMRequest(options,\n              (success, messages, rsm) => {\n                  this.account.connection.deleteHandler(handler);\n                  rsm && (this.first_msg_id = rsm.first);\n                  if (!messages.length && !this.account.participant_messages.length) {\n                      this.emptyChat();\n                  }\n                  if (messages.length < options.max)\n                      this.history_loaded = true;\n                  $(messages).each((idx, message) => {\n                      let $message = $(message);\n                      this.account.chats.receiveChatMessage($message, {participant_message: true});\n                  });\n                  callback && callback();\n              }, () => {\n                  this.account.connection.deleteHandler(handler);\n              }\n          );\n      },\n\n      addMessage: function (message) {\n          if (message.get('auth_request'))\n              return;\n          message.set('is_archived', true);\n          let $message = this.chat_content.buildMessageHtml(message).addClass('participant-message'),\n              index = this.account.participant_messages.indexOf(message);\n          this.addMessageHTML($message, index);\n      }\n  });\n\n  xabber.SubscriptionButtonsView = xabber.BasicView.extend({\n      template: templates.subscription_buttons,\n\n      events: {\n          \"click .btn-decline\": \"declineSubscription\",\n          \"click .btn-allow\": \"allowSubscription\",\n          \"click .btn-add\": \"addContact\",\n          \"click .btn-subscribe\": \"addContact\",\n          \"click .btn-block\": \"blockContact\"\n      },\n\n      _initialize: function (options) {\n          this.$el.html(this.template());\n          this.contact = options.contact;\n          this.contact.on(\"change:subscription\", this.render, this);\n          this.contact.on(\"change:in_roster\", this.render, this);\n          this.contact.on(\"change:blocked\", this.render, this);\n          this.contact.on(\"change:subscription_request_in\", this.render, this);\n          this.contact.on(\"change:subscription_request_out\", this.render, this);\n      },\n\n      render: function () {\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n          if (this.contact.get('group_chat')) {\n              this.$el.addClass('hidden');\n              return;\n          }\n          let subscription = this.contact.get('subscription'),\n              in_request = this.contact.get('subscription_request_in'),\n              in_roster = this.contact.get('in_roster'),\n              out_request = this.contact.get('subscription_request_out');\n          this.$('.button').removeClass('hidden');\n          this.$('.subscription-info').text(\"\");\n          this.$el.addClass('hidden');\n          if (subscription === 'both' || this.contact.get('blocked'))\n              return;\n          else if (subscription === 'to' && in_request || (subscription === 'none' && in_request && in_roster)) {\n              this.$('.subscription-info').text(xabber.getString(\"subscription_status_in_request_incoming\"));\n              this.$('.button:not(.btn-allow)').addClass('hidden');\n          } else if (!out_request && !in_roster && !in_request && (subscription === 'from' || subscription === 'none')) {\n              this.$('.subscription-info').text(xabber.getString(\"chat_subscribe_request_outgoing\"));\n              this.$('.button:not(.btn-subscribe)').addClass('hidden');\n          } else if (subscription === undefined || subscription === 'none' && in_request) {\n              this.$('.button:not(.btn-add):not(.btn-block)').addClass('hidden');\n          } else {\n              return;\n          }\n          this.$el.removeClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').addClass('with-before');\n      },\n\n      hideElement: function () {\n          this.$el.addClass('hidden');\n          this.$el.closest('.chat-content-wrap').children('.chat-content').removeClass('with-before');\n      },\n\n      declineSubscription: function () {\n          this.contact.declineSubscribe();\n          this.contact.set('subscription_request_in', false);\n          this.hideElement();\n      },\n\n      allowSubscription: function () {\n          this.contact.acceptRequest();\n          this.hideElement();\n      },\n\n      addContact: function () {\n          if (this.contact.get('subscription') === undefined)\n              this.contact.pushInRoster(null, () => {\n                  this.sendAndAskSubscription();\n              });\n          else\n              this.sendAndAskSubscription();\n          this.hideElement();\n      },\n\n      sendAndAskSubscription: function () {\n          this.contact.askRequest();\n          this.contact.acceptRequest();\n      },\n\n      blockContact: function () {\n          this.contact.blockRequest();\n          this.hideElement();\n      }\n  });\n\n  xabber.ChatContentView = xabber.BasicView.extend({\n    className: 'chat-content-wrap',\n    template: templates.chat_content,\n    ps_selector: '.chat-content',\n    ps_settings: {\n        wheelPropagation: true\n    },\n    avatar_size: constants.AVATAR_SIZES.CHAT_MESSAGE,\n\n    events: {\n        'mousedown .chat-message': 'onTouchMessage',\n        'click .chat-message': 'onClickMessage',\n        'click .chat-msg-location-content': 'onClickLocation',\n        'mouseover .chat-msg-location-content.no-title': 'onHoverLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n        'click .msg-copy-location' : 'onClickLocationLink',\n        'click .pinned-message' : 'showPinnedMessage',\n        \"keyup .messages-search-form\": \"keyupSearch\",\n        \"click .btn-cancel-searching\": \"cancelSearch\",\n        \"click .back-to-bottom\": \"backToBottom\",\n        \"click .btn-retry-send-message\": \"retrySendMessage\",\n        \"click .btn-delete-message\": \"removeFileErrorMessage\",\n        \"click .encryption-warning\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.chat_item = options.chat_item;\n        this.current_day_indicator = null;\n        this._pending_avatars = [];\n        this.account = this.chat_item.account;\n        this.model = this.chat_item.model;\n        this.contact = this.model.contact;\n        this.head = this.model.get('saved') ? new xabber.SavedChatHeadView({content: this}) : new xabber.ChatHeadView({content: this});\n        this.bottom = new xabber.ChatBottomView({content: this});\n        this.$history_feedback = this.$('.load-history-feedback');\n        this.$pinned_message = this.$('.pinned-message');\n        this.$search_form = this.$('.search-form-header');\n        this.$el.attr('data-id', this.model.id);\n        this.updateContentColorScheme();\n        if (this.model.sync_created && this.model.last_message){\n            this.onMessage(this.model.last_message);\n            if (options.new_message){\n                this.onMessage(options.new_message);\n                this.onChangedReadState(options.new_message);\n            }\n        }\n        this._scrolltop = this.getScrollTop();\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-up ps-scroll-down\", this.onScroll.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"load_last_history\", this.loadLastHistory, this);\n        this.model.on(\"get_missed_history\", this.requestMissedMessages, this);\n        this.model.messages.on(\"add\", this.onMessage, this);\n        this.model.messages.on(\"change:is_unread\", this.onChangedReadState, this);\n        this.model.messages.on(\"change:timestamp\", this.onChangedMessageTimestamp, this);\n        this.model.messages.on(\"change:trusted\", this.onTrustedChanged, this);\n        this.model.messages.on(\"change:last_replace_time\", this.updateMessage, this);\n        if (this.contact) {\n            this.subscription_buttons = new xabber.SubscriptionButtonsView({contact: this.contact, el: this.$('.subscription-buttons-wrap')[0]});\n            this.contact.on(\"change:blocked\", this.updateBlockedState, this);\n            this.contact.on(\"change:subscription\", this.onSubscriptionChange, this);\n            this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n            this.contact.on(\"remove_from_blocklist\", this.loadLastHistory, this);\n            this.account.contacts.on(\"change:name\", this.updateName, this);\n            this.account.contacts.on(\"change:image\", this.updateAvatar, this);\n        }\n        this.account.on(\"change\", this.updateMyInfo, this);\n        this.account.settings.on(\"change:color\", this.updateContentColorScheme, this);\n        xabber.on('plyr_player_updated', this.onUpdatePlyr, this);\n        this.account.dfd_presence.done(() => {\n            !this.account.connection.do_synchronization && this.loadLastHistory();\n        });\n        return this;\n    },\n\n      render: function () {\n          this.cancelSearch();\n          this.scrollToBottom();\n          this.onScroll();\n          this.updateContactStatus();\n          this.updateWaveforms();\n          this.onUpdatePlyr();\n          if (this.contact) {\n              this.contact.get('group_chat') && this.updatePinnedMessage();\n              this.subscription_buttons.render();\n          }\n      },\n\n      openDevicesWindow: function () {\n          let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n          peer.fingerprints.open();\n      },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    updateMyInfo: function () {\n        let changed = this.account.changed;\n        if (_.has(changed, 'name')) this.updateMyName();\n        if (_.has(changed, 'status')) this.updateMyStatus();\n        if (_.has(changed, 'image')) this.updateMyAvatar();\n    },\n\n    updateContentColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n        this.head.$el.attr('data-color', color);\n        this.bottom.$el.attr('data-color', color);\n    },\n\n      onTrustedChanged: function (message) {\n          let trusted = message.get('trusted'),\n              $message = this.$('.chat-message[data-uniqueid=\"' + message.get('unique_id') + '\"]');\n          (trusted === null) && (trusted = 'none');\n          $message.attr('data-trust', trusted);\n      },\n\n    updateGroupChat: function () {\n        this._loading_history = false;\n        this.model.set('history_loaded', false);\n    },\n\n    onSubscriptionChange: function () {\n        let subscription = this.contact.get('subscription');\n        if (subscription === 'both'&& this.contact.get('group_chat')){\n            this.updateGroupChat();\n            this.loadPreviousHistory();\n        }\n    },\n\n    cancelSearch: function () {\n        this.$search_form.hide().find('input').val(\"\");\n    },\n\n    updateContactStatus: function () {\n        if (this.head.$('.contact-status').attr('data-status') == 'offline' && this.contact.get('last_seen')) {\n            let seconds = (moment.now() - this.contact.get('last_seen'))/1000,\n                new_status = xabber.pretty_last_seen(seconds);\n            this.contact.set({status_message: new_status });\n        }\n    },\n\n    updateWaveforms: function () {\n        this.model.plyr_players.forEach(function(item) {\n            if (item.$audio_elem && item.$audio_elem.voice_message && item.$audio_elem.voice_message.backend && item.$audio_elem.voice_message.backend.buffer)\n                item.$audio_elem.voice_message.drawBuffer();\n        });\n    },\n\n    updatePinnedMessage: function () {\n        let $pinned_message = this.contact.get('pinned_message');\n        this.contact.renderPinnedMessage($pinned_message, this.$pinned_message);\n    },\n\n    onChangedVisibility: function () {\n        if (this.isVisible()) {\n            this.model.set({display: true, active: true});\n            this.onScroll();\n            this.readMessages();\n        } else {\n            this.model.set({display: false});\n        }\n    },\n\n    onChangedActiveStatus: function () {\n        let active = this.model.get('active');\n        this.sendChatState(active ? 'active' : 'inactive');\n        if (this.model.get('group_chat')) {\n            if (active)\n                this.contact.sendPresent();\n            else\n                this.contact.sendNotPresent();\n        }\n    },\n\n    updateName: function (contact) {\n        let name = contact.get('name'),\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.chat-msg-author').text(name);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-msg-author').text(name);\n            });\n        }\n    },\n\n    updateAvatar: function (contact) {\n        let image = contact.cached_image,\n            jid = contact.get('jid');\n        if (contact === this.contact) {\n            this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.left-side .circle-avatar').setAvatar(\n                        image, this.avatar_size);\n            });\n        } else {\n            this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n                $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                        image, this.avatar_size);\n            });\n        }\n    },\n\n    updateMyStatus: function () {\n        let text;\n        if (!this.account.isOnline()) {\n            text = xabber.getString(\"connection_status__you_are_offline\");\n        }\n        this.bottom.showChatNotification(text || '', true);\n    },\n\n    updateMyName: function () {\n        let name = this.account.get('name'),\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.chat-msg-author').text(name);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-msg-author').text(name);\n        });\n    },\n\n    updateMyAvatar: function () {\n        let image = this.account.cached_image,\n            jid = this.account.get('jid');\n        this.$(`.chat-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n        });\n        this.$(`.fwd-message.with-author[data-from=\"${jid}\"]`).each(function () {\n            $(this).find('.fwd-left-side .circle-avatar').setAvatar(\n                    image, this.avatar_size);\n        });\n    },\n\n    updateBlockedState: function () {\n        if (this.model.get('blocked'))\n            this.model.showBlockedRequestMessage();\n        if (this.isVisible()) {\n            xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'chat', chat_item: this.chat_item, blocked: this.model.get('blocked')});\n            this.updateScrollBar();\n        }\n    },\n\n    readMessages: function (timestamp) {\n        let unread_messages = _.clone(this.model.messages_unread.models);\n        if (unread_messages.length) {\n            let msg = unread_messages[unread_messages.length - 1];\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n        }\n        this.model.set('const_unread', 0);\n        _.each(unread_messages, (msg) => {\n            if (!timestamp || msg.get('timestamp') <= timestamp) {\n                msg.set('is_unread', false);\n            }\n        });\n        if (this.model.last_message && this.model.last_message.get('is_unread') && !unread_messages.length){\n            let msg = this.model.last_message;\n            this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n            msg.set('is_unread', false);\n        }\n        else if (this.model.last_message && this.model.last_message.get('auth_request') && this.model.messages.length){\n            let messages = _.clone(this.model.messages.models),\n                msg = messages[messages.length - 2];\n            if (msg && msg.get('is_unread')) {\n                this.model.sendMarker(msg.get('msgid'), 'displayed', msg.get('stanza_id'), msg.get('contact_stanza_id'));\n                msg.set('is_unread', false);\n            }\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        if (ev.originalEvent.deltaY < 0)\n            this.loadPreviousHistory();\n        this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n    },\n\n    keyupSearch: function (ev) {\n        if (ev.keyCode === constants.KEY_ENTER) {\n            let query = this.$search_form.find('input').val();\n            this.model.searchMessages(query, (messages) => {});\n        }\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            this.head.renderSearchPanel();\n        }\n    },\n\n    onScrollY: function () {\n        if (this._scrolltop === 0 && this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', 1);\n            this.current_day_indicator = pretty_date(parseInt(this.$('.chat-content').children().first().data('time')));\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n    },\n\n    onScroll: function () {\n        if (!this.isVisible())\n            return;\n        this.$('.back-to-bottom').hideIf(this.isScrolledToBottom());\n        let $chatday_indicator = this.$('.chat-day-indicator'),\n            $messages = this.$('.chat-message'),\n            indicator_idx = undefined,\n            opacity_value;\n        this._prev_scrolltop = this._scrolltop || 0;\n        this._scrolltop = this.getScrollTop();\n        $chatday_indicator.each((idx, indicator) => {\n            if (this.$('.subscription-buttons-wrap').hasClass('hidden')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop <= this._scrolltop) && (indicator.offsetTop >= this._scrolltop - 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop - 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 30) && (indicator.offsetTop >= this._scrolltop)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 30) && (indicator.offsetTop <= this._scrolltop)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n            else if (!$(indicator).hasClass('fixed-day-indicator-wrap')) {\n                if (this._scrolltop < this._prev_scrolltop) {\n                    if ((indicator.offsetTop >= this._scrolltop + 30) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop) && (indicator.offsetTop <= this._scrolltop + 62)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n                else {\n                    if ((indicator.offsetTop <= this._scrolltop + 62) && (indicator.offsetTop >= this._scrolltop + 30)) {\n                        indicator_idx = idx && (idx - 1);\n                        opacity_value = 0;\n                        return false;\n                    }\n                    if ((indicator.offsetTop >= this._scrolltop - 62) && (indicator.offsetTop <= this._scrolltop + 30)) {\n                        indicator_idx = idx;\n                        opacity_value = 1;\n                        return false;\n                    }\n                }\n            }\n        });\n        if (indicator_idx) {\n            this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            this.current_day_indicator = pretty_date(parseInt($($chatday_indicator[indicator_idx]).attr('data-time')));\n        }\n        else {\n            $messages.each((idx, msg) => {\n                if ((msg.offsetTop + $(msg).height() > this._scrolltop) && (msg.offsetTop < this._scrolltop)) {\n                    indicator_idx = idx;\n                    opacity_value = 1;\n                    return false;\n                }\n            });\n            if (indicator_idx) {\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n                this.current_day_indicator = pretty_date(parseInt($($messages[indicator_idx]).attr('data-time')));\n            }\n            else if (!this.$('.subscription-buttons-wrap').hasClass('hidden') && this._scrolltop == 0){\n                opacity_value = 0;\n                this.$('.fixed-day-indicator-wrap').css('opacity', opacity_value);\n            }\n        }\n        if (this.current_day_indicator !== null) {\n            this.showDayIndicator(this.current_day_indicator);\n        }\n        if (this._scrolltop < this._prev_scrolltop &&\n            (this._scrolltop < 100 || this.getPercentScrolled() < 0.1)) {\n            this.loadPreviousHistory();\n        }\n    },\n\n    backToBottom: function () {\n        this.scrollToBottom();\n    },\n\n    MAMRequest: function (options, callback, errback) {\n        let account = this.account,\n            is_fast = options.fast && account.fast_connection && !account.fast_connection.disconnecting && account.fast_connection.authenticated && account.fast_connection.connected && account.get('status') !== 'offline',\n            conn = is_fast ? account.fast_connection : account.connection,\n            contact = this.contact,\n            is_saved = this.model.get('saved'),\n            messages = [], queryid = uuid(),\n            is_groupchat = contact && contact.get('group_chat'), success = true, iq;\n        delete options.fast;\n        if (is_groupchat)\n            iq = $iq({type: 'set', to: contact.get('full_jid') || contact.get('jid')});\n        else\n            iq = $iq({type: 'set'});\n        iq.c('query', {xmlns: Strophe.NS.MAM, queryid: queryid})\n                .c('x', {xmlns: Strophe.NS.DATAFORM, type: 'submit'})\n                .c('field', {'var': 'FORM_TYPE', type: 'hidden'})\n                .c('value').t(Strophe.NS.MAM).up().up();\n        if (this.account.server_features.get(Strophe.NS.ARCHIVE) && this.model.get('encrypted'))    {\n            iq.c('field', {'var': `{${Strophe.NS.ARCHIVE}}filter_encrypted`})\n                .c('value').t(this.model.get('encrypted')).up().up();\n        }\n        if (!is_groupchat)\n            iq.c('field', {'var': 'with'})\n                .c('value').t(this.model.get('jid')).up().up();\n        if (options.var)\n            options.var.forEach((opt_var) => {\n                iq.c('field', {'var': opt_var.var})\n                    .c('value').t(opt_var.value).up().up();\n            });\n        iq.up().cnode(new Strophe.RSM(options).toXML());\n        let deferred = new $.Deferred();\n        account.chats.onStartedMAMRequest(deferred);\n        deferred.done(function () {\n            console.log(iq)\n            console.log(conn)\n            console.log(conn.connected)\n            let connected_deferred = new $.Deferred();\n            connected_deferred.done(function() {\n                let handler = conn.addHandler(function (message) {\n                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                        let $msg = $(message);\n                        if ($msg.find('result').attr('queryid') === queryid) {\n                            messages.push(message);\n                        }\n                    }\n                    else {\n                        messages = [];\n                        success = false;\n                    }\n                    return true;\n                }, Strophe.NS.MAM);\n                let callb = function (res) {\n                    console.log(iq);\n                    console.log(res);\n                    console.log(messages);\n                    conn.deleteHandler(handler);\n                    handler = null;\n                    account.chats.onCompletedMAMRequest(deferred);\n                    let $fin = $(res).find(`fin[xmlns=\"${Strophe.NS.MAM}\"]`);\n                    if ($fin.length && $fin.attr('queryid') === queryid) {\n                        let rsm = new Strophe.RSM({xml: $fin.find('set')[0]});\n                        rsm.complete = ($fin.attr('complete') === 'true') ? true : false;\n                        callback && callback(success, messages, rsm);\n                    }\n                },\n                errb = function (err) {\n                    conn.deleteHandler(handler);\n                    handler = null;\n                    xabber.error(\"MAM error\");\n                    xabber.error(err);\n                    account.chats.onCompletedMAMRequest(deferred);\n                    errback && errback(err);\n                };\n                account.once('send_pending_messages', () => {\n                    console.log('send_pending_archive_iq');\n                    console.log(iq);\n                    if (Boolean(handler)) {\n                        let pending_deferred = new $.Deferred();\n                        account.chats.onStartedMAMRequest(pending_deferred);\n                        conn.deleteHandler(handler);\n                        conn = is_fast && account.fast_connection ? account.fast_connection : account.connection;\n                        pending_deferred.done(function() {\n                            console.log('initiated pending archive iq');\n                            console.log(iq)\n                            console.log(conn)\n                            console.log(conn.connected)\n                            let connected_pending_deferred = new $.Deferred();\n                            connected_pending_deferred.done(function() {\n                                handler = conn.addHandler(function (message) {\n                                    if ((contact && is_groupchat == contact.get('group_chat')) || is_saved) {\n                                        let $msg = $(message);\n                                        if ($msg.find('result').attr('queryid') === queryid) {\n                                            messages.push(message);\n                                        }\n                                    }\n                                    else {\n                                        messages = [];\n                                        success = false;\n                                    }\n                                    return true;\n                                }, Strophe.NS.MAM);\n                                if (is_fast)\n                                    account.sendFast(iq, callb, errb);\n                                else\n                                    account.sendIQ(iq, callb, errb);\n                            });\n                            if (conn.connected)\n                                connected_pending_deferred.resolve();\n                            else {\n                                let _pending_time = 1,\n                                _interval = setInterval(() => {\n                                    if (conn.connected || _pending_time >= 11){\n                                        clearInterval(_interval);\n                                        connected_pending_deferred.resolve();\n                                    }\n                                    _pending_time += 1;\n                                }, 1000);\n                            }\n                        });\n                    }\n                })\n                if (is_fast)\n                    account.sendFast(iq, callb, errb);\n                else\n                    account.sendIQ(iq, callb, errb);\n\n            });\n            if (conn.connected)\n                connected_deferred.resolve();\n            else {\n                let _pending_time = 1,\n                _interval = setInterval(() => {\n                    if (conn.connected || _pending_time >= 11){\n                        clearInterval(_interval);\n                        connected_deferred.resolve();\n                    }\n                    _pending_time += 1;\n                }, 1000);\n            }\n        });\n    },\n\n    getMessageArchive: function (query, options) {\n        if (options.previous_history) {\n            if (this._loading_history || this.model.get('history_loaded')) {\n                return;\n            }\n            this._loading_history = true;\n            clearTimeout(this._load_history_timeout);\n            this._load_history_timeout = setTimeout(() => {\n                this._loading_history = false;\n            }, 60000);\n            this.showHistoryFeedback();\n        }\n        let account = this.model.account, counter = 0;\n            this.MAMRequest(query, (success, messages, rsm) => {\n                    clearTimeout(this._load_history_timeout);\n                    this._loading_history = false;\n                    this.hideHistoryFeedback();\n                    if (options.missed_history && !rsm.complete && (rsm.count > messages.length))\n                        this.getMessageArchive({after: rsm.last}, {missed_history: true});\n                    if (this.model.get('group_chat')) {\n                        if (this.contact && !this.contact.my_info)\n                            this.contact.getMyInfo();\n                    }\n                    else {\n                        if (this.contact && !this.contact.get('last_seen') && !this.contact.get('server'))\n                            this.contact.getLastSeen();\n                    }\n                    if ((messages.length < query.max) && success) {\n                        this.model.set('history_loaded', true);\n                    }\n                    if (options.previous_history || !this.model.get('first_archive_id')) {\n                        rsm.first && this.model.set('first_archive_id', rsm.first);\n                    }\n                    if (options.last_history || !this.model.get('last_archive_id')) {\n                        rsm.last && this.model.set('last_archive_id', rsm.last);\n                    }\n                    _.each(messages, function (message) {\n                        let loaded_message = account.chats.receiveChatMessage(message,\n                            _.extend({is_archived: true}, options)\n                        );\n                        if (loaded_message) counter++;\n                    });\n                    if (options.previous_history && !this.model.get('displayed_sent') && this.model.messages.length) {\n                        let last_msg = this.model.messages.models[this.model.messages.length - 1];\n                        if (last_msg)\n                            if (!last_msg.isSenderMe() && this.model.get('active') && this.model.get('display')) {\n                                this.model.sendMarker(last_msg.get('msgid'), 'displayed', last_msg.get('stanza_id'), last_msg.get('contact_stanza_id'));\n                                this.model.set('displayed_sent', true);\n                            }\n                    }\n                    if ((counter === 0) && options.last_history && !this.model.get('history_loaded')) {\n                        this.getMessageArchive(_.extend(query, {\n                            max: xabber.settings.mam_messages_limit,\n                            before: this.model.get('first_archive_id') || ''\n                        }), {previous_history: true});\n                    }\n                }, (err) => {\n                    if (options.previous_history) {\n                        this._loading_history = false;\n                        this.showHistoryFeedback(true);\n                    }\n                }\n            );\n    },\n\n    requestMissedMessages: function (timestamp) {\n        if (!timestamp)\n            return;\n        let query = {};\n        query.var = [{var: 'start', value: moment(timestamp).format()}];\n        this.getMessageArchive(query, {missed_history: true});\n    },\n\n    loadLastHistory: function () {\n        if (!xabber.settings.load_history) {\n            return;\n        }\n        let last_archive_id = this.model.get('last_archive_id'),\n            query = {};\n        if (last_archive_id) {\n            query.after = last_archive_id;\n        } else {\n            query.before = '';\n            query.max = xabber.settings.mam_messages_limit_start;\n        }\n        this.getMessageArchive(query, {last_history: true});\n    },\n\n    loadPreviousHistory: function () {\n        if (this.contact) {\n            if (!xabber.settings.load_history || (!this.contact.get('subscription') || this.contact.get('subscription') !== 'both') && this.contact.get('group_chat')) {\n                return;\n            }\n        }\n        this.getMessageArchive({\n                fast: true,\n                max: xabber.settings.mam_messages_limit,\n                before: this.model.get('first_archive_id') || '' },\n            {previous_history: true\n            });\n    },\n\n    showHistoryFeedback: function (is_error) {\n        if (this._load_history_feedback_timeout) {\n            clearTimeout(this._load_history_feedback_timeout);\n            this._load_history_feedback_timeout = null;\n        }\n        let text = xabber.getString(is_error ? \"loading_archived_messages_error\" : \"loading_history\");\n        this.$history_feedback.text(text).removeClass('hidden');\n        if (is_error) {\n            this._load_history_feedback_timeout = setTimeout(\n                this.hideHistoryFeedback.bind(this), 5000);\n        }\n    },\n\n    showDayIndicator: function (text) {\n        this.$('.fixed-day-indicator').text(text);\n        this.$('.fixed-day-indicator-wrap').removeClass('hidden');\n    },\n\n    showPinnedMessage: function (ev) {\n        if ($(ev.target).hasClass('close'))\n            this.unpinMessage();\n        else {\n            let pinned_message = this.contact.get('pinned_message'),\n                msg = this.buildMessageHtml(pinned_message),\n                pinned_msg_modal = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this, message: pinned_message});\n            pinned_msg_modal.$el.attr('data-color', this.account.settings.get('color'));\n            this.updateMessageInChat(msg);\n            this.initPopup(msg);\n            pinned_msg_modal.open(msg);\n        }\n    },\n\n    imageOnload: function ($message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $image_container.css('background-image', 'none');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n    },\n\n    videoOnload: function ($message, message) {\n        let $image_container = $message.find('.img-content'),\n            $copy_link_icon = $message.find('.mdi-link-variant');\n        $copy_link_icon.attr({\n            'data-image': 'true'\n        });\n        this.initPlyrEmbedPlayer($message, message);\n    },\n\n    locationOnload: function ($message) {\n        let $copy_location_div = $message.find('.msg-copy-location-content');\n        $copy_location_div.html(env.templates.svg['map-marker-outline']());\n        $copy_location_div.attr({\n            'data-location': 'true'\n        });\n    },\n\n    unpinMessage: function () {\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message');\n        this.account.sendIQFast(iq, () => {}, (error) => {\n            if ($(error).find('error not-allowed').length)\n                utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n        });\n    },\n\n    loadLocationInChat: function ($message, attrs) {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            let $map_element = $message.find(`#${attrs.id}`);\n            if (!$map_element.length)\n                return;\n            let map = new ol.Map({\n                target: $map_element[0],\n                view: new ol.View\n                ({\tzoom: 15,\n                    center: ol.proj.transform([attrs.lon, attrs.lat], 'EPSG:4326', 'EPSG:3857')\n                }),\n                interactions: ol.interaction_defaults({\n                    altShiftDragRotate:false,\n                    doubleClickZoom:false,\n                    keyboard:false,\n                    mouseWheelZoom:false,\n                    shiftDragZoom:false,\n                    dragPan:false,\n                    pinchRotate:false,\n                    pinchZoom:false\n                }),\n                layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n            });\n\n            map.once('rendercomplete', function(event) {\n                let mapCanvas = document.createElement('canvas');\n                let size = map.getSize();\n                mapCanvas.width = size[0];\n                mapCanvas.height = size[1];\n                let mapContext = mapCanvas.getContext('2d');\n                Array.prototype.forEach.call(\n                    document.querySelectorAll(`#${attrs.id} .ol-layer canvas`),\n                    function (canvas) {\n                        if (canvas.width > 0) {\n                            let opacity = canvas.parentNode.style.opacity;\n                            mapContext.globalAlpha = opacity === '' ? 1 : Number(opacity);\n                            let transform = canvas.style.transform;\n                            // Get the transform parameters from the style's transform matrix\n                            let matrix = transform\n                                .match(/^matrix\\(([^\\(]*)\\)$/)[1]\n                                .split(',')\n                                .map(Number);\n                            // Apply the transform to the export map context\n                            CanvasRenderingContext2D.prototype.setTransform.apply(\n                                mapContext,\n                                matrix\n                            );\n                            let path = new Path2D('M 18 17.25 C 15.9289 17.25 14.25 15.5711 14.25 13.5 C 14.25 12.5054 14.6451 11.5516 15.3483 10.8483 C 16.0516 10.1451 17.0054 9.75 18 9.75 C 20.0711 9.75 21.75 11.4289 21.75 13.5 C 21.75 14.4946 21.3549 15.4484 20.6517 16.1517 C 19.9484 16.8549 18.9946 17.25 18 17.25 M 18 3 C 12.201 3 7.5 7.701 7.5 13.5 C 7.5 21.375 18 33 18 33 C 18 33 28.5 21.375 28.5 13.5 C 28.5 7.701 23.799 3 18 3 Z');\n                            mapContext.fillStyle = getComputedStyle(document.querySelector(`#${attrs.id}`)).color;\n                            mapContext.drawImage(canvas, 0, 0);\n                            mapContext.translate(157, 117);\n\n                            mapContext.fill(path);\n                        }\n                    }\n                );\n                if (navigator.msSaveBlob) {\n                    // link download attribute does not work on MS browsers\n                    navigator.msSaveBlob(mapCanvas.msToBlob(), 'map.png');\n                } else {\n                    let img = document.getElementById(`img_${attrs.id}`),\n                        dataURL = mapCanvas.toDataURL('image/png');\n                    map.setTarget(null)\n                    map = null;\n                    img.src= dataURL\n                }\n            });\n        });\n    },\n\n    hideHistoryFeedback: function () {\n        this.$history_feedback.addClass('hidden');\n    },\n\n    receiveNoTextMessage: function ($message, carbon_copied) {\n        let from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($message.attr('to')),\n            is_sender = from_jid === this.account.get('jid'),\n            $chat_state = $message.find(`[xmlns=\"${Strophe.NS.CHATSTATES}\"]`);\n        if ($chat_state.length) {\n            if (!is_sender) {\n                let $subtype = $chat_state.children('subtype');\n                if ($subtype.attr('type') == 'encrypted') {\n                    let view = xabber.chats_view.child(`${this.contact.hash_id}:encrypted`);\n                    if (view && view.content)\n                        view.content.showChatState($chat_state[0].tagName.toLowerCase());\n                } else\n                    this.showChatState($chat_state[0].tagName.toLowerCase(), $subtype.attr('type'), $subtype.attr('mime-type'));\n            }\n        }\n    },\n\n    showChatState: function (state, type, mime_type) {\n        clearTimeout(this._chatstate_show_timeout);\n        let message, name = this.contact.get('name');\n        if (state === 'composing') {\n            if (type) {\n                this._current_composing_msg = {type: type};\n                if (type === 'upload') {\n                    let file_type = mime_type ? utils.pretty_file_type_with_article(mime_type) : null;\n                    mime_type && (this._current_composing_msg.mime_type = mime_type);\n                    message = file_type ? xabber.getString(\"chat_state_composing_upload_filetype\", [file_type]) : xabber.getString(\"chat_state_composing_upload\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState();\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                } else {\n                    if (type === 'voice')\n                        message = xabber.getString(\"chat_state_composing_voice\");\n                    if (type === 'video')\n                        message = xabber.getString(\"chat_state_composing_video\");\n                    this._chatstate_show_timeout = setTimeout(() => {\n                        this.showChatState('paused', type);\n                    }, constants.CHATSTATE_TIMEOUT_PAUSED_AUDIO);\n                }\n            }\n            else {\n                this._current_composing_msg = undefined;\n                message = xabber.getString(\"chat_state_composing\");\n                this._chatstate_show_timeout = setTimeout(() => {\n                    this.showChatState();\n                }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            }\n        } else if (state === 'paused') {\n            this.showChatState();\n            return;\n        } else {\n            this.bottom.showChatNotification('');\n            this.chat_item.updateLastMessage();\n            return;\n        }\n        if (message)\n            this.bottom.showChatNotification(`${this.contact.get('name')} ${message}`);\n        else\n            this.bottom.showChatNotification();\n        this.chat_item.$('.last-msg').text(message);\n        this.chat_item.$('.last-msg-date').text(utils.pretty_short_datetime())\n            .attr('title', pretty_datetime());\n        this.chat_item.$('.msg-delivering-state').addClass('hidden');\n    },\n\n    updateMentions: function (message) {\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\";\n                if (this.contact.get('group_chat') || message.get('groupchat_jid')) {\n                    let id = mention_target.match(/\\?id=\\w*/),\n                        jid = mention_target.match(/\\?jid=.*/);\n                    if (id && this.contact.my_info) {\n                        mention_target = id[0].slice(4);\n                        (mention_target === this.contact.my_info.get('id')) && (mention.me = true);\n                    }\n                    else if (jid) {\n                        mention_target = jid[0].slice(5);\n                        (mention_target === this.account.get('jid')) && (mention.me = true);\n                    }\n                }\n                else {\n                    mention_target = mention_target.slice(5);\n                    if (mention_target === this.account.get('jid'))\n                        mention.me = true;\n                }\n            });\n        }\n    },\n\n    onMessage: function (message) {\n        this.updateMentions(message);\n        this.account.messages.add(message);\n        let is_scrolled_to_bottom = this.isScrolledToBottom(),\n            scrolled_from_bottom = this.getScrollBottom();\n        if (!_.isUndefined(message.get('is_accepted'))) {\n            this.model.set('is_accepted', false);\n        }\n        this.model.set('opened', true);\n        if (!message.get('is_archived') && message.get('stanza_id'))\n            this.model.set('last_archive_id', message.get('stanza_id'));\n\n        if (message.get('participants_version')) {\n            if (this.contact.participants && this.contact.participants.version < message.get('participants_version'))\n                this.contact.trigger('update_participants');\n        }\n\n        let $message = this.addMessage(message);\n\n        if (message.get('type') === 'file_upload') {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.startGalleryUploadFile(message, $message);\n            else\n                this.startUploadFile(message, $message);\n        }\n\n        if (this.isVisible()) {\n            if (is_scrolled_to_bottom || message.get('submitted_here')) {\n                this.scrollToBottom();\n            } else {\n                this.updateScrollBar();\n                this.scrollTo(this.ps_container[0].scrollHeight - this.ps_container[0].offsetHeight - scrolled_from_bottom);\n            }\n        }\n\n        if (!(message.get('synced_from_server') || message.get('is_archived'))) {\n            if (!(message.isSenderMe() || message.get('silent') || ((message.get('type') === 'system') && !message.get('auth_request')))) {\n                message.set('is_unread', !(this.model.get('display') && xabber.get('focused')));\n                if (!message.get('is_unread'))\n                    this.model.sendMarker(message.get('msgid'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n                if (!xabber.get('focused')) {\n                    if (this.model.get('saved') || this.model.isMuted())\n                        message.set('muted', true);\n                    else if (!message.get('synced_invitation_from_server'))\n                        this.notifyMessage(message);\n                }\n                this.model.setMessagesDisplayed(message.get('timestamp'));\n            }\n            if (this.contact && this.model.get('archived'))\n                if (this.model.isMuted())\n                    message.set('archived', true);\n                else {\n                    this.head.archiveChat();\n                    this.model.set('archived', false);\n                }\n            if (this.model.get('saved')) {\n                message.set('muted', true);\n                message.set('state', constants.MSG_DISPLAYED);\n            }\n        }\n\n        if (message.get('attention')) {\n            this.attentionMessage(message);\n        }\n\n        if (message.isSenderMe()) {\n            if (!message.get('is_archived') && !message.get('missed_msg') && message.get('type') != 'system')\n                this.readMessages(message.get('timestamp'));\n            if (this.model.get('last_displayed_id') >= message.get('stanza_id') && message.get('stanza_id') !== message.get('origin_id'))\n                message.set('state', constants.MSG_DISPLAYED);\n            else if (message.get('stanza_id') !== message.get('origin_id') && (this.model.get('last_delivered_id') >= message.get('stanza_id') || message.get('is_archived')))\n                message.set('state', constants.MSG_DELIVERED);\n        }\n\n        if (message.get('private_invite') || message.get('invite')) {\n            if (!(this.contact.invitation && this.contact.invitation.message.get('timestamp') > message.get('timestamp')))\n                this.contact.invitation = new xabber.GroupchatInvitationView({model: this.contact, message: message});\n            this.model.contact.set('invitation', true);\n            this.model.get('active') && this.model.contact.trigger('open_chat', this.model.contact);\n            message.set('is_unread', false);\n        }\n\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') >= last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n        if (message.get('mentions')) {\n            message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (this.contact.my_info)\n                    (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                else if (this.contact.get('group_chat')) {\n                    if (this._pending_my_info) {\n                        this._pending_my_info.done(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {message: message, contact: this.contact});\n                            this._pending_my_info = null;\n                        });\n                    }\n                    else {\n                        this._pending_my_info = new $.Deferred();\n                        this.contact.getMyInfo(() => {\n                            (mention_target === this.contact.my_info.get('id')) && this.account.mentions.create(null, {\n                                message: message,\n                                contact: this.contact\n                            });\n                            this._pending_my_info.resolve();\n                        });\n                    }\n                }\n                (mention_target === this.account.get('jid') || mention_target === \"\") && this.account.mentions.create(null, {message: message, contact: this.contact});\n            });\n        }\n    },\n\n\n      decryptImages: function (message, force) {\n        let scrolled_from_bottom = this.getScrollBottom(),\n            unique_id = message.get('unique_id');\n          if (this.model.get('encrypted') || message.get('encrypted') || force) {\n              let images = message.get('images') || [];\n              if (images.length) {\n                  images.forEach((img) => {\n                      let source = img.sources[0];\n                      if (!img.key)\n                          return;\n                      this.model.messages.decryptFile(source, img.key).then((result) => {\n                          if (result === null)\n                              return;\n                          let $msg = [];\n                          if (this.model.messages_view && xabber.body.screen.get('right') === 'message_context')\n                              $msg = this.model.messages_view.$(`.chat-message[data-uniqueid=\"${unique_id}\"] img[src=\"${source}\"]`);\n                          else\n                              $msg = this.$(`.chat-message[data-uniqueid=\"${unique_id}\"] img[src=\"${source}\"]`);\n                          if ($msg.length) {\n                              $msg[0].src = result;\n                              $msg[0].onload = () => {\n                                  if (!scrolled_from_bottom)\n                                      this.scrollToBottom();\n                                  else\n                                      this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                              };\n                              $msg.attr('data-mfp-src', result);\n                          }\n                      });\n                  });\n              }\n              let fwd_msgs = message.get('forwarded_message') || [];\n              fwd_msgs.forEach((fwd_msg) => {\n                  let fwd_images = fwd_msg.get('images') || [],\n                      fwd_unique_id = fwd_msg.get('unique_id');\n                  fwd_images.forEach((img) => {\n                      let source = img.sources[0];\n                      if (!img.key)\n                          return;\n                      this.model.messages.decryptFile(source, img.key).then((result) => {\n                          if (result === null)\n                              return;\n                          let $msg = this.$(`.chat-message[data-uniqueid=\"${unique_id}\"] .fwd-message[data-uniqueid=\"${fwd_unique_id}\"] img[src=\"${source}\"]`);\n                          if ($msg.length) {\n                              $msg[0].src = result;\n                              $msg[0].onload = () => {\n                                  if (!scrolled_from_bottom)\n                                      this.scrollToBottom();\n                                  else\n                                      this.scrollTo(this.ps_container[0].scrollHeight - scrolled_from_bottom);\n                              };\n                              $msg.attr('data-mfp-src', result);\n                          }\n                      });\n                  });\n              });\n          }\n      },\n\n    addMessage: function (message) {\n        let $message = this.buildMessageHtml(message),\n            index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            $message.prependTo(this.$('.chat-content'));\n        } else {\n            $message.insertAfter(this.$('.chat-message').eq(index - 1));\n        }\n        let $next_message = $message.nextAll('.chat-message').first();\n        this.updateMessageInChat($message[0]);\n        if ($next_message.length) {\n            this.updateMessageInChat($next_message[0]);\n        }\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n        return $message;\n    },\n\n    initPopup: function ($message) {\n        let $one_image = $message.find('.uploaded-img'),\n            $collage_image = $message.find('.uploaded-img-for-collage');\n        if ($one_image.length) {\n            $one_image.each((idx, item) => {\n                this.initMagnificPopup($(item));\n            });\n        }\n        if ($collage_image.length) {\n            this.initZoomGallery($message);\n        }\n    },\n\n    getImagesInformation: function (msg) {\n        let images = msg.get('images'),\n            servers = [];\n        if (!images)\n            return;\n        images.forEach((img) => {\n            let server = new URL(img.sources[0]).hostname;\n            img.pretty_size = utils.pretty_size(img.size)\n            servers.push(server);\n        });\n        servers = [...new Set(servers)]\n\n        return {images, servers};\n    },\n\n    initMagnificPopup: function ($elem) {\n        let self = this;\n        $elem.length && $elem.magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    initZoomGallery: function ($message) {\n        let self = this;\n        $message.find('.zoom-gallery').length && $message.find('.zoom-gallery').magnificPopup({\n            delegate: 'img',\n            type: 'image',\n            closeOnContentClick: false,\n            closeBtnInside: false,\n            mainClass: 'mfp-with-zoom mfp-img-mobile',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + self.model.messages.getFilename(item.el.attr('src')) + '</a>' + ' ' + item.el.attr('title');\n                }\n            },\n            gallery: {\n                enabled: true\n            },\n            zoom: {\n                enabled: true,\n                duration: 300,\n                opener: function(element) {\n                    return element;\n                }\n            }\n        });\n    },\n\n    updateMessage: function (item) {\n        let $message, images = item.get('images'), emoji = item.get('only_emoji'), $new_message,\n            files =  item.get('files');\n        if (item instanceof xabber.Message) {\n            this.updateMentions(item);\n            $new_message = this.buildMessageHtml(item);\n            $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        }\n        else\n            return;\n        $message.replaceWith($new_message)\n        $message = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n        this.updateMessageInChat($message[0]);\n        this.initPopup($message);\n        this.bottom.showChatNotification();\n\n        if (item.get('data_form')) {\n            let data_form = utils.render_data_form(item.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n        let short_datetime = utils.pretty_short_datetime(item.get('last_replace_time')),\n            datetime = moment(item.get('last_replace_time')).format('D MMMM, YYYY HH:mm:ss'),\n            new_title = `${pretty_datetime(item.get('time'))} ${xabber.getString(\"edited\", [moment(item.get('timestamp')).startOf('day').isSame(moment(item.get('last_replace_time')).startOf('day')) ? short_datetime : datetime])}`;\n        $message.find('.msg-time').prop('title', new_title);\n        $message.find('.edited-info').removeClass('hidden').text(xabber.getString(\"chat_screen__message__label_edited\")).prop('title', new_title);\n    },\n\n    removeMessage: function (item) {\n        let message, $message, $message_in_chat;\n        if (item instanceof xabber.Message) {\n            message = item;\n            $message_in_chat = this.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`);\n            (this.bottom.content_view) && ($message = this.bottom.content_view.$(`.chat-message[data-uniqueid=\"${item.get('unique_id')}\"]`));\n        } else {\n            $message = item;\n            if (!$message.length) return;\n            message = this.model.messages.get($message.data('uniqueid'));\n        }\n        message && message.destroy();\n        if ($message_in_chat) {\n            this.removeMessageFromDOM($message_in_chat);\n        }\n        if ($message && ($message !== $message_in_chat))\n            this.removeMessageFromDOM($message);\n    },\n\n    removeMessageFromDOM: function ($message) {\n        if (($message.hasClass('with-author')) && (!$message.next().hasClass('with-author'))) {\n            let avatar = $message.find('.circle-avatar')[0];\n            $message.next().addClass('with-author');\n            $message.next().find('.circle-avatar').replaceWith(avatar);\n        }\n        $message.prev('.chat-day-indicator').remove();\n        $message.remove();\n        this.bottom.manageSelectedMessages();\n        if (!this._clearing_history) {\n            this.updateScrollBar();\n        }\n    },\n\n    clearHistory: function () {\n        let dialog_options = [],\n            dialog_message = this.contact.get('group_chat') ? xabber.getString(\"clear_group_chat_history_dialog_message\") : xabber.getString(\"clear_chat_history_dialog_message\"),\n            is_group_chat = this.contact.get('group_chat') ? true : false;\n        this._clearing_history = true;\n        if (this.account.server_features.get(Strophe.NS.REWRITE)) {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), dialog_message,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                this.model.retractAllMessages(is_group_chat, () => {\n                    this._clearing_history = false;\n                    this.chat_item.updateLastMessage();\n                    this.updateScrollBar();\n                }, () => {\n                    this._clearing_history = false;\n                });\n            });\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"clear_history\"), `${dialog_message}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')})`,\n                dialog_options, {ok_button_text: xabber.getString(\"clear_chat_history_dialog_button\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    return;\n                }\n                let msgs = _.clone(this.model.messages.models);\n                msgs.forEach((item) => { this.removeMessage(item); });\n            });\n        }\n    },\n\n    renderVoiceMessage: function (element, file_url, chat) {\n        let not_expanded_msg = element.innerHTML,\n            unique_id = 'waveform' + moment.now(),\n            $elem = $(element),\n            $msg_element = $elem.closest('.link-file');\n        chat = chat || this.model;\n        $elem.addClass('voice-message-rendering').html($(templates.messages.audio_file_waveform({waveform_id: unique_id})));\n        let aud = this.createAudio(file_url, $elem.find('#' + unique_id));\n\n        let hideShowCursor = () => {\n            let current_time = aud.getCurrentTime(),\n                duration = aud.getDuration();\n            if (current_time === 0 || current_time === duration)\n                $msg_element.addClass('wave-cursor-hidden');\n            else\n                $msg_element.removeClass('wave-cursor-hidden');\n        };\n\n        aud.on('ready', () => {\n            let duration = Math.round(aud.getDuration());\n            hideShowCursor();\n            $elem.find('.voice-msg-total-time').text(utils.pretty_duration(duration));\n        });\n\n        aud.on('error', () => {\n            $elem.removeClass('voice-message-rendering');\n            element.innerHTML = not_expanded_msg;\n            aud.unAll();\n            $elem.find('.voice-message-play').get(0).remove();\n            utils.callback_popup_message(xabber.getString(\"jingle__error__audio_not_supported\"), 3000);\n        });\n\n        aud.on('play', () => {\n            $msg_element.addClass('playing');\n            $msg_element.removeClass('wave-cursor-hidden');\n            let is_popup;\n            xabber.current_plyr_player && (is_popup = xabber.current_plyr_player.is_popup);\n            xabber.current_plyr_player = chat.plyr_players.find(item => item.$audio_elem === $msg_element[0]);//переделать на выбор из всех\n            xabber.current_plyr_player && (xabber.current_plyr_player.chat_item = chat.item_view);\n            xabber.current_plyr_player && (xabber.current_plyr_player.is_popup = is_popup);\n            let other_players = xabber.plyr_players.filter(other => other != xabber.current_plyr_player);\n            other_players.forEach(function(other) {\n                if (other.$audio_elem){\n                    if (other.$audio_elem.voice_message)\n                        other.$audio_elem.voice_message.stopTime();\n                }\n            });\n            (xabber.plyr_player_popup && xabber.plyr_player_popup.player) && xabber.plyr_player_popup.player.stop();\n            (!xabber.current_plyr_player && xabber.plyr_player_popup) && xabber.plyr_player_popup.closePopup();\n            let timerId = setInterval(function() {\n                let cur_time = Math.round(aud.getCurrentTime());\n                if (aud.isPlaying())\n                    $elem.find('.voice-msg-current-time').text(utils.pretty_duration(cur_time));\n                else\n                    clearInterval(timerId);\n            }, 100);\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('finish', () => {\n            hideShowCursor();\n            $msg_element.removeClass('playing');\n        });\n\n        aud.on('pause', () => {\n            $msg_element.removeClass('playing');\n            hideShowCursor();\n            xabber.trigger('plyr_player_updated');\n        });\n\n        aud.on('seek', () => {\n            hideShowCursor();\n        });\n\n        aud.stopTime = () => {\n            aud.stop()\n            $elem.find('.voice-msg-current-time').text(utils.pretty_duration(0));\n        };\n\n        $elem.find('.voice-message-volume')[0].onchange = () => {\n            aud.setVolume($elem.find('.voice-message-volume').val()/100);\n        };\n        return aud;\n    },\n\n    createImageGrid: function (attrs) {\n        let template_for_images;\n        if (attrs.images.length > 6) {\n            let tpl_name = 'template-for-6',\n                hidden_images = attrs.images.length - 5;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n            template_for_images = $(templates.messages[tpl_name](attrs));\n            template_for_images.find('.last-image').addClass('hidden-images');\n            template_for_images.find('.image-counter').text('+' + hidden_images);\n        }\n        else {\n            let tpl_name = 'template-for-' + attrs.images.length;\n            !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + attrs.images.length)\n            template_for_images = $(templates.messages[tpl_name](attrs));\n        }\n        if (!xabber.settings.load_media) {\n            template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n        }\n        return template_for_images;\n    },\n\n    buildMessageHtml: function (message) {\n        let attrs = _.clone(message.attributes),\n            is_sender = (message instanceof xabber.Message) ? message.isSenderMe() : false,\n            user_info = attrs.user_info || {}, username,\n            images = attrs.images,\n            videos = attrs.videos,\n            emoji = message.get('only_emoji'),\n            files =  attrs.files,\n            locations =  attrs.locations,\n            link_references =  attrs.link_references,\n            is_video = Boolean(videos && videos.length),\n            is_image = Boolean(images && images.length),\n            is_location = locations ? true : false,\n            is_file = files ? true : false,\n            is_audio = false,\n            template_for_images,\n            avatar_id = user_info.avatar,\n            avatar_url = user_info.avatar_url,\n            role = user_info.role,\n            badge = user_info.badge,\n            from_id = user_info.id,\n            has_encrypted_files = attrs.has_encrypted_files,\n            audio_player_list = [];\n\n        username = user_info.nickname || this.model.get('saved') && this.account.get('name') || (attrs.from_jid === this.contact.get('jid') && this.contact.get('name'));\n        if (!username) {\n            if (is_sender) {\n                if (this.model.get(\"group_chat\")) {\n                    if (this.contact.my_info)\n                        username = this.contact.my_info.get('nickname');\n                    else if (this.contact)\n                        this.contact.getMyInfo(() => {\n                            username = this.contact.my_info.get('nickname');\n                            if ($message) {\n                                $message.children(\".msg-wrap\").find(\".chat-msg-author-wrap .chat-msg-author\").text(Strophe.xmlescape(username));\n                            }\n                        });\n                    else\n                        username = this.account.get('name');\n                } else\n                    username = this.account.get('name');\n            } else {\n                username = this.account.contacts.get(attrs.from_jid) ? this.account.contacts.get(attrs.from_jid).get('name') : attrs.from_jid;\n            }\n        }\n        username = Strophe.xmlescape(username || \"\");\n\n        if (is_sender && this.model.get('group_chat')) {\n            if (this.contact.my_info) {\n                role = this.contact.my_info.get('role');\n                badge = this.contact.my_info.get('badge');\n            }\n        }\n        _.extend(attrs, {\n            username: username,\n            state: (message instanceof xabber.Message) ? message.getState() : 'sent',\n            verbose_state: (message instanceof xabber.Message) ? message.getVerboseState() : 'sent',\n            time: pretty_datetime(attrs.time),\n            short_time: utils.pretty_time(attrs.time),\n            avatar_id: avatar_id,\n            avatar_url: avatar_url,\n            is_image: is_image,\n            is_video: is_video,\n            is_file: is_file,\n            is_location: is_location,\n            files: files,\n            locations: locations,\n            link_references: link_references,\n            role: utils.pretty_name(role),\n            badge: badge,\n            from_id: from_id\n        });\n        attrs.encrypted = attrs.encrypted || this.model.get('encrypted');\n\n        if (attrs.type === 'system') {\n            let tpl_name = attrs.invite ? 'group_request' : 'system';\n            return $(templates.messages[tpl_name](attrs));\n        }\n\n        if (is_image) {\n            if (images.length > 1) {\n                template_for_images = this.createImageGrid(attrs);\n            }\n        }\n\n        let classes = [\n            attrs.forwarded_message && 'forwarding',\n            (attrs.encrypted || this.model.get('encrypted')) ? 'encrypted' : \"\"\n        ];\n\n        let markup_body = utils.markupBodyMessage(message), $message;\n        if (attrs.searched_message){\n            let myRegexp = new RegExp('(.{0,12})(' + attrs.query + ')(.{0,12})','gmius'),\n                matching_markup = myRegexp.exec(markup_body);\n            if (matching_markup) {\n                if (matching_markup[1].length == 12)\n                    matching_markup[1] = '...' + matching_markup[1].substring(1);\n                if (matching_markup[3].length == 12)\n                    matching_markup[3] = matching_markup[3].substring(0, matching_markup[3].length - 1) + '...';\n                markup_body = matching_markup[1] + '<span class=\"mention ground-color-100\">' + matching_markup[2] + '</span>' + matching_markup[3];\n                markup_body = markup_body.replace(/\\n/g, \" \");;\n            }\n        }\n\n        if (this.model.get('saved') && !markup_body.length && attrs.forwarded_message && attrs.forwarded_message.length == 1) {\n            $message = $(templates.messages.saved_main(_.extend(attrs, {\n                classlist: classes.join(' ')\n            })));\n        } else if (attrs.searched_message)\n            $message = $(templates.messages.searched(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                msg_time: utils.pretty_short_datetime_recent_chat(attrs.time),\n                classlist: classes.join(' ')\n            })));\n        else if (attrs.type === 'file_upload')\n            $message = $(templates.messages.file_upload(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n        else\n            $message = $(templates.messages.main(_.extend(attrs, {\n                is_sender: is_sender,\n                message: markup_body,\n                classlist: classes.join(' ')\n            })));\n\n        if (attrs.hasOwnProperty('is_trusted'))\n            $message.attr('data-trust', attrs.is_trusted);\n\n        if (is_image) {\n            if (images.length > 1) {\n                $message.find('.chat-msg-media-content').html(template_for_images);\n                !xabber.settings.load_media && $message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            if (images.length == 1) {\n                let $img_html = this.createImage(images[0]),\n                    img_content = this.createImageContainer(images[0]);\n                $img_html.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.find('.chat-msg-media-content').html($(img_content).html($img_html));\n                !xabber.settings.load_media && $message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                this.updateScrollBar();\n            }\n        }\n        if (is_video) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content').append(video_content);\n            videos.forEach((video) => {\n                let video_el = this.createVideo(video);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n\n        if (is_file && attrs.type !== 'file_upload') {\n            if (files.length > 0) {\n                let file_attrs = _.clone(files),\n                    template_for_file_content;\n                $(file_attrs).each((idx, file) => {\n                    let copied_attrs = _.clone(file_attrs[idx]);\n                    if (file.type) {\n                        if (file.voice)\n                            is_audio = true;\n                        else\n                            is_audio = false;\n                    }\n                    ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                    let mdi_icon_class = utils.file_type_icon(file.type);\n                    _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size) });\n                    template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                    $message.find('.chat-msg-media-content').append(template_for_file_content);\n                    if (is_audio && $message.find('.link-file').length) {\n                        let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                        audio_player.msg_time = $message.attr('data-time');\n                        audio_player.author = username;\n                        audio_player.message_unique_id = $message.attr('data-uniqueid');\n                        if (attrs.from_jid === this.account.get('jid')) {\n                            if (this.model.get('group_chat')) {\n                                if (this.contact.my_info) {\n                                    audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                    if (!audio_player.contact_avatar) {\n                                        if (this.account.cached_image)\n                                            audio_player.contact_avatar = this.account.cached_image;\n                                        !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                                    } else\n                                        audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                }\n                            }\n                            if (!audio_player.contact_avatar)\n                                audio_player.contact_avatar = this.account.cached_image;\n                        } else {\n                            if (this.model.get('group_chat')) {\n                                let author = $message.find('.msg-wrap .chat-msg-author').text();\n                                audio_player.contact_avatar = Images.getDefaultAvatar(author);\n                            }\n                            else {\n                                let author = this.account.contacts.get($message.data('from')) || $message.find('.msg-wrap .chat-msg-author').text() || $message.data('from');\n                                audio_player.contact_avatar = author.cached_image || Images.getDefaultAvatar(author);\n                            }\n                        }\n                        if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                            this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                            xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                            audio_player_list = audio_player_list.concat([audio_player]);\n                        } else {\n                            audio_player_list = message.get('msg_player_audios');\n                        }\n\n                        let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                        $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                        audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                        xabber.trigger('plyr_player_updated');\n                    }\n                });\n            }\n        }\n\n        if (is_file && attrs.type === 'file_upload') {\n            let images = [];\n            $(files).each((idx, file_) => {\n                file_.upload_id = idx;\n                if (utils.isImageType(file_.type)) {\n                    file_.sources = [utils.isImageType(file_.type) ? file_.key ? file_.image_prev.src : window.URL.createObjectURL(new Blob([file_])) : null,];\n                    images.push(file_);\n                }\n            });\n            if (images.length > 0) {\n                if (images.length > 1) {\n                    let template_for_images;\n                    if (images.length > 6) {\n                        let tpl_name = 'template-for-6',\n                            hidden_images = images.length - 5;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                        template_for_images.find('.last-image').addClass('hidden-images');\n                        template_for_images.find('.image-counter').text('+' + hidden_images);\n                    }\n                    else {\n                        let tpl_name = 'template-for-' + images.length;\n                        template_for_images = $(templates.messages[tpl_name]({images}));\n                    }\n                    template_for_images.addClass('unuploaded-images');\n                    $(templates.messages.loading_circle()).insertAfter(template_for_images.find('img'));\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(template_for_images);\n                } else {\n                    let $img_html = this.createImage(images[0]),\n                        img_content = this.createImageContainer(images[0]),\n                        maxHeight = 400,\n                        maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7,\n                        imgHeight = images[0].height,\n                        imgWidth = images[0].width;\n                    maxWidth = maxWidth > 400 ? 400 : maxWidth;\n                    if (imgHeight && imgWidth) {\n                        if (imgWidth > maxWidth) {\n                            imgHeight = imgHeight * (maxWidth/imgWidth);\n                            imgWidth = maxWidth;\n                        }\n                        if (imgHeight > maxHeight) {\n                            imgWidth = imgWidth * (maxHeight/imgHeight);\n                            imgHeight = maxHeight;\n                        }\n                    }\n                    imgWidth = imgWidth ? imgWidth : 200;\n                    imgHeight = imgHeight ? imgHeight : 200;\n                    $(img_content).addClass('unuploaded-images');\n                    $(img_content).attr('data-upload-file-id', images[0].upload_id);\n                    $(img_content).css({\n                        width: imgWidth,\n                        height: imgHeight,\n                        'max-height': maxHeight,\n                        'max-width': maxWidth,\n                    });\n                    $(img_content).html($img_html)\n                    $(img_content).append(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').prepend(img_content);\n                }\n            }\n            if (files.length > 0) {\n                $(files).each((idx, item) => {\n                    if (images.includes(item))\n                        return;\n                    let file_attrs = {\n                            name: item.name,\n                            type: item.type,\n                            upload_id: item.upload_id,\n                        },\n                        template_for_file_content;\n                    _.extend(file_attrs, {size: utils.pretty_size(item.size)});\n                    template_for_file_content = $(templates.messages.file_loading(file_attrs));\n                    template_for_file_content.find('.file-loading-container').html(templates.messages.loading_circle());\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                });\n            }\n        }\n        if (is_location) {\n            if (locations.length > 0) {\n                let location_attrs = _.clone(locations),\n                    template_for_location_content;\n                $(location_attrs).each((idx, location) => {\n                    let copied_attrs = _.clone(location_attrs[idx]);\n                    _.extend(copied_attrs, { id: '_' + Math.random().toString(36).substr(2, 9)});\n                    if (xabber.settings.mapping_service){\n                        template_for_location_content = $(templates.messages.location(copied_attrs));\n                        $message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                        $message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                        $message.find('.chat-msg-location-content').append(template_for_location_content);\n                        this.loadLocationInChat($message, copied_attrs);\n                        this.locationOnload($message);\n                    } else {\n                        $message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                    }\n                });\n            }\n        }\n\n        if (link_references && link_references.length > 0) {\n            let link_references_attrs = _.clone(link_references),\n                template_for_link_reference_content,\n                youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n            $(link_references_attrs).each((idx, link) => {\n                let copied_attrs = _.clone(link_references_attrs[idx]);\n                copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                    copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                    copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                    copied_attrs.is_video = true;\n                    youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                    vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                } else\n                    copied_attrs.is_video = false;\n                template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                $message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n            });\n        }\n\n        if (message.get('data_form')) {\n            let data_form = utils.render_data_form(message.get('data_form'));\n            $message.find('.chat-msg-content').append(data_form);\n        }\n\n        if (attrs.forwarded_message && !attrs.searched_message) {\n            $(attrs.forwarded_message).each((idx, fwd_msg) => {\n                is_sender = fwd_msg.isSenderMe();\n                attrs = _.clone(fwd_msg.attributes);\n                let is_image_forward = Boolean(attrs.images && attrs.images.length),\n                    images_forward = is_image_forward ? _.clone(attrs.images) : undefined,\n                    $img_html_forward,\n                    is_forward_video = Boolean(attrs.videos && attrs.videos.length),\n                    is_forward_file = Boolean(attrs.files && attrs.files.length),\n                    is_forward_location = Boolean(attrs.locations && attrs.locations.length),\n                    is_fwd_voice_message,\n                    user_info = attrs.user_info || {},\n                    avatar_id = user_info.avatar,\n                    avatar_url = user_info.avatar_url,\n                    role = utils.pretty_name(user_info.role),\n                    badge = user_info.badge,\n                    from_id = user_info.id,\n                    from_jid = attrs.from_jid;\n                !has_encrypted_files && (has_encrypted_files = attrs.has_encrypted_files);\n                if (is_sender) {\n                    username = Strophe.xmlescape(user_info.nickname || this.account.get('name'));\n                } else {\n                    username = Strophe.xmlescape(user_info.nickname || user_info.id || this.account.contacts.mergeContact({jid: from_jid}).get('name'));\n                }\n\n                let fwd_markup_body = utils.markupBodyMessage(fwd_msg);\n\n                let $f_message = $(templates.messages.forwarded(_.extend(attrs, {\n                    time: pretty_datetime(attrs.time),\n                    short_time: utils.pretty_short_month_date(attrs.time),\n                    username: username,\n                    avatar_id: avatar_id,\n                    avatar_url: avatar_url,\n                    message: fwd_markup_body,\n                    is_file: is_forward_file,\n                    is_location: is_forward_location,\n                    is_audio: is_fwd_voice_message,\n                    role: role,\n                    badge: badge,\n                    from_id: from_id\n                })));\n\n                if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                    $f_message.append($message.children('.right-side').clone());\n                }\n\n                if (fwd_msg.get('forwarded_message')) {\n                    let fwd_messages_count = fwd_msg.get('forwarded_message').length,\n                        fwd_messages_link = xabber.getQuantityString(\"forwarded_messages_count\", fwd_messages_count);\n                    $f_message.children('.msg-wrap').children('.fwd-msgs-block').append($('<a/>', {class: 'collapsed-forwarded-message', 'data-uniqueid': attrs.unique_id}).text(fwd_messages_link));\n                }\n\n                if (is_image_forward) {\n                    if (images_forward.length > 1) {\n                        template_for_images = this.createImageGrid(attrs);\n                        $f_message.find('.chat-msg-media-content').html(template_for_images);\n                        !xabber.settings.load_media && $f_message.find('.img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                    if (images_forward.length == 1) {\n                        $img_html_forward = this.createImage(images_forward[0]);\n                        $img_html_forward.onload = () => {\n                            this.imageOnload($message);\n                        };\n                        let img_content_forward = this.createImageContainer(images_forward[0]);\n                        $f_message.find('.chat-msg-media-content').html($(img_content_forward).html($img_html_forward));\n                        !xabber.settings.load_media && $f_message.find('.img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n                    }\n                }\n                if (is_forward_video) {\n                    let video_content = this.createVideoContainer();\n                    $f_message.find('.chat-msg-media-content').append(video_content);\n                    attrs.videos.forEach((video) => {\n                        let video_el = this.createVideo(video);\n                        $f_message.find('.video-content').append(video_el);\n                    });\n                    this.videoOnload($message, message);\n                    $f_message.removeClass('file-upload noselect');\n                }\n\n                if (is_forward_file) {\n                    if (attrs.files.length > 0) {\n                        let file_attrs = _.clone(attrs.files),\n                            template_for_file_content;\n                        $(file_attrs).each((idx, file) => {\n                            let copied_attrs = _.clone(file_attrs[idx]);\n                            if (file.type) {\n                                if (file.voice)\n                                    is_audio = true;\n                                else\n                                    is_audio = false;\n                            }\n                            ((file_attrs.length === 1) && is_audio) && (file.name = xabber.getString(\"voice_message\"));\n                            let mdi_icon_class = utils.file_type_icon(file.type);\n                            _.extend(copied_attrs, { is_audio: is_audio, duration: utils.pretty_duration(copied_attrs.duration), mdi_icon: mdi_icon_class, size: utils.pretty_size(copied_attrs.size)});\n                            template_for_file_content = is_audio ? $(templates.messages.audio_file(copied_attrs)) : $(templates.messages.file(copied_attrs));\n                            $f_message.find('.chat-msg-media-content').append(template_for_file_content);\n                            if (is_audio && $f_message.find('.link-file').length) {\n                                let audio_player = {$audio_elem : $f_message.find('.link-file')[0]};\n                                audio_player.msg_time = $message.attr('data-time');\n                                audio_player.author = username;\n                                audio_player.message_unique_id = $message.attr('data-uniqueid') + '-' + $f_message.attr('data-uniqueid');\n                                if (is_sender) {\n                                    if (this.model.get('group_chat')) {\n                                        if (this.contact.my_info) {\n                                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                                            if (!audio_player.contact_avatar)\n                                                audio_player.contact_avatar = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                                            else\n                                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                                        }\n                                    }\n                                    if (!audio_player.contact_avatar)\n                                        audio_player.contact_avatar = this.account.cached_image;\n                                } else if (this.account.contacts.mergeContact({jid: from_jid})) {\n                                    let contact = this.account.contacts.mergeContact({jid: from_jid})\n                                    audio_player.contact_avatar = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($f_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n                                }\n                                if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                                    this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                                    xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                                    audio_player_list = audio_player_list.concat([audio_player]);\n                                } else {\n                                    audio_player_list = message.get('msg_player_audios');\n                                }\n                                let f_url = $f_message.find('.link-file').find('.file-link-download').attr('href');\n                                $f_message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                                audio_player.$audio_elem.voice_message = this.renderVoiceMessage($f_message.find('.link-file').find('.file-container')[0], f_url);\n                                xabber.trigger('plyr_player_updated');\n                            }\n                        });\n                    }\n                }\n                if (is_forward_location) {\n                    if (attrs.locations.length > 0) {\n                        let location_attrs = _.clone(attrs.locations),\n                            template_for_location_content;\n                        $(location_attrs).each((idx, location) => {\n                            let copied_attrs = _.clone(location_attrs[idx]);\n                            _.extend(copied_attrs, { id: '_fwd' + Math.random().toString(36).substr(2, 9) });\n                            if (xabber.settings.mapping_service){\n                                template_for_location_content = $(templates.messages.location(copied_attrs));\n                                $f_message.find('.chat-msg-location-content').attr('lon', copied_attrs.lon);\n                                $f_message.find('.chat-msg-location-content').attr('lat', copied_attrs.lat);\n                                $f_message.find('.chat-msg-location-content').append(template_for_location_content);\n                                this.loadLocationInChat($message, copied_attrs);\n                            } else {\n                                $f_message.find('.chat-msg-content').append('<a class=\"location-link\" href=\"geo:' + copied_attrs.lat + ',' + copied_attrs.lon + '\">' + xabber.getString(\"recent_chat__last_message__locations_plural_0\") + '</a>');\n                            }\n                        });\n                    }\n                }\n                if (attrs.link_references && attrs.link_references.length > 0) {\n                    let link_references_attrs = _.clone(attrs.link_references),\n                        template_for_link_reference_content,\n                        youtube_url_regexp = new RegExp('^((?:https?:)?\\\\/\\\\/)?((?:www|m)\\\\.)?((?:youtube(-nocookie)?\\\\.com|youtu.be))(\\\\/(?:[\\\\w\\\\-]+\\\\?v=|embed\\\\/|v\\\\/)?)([\\\\w\\\\-]+)(\\\\S+)?$', 'i'),\n                        vimeo_url_regexp = /(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/(?:[^\\/]*)\\/videos\\/|album\\/(?:\\d+)\\/video\\/|video\\/|)(\\d+)(?:[a-zA-Z0-9_\\-]+)?/i;\n                    $(link_references_attrs).each((idx, link) => {\n                        let copied_attrs = _.clone(link_references_attrs[idx]);\n                        copied_attrs.domain = copied_attrs.url ? utils.getDomainFromUrl(copied_attrs.url) : copied_attrs.site_name;\n                        if (copied_attrs.original_text && !/^https?:\\/\\//i.test(copied_attrs.original_text))\n                            copied_attrs.original_text = 'http://' + copied_attrs.original_text;\n                        if (link_references_attrs[idx].type && link_references_attrs[idx].type.includes('video') && link_references_attrs[idx].video_url && (youtube_url_regexp.test(link_references_attrs[idx].video_url) || vimeo_url_regexp.test(link_references_attrs[idx].video_url))){\n                            copied_attrs.video_url = link_references_attrs[idx].video_url.replace(\"autoplay=1&\", \"\");\n                            copied_attrs.is_video = true;\n                            youtube_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'youtube');\n                            vimeo_url_regexp.test(link_references_attrs[idx].video_url) && (copied_attrs.provider = 'vimeo');\n                        } else\n                            copied_attrs.is_video = false;\n                        template_for_link_reference_content = $(templates.messages.link_reference_chat(copied_attrs));\n                        $f_message.find('.chat-msg-link-reference-content').append(template_for_link_reference_content);\n                    });\n                }\n                if (fwd_msg.get('data_form')) {\n                    let data_form = utils.render_data_form(fwd_msg.get('data_form'));\n                    $f_message.find('.chat-msg-content').append(data_form);\n                }\n                $message.children('.msg-wrap').length ? $message.children('.msg-wrap').children('.fwd-msgs-block').append($f_message) : $message.children('.fwd-msgs-block').append($f_message);\n            });\n            this.updateScrollBar();\n            if (this.model.get('saved') && $message.hasClass('saved-main')) {\n                $message.children('.right-side').remove();\n            }\n        }\n        else\n            $message.find('.fwd-msgs-block').remove();\n\n        if (attrs.encrypted || this.model.get('encrypted') || has_encrypted_files) {\n            this.decryptImages(message, has_encrypted_files);\n        }\n\n        if (attrs.searched_message) {\n            let msg_text = '';\n            msg_text = (attrs.forwarded_message) ? (xabber.getQuantityString(\"forwarded_messages_count\", attrs.forwarded_message.length)) : '';\n            if (is_file && is_image && files.length && images.length)\n                msg_text = xabber.getString(\"recent_chat__last_message__attachments\", [files.length + images.length]);\n            else {\n                if (is_file && files.length == 1 && (files[0].is_audio || files[0].voice))\n                    msg_text = `${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(files[0].duration);\n                else if (is_file && files.length > 0) {\n                    let total_size = 0;\n                    files.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_image && images.length > 0) {\n                    let total_size = 0;\n                    images.forEach((f) => {\n                        total_size += Number(f.size)\n                    });\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__images\", images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\");\n                }\n                if (is_location && locations.length > 0) {\n                    msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", locations.length);\n                }\n            }\n            if (msg_text)\n                $message.find('.chat-msg-content').text(msg_text)\n        }\n        message.set('msg_player_audios', audio_player_list);\n        return $message.hyperlinkify({selector: '.chat-text-content', embed_video: true}).emojify('.chat-text-content', {tag_name: 'div', emoji_size: utils.emoji_size(emoji)}).emojify('.chat-msg-author-badge', {emoji_size: 16});\n    },\n\n    getDateIndicator: function (date) {\n        let day_date = moment(date).startOf('day');\n        return $('<div class=\"chat-day-indicator one-line noselect\"' + (this.model.get('encrypted') ? (' data-trust=\"' + (this.bottom.$el.attr('data-trust') || this.bottom.$el.attr('data-contact-trust')) + '\"') : \"\") + ' data-time=\"'+\n            day_date.format('x')+'\">'+pretty_date(day_date)+'</div>');\n    },\n\n    initPlyrEmbedPlayer: function ($msg, msg) {\n        let message = this.model.messages.get($msg.data('uniqueid')) || msg,\n            msg_players = [];\n        $msg.find('.plyr-video-container:not(.no-load)').each((idx, item) => {\n            if ($(item).hasClass('no-load'))\n                return;\n            let existing_player = this.model.plyr_players.filter(obj => { return (obj.message_id === idx && obj.message_unique_id === $msg.attr('data-uniqueid'))}),\n                player;\n            if (existing_player.length){\n                player = existing_player[0]\n                msg_players = msg_players.concat([player]);\n            } else {\n                player = {video_src: $(item).attr('data-src')}\n                player.provider = $(item).attr('data-provider');\n                player.msg_time = $msg.attr('data-time');\n                player.chat_item = this.model.item_view;\n                player.message_id = idx;\n                player.message_unique_id = $msg.attr('data-uniqueid');\n                this.model.plyr_players = this.model.plyr_players.concat([player]).sort((a, b) => a.msg_time - b.msg_time);\n                xabber.plyr_players = xabber.plyr_players.concat([player]);\n                msg_players = msg_players.concat([player]);\n            }\n            $(item).attr('data-message-id', player.message_id);\n            $(item).addClass('no-load');\n            if (xabber.current_plyr_player && xabber.current_plyr_player.player_item)\n                if (xabber.current_plyr_player.player_item.message_id === player.message_id && xabber.current_plyr_player.player_item.message_unique_id === player.message_unique_id)\n                    $(item).addClass('active-plyr-container');\n        });\n        msg_players.length && message.set('msg_player_videos', msg_players);\n        xabber.trigger('plyr_player_updated');\n    },\n\n    hideMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showMessageAuthor: function ($msg) {\n        if ($msg.hasClass('system'))\n            return;\n        $msg.addClass('with-author');\n        let image, $avatar = $msg.find('.left-side .circle-avatar'),\n            from_jid = $msg.data('from');\n        if (from_jid === this.account.get('jid')) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image) {\n                        if (this.account.cached_image)\n                            image = this.account.cached_image;\n                        !image && (image = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                    } else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else {\n            if (this.model.get('group_chat')) {\n                let author = $msg.find('.msg-wrap .chat-msg-author').text();\n                image = Images.getDefaultAvatar(author);\n            }\n            else {\n                let author = this.account.contacts.get($msg.data('from')) || $msg.find('.msg-wrap .chat-msg-author').text() || $msg.data('from');\n                image = author.cached_image || Images.getDefaultAvatar(author);\n            }\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        if ($msg.data('avatar')) {\n            if ($msg.data('from-id')) {\n                if (this.account.chat_settings.getHashAvatar($msg.data('from-id')) == $msg.data('avatar') && (this.account.chat_settings.getB64Avatar($msg.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($msg.data('from-id')), this.avatar_size);\n                }\n                else {\n                    let pending_avatar = this._pending_avatars.find(a => a.hash == $msg.data('avatar'));\n                    if (pending_avatar) {\n                        pending_avatar.dfd.done((data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            let idx = this._pending_avatars.indexOf(pending_avatar);\n                            if (idx > -1)\n                                this._pending_avatars.splice(idx, 1);\n                        });\n                    } else {\n                        if($msg.data('avatar-url')){\n                            $avatar.setAvatar($msg.data('avatar-url'), this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), $msg.data('avatar-url'));\n                        }\n                        else\n                        {\n                            let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $msg.data('from-id'), dfd = new $.Deferred();\n                            this._pending_avatars.push({hash: $msg.data('avatar'), dfd: dfd});\n                            this.contact.getAvatar($msg.data('avatar'), node, (data_avatar) => {\n                                $avatar.setAvatar(data_avatar, this.avatar_size);\n                                this.account.chat_settings.updateCachedAvatars($msg.data('from-id'), $msg.data('avatar'), data_avatar);\n                                dfd.resolve(data_avatar);\n                            });\n\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    hideFwdMessageAuthor: function ($msg) {\n        $msg.removeClass('with-author');\n    },\n\n    showFwdMessageAuthor: function ($fwd_message) {\n        if (!$fwd_message.length)\n            return;\n        $fwd_message.addClass('with-author');\n        let image,\n            $avatar = $fwd_message.find('.circle-avatar'),\n            from_jid = $fwd_message.data('from'),\n            is_sender = (from_jid === this.account.get('jid')),\n            contact = this.account.contacts.get(from_jid) || from_jid;\n        if (is_sender) {\n            if (this.model.get('group_chat')) {\n                if (this.contact.my_info) {\n                    image = this.contact.my_info.get('b64_avatar');\n                    if (!image)\n                        image = this.account.cached_image || Images.getDefaultAvatar(this.contact.my_info.get('nickname'));\n                    else\n                        image = Images.getCachedImage(image);\n                }\n            }\n            if (!image)\n                image = this.account.cached_image;\n        } else if (contact) {\n            image = contact.cached_image || (this.model.get('group_chat') ? Images.getDefaultAvatar($fwd_message.find('.msg-wrap .fwd-msg-author').text()) : Images.getDefaultAvatar(contact));\n        }\n        $avatar.setAvatar(image, this.avatar_size);\n        $avatar.removeClass('hidden');\n        if ($fwd_message.data('avatar')) {\n            if ($fwd_message.data('from-id')) {\n                if ((this.account.chat_settings.getHashAvatar($fwd_message.data('from-id')) == $fwd_message.data('avatar')) && (this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')))) {\n                    $avatar.setAvatar(this.account.chat_settings.getB64Avatar($fwd_message.data('from-id')), this.avatar_size);\n                }\n                else {\n                    if($fwd_message.data('avatar-url')){\n                        $avatar.setAvatar($fwd_message.data('avatar-url'), this.avatar_size);\n                        this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), $fwd_message.data('avatar-url'));\n                    }\n                    else {\n                        let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + $fwd_message.data('from-id');\n                        this.contact && this.contact.getAvatar($fwd_message.data('avatar'), node, (data_avatar) => {\n                            $avatar.setAvatar(data_avatar, this.avatar_size);\n                            this.account.chat_settings.updateCachedAvatars($fwd_message.data('from-id'), $fwd_message.data('avatar'), data_avatar);\n                        });\n                    }\n                }\n            }\n        }\n    },\n\n    updateMessageInChat: function (msg_elem) {\n        let $msg = $(msg_elem);\n        $msg.prev('.chat-day-indicator').remove();\n        if ($msg.find('.plyr-video-container').length) {\n            this.initPlyrEmbedPlayer($msg);\n        }\n        let $prev_msg = $msg.prevAll('.chat-message').first();\n        if (!$prev_msg.length) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n            $msg.find('.fwd-message').each((idx, fwd_msg_item) => {\n                this.showFwdMessageAuthor($(fwd_msg_item));\n            });\n            return;\n        }\n        if ($msg.find('.data-form').length) {\n            this.showMessageAuthor($msg);\n            return;\n        }\n        let is_system = $prev_msg.hasClass('system'),\n            is_same_sender = ($msg.data('from') === $prev_msg.data('from')),\n            is_same_date = moment($msg.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n        if (!is_same_date) {\n            this.getDateIndicator($msg.data('time')).insertBefore($msg);\n            this.showMessageAuthor($msg);\n        } else if (is_system || !is_same_sender || $prev_msg.hasClass('saved-main')) {\n            this.showMessageAuthor($msg);\n        } else {\n            this.hideMessageAuthor($msg);\n        }\n        if ($msg.hasClass('forwarding')) {\n            let $fwd_message = $msg.find('.fwd-message');\n            $fwd_message.each((idx, fwd_msg_item) => {\n                let $fwd_msg_item = $(fwd_msg_item),\n                    $prev_fwd_message = (idx > 0) ? $fwd_msg_item.prev() : [];\n                $fwd_msg_item.switchClass('hide-date', is_same_date && $prev_fwd_message.length);\n                $fwd_msg_item.removeClass('hide-time');\n                if ($prev_fwd_message.length) {\n                    let is_same_fwded_sender = ($fwd_msg_item.data('from') === $prev_fwd_message.data('from'));\n                    if (is_same_fwded_sender) {\n                        this.hideFwdMessageAuthor($fwd_msg_item);\n                    } else {\n                        this.showFwdMessageAuthor($fwd_msg_item);\n                    }\n                } else {\n                    this.showMessageAuthor($msg);\n                    this.showFwdMessageAuthor($fwd_msg_item);\n                }\n            });\n        }\n    },\n\n    notifyMessage: function (message) {\n        if (xabber.settings.notifications && ((xabber.settings.notifications_private && !this.model.get('group_chat')) || (xabber.settings.notifications_group && this.model.get('group_chat')))) {\n            let notification_text;\n            if ((this.model.get('group_chat') && xabber.settings.message_preview_group) || (!this.model.get('group_chat') && xabber.settings.message_preview_private))\n                notification_text = message.getText();\n            else\n                notification_text = xabber.getString(\"notification__text_sent_a_message\");\n            let notification = xabber.popupNotification({\n                title: this.contact.get('name'),\n                text: notification_text,\n                icon: this.contact.cached_image.url\n            });\n            notification.onclick = () => {\n                window.focus();\n                this.model.trigger('open');\n            };\n        }\n        if (xabber.settings.group_sound && xabber.settings.notifications_group && this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_group_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        else if (xabber.settings.private_sound && xabber.settings.notifications_private && !this.model.get('group_chat')) {\n            let sound;\n            if (message.get('auth_request')) {\n                sound = xabber.settings.sound_on_auth_request;\n            } else {\n                sound = xabber.settings.sound_on_private_message;\n            }\n            xabber.playAudio(sound, false, xabber.settings.notifications_volume);\n        }\n        xabber.recountAllMessageCounter();\n    },\n\n      attentionMessage: function () {\n          let notification = xabber.popupNotification({\n              title: this.contact.get('name'),\n              text: xabber.getString(\"chats_attention\"),\n              icon: this.contact.cached_image.url\n          });\n          notification.onclick = () => {\n              window.focus();\n              this.model.trigger('open');\n          };\n          let sound = xabber.settings.sound_on_attention;\n          xabber.playAudio(sound);\n      },\n\n    sendMessage: function (message) {\n        let body = message.get('message'),\n            legacy_body = '',\n            mutable_content = [],\n            forwarded_message = message.get('forwarded_message'),\n            unique_id = message.get('unique_id'),\n            msg_id = message.get('msgid'),\n            link_references = message.get('link_references'),\n            stanza = $msg({\n                to: this.model.get('jid'),\n                type: 'chat',\n                id: msg_id\n            });\n\n        if (forwarded_message) {\n            legacy_body = [];\n            $(forwarded_message).each((idx, fwd_msg) => {\n                let legacy_fwd_msg = Array.from(_.escape(_.unescape(this.bottom.createTextMessage([fwd_msg], \">\"))) + ((idx === forwarded_message.length - 1 && !body.length) ? \"\" : '\\n')),\n                    idx_begin = legacy_body.length,\n                    fwd = $(fwd_msg.get('xml')).clone(),\n                    idx_end = legacy_body.concat(legacy_fwd_msg).length;\n                if (!fwd.attr('from'))\n                    fwd.attr('from', this.account.get('jid'));\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: idx_begin,\n                    end: idx_end\n                })\n                    .c('forwarded', {xmlns: 'urn:xmpp:forward:0'})\n                    .c('delay', {\n                        xmlns: 'urn:xmpp:delay',\n                        stamp: fwd_msg.get('time')\n                    }).up().cnode(fwd[0]).up().up().up();\n                legacy_body = legacy_body.concat(legacy_fwd_msg);\n                mutable_content.push({\n                    start: idx_begin,\n                    end: idx_end,\n                    type: 'forward'\n                });\n            });\n            body = _.unescape(legacy_body.join(\"\")) + body;\n        }\n\n        if (message.get('mentions') && message.get('mentions').length) {\n            message.get('mentions').forEach((mention) => {\n                let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n                mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: mention.start + legacy_body.length,\n                    end: mention.end + legacy_body.length,\n                    type: 'decoration',\n                })\n                    .c('mention', mention_attrs).t(mention.target).up().up();\n            });\n        }\n\n        if (message.get('markups')) {\n            message.get('markups').forEach((markup) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: markup.start + legacy_body.length,\n                    end: markup.end + legacy_body.length,\n                    type: 'decoration'\n                });\n                for (let idx in markup.markup) {\n                    stanza.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n                }\n                stanza.up();\n            });\n        }\n\n        if (message.get('blockquotes')) {\n            message.get('blockquotes').forEach((blockquote) => {\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: blockquote.start + legacy_body.length,\n                    end: blockquote.end + legacy_body.length,\n                    type: 'decoration'\n                })\n                    .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n            });\n        }\n\n        if (message.get('type') == 'file_upload') {\n            let files = message.get('files') || [],\n                images = message.get('images') || [],\n                videos = message.get('videos') || [],\n                all_files = files.concat(images);\n            all_files = all_files.concat(videos)\n            all_files.forEach((file, idx) => {\n                (idx === 0) && (body += '\\n');\n                legacy_body = file.sources[0] + ((idx != all_files.length - 1) ? '\\n' : \"\");\n                let start_idx = Array.from(_.escape(body)).length,\n                    end_idx = start_idx + legacy_body.length;\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && stanza.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                stanza.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && stanza.c('media-type').t(file.type).up();\n                file['id'] && stanza.c('gallery-id').t(file['id']).up();\n                file.thumbnail && stanza.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && stanza.c('created').t(file.created).up();\n                file.name && stanza.c('name').t(file.name).up();\n                file.size && stanza.c('size').t(file.size).up();\n                file.height && stanza.c('height').t(file.height).up();\n                file.width && stanza.c('width').t(file.width).up();\n                file.duration && stanza.c('duration').t(file.duration).up();\n                file.description && stanza.c('desc').t(file.description).up();\n                stanza.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    stanza.c('uri').t(u).up();\n                });\n                stanza.up().up().up();\n                file.voice && stanza.up();\n                body += legacy_body;\n                mutable_content.push({start: start_idx, end: end_idx});\n            });\n            message.set({type: 'main'});\n        }\n\n        if (link_references && link_references.length) {\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(body)).length;\n                    body = body + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                stanza.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && stanza.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && stanza.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && stanza.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && stanza.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && stanza.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && stanza.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && stanza.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && stanza.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && stanza.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                stanza.up().up();\n                mutable_content.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n\n        mutable_content.length && message.set({mutable_content: mutable_content});\n\n        this.account._pending_messages.push({chat_hash_id: this.model.id, unique_id: unique_id, timestamp: moment.now()});\n\n        message.set('original_message', body);\n        body && stanza.c('body').t(body).up();\n        stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up()\n            .c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n        message.set({xml: $(stanza.tree()).clone()[0]});\n        if (message.get('state') === constants.MSG_ERROR) {\n            stanza.c('retry', {xmlns: Strophe.NS.DELIVERY}).up();\n            message.set('state', constants.MSG_PENDING);\n        }\n        if (stanza.toString().length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            this.removeMessage(message);\n            return;\n        }\n        if (message.get('encrypted') && this.account.omemo) {\n            stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($(stanza.tree()).children('body').length) {\n                stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $(stanza.tree()).children('body').detach()\n            }\n            if ($(stanza.tree()).children('reference').length) {\n                $(stanza.tree()).children('reference').each((idx, reference) => {\n                    stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                });\n                $(stanza.tree()).children('reference').detach()\n            }\n            stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            stanza.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, stanza).then((msg) => {\n                if (msg) {\n                    stanza = msg.message;\n                    message.set('trusted', msg.is_trusted);\n                }\n                let msg_sending_timestamp = moment.now();\n                this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n            });\n            return;\n        } else {\n            let msg_sending_timestamp = moment.now();\n            this.account.sendFast(stanza, this.msgCallback.bind(this, msg_sending_timestamp, message));\n        }\n    },\n\n      msgCallback: function (msg_sending_timestamp, message) {\n          this.bottom.click_counter = 0;\n          this.bottom.setDefaultPlaceholder();\n          if (!this.model.get('group_chat') && !this.account.server_features.get(Strophe.NS.DELIVERY)) {\n              setTimeout(() => {\n                  if ((this.account.last_stanza_timestamp > msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING)) {\n                      message.set('state', constants.MSG_SENT);\n                  } else {\n                      this.account.connection.ping.ping(this.account.get('jid'), () => {\n                          (message.get('state') === constants.MSG_PENDING) && message.set('state', constants.MSG_SENT);\n                      });\n                      setTimeout(() => {\n                          if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (message.get('state') === constants.MSG_PENDING))\n                              message.set('state', constants.MSG_ERROR);\n                      }, 5000);\n                  }\n              }, 1000);\n          }\n          else {\n              let _pending_time = 5, was_reconnecting;\n              if (!(this.account.connection.authenticated && !this.account.connection.disconnecting && this.account.session.get('connected') && this.account.session.get('ready_to_send') && this.account.get('status') !== 'offline'))\n                  was_reconnecting = true;\n              if (this.account.session.get('reconnecting'))\n                  was_reconnecting = true;\n              this.account.session.once('change:reconnecting', () => {\n                  console.log('change reconnecting');\n                  console.log(this.account.session.get('reconnecting'));\n                  was_reconnecting = true;\n              })\n              let _interval = setInterval(() => {\n                  console.log(was_reconnecting);\n                  if (_pending_time >= 10 && message.get('state') === constants.MSG_PENDING && !was_reconnecting){\n                      console.log('ping on message pending');\n                      this.account.connection.ping.ping(this.account.get('jid'), () => {},  () => {\n                          console.log('message initiated reconnection');\n                          console.log(message);\n                          this.account.connection.disconnect();\n                      }, 5000);\n                  }\n                  if (((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 40) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 40)) && !was_reconnecting) {\n                      message.set('state', constants.MSG_ERROR);\n                      clearInterval(_interval);\n                  }\n                  else if (message.get('state') !== constants.MSG_PENDING)\n                      clearInterval(_interval);\n                  _pending_time += 10;\n              }, 10000);\n          }\n      },\n\n    initJingleMessage: function (media_type) {\n        xabber.current_voip_call && xabber.current_voip_call.destroy();\n        media_type = media_type || {};\n        media_type = media_type.video ? 'video' : 'audio';\n        let session_id = uuid();\n        xabber.current_voip_call = new xabber.JingleMessage({session_id: session_id, video_live: media_type === 'video'}, {contact: this.contact});\n        xabber.current_voip_call.startCall();\n        xabber.current_voip_call.modal_view.show({status: constants.JINGLE_MSG_PROPOSE});\n        xabber.trigger('update_jingle_button');\n    },\n\n    saveForwardedMessage: function (msg) {\n        let forwarded_message = null;\n        if ($(msg).get('forwarded_message')) {\n            forwarded_message = $(msg).get('forwarded_message');\n            if (this.account.forwarded_messages.indexOf(forwarded_message) < 0) {\n                forwarded_message = this.saveForwardedMessage(forwarded_message);\n            }\n        }\n        msg = this.account.forwarded_messages.create(_.extend({\n            is_forwarded: true,\n            forwarded_message: forwarded_message\n        }, msg.attributes));\n        return msg;\n    },\n\n    onSubmit: function (text, fwd_messages, options) {\n        // send forwarded messages before\n        options = options || {};\n        let attrs = {\n            from_jid: this.account.get('jid'),\n            message: text,\n            mentions: options.mentions,\n            blockquotes: options.blockquotes,\n            markups: options.markup_references,\n            files: options.attached_files,\n            link_references: options.link_references,\n            encrypted: this.model.get('encrypted'),\n            submitted_here: true,\n            forwarded_message: null\n        }, _dfd_info = new $.Deferred();\n        _dfd_info.done(() => {\n            if (!fwd_messages.length && !(attrs.files && attrs.files.length) && !(attrs.link_references && attrs.link_references.length) && text.removeEmoji() === \"\")\n                attrs.only_emoji = Array.from(text).length;\n            if (fwd_messages.length) {\n                let new_fwd_messages = [];\n                _.each(fwd_messages, (msg) => {\n                    if (this.account.forwarded_messages.indexOf(msg) < 0) {\n                        msg = this.saveForwardedMessage(msg);\n                    }\n                    new_fwd_messages.push(msg);\n                });\n                attrs.forwarded_message = new_fwd_messages;\n                if (attrs.files && attrs.files.length) {\n                    attrs.type = 'file_upload';\n                    this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                    this.model.messages.create(attrs);\n                } else {\n                    let message = this.model.messages.create(attrs);\n                    this.sendMessage(message);\n                }\n            } else if (attrs.files && attrs.files.length) {\n                attrs.type = 'file_upload';\n                this.account.server_features.get(Strophe.NS.HTTP_UPLOAD) && (attrs.upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD).get('from'));\n                this.model.messages.create(attrs);\n            } else if (text || (attrs.link_references && attrs.link_references.length)) {\n                let message = this.model.messages.create(attrs);\n                this.sendMessage(message);\n            }\n            if (this.contact && this.model.get('archived') && !this.model.isMuted()) {\n                message.set('muted', false);\n                this.head.archiveChat();\n                this.model.set('archived', false);\n                xabber.chats_view.updateScreenAllChats();\n            }\n            if (this.model.get('group_chat') && xabber.toolbar_view.$('.active').hasClass('chats'))\n                if (this.contact && !this.model.isMuted() && !this.model.get('archived'))\n                    xabber.chats_view.updateScreenAllChats();\n            xabber.chats_view.scrollToTop();\n            xabber.chats_view.clearSearch();\n        });\n\n        if (this.contact && this.contact.get(\"group_chat\") && !this.contact.my_info)\n            this.contact.getMyInfo(() => {\n                _dfd_info.resolve();\n            });\n        else\n            _dfd_info.resolve();\n    },\n\n    addFileMessage: function (files, is_voice) {\n        let new_files = [], file_counter = 0;\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                this.model.messages_view.openChat();\n        if (files.length > 10 && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        let http_upload_service = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        if (!http_upload_service && !(this.account.get('gallery_token') && this.account.get('gallery_url'))) {\n            utils.dialogs.error(xabber.getString(\"error_file_upload_not_support\", [this.account.domain]));\n            return;\n        }\n        let deferred_all = new $.Deferred();\n        deferred_all.done((data) => {\n            if (is_voice) {\n                this.model.messages.create({\n                    from_jid: this.account.get('jid'),\n                    type: 'file_upload',\n                    files: data,\n                    encrypted: this.model.get('encrypted'),\n                    upload_service: http_upload_service.get('from'),\n                    message: '',\n                    submitted_here: true\n                });\n            } else\n                this.bottom.addFileSnippets(data);\n        });\n        $(files).each((idx, file) => {\n            if (utils.isImageType(file.type)) {\n                let reader = new FileReader(), deferred = new $.Deferred();\n                Images.compressImage(file).done((image) => {\n                    reader.readAsDataURL(image);\n                    deferred.done((data) => {\n                        if (data) {\n                            image.height = data.height;\n                            image.width = data.width;\n                        }\n                        if (data.encrypted_file)\n                            new_files.push(data.encrypted_file);\n                        else\n                            new_files.push(image);\n                        file_counter++;\n                        if (file_counter === files.length)\n                            deferred_all.resolve(new_files);\n                    });\n                });\n                reader.onload = (e) => {\n                    if (this.model.get('encrypted')) {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                new_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            new_file.key = key;\n                            if (new_file.type === 'image/svg+xml') {\n                                deferred.resolve({encrypted_file: new_file,key: key});\n                            } else {\n                                let image_prev = new Image();\n                                image_prev.onload = function () {\n                                    let height = this.height,\n                                        width = this.width;\n                                    new_file.image_prev = image_prev;\n                                    deferred.resolve({height: height, width: width, encrypted_file: new_file, key: key});\n                                };\n                                image_prev.src = e.target.result;\n                            }\n                        });\n                    } else {\n                        if (file.type === 'image/svg+xml') {\n                            deferred.resolve({});\n                        } else {\n                            let image_prev = new Image();\n                            image_prev.onload = function () {\n                                let height = this.height,\n                                    width = this.width;\n                                deferred.resolve({height: height, width: width});\n                            };\n                            image_prev.src = e.target.result;\n                        }\n                    }\n                };\n            }\n            else {\n                if (this.model.get('encrypted')) {\n                    let reader = new FileReader();\n                    reader.onload = (e) => {\n                        this.encryptFile(e.target.result).then((encrypted) => {\n                            let key = encrypted.keydata,\n                                encrypted_file = new File([encrypted.payload], uuid().replace(/-/g, \"\"), {type: file.type});\n                            file.voice && (encrypted_file.voice = true);\n                            file.duration && (encrypted_file.duration = file.duration);\n                            encrypted_file.key = key;\n                            new_files.push(encrypted_file);\n                            file_counter++;\n                            if (file_counter === files.length)\n                                deferred_all.resolve(new_files);\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                } else {\n                    new_files.push(file);\n                    file_counter++;\n                    if (file_counter === files.length)\n                        deferred_all.resolve(new_files);\n                }\n            }\n        });\n    },\n\n    startUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        $message.find('.repeat-upload').hide();\n        $message.find('.status').hide();\n        $message.find('.progress').show();\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        let files_count = 0;\n        $(message.get('files')).each((idx, file) => {\n            let enc_file = new File([file], file.name);\n            enc_file.key && (delete enc_file.key);\n            let iq = $iq({type: 'get', to: message.get('upload_service')})\n                    .c('request', {xmlns: Strophe.NS.HTTP_UPLOAD})\n                    .c('filename').t(enc_file.name).up()\n                    .c('size').t(enc_file.size).up()\n                    .c('content-type').t(enc_file.type).up(),\n                deferred = new $.Deferred(), self = this;\n            this.account.sendIQFast(iq,\n                function (result) {\n                    let $slot = $(result).find(`slot[xmlns=\"${Strophe.NS.HTTP_UPLOAD}\"]`);\n                    deferred.resolve({\n                        get_url: $slot.find('get').text(),\n                        put_url: $slot.find('put').text()\n                    });\n                },\n                function (err) {\n                    let error_text = $(err).find(`error text[xml\\\\:lang=\"${xabber._settings.get('language')}\"]`).text(),\n                        error_type = $(err).find('error').attr('type');\n                    !error_text && (error_text = $(err).find(`error text`).text());\n                    self.onFileNotUploaded(message, $message, error_text, 'xmpp');\n                }\n            );\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n            deferred.done((data) => {\n                clearInterval(_interval);\n                let xhr = new XMLHttpRequest(),\n                    $bar = $message.find('.progress');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').click(() => {\n                    xhr.abort();\n                });\n                xhr.onabort = () => {\n                    this.removeMessage($message);\n                };\n                xhr.upload.onprogress = (event) => {\n                    let percentage = event.loaded / event.total;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n                };\n                xhr.onload = xhr.onerror = function () {\n                    if (this.status === 201) {\n                        message.get('files')[idx].url = data.get_url;\n                        files_count++;\n                        if (files_count == message.get('files').length) {\n                            self.onFileUploaded(message, $message);\n                        }\n                    } else {\n                        self.onFileNotUploaded(message, $message, this.responseText, 'http');\n                    }\n                };\n                if ($message.data('cancel')) {\n                    xhr.abort();\n                } else {\n                    xhr.open(\"PUT\", data.put_url, true);\n                    xhr.send(enc_file);\n                }\n            });\n        });\n    },\n\n    startGalleryUploadFile: function (message, $message) {\n        $message.emojify('.chat-msg-author-badge', {emoji_size: 16});\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files_count = 0,\n            cancelled_files_count = 0,\n            self = this,\n            is_error = false,\n            xhr_requests = [],\n            msg_files_count = message.get('files').length;\n        $message.find('.mdi-center-loading-indicator').removeClass('mdi-check').addClass('mdi-close');\n        $message.find('.uploaded-file').removeClass('uploaded-file');\n        $message.find('.mdi-center-loading-indicator').removeClass('hidden');\n        $message.find('.dropdown-content.retry-send-message').addClass('hidden');\n        $message.find('.msg-delivering-state').addClass('no-click');\n        $(message.get('files')).each((idx, file) => {\n            if (is_error)\n                return;\n            if (file.key) {\n                file = new File([file], file.name);\n                delete file.key\n            }\n            let msg_sending_timestamp = moment.now(), _pending_time = 10, _interval = setInterval(() => {\n                if ((this.account.last_stanza_timestamp < msg_sending_timestamp) && (_pending_time > 20) && (message.get('state') === constants.MSG_PENDING) || (_pending_time > 20)) {\n                    message.set('state', constants.MSG_ERROR);\n                    clearInterval(_interval);\n                }\n                else if (message.get('state') !== constants.MSG_PENDING)\n                    clearInterval(_interval);\n                _pending_time += 10;\n            }, 10000);\n\n            let formData = new FormData();\n            formData.append('file', file, file.name);\n            if (file.duration)\n                formData.append('duration', file.duration);\n            if (file.voice)\n                formData.append('media_type', file.type + '+voice');\n            else\n                formData.append('media_type', file.type);\n            clearInterval(_interval);\n            message.get('files')[idx].is_errored = false;\n            let xhr = new XMLHttpRequest(),\n                $bar = $message.find('.progress');\n            xhr.formData = formData;\n            xhr_requests = xhr_requests.concat([xhr]);\n            xhr.arrayIndex = xhr_requests.indexOf(xhr);\n            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap .mdi-close').one(\"click\",() => {\n                cancelled_files_count++;\n                if (xhr.is_uploading)\n                    xhr.abort();\n                else {\n                    if ((msg_files_count - cancelled_files_count) == 0) {\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        xhr.is_cancelled = true;\n                        $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                        $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        message.get('files')[idx] = null;\n                    }\n                }\n            });\n            xhr.upload.onprogress = (event) => {\n                let percentage = event.loaded / event.total;\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(parseInt((100 * percentage)) + '%');\n                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .preloader-path-new').css({ 'stroke-dasharray': '' + (150 * percentage) + ', 149.825'});\n            };\n            xhr.onload = xhr.onerror = xhr.onabort = function () {\n                if (this.status === 200) {\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('mdi-check').removeClass('mdi-close');\n                    let response = JSON.parse(this.response)\n                    message.get('files')[idx].id = response.id;\n                    message.get('files')[idx].created_at = response.created_at;\n                    (response.thumbnail && response.thumbnail.url) && (message.get('files')[idx].thumbnail = response.thumbnail.url);\n                    message.get('files')[idx].url = response.file;\n                    files_count++;\n                    $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('uploaded-file');\n                    while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                        files_count++;\n                    }\n                    if (files_count == message.get('files').length) {\n                        self.onFileUploaded(message, $message);\n                    } else if (xhr_requests[files_count]){\n                        self.account.testGalleryTokenExpire(() => {\n                            if (!is_error) {\n                                xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'))\n                                xhr_requests[files_count].is_uploading = true;\n                                xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                            }\n                        });\n                    }\n                } else {\n                    if (this.status === 0 && is_error)\n                        return;\n                    if ((msg_files_count - cancelled_files_count) == 0 && this.status === 0){\n                        message.set('files', []);\n                        self.bottom.setEditedMessageAttachments(message, true);\n                        self.bottom.setRedactedUploadMessage(message);\n                        self.removeMessage($message);\n                    } else {\n                        let response_text;\n                        self.account.handleCommonGalleryErrors(this.response)\n                        if (this.status === 500)\n                            response_text = this.statusText;\n                        else if (this.status === 400)\n                            response_text = JSON.parse(this.response).error;\n                        else if (this.status === 0) {\n                            $message.find('.unuploaded-file[data-upload-file-id=\"' + file.upload_id + '\"]').remove();\n                            $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-wrap').remove();\n                        };\n                        (this.status === 0) && (message.get('files')[idx] = null);\n                        files_count++;\n                        if (this.status != 0) {\n                            if (!$message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').closest('.img-content-template.hidden').length){\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .circle-percent-text').text(response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').removeClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-alert-circle').prop('title', response_text);\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"] .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').addClass('upload-error');\n                                $message.find('div[data-upload-file-id=\"' + file.upload_id + '\"]').css({ 'border-color': '#EF9A9A'});\n                            } else {\n                                $message.find('.hidden-images .circle-percent-text').text(response_text);\n                                $message.find('.hidden-images .mdi-alert-circle').removeClass('hidden');\n                                $message.find('.hidden-images .mdi-alert-circle').prop('title', response_text);\n                                $message.find('.hidden-images .mdi-center-loading-indicator').addClass('hidden');\n                                $message.find('.hidden-images').addClass('upload-error');\n                                $message.find('.hidden-images').css({ 'border-color': '#EF9A9A'});\n                            }\n                            message.get('files')[idx].is_errored = true;\n                            is_error = true;\n                            $(xhr_requests).each((idx, request) => {\n                                request.abort();\n                            })\n                            self.onFileNotUploaded(message, $message, response_text);\n                        }\n                        else if (files_count == msg_files_count) {\n                            self.onFileUploaded(message, $message);\n                        } else {\n                            while (xhr_requests[files_count] && xhr_requests[files_count].is_cancelled){\n                                files_count++;\n                            }\n                            if (files_count == msg_files_count) {\n                                self.onFileUploaded(message, $message);\n                            } else {\n                                self.account.testGalleryTokenExpire(() => {\n                                    if (!is_error) {\n                                        xhr_requests[files_count].open(\"POST\", self.account.get('gallery_url') + 'v1/files/upload/', true);\n                                        xhr_requests[files_count].setRequestHeader(\"Authorization\", 'Bearer ' + self.account.get('gallery_token'))\n                                        xhr_requests[files_count].is_uploading = true;\n                                        xhr_requests[files_count].send(xhr_requests[files_count].formData);\n                                    }\n                                });\n                            }\n                        }\n                    }\n                }\n            };\n        });\n        if (xhr_requests.length){\n            if ($message.data('cancel')) {\n                xhr_requests[0].abort();\n            } else {\n                this.account.testGalleryTokenExpire(() => {\n                    if (!is_error) {\n                        xhr_requests[0].open(\"POST\", this.account.get('gallery_url') + 'v1/files/upload/', true);\n                        xhr_requests[0].setRequestHeader(\"Authorization\", 'Bearer ' + this.account.get('gallery_token'))\n                        xhr_requests[0].is_uploading = true;\n                        xhr_requests[0].send(xhr_requests[0].formData);\n                    }\n                });\n            }\n        }\n\n    },\n\n      encryptFile: async function (file) {\n        return await utils.AES.encrypt(file);\n      },\n\n    onFileUploaded: function (message, $message) {\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        message.set('files', message.get('files').filter((element) => { return element != null}) );\n        let files = message.get('files'),\n            self = this, is_audio = false,\n            images = [], files_ = [], videos = [];\n        if (!files.length)\n            this.onFileNotUploaded(message, $message)\n        $(files).each((idx, file_) => {\n            let file_new_format = {\n                name: file_.name,\n                type: file_.type,\n                size: file_.size,\n                description: file_.description || '',\n                sources: [file_.url]\n            };\n            file_.key && (file_new_format.key = file_.key);\n            file_.voice && (file_new_format.voice = true);\n            if (this.account.get('gallery_token') && this.account.get('gallery_url')){\n                _.extend(file_new_format, { id: file_.id, created: file_.created_at, thumbnail: file_.thumbnail });\n            }\n            if (utils.isImageType(file_.type)) {\n                _.extend(file_new_format, { width: file_.width, height: file_.height });\n                images.push(file_new_format);\n            }\n            else if (utils.isVideoType(file_.type)) {\n                _.extend(file_new_format, { duration: file_.duration});\n                videos.push(file_new_format);\n            }\n            else {\n                _.extend(file_new_format, { duration: file_.duration});\n                files_.push(file_new_format);\n            }\n        });\n        $message.find('.unuploaded-images').remove();\n        $message.find('.unuploaded-file').remove();\n        //  loaded and send image\n        if (images.length > 0) {\n            if (images.length > 1) {\n                let template_for_images;\n                if (images.length > 6) {\n                    let tpl_name = 'template-for-6',\n                        hidden_images = images.length - 5;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-6')\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                    template_for_images.find('.last-image').addClass('hidden-images');\n                    template_for_images.find('.image-counter').text('+' + hidden_images);\n                }\n                else {\n                    let tpl_name = 'template-for-' + images.length;\n                    !xabber.settings.load_media && (tpl_name = 'hidden-template-for-' + images.length)\n                    template_for_images = $(templates.messages[tpl_name]({images}));\n                }\n                if (!xabber.settings.load_media) {\n                    template_for_images.find('img').removeClass('uploaded-img-for-collage popup-img').addClass('unloaded-img')\n                }\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_images);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content-template').first().append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n            else {\n                let img = this.createImage(images[0]),\n                    img_content = self.createImageContainer(images[0]);\n                img.onload = () => {\n                    this.imageOnload($message);\n                };\n                $message.removeClass('file-upload noselect');\n                $message.find('.chat-msg-media-content .chat-file-info').remove();\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(img_content);\n                $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').html(img);\n                !xabber.settings.load_media && $message.find('.chat-msg-media-content.chat-main-upload-media .img-content').append($('<div class=\"img-privacy-warning\"/>').text(xabber.getString(\"load_image_privacy_warning\")))\n            }\n        }\n        if (videos.length > 0) {\n            let video_content = this.createVideoContainer();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n            $message.find('.chat-msg-media-content.chat-main-upload-media').append(video_content);\n            videos.forEach((video) => {\n                let video_el = this.createVideo(video);\n                $message.find('.video-content').append(video_el);\n            });\n            this.videoOnload($message, message);\n            $message.removeClass('file-upload noselect');\n        }\n        if (files_.length > 0) {\n            $message.removeClass('file-upload noselect');\n            $(files_).each((idx, item) => {\n                if (!idx && !images.length){\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').find('.chat-file-info').remove();\n                    $message.find('.chat-msg-media-content.chat-main-upload-media').removeClass('chat-file-content');\n                }\n                if (item.type) {\n                    if (item.voice)\n                        is_audio = true;\n                    else\n                        is_audio = false;\n                }\n                let file_attrs = {\n                        name: item.name,\n                        type: item.type,\n                        sources: item.sources\n                    },\n                    template_for_file_content,\n                    mdi_icon_class = utils.file_type_icon(item.type);\n                ((files_.length === 1) && is_audio) && (file_attrs.name = xabber.getString(\"voice_message\"));\n                _.extend(file_attrs, {size: utils.pretty_size(item.size), is_audio: is_audio, duration: utils.pretty_duration(item.duration), mdi_icon: mdi_icon_class});\n                template_for_file_content = is_audio ? $(templates.messages.audio_file(file_attrs)) : $(templates.messages.file(file_attrs));\n                $message.find('.chat-msg-media-content.chat-main-upload-media').append(template_for_file_content);\n                if (is_audio && $message.find('.link-file').length) {\n                    let audio_player = {$audio_elem : $message.find('.link-file')[0]};\n                    audio_player.msg_time = $message.attr('data-time');\n                    audio_player.author = $message.find('.chat-msg-author').text();\n                    audio_player.message_unique_id = $message.attr('data-uniqueid');\n                    if (this.model.get('group_chat')) {\n                        if (this.contact.my_info) {\n                            audio_player.contact_avatar = this.contact.my_info.get('b64_avatar');\n                            if (!audio_player.contact_avatar) {\n                                if (this.account.cached_image)\n                                    audio_player.contact_avatar = this.account.cached_image;\n                                !audio_player.contact_avatar && (audio_player.contact_avatar = Images.getDefaultAvatar(this.contact.my_info.get('nickname')));\n                            } else\n                                audio_player.contact_avatar = Images.getCachedImage(audio_player.contact_avatar);\n                        }\n                    }\n                    if (!audio_player.contact_avatar)\n                        audio_player.contact_avatar = this.account.cached_image;\n                    if (!this.model.plyr_players.filter(obj => { return (obj.message_unique_id === audio_player.message_unique_id)}).length) {\n                        this.model.plyr_players = this.model.plyr_players.concat([audio_player]).sort((a, b) => a.msg_time - b.msg_time);\n                        xabber.plyr_players = xabber.plyr_players.concat([audio_player]);\n                    }\n\n                    let f_url = $message.find('.link-file').find('.file-link-download').attr('href');\n                    $message.find('.link-file').find('.mdi-play').removeClass('no-uploaded');\n                    audio_player.$audio_elem.voice_message = this.renderVoiceMessage($message.find('.link-file').find('.file-container')[0], f_url);\n\n                    message.set('msg_player_audios', [audio_player])\n                    xabber.trigger('plyr_player_updated');\n                }\n            });\n        }\n        this.initPopup($message);\n        message.set('images', images);\n        message.set('videos', videos);\n        message.set('files', files_);\n        if ((message.get('encrypted') || this.model.get('encrypted')) && message.get('images').length) {\n            this.decryptImages(message);\n        }\n        this.sendMessage(message);\n        this.scrollToBottom();\n    },\n\n    createAudio: function(file_url, $elem) {\n        let audio = WaveSurfer.create({\n            container: $elem[0],\n            scrollParent: false,\n            barWidth: 3,\n            height: 48,\n            barHeight: 48,\n            cursorColor: 'rgba(211,47,47,0.8)',\n            autoCenter: false,\n            normalize: true,\n            hideScrollBar: true,\n            progressColor: '#757575'\n        });\n        audio.load(file_url);\n        audio.setVolume(0.5);\n        return audio;\n    },\n\n    createImage: function(image) {\n        let imgContent = new Image(),\n            maxHeight = 400,\n            maxWidth = (xabber.main_panel.$el.width() * 0.715 - 176) * 0.7;\n        if (image.height)\n            imgContent.height = image.height;\n        if (image.width)\n            imgContent.width = image.width;\n        maxWidth = maxWidth > 400 ? 400 : maxWidth;\n        if (xabber.settings.load_media) {\n            imgContent.src = image.sources[0];\n            $(imgContent).addClass('uploaded-img popup-img');\n        } else {\n            $(imgContent).addClass('unloaded-img');\n        }\n        $(imgContent).attr({'data-mfp-src': image.sources[0], title: (image.description || '')});\n        if (imgContent.height && imgContent.width) {\n            if (imgContent.width > maxWidth) {\n                imgContent.height = imgContent.height * (maxWidth/imgContent.width);\n                imgContent.width = maxWidth;\n            }\n            if (imgContent.height > maxHeight) {\n                imgContent.width = imgContent.width * (maxHeight/imgContent.height);\n                imgContent.height = maxHeight;\n            }\n        }\n        return imgContent;\n    },\n\n    createVideo: function(video) {\n        video.pretty_size = utils.pretty_size(video.size)\n        let $video_wrap_template = $(templates.messages.video({video_src: video.sources[0], thumbnail: video.thumbnail}));\n        return $video_wrap_template;\n    },\n\n    createImageContainer: function() {\n        return $('<div class=\"img-content\"/>')[0];\n    },\n\n    createVideoContainer: function() {\n        return $('<div class=\"video-content\"/>')[0];\n    },\n\n    onFileNotUploaded: function (message, $message, error_text, type, error_type) {\n        let error_message = error_text ? xabber.getString(\"file_upload__error\", [error_text]) : xabber.getString(\"file_upload__error_default\");\n        $message.find('.dropdown-content.retry-send-message').removeClass('hidden');\n        $message.find('.msg-delivering-state').removeClass('no-click');\n        $message.find('.circle-wrap .mdi-close').unbind( \"click\" );\n        message.set('state', constants.MSG_ERROR);\n        if (type == 'http' || error_type == 'wait'){\n            $message.find('.repeat-upload').one(\"click\",() => {\n                this.startUploadFile(message, $message);\n            });\n        }\n        else {\n            if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                this.bottom.deleteFilesFromMessages([message]);\n            $message.find('.edit-upload').one(\"click\",() => {\n                this.bottom.setEditedMessageAttachments(message, true);\n                this.bottom.setRedactedUploadMessage(message);\n                this.removeMessage($message);\n            });\n            $message.find('.repeat-upload').one(\"click\",() => {\n                message.set('state', constants.MSG_PENDING);\n                $message.find('.upload-error .circle-percent-text').text('0%');\n                $message.find('.mdi-alert-circle').addClass('hidden');\n                $message.find('.mdi-close').removeClass('hidden');\n                $message.find('.upload-error').css({ 'border-color': ''});\n                $message.find('.upload-error').removeClass('upload-error');\n                $message.find('.preloader-path-new').css({ 'stroke-dasharray': '0, 149.825'});\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.startGalleryUploadFile(message, $message);\n                else\n                    this.startUploadFile(message, $message);\n            });\n        }\n    },\n\n    sendChatState: function (state, type) {\n        if (this.model.get('saved') || this.contact && this.contact.get('status') === 'offline')\n            return;\n        clearTimeout(this._chatstate_timeout);\n        clearTimeout(this._chatstate_send_timeout);\n        this.chat_state = false;\n        let stanza = $msg({to: this.model.get('jid'), type: 'chat'}).c(state, {xmlns: Strophe.NS.CHATSTATES});\n        if (this.model.get('encrypted')) {\n            if (this.account.settings.get('encrypted_chatstates'))\n                type = 'encrypted';\n            else\n                return;\n        }\n        type && stanza.c('subtype', {xmlns: Strophe.NS.EXTENDED_CHATSTATES, type: type});\n        (state === 'composing') && (this.chat_state = true);\n        this.account.sendMsg(stanza);\n        if (state === 'composing') {\n            this._chatstate_timeout = setTimeout(() => {\n                this.chat_state = false;\n            }, constants.CHATSTATE_TIMEOUT_PAUSED);\n            this._chatstate_send_timeout = setTimeout(() => {\n                (!this.chat_state && xabber.settings.typing_notifications) && this.sendChatState('paused');\n            }, constants.CHATSTATE_TIMEOUT_PAUSED*2);\n        }\n    },\n\n    onChangedMessageTimestamp: function (message) {\n        let $message = this.$(`.chat-message[data-uniqueid=\"${message.get('unique_id')}\"]`),\n            $next_msg = $message.next(),\n            $old_prev_msg = $message.prev();\n        $message.attr({\n            'data-time': message.get('timestamp')\n        });\n        $message.detach();\n        $message.children('.right-side').find('.msg-time').attr({title: pretty_datetime(message.get('time'))}).text(utils.pretty_time(message.get('time')));\n        message.get('user_info') && $message.attr('data-from-id', message.get('user_info').id);\n        this.model.messages.sort();\n        let index = this.model.messages.indexOf(message);\n        if (index === 0) {\n            if ($old_prev_msg.hasClass('chat-day-indicator'))\n                $old_prev_msg.after($message);\n            else\n                $message.prependTo(this.$('.chat-content'));\n        } else {\n            let $prev_msg = this.$('.chat-message').eq(index - 1),\n                is_same_sender = ($message.data('from') === $prev_msg.data('from')),\n                is_same_date = moment($message.data('time')).startOf('day')\n                    .isSame(moment($prev_msg.data('time')).startOf('day'));\n            if (($old_prev_msg.data('from') !== $message.data('from')) && ($next_msg.data('from') === $message.data('from')) && (($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'delivered') || ($next_msg.children('.right-side').find('.msg-delivering-state').attr('data-state') === 'displayed')))\n                this.showMessageAuthor($next_msg);\n            if ($prev_msg.next().hasClass('chat-day-indicator') && (moment($prev_msg.next().data('time')).format('DD.MM.YY') === moment(message.get('timestamp')).format('DD.MM.YY'))) {\n                $message.insertAfter($prev_msg.next());\n                this.showMessageAuthor($message);\n            }\n            else\n                $message.insertAfter($prev_msg);\n            if (message.get('data_form') || message.get('forwarded_message') || !is_same_date || !is_same_sender || $prev_msg.hasClass('system') || $prev_msg.hasClass('saved-main'))\n                this.showMessageAuthor($message);\n            else\n                this.hideMessageAuthor($message);\n        }\n        let last_message = this.model.last_message;\n        if (!last_message || message.get('timestamp') > last_message.get('timestamp')) {\n            this.model.last_message = message;\n            this.chat_item.updateLastMessage();\n        }\n    },\n\n    onChangedReadState: function (message) {\n        let is_unread = message.get('is_unread'),\n            is_synced = message.get('synced_from_server');\n        if (is_unread && !is_synced) {\n            this.model.messages_unread.add(message);\n            this.model.recountUnread();\n        } else {\n            this.model.messages_unread.remove(message);\n            this.model.recountUnread();\n            if (!message.get('muted')) {\n                xabber.recountAllMessageCounter();\n            }\n        }\n    },\n\n    onTouchMessage: function (ev) {\n        if (ev.which === 3)\n            return;\n        let $elem = $(ev.target), $msg;\n\n        if ($elem.hasClass('chat-message')) {\n            $msg = $elem;\n        } else {\n            $msg = $elem.parents('.chat-message');\n        }\n        if (window.getSelection() != 0) {\n            utils.clearSelection();\n            $msg.attr('data-no-select-on-mouseup', '1');\n        }\n    },\n\n    onClickLink: function (ev) {\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let files = msg.get('files'),\n            videos = msg.get('videos'),\n            images = msg.get('images'),\n            fwd_messages = [],\n            files_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('images') && fwd_messages.push(message.get('images'));\n                message.get('videos') && fwd_messages.push(message.get('videos'));\n            });\n        }\n        $(files).each(function(idx, file) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += file.sources[0];\n        });\n        $(images).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(videos).each(function(idx, image) {\n            if (idx > 0)\n                files_links += '\\n';\n            files_links += image.sources[0];\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, file) {\n                if (files_links != \"\")\n                    files_links += '\\n';\n                files_links += file.sources[0];\n            });\n        });\n        utils.copyTextToClipboard(files_links, xabber.getString(\"toast_link_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n\n    onClickLocationLink: function (ev) {\n        ev.preventDefault()\n        let $elem = $(ev.target),\n            $message = $elem.closest('.chat-message'),\n            msg = this.model.messages.get($message.data('uniqueid'));\n        if (!msg) {\n            msg = this.account.participant_messages.get($message.data('uniqueid'));\n        }\n        let locations = msg.get('locations'),\n            fwd_messages = [],\n            location_links = '';\n        if (msg.get('forwarded_message')) {\n            msg.get('forwarded_message').forEach((message) => {\n                message.get('locations') && fwd_messages.push(message.get('locations'));\n            });\n        }\n        $(locations).each(function(idx, location) {\n            location_links += 'geo:' + location.lat + ',' + location.lon;\n        });\n        $(fwd_messages).each(function (idx, message) {\n            $(message).each(function (i, object) {\n                if (location_links != \"\")\n                    location_links += '\\n';\n                location_links += 'geo:' + object.lat + ',' + object.lon;\n            });\n        });\n\n        utils.copyTextToClipboard(location_links, xabber.getString(\"toast_location_copied\"), xabber.getString(\"toast__not_copied_in_clipboard\"));\n    },\n\n    showParticipantProperties: function (participant_id, options) {\n        options = options || {};\n        let participant = this.contact.participants.get(participant_id);\n        if (!participant) {\n            this.contact.getBlockedParticipants((response) => {\n                _.extend(options, {present: null, subscription: null});\n                if ($(response).find(`query user:contains(${participant_id})`).length)\n                    options.blocked = true;\n                else\n                    options.blocked = false;\n                participant = new xabber.Participant(options, {contact: this.contact});\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(participant, {});\n            });\n            return;\n        }\n        (this.contact.my_info && this.contact.my_info.get('id') === participant_id) && (participant_id = '');\n        this.contact.participants.participantsRequest({id: participant_id}, (response) => {\n            let data_form = this.account.parseDataForm($(response).find(`x[xmlns=\"${Strophe.NS.DATAFORM}\"]`));\n            this.contact.showDetailsRight('all-chats', {type: 'participant'});\n            this.contact.details_view_right.participants.participant_properties_panel.open(participant, data_form);\n        });\n    },\n\n    onClickMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('file-link-download')) {\n            ev.preventDefault();\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                uri = $elem.attr('href'),\n                file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n            if (file && file.key) {\n                this.model.messages.decryptFile(uri,file.key).then((result) => {\n                    if (result === null)\n                        return;\n                    let download = document.createElement(\"a\");\n                    download.href = result;\n                    download.download = file.name;\n                    download.click();\n                });\n                return;\n            } else\n                xabber.openWindow($elem.attr('href'));\n        }\n        if ($elem.hasClass('msg-delivering-state') || $elem.hasClass('audio-control-panel') || $elem.hasClass('voice-msg-current-time') || $elem.hasClass('voice-msg-total-time')) {\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            if (msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if (!$elem.hasClass('mdi-link-variant') && !$elem.hasClass('msg-copy-location-content') && !$elem.hasClass('btn-retry-send-message') && !$elem.hasClass('btn-delete-message') && !$elem.hasClass('file-link-download') && !$elem.is('canvas') && !$elem.hasClass('voice-message-volume')) {\n            let $msg = $elem.closest('.chat-message'), msg,\n                $fwd_message = $elem.parents('.fwd-message').first(),\n                is_forwarded = $fwd_message.length > 0,\n                no_select_message = $msg.attr('data-no-select-on-mouseup');\n            $msg.attr('data-no-select-on-mouseup', '');\n\n            if ($elem.hasClass('data-form-field')) {\n                msg = this.model.messages.get($msg.data('uniqueid'));\n                if (msg)\n                    this.model.sendDataForm(msg, $elem.attr('id'));\n                return;\n            }\n\n            if (window.getSelection() != 0) {\n                return;\n            }\n\n            if ($elem.hasClass('collapsed-forwarded-message')) {\n                let msg = this.buildMessageHtml(this.account.forwarded_messages.get($elem.data('uniqueid'))),\n                    expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this});\n                expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n                this.updateMessageInChat(msg);\n                this.initPopup(msg);\n                expanded_fwd_message.open(msg);\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-author') || $elem.hasClass('fwd-msg-author')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from'),\n                    from_id = is_forwarded ? $fwd_message.data('fromId') : $msg.data('fromId');\n                if (this.contact && this.contact.get('group_chat')) {\n                    this.bottom.quill.focus();\n                    let caret_position = this.bottom.quill.getSelection(),\n                        participant_attrs = {jid: from_jid, id: from_id, nickname: $elem.text()};\n                    caret_position && (caret_position = caret_position.index);\n                    participant_attrs.position = caret_position || 0;\n                    this.bottom.insertMention(participant_attrs);\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    if (from_jid == from_id)\n                        return;\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('circle-avatar')) {\n                let from_jid = is_forwarded ? $fwd_message.data('from') : $msg.data('from');\n                if (this.model.get('group_chat')) {\n                    let member_id = (is_forwarded) ? $fwd_message.attr('data-from-id') : $msg.attr('data-from-id'),\n                        unique_id = (is_forwarded) ? $fwd_message.attr('data-uniqueid') : $msg.attr('data-uniqueid'),\n                        msg = this.model.messages.get(unique_id),\n                        user_info = msg && msg.get('user_info');\n                    member_id && this.showParticipantProperties(member_id, user_info);\n                    return;\n                }\n                else if (from_jid === this.account.get('jid')) {\n                    this.account.showSettings();\n                } else if (from_jid === this.model.get('jid')) {\n                    this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                } else {\n                    let contact = this.account.contacts.mergeContact(from_jid);\n                    contact.showDetails();\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mention')) {\n                let member_id = $elem.data('target');\n                if (this.contact.get('group_chat')) {\n                    if (member_id && !this.contact.participants.get(member_id)) {\n                        let participant = this.contact.participants.find(p => p.get('jid') === member_id);\n                        participant && (member_id = participant.get('id'));\n                    }\n                    member_id && this.showParticipantProperties(member_id);\n                }\n                else {\n                    if (member_id === this.account.get('jid'))\n                        this.account.showSettings();\n                    else if (member_id === this.model.get('jid')) {\n                        this.contact && this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n                    } else {\n                        let contact = this.account.contacts.mergeContact(member_id);\n                        contact.showDetails();\n                    }\n                }\n                return;\n            }\n\n            if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n                let $audio_elem = $elem.closest('.link-file'),\n                    f_url = $audio_elem.find('.file-link-download').attr('href');\n                $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n                if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                    let msg = this.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                        uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                        file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                    if (file && file.key) {\n                        this.model.messages.decryptFile(f_url, file.key).then((result) => {\n                            if (result === null)\n                                return;\n                            $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                        });\n                    }\n                } else {\n                    $audio_elem[0].voice_message = this.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n                }\n                return;\n            }\n\n            if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.play();\n                return;\n            }\n\n            if ($elem.hasClass('mdi-pause') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n                let $audio_elem = $elem.closest('.link-file');\n                $audio_elem[0].voice_message.pause();\n                return;\n            }\n\n            if ($elem.hasClass('msg-hyperlink')) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.closest(\".msg-hyperlink\").length > 0) {\n                ev && ev.preventDefault();\n                $elem.blur();\n                let link = $elem.closest(\".msg-hyperlink\").attr('href');\n                utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                    if (result)\n                        utils.openWindow(link);\n                });\n                return;\n            }\n\n            if ($elem.hasClass('uploaded-img')||$elem.hasClass('img-content')||($elem.hasClass('uploaded-img-for-collage'))) {\n                $elem.hasClass('img-content') && $elem.children('img').click();\n                return;\n            }\n\n            if ($elem.hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        $elem.attr('src',$elem.attr('data-mfp-src'));\n                        $elem.removeClass('unloaded-img');\n                        $elem.addClass('uploaded-img');\n                        this.initPopup($elem.closest('.chat-message'));\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('img-content-template') && $elem.find('img').hasClass('unloaded-img')) {\n                let img_information = this.getImagesInformation(this.model.messages.get($elem.closest('.chat-message').data('uniqueid')));\n                utils.dialogs.ask(xabber.getString(\"privacy_risk\"), xabber.getString(\"privacy_risk_text\"), {inverted_buttons: true, img_details: $(templates.messages.images_details({img_information: img_information}))}, { ok_button_text: xabber.getString(\"privacy_risk_btn_ok\")}).done((result) => {\n                    if (result) {\n                        let $msg = $elem.closest('.chat-message'),\n                            $imgs = $msg.find('.img-content-template img');\n                        $imgs.each((idx, img) => {\n                            $(img).attr('src',$(img).attr('data-mfp-src'));\n                        });\n                        $imgs.removeClass('unloaded-img');\n                        $imgs.addClass('uploaded-img-for-collage');\n                        this.initPopup($msg);\n                        $elem.closest('.chat-message').find('.img-privacy-warning').remove()\n                    }\n                });\n                return;\n            }\n\n            if ($elem.hasClass('chat-msg-location-content') || $elem.hasClass('location-link') || $elem.closest(\".video-file-wrap\").length > 0 || $elem.closest(\".embed-video\").length > 0) {\n                return;\n            }\n\n            if ($elem.hasClass('last-image')) {\n                $elem.find('img').length && $elem.find('img')[0].click();\n                return;\n            }\n\n            if ($elem.hasClass('image-counter')) {\n                $elem.closest('.last-image').find('img')[0].click();\n                return;\n            }\n\n            if ($msg.hasClass('searched-message')) {\n                this.model.getMessageContext($msg.data('uniqueid'), {searched_messages: true});\n                return;\n            }\n\n            let processClick = () => {\n                let $prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').last() : $msg.prevAll('.chat-message.selected').first();\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.nextAll('.chat-message.selected').last() : $msg.nextAll('.chat-message.selected').first());\n                !$prev_selected.length && ($prev_selected = $msg.hasClass('selected') ? $msg.prevAll('.chat-message.selected').first() : $msg.prevAll('.chat-message.selected').last());\n                if ((xabber.shiftctrl_pressed || xabber.shift_pressed) && $prev_selected.length) {\n                    let $all_msgs = [], is_selected = $msg.hasClass('selected');\n                    if ($prev_selected.attr('data-time') < $msg.attr('data-time'))\n                        $all_msgs = $prev_selected.nextUntil($msg, '.chat-message:not(.system)');\n                    else\n                        $all_msgs = $msg.nextUntil($prev_selected, '.chat-message:not(.system)');\n                    xabber.shift_pressed && this.$('.chat-message').removeClass('selected');\n                    $prev_selected.switchClass('selected', !is_selected);\n                    $all_msgs.switchClass('selected', !is_selected);\n                    $msg.switchClass('selected', !is_selected);\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n                if (!no_select_message) {\n                    $msg.switchClass('selected', !$msg.hasClass('selected'));\n                    ev.preventDefault();\n                    this.bottom.manageSelectedMessages();\n                    return false;\n                }\n            };\n\n            if ($msg.hasClass('participant-message') || $msg.hasClass('context-message')) {\n                if ($msg.hasClass('system'))\n                    return;\n                processClick();\n                return;\n            }\n\n            msg = this.model.messages.get($msg.data('uniqueid'));\n            if (!msg) {\n                return;\n            }\n\n            let type = msg.get('type');\n            if (type === 'file_upload') {\n                return;\n            }\n\n            if (type === 'system') {\n                return;\n            } else if (is_forwarded) {\n                let fwd_message = this.account.forwarded_messages.get($fwd_message.data('uniqueid'));\n                if (!fwd_message) {\n                    return;\n                }\n                processClick();\n            } else {\n                processClick();\n            }\n        }\n    },\n\n    onClickLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    onHoverLocation: function (ev) {\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat');\n\n        fetch('https://nominatim.openstreetmap.org/reverse?format=json&lon=' + lon + '&lat=' + lat).then(function(response) {\n            return response.json();\n        }).then(function(json) {\n            if (!json.error) {\n                $(ev.target).attr('title', json.display_name);\n            }\n            else {\n                $(ev.target).attr('title', xabber.getString(\"location_fragment__address_error__title\"));\n            }\n            $(ev.target).removeClass('no-title')\n        })\n    },\n\n    retrySendMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message'),\n            msg = this.model.messages.get($msg.data('uniqueid'));\n        if (msg.get('type') === 'file_upload') {\n            msg.set('state', constants.MSG_PENDING);\n            this.startUploadFile(msg, $msg);\n        }\n        else\n            this.sendMessage(msg);\n        ev.preventDefault();\n    },\n\n    removeFileErrorMessage: function (ev) {\n        let $msg = $(ev.target).closest('.chat-message');\n        this.removeMessage($msg);\n        ev.preventDefault();\n        this.chat_item.updateChatError();\n    },\n\n    onUpdatePlyr: function (ev) {\n        this.$('.plyr-video-container').removeClass('active-plyr-container');\n        if (xabber.current_plyr_player && xabber.current_plyr_player.player_item) {\n            let $message = this.$(`.chat-message[data-uniqueid=\"${xabber.current_plyr_player.message_unique_id}\"]`);\n            if ($message.length) {\n                $message.find(`.plyr-video-container[data-message-id=\"${xabber.current_plyr_player.player_item.message_id}\"]`).addClass('active-plyr-container');\n            }\n        }\n    },\n});\n\nxabber.ExpandedMessagePanel = xabber.BasicView.extend({\n    className: 'modal expanded-message',\n    template: templates.group_chats.pinned_message_panel,\n    ps_selector: '.modal-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .collapsed-forwarded-message\": \"expandFwdMessage\",\n        \"click .chat-message\": \"onClickPinnedMessage\",\n        'click .chat-msg-location-content': 'onClickExpandedMessageLocation',\n        'click .mdi-link-variant' : 'onClickLink',\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.chat_content = options.chat_content;\n        this.message = options.message;\n    },\n\n    open: function ($message) {\n        this.$el.css('width', $message.find('.chat-text-content').text().length <= 60 ? 540 : xabber.main_panel.$el.width() * 0.715);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.modal-content').css('height', this.$el.height() - 12);\n                if ($message.find('.plyr-video-container').length) {\n                    this.chat_content.initPlyrEmbedPlayer($message, this.message);\n                }\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n        $message.find('.right-side .msg-delivering-state').remove();\n        this.$('.modal-content').html($message);\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    onClickLink:function (ev) {\n        this.chat_content.onClickLink(ev);\n    },\n\n    onClickPinnedMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('msg-hyperlink')) {\n            ev && ev.preventDefault();\n            let link = $elem.attr('href');\n            utils.dialogs.ask(xabber.getString(\"open_this_link\"), decodeURI(link), null, {ok_button_text: xabber.getString(\"open\")}).done((result) => {\n                if (result)\n                    utils.openWindow(link);\n            });\n            return;\n        }\n        if ($elem.closest(\".plyr-video-container\").length > 0) {\n            let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                $plyr = $elem.closest(\".plyr-video-container\");\n            if (msg.get('msg_player_videos')){\n                if (!xabber.plyr_player_popup){\n                    xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                    xabber.plyr_player_popup.show({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n                } else\n                    xabber.plyr_player_popup.showNewVideo({player: msg.get('msg_player_videos')[$plyr.attr('data-message-id')]});\n            }\n            return;\n        }\n        if ($elem.hasClass('voice-message-play') || $elem.hasClass('no-uploaded')) {\n            let $audio_elem = $elem.closest('.link-file'),\n                f_url = $audio_elem.find('.file-link-download').attr('href');\n            $audio_elem.find('.mdi-play').removeClass('no-uploaded');\n            if ($elem.closest('.chat-message').hasClass('encrypted')) {\n                let msg = this.chat_content.model.messages.get($elem.closest('.chat-message').data('uniqueid')),\n                    uri = $elem.closest('.link-file').find('.file-link-download').attr('href'),\n                    file = (msg.get('files') || []).find(f => f.sources[0] == uri);\n                if (file && file.key) {\n                    this.chat_content.model.messages.decryptFile(f_url, file.key).then((result) => {\n                        if (result === null)\n                            return;\n                        $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], result);\n                    });\n                }\n            } else {\n                $audio_elem[0].voice_message = this.chat_content.renderVoiceMessage($audio_elem.find('.file-container')[0], f_url);\n            }\n            return;\n        }\n        if ($elem.hasClass('mdi-play') && !($elem.closest(\".video-file-wrap\").length > 0)) {\n            let $audio_elem = $elem.closest('.link-file');\n            $audio_elem[0].voice_message.play();\n            return;\n        }\n    },\n    onClickExpandedMessageLocation: function (ev) {\n        ev.preventDefault();\n        let lon = $(ev.target).attr('lon'),\n            lat = $(ev.target).attr('lat'),\n            location_name = $(ev.target).attr('title');\n        if (lon && lat){\n            xabber.popup_coordinates = [lon, lat];\n            xabber.location_name = location_name;\n            new xabber.ChatLocationView({content: this}).show(ev);\n        }\n    },\n\n    expandFwdMessage: function (ev) {\n        let $target = $(ev.target),\n            unique_id = $target.data('uniqueid'),\n            msg = this.chat_content.buildMessageHtml(this.account.forwarded_messages.get(unique_id)),\n            expanded_fwd_message = new xabber.ExpandedMessagePanel({account: this.account, chat_content: this.chat_content});\n        expanded_fwd_message.$el.attr('data-color', this.account.settings.get('color'));\n        this.chat_content.updateMessageInChat(msg);\n        this.chat_content.initPopup(msg);\n        expanded_fwd_message.open(msg);\n    }\n});\n\nxabber.ChatsBase = Backbone.Collection.extend({\n    model: xabber.Chat\n});\n\nxabber.Chats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    },\n\n    registerQuillEmbeddedsTags: function () {\n        let Inline = Quill.import('blots/inline'),\n            Image = Quill.import('formats/image');\n\n        class Mention extends Inline {\n            static create(paramValue) {\n                let node = super.create(),\n                    data = JSON.parse(paramValue),\n                    target = data.jid ? ('?jid=' + data.jid) : (data.id ?  ('?id=' + data.id) : \"\");\n                node.innerHTML = data.nickname;\n                data.is_me && node.classList.add('ground-color-100');\n                node.setAttribute('data-target', target);\n                return node;\n            }\n\n            static value(node) {\n                return node.innerHTML;\n            }\n        }\n        Mention.blotName = 'mention';\n        Mention.tagName = 'mention';\n        Mention.prototype.optimize = function () {};\n\n        class QuillEmoji extends Image {\n            static create(value) {\n                if (typeof value == 'string') {\n                    let emoji = $(value.emojify({tag_name: 'img'}))[0];\n                    emoji.style.display = 'none';\n                    emoji.onload = function () {\n                        this.style.display = 'unset';\n                    };\n                    return emoji;\n                } else {\n                    return value;\n                }\n            }\n\n            static value(domNode) {\n                return domNode;\n            }\n        }\n        QuillEmoji.blotName = 'emoji';\n        QuillEmoji.className = 'emoji';\n        QuillEmoji.tagName = 'img';\n        QuillEmoji.prototype.optimize = function () {};\n\n        Quill.register(QuillEmoji);\n        Quill.register(Mention);\n    }\n});\n\nxabber.OpenedChats = xabber.ChatsBase.extend({\n    comparator: function (item1, item2) {\n        let t1 = item1.get('timestamp'),\n            t2 = item2.get('timestamp');\n        return t1 > t2 ? -1 : (t1 < t2 ? 1 : 0);\n    },\n\n    initialize: function (models, options) {\n        this.on(\"change:timestamp\", this.sort, this);\n    },\n\n    update: function (chat, event) {\n        let contains = chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_opened_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_opened_chat\", chat);\n        }\n    }\n});\n\nxabber.ClosedChats = xabber.ChatsBase.extend({\n    update: function (chat, event) {\n        let contains = !chat.get('opened');\n        if (contains) {\n            if (!this.get(chat)) {\n                this.add(chat);\n                chat.trigger(\"add_closed_chat\", chat);\n            }\n        } else if (this.get(chat)) {\n            this.remove(chat);\n            chat.trigger(\"remove_closed_chat\", chat);\n        }\n    }\n});\n\nxabber.AccountChats = xabber.ChatsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.mam_requests = 0;\n        this.deferred_mam_requests = [];\n        this.account.contacts.on(\"open_chat\", this.openChat, this);\n        this.account.contacts.on(\"open_mention\", this.openMention, this);\n        this.account.contacts.on(\"presence\", this.onPresence, this);\n        this.account.contacts.on(\"roster_push\", this.onRosterPush, this);\n    },\n\n    getSavedChat: function () {\n      let jid = this.account.get('jid'),\n          attrs = {jid: jid, type: 'saved', name: xabber.getString(\"saved_messages__header\"), id: `${jid}:saved`},\n          chat = this.get(attrs.id);\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {account: this.account});\n            this.add(chat);\n            chat.trigger(\"load_last_history\");\n        }\n        return chat;\n    },\n\n    getChat: function (contact, identifier, sync_created) {\n        let attrs = null,\n            id = identifier && `${contact.hash_id}:${identifier}`,\n            chat = id ? this.get(id) : this.get(contact.hash_id);\n        if (id)\n            attrs = {id};\n        if (identifier === 'encrypted')\n            attrs.type = identifier;\n        if (!chat) {\n            chat = xabber.chats.create(attrs, {contact: contact, sync_created: sync_created});\n            this.add(chat);\n            contact.set('known', true);\n        }\n        return chat;\n    },\n\n    openChat: function (contact, options) {\n        options = options || {};\n        _.isUndefined(options.clear_search) && (options.clear_search = true);\n        let chat = this.getChat(contact, options.encrypted && 'encrypted');\n        chat.trigger('open', {clear_search: options.clear_search});\n    },\n\n    openMention: function (contact, unique_id) {\n        let chat = this.getChat(contact);\n        xabber.body.setScreen('mentions', {right: 'mentions', chat_item: chat.item_view});\n        unique_id && chat.getMessageContext(unique_id, {mention: true});\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message');\n    },\n\n    onStartedMAMRequest : function (deferred) {\n        this.deferred_mam_requests.push(deferred);\n        this.runMAMRequests();\n    },\n\n    onCompletedMAMRequest: function (deferred) {\n        this.mam_requests--;\n        this.runMAMRequests();\n    },\n\n    runMAMRequests: function () {\n        while (this.mam_requests < xabber.settings.mam_requests_limit) {\n            let deferred = this.deferred_mam_requests.shift();\n            if (!deferred) break;\n            this.mam_requests++;\n            deferred.resolve();\n        }\n    },\n\n    parsePubSubNode: function (node) {\n        if (!node)\n            return null;\n        let is_member_id = node.indexOf('#');\n        if (is_member_id !== -1)\n            return node.slice(is_member_id + 1, node.length);\n        else\n            return null;\n    },\n\n    receivePubsubMessage: function ($message) {\n        let photo_id =  $message.find('info').attr('id'),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if (node.indexOf(Strophe.NS.OMEMO) > -1)\n            return;\n        if (node.indexOf(Strophe.NS.PUBSUB_AVATAR_METADATA) > -1) {\n            let member_id = this.parsePubSubNode(node),\n                photo_url =  $message.find('info').attr('url'),\n                contact = this.account.contacts.get(from_jid);\n            if (contact) {\n                if (member_id) {\n                    if (contact.my_info) {\n                        if ((member_id == contact.my_info.get('id')) && (photo_id == contact.my_info.get('avatar'))) {\n                            contact.trigger('update_my_info');\n                            return;\n                        }\n                    }\n                    if (photo_id && (this.account.chat_settings.getHashAvatar(member_id) != photo_id)) {\n                        let member_node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + member_id;\n                        contact.getAvatar(photo_id, member_node, (new_avatar) => {\n                                this.account.chat_settings.updateCachedAvatars(member_id, photo_id, new_avatar);\n                                if (contact.my_info) {\n                                    if (member_id == contact.my_info.id) {\n                                        contact.my_info.set({avatar: photo_id, b64_avatar: new_avatar});\n                                        contact.trigger('update_my_info');\n                                    }\n                                }\n                                let participant = contact.participants && contact.participants.get(member_id);\n                                if (participant) {\n                                    participant.set({avatar: photo_id, b64_avatar: new_avatar});\n                                    this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                }\n                            }, () => {\n                                if (photo_url) {\n                                    this.account.chat_settings.updateCachedAvatars(member_id, photo_id, photo_url);\n                                    if (contact.my_info) {\n                                        if (member_id == contact.my_info.id) {\n                                            contact.my_info.set({avatar: photo_id, b64_avatar: photo_url});\n                                            contact.trigger('update_my_info');\n                                        }\n                                    }\n                                    let participant = contact.participants && contact.participants.get(member_id);\n                                    if (participant) {\n                                        participant.set({avatar: photo_id, b64_avatar: photo_url});\n                                        this.account.groupchat_settings.updateParticipant(contact.get('jid'), participant.attributes);\n                                    }\n                                    return;\n                                }\n                            });\n                    }\n                }\n                else if (!this.get('avatar_priority') || this.get('avatar_priority') <= constants.AVATAR_PRIORITIES.PUBSUB_AVATAR) {\n                    if (!photo_id) {\n                        let image = Images.getDefaultAvatar(contact.get('name'));\n                        contact.cached_image = Images.getCachedImage(image);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', null);\n                        contact.set('image', image);\n                        contact.updateCachedInfo();\n                        return;\n                    }\n                    if ((photo_id !== \"\") && (contact.get('photo_hash') === photo_id)) {\n                        return;\n                    } else if (photo_url) {\n                        contact.cached_image = photo_url;\n                        contact.set({photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR});\n                    }\n                    contact.getAvatar(photo_id, Strophe.NS.PUBSUB_AVATAR_DATA, (data_avatar) => {\n                        contact.cached_image = Images.getCachedImage(data_avatar);\n                        contact.set('avatar_priority', constants.AVATAR_PRIORITIES.PUBSUB_AVATAR);\n                        contact.set('photo_hash', photo_id);\n                        contact.set('image', data_avatar);\n                        contact.updateCachedInfo();\n                    });\n                }\n            }\n            else if (from_jid === this.account.get('jid')) {\n                if (photo_url) {\n                    let avatar_attrs = {photo_hash: photo_id, image: photo_url, avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR};\n                    this.account.cached_image = photo_url;\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                if (!photo_id) {\n                    let image = Images.getDefaultAvatar(this.account.get('name'));\n                    this.account.cached_image = Images.getCachedImage(image);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: image};\n                    this.account.save(avatar_attrs);\n                    return;\n                }\n                this.account.getAvatar(photo_id, (data_avatar) => {\n                    this.account.cached_image = Images.getCachedImage(data_avatar);\n                    let avatar_attrs = {avatar_priority: constants.AVATAR_PRIORITIES.PUBSUB_AVATAR, image: data_avatar};\n                    this.account.save(avatar_attrs);\n                });\n            }\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type'),\n            $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n        if (this.account.connection.do_synchronization && Strophe.getBareJidFromJid($(message).attr('from')) !== this.account.get('jid')) {\n            let time = $message.children('time').attr('stamp') || $message.children('delay').attr('stamp'),\n                timestamp = Number(moment(time));\n            (timestamp > this.account.last_msg_timestamp) && (this.account.last_msg_timestamp = timestamp);\n        }\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n        if (type === 'chat' || (type === 'normal') || (!type && !$mam.length)) {\n            return this.receiveChatMessage(message);\n        }\n        if (type === 'error') {\n            return this.receiveErrorMessage(message);\n        }\n    },\n\n    receiveHeadlineMessage: function (message) {\n        let $message = $(message),\n            msg_from = Strophe.getBareJidFromJid($message.attr('from')),\n            $stanza_received = $message.find(`received[xmlns=\"${Strophe.NS.DELIVERY}\"]`),\n            $echo_msg = $message.children(`x[xmlns=\"${Strophe.NS.DELIVERY}\"]`).children('message');\n        if ($stanza_received.length) {\n            let stanza_id = $stanza_received.children('stanza-id').attr('id'),\n                origin_msg_id = $stanza_received.children('origin-id').first().attr('id');\n            if (origin_msg_id) {\n                let msg = this.account.messages.get(origin_msg_id || stanza_id),\n                    delivered_time = $stanza_received.children('time').attr('stamp') || moment(stanza_id/1000).format();\n                if (!msg)\n                    return;\n                if (!msg.get('stanza_id') && msg.get('locations'))\n                    msg.set({'stanza_id': stanza_id})\n                msg.set({'state': constants.MSG_SENT, 'time': delivered_time, 'timestamp': Number(moment(delivered_time))}); // delivery receipt, changing on server time\n                let pending_message = this.account._pending_messages.find(msg => msg.unique_id == (origin_msg_id || stanza_id));\n                if (pending_message) {\n                    let chat = this.account.chats.get(pending_message.chat_hash_id);\n                    chat && chat.setStanzaId(pending_message.unique_id, stanza_id);\n                    this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n                }\n            }\n            return;\n        }\n\n        if ($echo_msg.length) {\n            console.log(this.account._pending_messages);\n            console.log(this.account._pending_messages.length);\n            let origin_msg_id = $echo_msg.children('origin-id').first().attr('id'),\n                pending_message = this.account._pending_messages.find(msg => msg.unique_id == origin_msg_id);\n            if (pending_message) {\n                this.account._pending_messages.splice(this.account._pending_messages.indexOf(pending_message), 1);\n            }\n            console.log(this.account._pending_messages.length);\n            return this.receiveChatMessage($echo_msg[0], {echo_msg: true, stanza_id: $echo_msg.children('stanza-id').attr('id')});\n        }\n\n        let $token_revoke = $message.children(`revoke[xmlns=\"${Strophe.NS.AUTH_DEVICES}\"]`);\n        if ($token_revoke.length) {\n            $token_revoke.children('device').each((idx, token) => {\n                let $token = $(token),\n                    token_uid = $token.attr('id');\n                if (!token_uid)\n                    return;\n                if (this.account.get('x_token') && this.account.get('x_token').token_uid === token_uid) {\n                    this.account.deleteAccount();\n                    return;\n                }\n                if (this.account.x_tokens_list) {\n                    let token = this.account.x_tokens_list.find(token => token.token_uid == token_uid),\n                        token_idx = token ? this.account.x_tokens_list.indexOf(token) : -1;\n                    (token_idx > -1) && this.account.x_tokens_list.splice(token_idx, 1);\n                }\n            });\n            this.account.settings_right && this.account.settings_right.updateXTokens();\n            return;\n        }\n\n        if ($message.find(`event[xmlns=\"${Strophe.NS.PUBSUB}#event\"]`).length) {\n            this.receivePubsubMessage($message);\n            return;\n        }\n\n        let contact = this.account.contacts.get(msg_from), chat;\n        if (contact) {\n            contact && (chat = this.account.chats.getChat(contact));\n            if (!chat.item_view.content)\n                chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n        }\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version)\n                contact.trigger('update_participants');\n        }\n\n        if ($message.children(`attention[xmlns=\"${Strophe.NS.ATTENTION}\"]`).length && xabber.settings.call_attention) {\n            if (!chat)\n                return;\n            return chat.messages.createSystemMessage({from_jid: msg_from, message: xabber.getString(\"action_attention_requested\"), attention: true});\n        }\n\n        if ($message.find(`replace[xmlns=\"${Strophe.NS.REWRITE}#notify\"]`).length) {\n            !contact && (contact = this.account.contacts.get($message.find('replace').attr('conversation'))) && (chat = this.account.chats.getChat(contact));\n            if (!chat)\n                return;\n            let stanza_id = $message.find('replace').attr('id'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id),\n                active_right_screen = xabber.body.screen.get('right'),\n                participant_messages = active_right_screen === 'participant_messages' && this.account.participant_messages || active_right_screen === 'message_context' && this.account.context_messages || active_right_screen === 'searched_messages' && this.account.searched_messages || [],\n                participant_msg_item = participant_messages.find(msg => msg.get('stanza_id') == stanza_id);\n            this.receiveChatMessage($message, {replaced: true});\n            if (participant_msg_item) {\n                participant_msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n            }\n            if (msg_item) {\n                msg_item.set('last_replace_time', $message.find('replaced').last().attr('stamp'));\n                if (contact.get('pinned_message'))\n                    if (contact.get('pinned_message').get('unique_id') === msg_item.get('unique_id')) {\n                        contact.get('pinned_message').set('message', msg_item.get('message'));\n                        if (!chat.item_view.content)\n                            chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                        chat.item_view.content.updatePinnedMessage();\n                    }\n                chat && chat.item_view.updateLastMessage(chat.last_message);\n            }\n        }\n        if ($message.find('retract-message').length) {\n            let is_encrypted = $message.find('retract-message').attr('type') == 'encrypted';\n            !contact && (contact = this.account.contacts.get($message.find('retract-message').attr('conversation'))) && (chat = this.account.chats.getChat(contact,  is_encrypted && 'encrypted'));\n            if ($message.find('retract-message').attr('conversation') === this.account.get('jid'))\n                chat = this.getSavedChat();\n            if (!chat)\n                return;\n            let $retracted_msg = $message.find('retract-message'),\n                retracted_msg_id = $retracted_msg.attr('id'),\n                retract_version = $retracted_msg.attr('version'),\n                msg_item = chat.messages.find(msg => msg.get('stanza_id') == retracted_msg_id || msg.get('contact_stanza_id') == retracted_msg_id);\n            if (msg_item) {\n                msg_item.set('is_unread', false);\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(msg_item);\n                chat.item_view.updateLastMessage(chat.last_message);\n            }\n            if (retract_version > this.account.retraction_version) {\n                if (chat.get('encrypted') && this.account.omemo)\n                    this.account.omemo.cacheRetractVersion(retract_version);\n                else\n                    this.account.retraction_version = retract_version;\n            }\n        }\n        if ($message.find('retract-user').length) {\n            let $retracted_user_msgs = $message.find('retract-user'),\n                retracted_user_id = $retracted_user_msgs.attr('id'),\n                msg_item = chat.messages.filter(msg => msg.get('user_info') && (msg.get('user_info').id == retracted_user_id));\n            if (msg_item)\n                $(msg_item).each((idx, item) => {\n                    item.set('is_unread', false);\n                    if (!chat.item_view.content)\n                        chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                    chat.item_view.content.removeMessage(item);\n                });\n            chat.item_view.updateLastMessage(chat.last_message);\n        }\n        if ($message.find('retract-all').length) {\n            !contact && (contact = this.account.contacts.get($message.find('retract-all').attr('conversation'))) && (chat = this.getChat(contact, $message.find('retract-all').attr('type') == 'encrypted' && 'encrypted'));\n            if (!chat)\n                return;\n            let all_messages = chat.messages.models;\n            $(all_messages).each((idx, item) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.removeMessage(item);\n            });\n            chat.item_view.updateLastMessage();\n        }\n        if ($message.find(`confirm[xmlns=\"${Strophe.NS.HTTP_AUTH}\"]`).length) {\n            let code =  $message.find('confirm').attr('id');\n            if (($message.attr('from') == this.account.xabber_auth.api_jid) && ($message.attr('id') == this.account.xabber_auth.request_id)) {\n                this.account.verifyXabberAccount(code, (data) => {\n                    if (xabber.api_account && this.account.get('auto_login_xa')) {\n                        xabber.api_account.save('token', data);\n                        xabber.api_account.login_by_token();\n                    }\n                });\n            }\n            else {\n                return this.receiveChatMessage(message);\n            }\n        }\n        return;\n    },\n\n    receiveStanzaId: function ($message, options) {\n        options.replaced && ($message = $message.children('replace').children('message'));\n        let $stanza_id, $contact_stanza_id, attrs = {},\n            from_bare_jid = options.from_bare_jid;\n            $message.children('stanza-id').each((idx, stanza_id) => {\n            stanza_id = $(stanza_id);\n            if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && !($message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE_HTTP}\"]`).length || $message.find(`invite[xmlns=\"${Strophe.NS.GROUP_CHAT_INVITE}\"]`).length)) {\n                if (stanza_id.attr('by') === from_bare_jid) {\n                    $stanza_id = stanza_id;\n                    $contact_stanza_id = stanza_id;\n                }\n                else\n                    $stanza_id = stanza_id;\n            }\n            else {\n                if (stanza_id.attr('by') === this.account.get('jid'))\n                    $stanza_id = stanza_id;\n                else\n                    $contact_stanza_id = stanza_id;\n            }\n        });\n        $stanza_id && (attrs.stanza_id = $stanza_id.attr('id'));\n        $contact_stanza_id && (attrs.contact_stanza_id = $contact_stanza_id.attr('id'));\n        return attrs;\n    },\n\n    receiveChatMessage: function (message, options) {\n        options = options || {};\n        let $message = $(message),\n            $forwarded = $message.find('forwarded'),\n            $delay = options.delay,\n            to_jid = $message.attr('to'),\n            to_bare_jid = Strophe.getBareJidFromJid(to_jid),\n            to_resource = to_jid && Strophe.getResourceFromJid(to_jid),\n            from_jid = $message.attr('from') || options.from_jid;\n\n        if ($message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length && !options.forwarded) {\n            if (this.account.omemo)\n                this.account.omemo.receiveChatMessage(message, options);\n            return;\n        }\n\n        if ($message.find('invite').length) {\n            if (options.forwarded)\n                return;\n        }\n\n        if (!from_jid) {\n            from_jid = this.account.get('jid');\n        }\n        let from_bare_jid = Strophe.getBareJidFromJid(from_jid),\n            is_sender = from_bare_jid === this.account.get('jid');\n\n        if (options.forwarded && (!$forwarded.length || (options.xml))) {\n            return this.account.forwarded_messages.createFromStanza($message, {\n                is_forwarded: true,\n                forwarded_message: options.forwarded_message || null,\n                delay: $delay,\n                replaced: options.replaced,\n                from_jid: from_jid,\n                xml: options.xml\n            });\n        }\n\n        if ($forwarded.length && !options.xml) {\n            let $mam = $message.find(`result[xmlns=\"${Strophe.NS.MAM}\"]`);\n            if ($mam.length) {\n                $forwarded = $mam.children('forwarded');\n                if ($forwarded.length) {\n                    $message = $forwarded.children('message');\n                    $delay = $forwarded.children('delay');\n                }\n                let stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid});\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    is_mam: true,\n                    delay: $delay,\n                    stanza_id: stanza_ids.stanza_id || $mam.attr('id'),\n                    contact_stanza_id: stanza_ids.contact_stanza_id\n                }));\n            }\n            let $carbons = $message.find(`[xmlns=\"${Strophe.NS.CARBONS}\"]`);\n            if (!options.carbon_copied && $carbons.length && ['received', 'sent'].includes($carbons[0].tagName)) {\n                if ($message.find('invite').length) {\n                    if ($carbons[0].tagName === 'sent')\n                        return;\n                }\n                if (!is_sender)\n                    return;\n                $forwarded = $carbons.children('forwarded');\n                if ($forwarded.length)\n                    $message = $forwarded.children('message');\n                if ($carbons.find(`request[xmlns=\"${Strophe.NS.DELIVERY}\"][to=\"${to_bare_jid}\"]`).length)\n                    return;\n                if (this.account.fast_connection && ($message.attr('from') === this.account.fast_connection.jid))\n                    return;\n                return this.receiveChatMessage($message[0], _.extend(options, {\n                    carbon_copied: true, carbon_direction: $carbons[0].tagName\n                }));\n            }\n            let forwarded_msgs = [];\n            $forwarded = $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).length ?\n                $message.children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]') :\n                $message.children('envelope').children('content').children(`reference[type=\"mutable\"][xmlns=\"${Strophe.NS.REFERENCE}\"]`).children('forwarded[xmlns=\"' + Strophe.NS.FORWARD + '\"]');\n            $forwarded.each((idx, forwarded_msg) => {\n                let $forwarded_msg = $(forwarded_msg),\n                    $forwarded_message = $forwarded_msg.children('message'),\n                    $forwarded_delay = $forwarded_msg.children('delay');\n                let forwarded_message = this.receiveChatMessage($forwarded_message[0], {\n                    forwarded: true,\n                    pinned_message: options.pinned_message,\n                    participant_message: options.participant_message,\n                    searched_message: options.searched_message,\n                    is_searched: options.is_searched,\n                    context_message: options.context_message,\n                    from_jid: from_jid,\n                    delay: $forwarded_delay\n                });\n                forwarded_msgs.push(forwarded_message);\n            });\n            return this.receiveChatMessage($message[0], _.extend({\n                forwarded_message: forwarded_msgs.length ? forwarded_msgs : null,\n                xml: $message[0]\n            }, options));\n        }\n\n        if (!options.is_mam && to_resource && to_resource !== this.account.resource) {\n            xabber.warn('Message to another resource');\n            xabber.warn(message);\n        }\n\n        let contact_jid = is_sender ? to_bare_jid : from_bare_jid;\n        options.replaced && (contact_jid = $message.children('replace').attr('conversation'));\n\n        if (contact_jid === this.account.get('jid')) {\n            if (options.carbon_copied && options.carbon_direction === 'sent' || !options.carbon_copied) {\n                let chat = this.getSavedChat(),\n                    stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n                return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n            } else {\n                xabber.warn('Message from me to me');\n                xabber.warn(message);\n                return;\n            }\n        }\n\n        let contact = this.account.contacts.mergeContact(contact_jid),\n            chat = this.account.chats.getChat(contact, (options.encrypted || options.not_encrypted) && 'encrypted'),\n            stanza_ids = this.receiveStanzaId($message, {from_bare_jid: from_bare_jid, carbon_copied: options.carbon_copied, replaced: options.replaced});\n\n        if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).length) {\n            if (!contact)\n                return;\n            let participant_version = $message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).attr('version');\n            if (participant_version && contact.participants && contact.participants.version < participant_version){\n                if ($message.children(`x[xmlns=\"${Strophe.NS.GROUP_CHAT}#system-message\"]`).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).length && chat.contact.get('pinned_message')){\n                    $message.children('x[xmlns=\"' + Strophe.NS.GROUP_CHAT + '#system-message\"]').each((idx, x_elem) => {\n                        let $user = $(x_elem).children(`user[xmlns=\"${Strophe.NS.GROUP_CHAT}\"]`).first();\n                        if ($user.length) {\n                            let user_id = $user.attr('id'),\n                                user_jid = $user.children('jid').text();\n                            if (chat.contact.get('pinned_message').get('from_jid') === user_jid) {\n                                let pinned_message = chat.contact.get('pinned_message'),\n                                    user_info = {\n                                        id: user_id,\n                                        jid: user_jid,\n                                        nickname: $user.children('nickname').text() || user_jid || user_id,\n                                        role: $user.children('role').text(),\n                                        avatar: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('id'),\n                                        avatar_url: $user.children(`metadata[xmlns=\"${Strophe.NS.PUBSUB_AVATAR_METADATA}\"]`).children('info').attr('url'),\n                                        badge: $user.children('badge').text()\n                                    };\n                                pinned_message.set('user_info', user_info);\n                                chat.contact.set('pinned_message', pinned_message);\n                            }\n                        }\n                    });\n                }\n                if (contact.details_view && contact.details_view.isVisible())\n                    contact.trigger('update_participants');\n            }\n        }\n\n        if ($message.find('device[xmlns=\"' + Strophe.NS.AUTH_DEVICES + '\"]').length && !options.is_archived) {\n            this.account.getAllXTokens();\n        }\n\n        if (chat.contact.get('group_chat') && options.carbon_direction === 'sent' && !$message.children(`[xmlns=\"${Strophe.NS.CHAT_MARKERS}\"]`).length)\n            return;\n\n        return chat.receiveMessage($message, _.extend(options, {is_sender: is_sender, stanza_id: stanza_ids.stanza_id, contact_stanza_id: stanza_ids.contact_stanza_id}));\n    },\n\n    receiveErrorMessage: function (message) {\n        let msgid = message.getAttribute('id'),\n            origin_id = $(message).children('origin-id').attr('id');\n        if (msgid) {\n            let code = $(message).find('error').attr('code'),\n                msg = this.account.messages.get(origin_id || msgid);\n            if (msg) {\n                if (code === '405') {\n                    msg.set('state', constants.MSG_BLOCKED);\n                }\n                if (code === '406') {\n                    msg.set('state', constants.MSG_ERROR);\n                }\n            }\n        }\n    },\n\n    onPresence: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onPresence(type);\n    },\n\n    onRosterPush: function (contact, type) {\n        let chat = this.getChat(contact);\n        chat.onRosterPush(type);\n    }\n});\n\nxabber.AddGroupChatView = xabber.SearchView.extend({\n    className: 'modal main-modal add-group-chat-modal add-contact-modal',\n    template: templates.group_chats.add_group_chat,\n    avatar_size: constants.AVATAR_SIZES.ACCOUNT_ITEM,\n    ps_selector: '.rich-textarea',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        \"click .dropdown-content#select-account-for-creating-groupchat\": \"selectAccount\",\n        \"click .btn-add\": \"addGroupChat\",\n        \"keyup .input-group-chat-name input\": \"updateGroupJid\",\n        \"keyup .rich-textarea\": \"showPlaceholder\",\n        \"keyup .input-group-chat-jid input\": \"fixJid\",\n        \"click .btn-cancel\": \"close\",\n        \"click .property-variant\": \"changePropertyValue\"\n    },\n\n    render: function (options) {\n        if (!xabber.accounts.connected.length) {\n            utils.dialogs.error(xabber.getString(\"dialog_add_contact__error__text_no_accounts\"));\n            return;\n        }\n        options || (options = {});\n        this.setDefaultSettings(options);\n        let accounts = options.account ? [options.account] : xabber.accounts.connected;\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.dropdown-content#select-account-for-creating-groupchat').empty();\n        _.each(accounts, (account) => {\n            this.$('.dropdown-content#select-account-for-creating-groupchat').append(\n                    this.renderAccountItem(account));\n        });\n        this.$('.account-dropdown-wrap').hideIf(accounts.length < 2)\n        this.bindAccount(accounts[0]);\n        this.$('.btn-cancel').text(this.is_login ? xabber.getString(\"skip\") : xabber.getString(\"cancel\"));\n        this.$el.openModal({\n            ready: () => {\n                let dropdown_settings = {\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    alignment: 'left'\n                };\n                Materialize.updateTextFields();\n                this.$('.account-dropdown-wrap').dropdown(dropdown_settings);\n                this.$('.property-field .dropdown-button').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .caret').dropdown(dropdown_settings);\n                this.$('.property-field .select-xmpp-server .xmpp-server-item-wrap').dropdown(dropdown_settings);\n                this.$('input[name=\"chat_name\"]').focus();\n            },\n            complete: this.close.bind(this)\n        });\n\n    },\n\n    setDefaultSettings: function (options) {\n        this.$('.incognito-field .public-item-wrap').showIf(options.public);\n        this.$('.incognito-field .incognito-item-wrap').showIf(options.incognito);\n        if (options.public)\n            this.$('.modal-header span').text(xabber.getString(\"create_group\"));\n        if (options.incognito)\n            this.$('.modal-header span').text(xabber.getString(\"create_incognito_group\"));\n        this.$('input[name=chat_jid]').removeClass('fixed-jid').val(\"\");\n        this.$('#new_chat_domain').val(\"\");\n        this.$('input[name=chat_name]').val(\"\");\n        this.$('.description-field .rich-textarea').text(\"\");\n        this.$('.btn-add').addClass('non-active');\n        this.showPlaceholder();\n        this.$('span.errors').text('').addClass('hidden');\n        this.$('input').removeClass('invalid');\n        let $global_wrap = this.$('.global-dropdown-wrap'),\n            default_global_value = $global_wrap.find('.dropdown-content .default-value');\n        $global_wrap.find('.global-item-wrap .property-value').attr('data-value', default_global_value.attr('data-value')).text(default_global_value.text());\n        let $membership_wrap = this.$('.membership-dropdown-wrap'),\n            default_membership_value = $membership_wrap.find('.dropdown-content .default-value');\n        $membership_wrap.find('.membership-item-wrap .property-value').attr('data-value', default_membership_value.attr('data-value')).text(default_membership_value.text());\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.input-group-chat-domain').addClass('hidden');\n        this.$('.account-dropdown-wrap .dropdown-button .account-item-wrap')\n                .replaceWith(this.renderAccountItem(account));\n        let all_servers = this.account.get('groupchat_servers_list');\n        if (all_servers.length){\n            this.$('.xmpp-server-dropdown-wrap .field-jid').text(all_servers[0]);\n            this.$('.select-xmpp-server .caret').removeClass('hidden')\n            this.$('.xmpp-server-item-wrap .property-value').removeClass('hidden')\n        }\n        else\n            this.setCustomDomain(this.$('.property-field.xmpp-server-dropdown-wrap .property-value'));\n        this.$('.modal-content .jid-field .set-default-domain').remove();\n        for (let i = 0; i < all_servers.length; i++) {\n            $('<div/>', {class: 'field-jid property-variant set-default-domain'}).text(all_servers[i]).insertBefore(this.$('.modal-content .jid-field .set-custom-domain'));\n        }\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.add_chat_account_item({jid: account.get('jid'), name: account.get('name')}));\n        $item.find('.circle-avatar').setAvatar(account.cached_image, this.avatar_size);\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    setCustomDomain: function ($property_value) {\n        this.$('#new_chat_domain').val(\"\");\n        this.$('.select-xmpp-server .caret').addClass('hidden');\n        $property_value.addClass('hidden').text(\"\");\n        this.$('.input-group-chat-domain').removeClass('hidden');\n    },\n\n    changePropertyValue: function (ev) {\n        let $property_item = $(ev.target),\n            $property_value = $property_item.closest('.property-field').find('.property-value');\n        if ($property_item.hasClass('set-custom-domain')) {\n            this.setCustomDomain($property_value);\n            return;\n        }\n        else if ($property_item.hasClass('set-default-domain')) {\n            this.$('.input-group-chat-domain').addClass('hidden');\n            this.$('#new_chat_domain').val(\"\");\n        }\n        $property_value.text($property_item.text());\n        $property_value.removeClass('hidden').attr('data-value', $property_item.attr('data-value'));\n        this.$('.select-xmpp-server .caret').removeClass('hidden')\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    updateGroupJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        if (!elem.hasClass('fixed-jid')) {\n            let text = slug(this.$('.input-group-chat-name input').get(0).value, {lower: true});\n            this.$(\"label[for=new_chat_jid]\").addClass('active');\n            this.$('.input-field #new_chat_jid').get(0).value = text;\n        }\n        this.$('.btn-add').switchClass('non-active', !this.$('.input-group-chat-name input').get(0).value);\n    },\n\n    showPlaceholder: function () {\n        let textarea_is_empty = (this.$('.rich-textarea ').text() !== \"\") ? false : true;\n        this.$('.rich-textarea-wrap .placeholder').hideIf(!textarea_is_empty);\n    },\n\n    fixJid: function () {\n        let elem = this.$('input[name=chat_jid]');\n        !elem.hasClass('fixed-jid') && elem.addClass('fixed-jid');\n        (elem.get(0).value == \"\") && elem.removeClass('fixed-jid');\n    },\n\n    createGroupChat: function () {\n        let name = this.$('input[name=chat_name]').val(),\n            chat_jid = this.$('input[name=chat_jid]').val() ? this.$('input[name=chat_jid]').val() : undefined,\n            privacy = this.$('.incognito-field .property-wrap:not(.hidden) .property-value').attr('data-value'),\n            domain = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            searchable = this.$('input[name=\"group_index\"]:checked').attr('data-value'),\n            description = this.$('.description-field .rich-textarea').text() || \"\",\n            model = this.$('input[name=\"group_membership\"]:checked').attr('data-value'),\n            iq = $iq({type: 'set', to: domain}).c('query', {xmlns: Strophe.NS.GROUP_CHAT + '#create'})\n                .c('name').t(name).up()\n                .c('privacy').t(privacy).up()\n                .c('index').t(searchable).up()\n                .c('description').t(description).up()\n                .c('membership').t(model).up();\n            if (chat_jid)\n                iq.c('localpart').t(chat_jid);\n        this.account.sendIQFast(iq, (iq) => {\n                let group_jid = $(iq).find('query localpart').text().trim() + '@' + $(iq).attr('from').trim(),\n                    contact = this.account.contacts.mergeContact(group_jid);\n                contact.set('group_chat', true);\n                contact.set('subscription_preapproved', true);\n                contact.pres('subscribed');\n                contact.pushInRoster(null, () => {\n                    contact.pres('subscribe');\n                    contact.getMyInfo();\n                    this.close();\n                    xabber.chats_view.updateScreenAllChats();\n                    contact.sendPresent();\n                    contact.trigger(\"open_chat\", contact);\n                    if (!(this.account.connection && this.account.connection.do_synchronization)) {\n                        let iq_set_blocking = $iq({type: 'set'}).c('block', {xmlns: Strophe.NS.BLOCKING})\n                            .c('item', {jid: group_jid + '/' + moment.now()});\n                        this.account.sendIQFast(iq_set_blocking);\n                    }\n                });\n            }, () => {\n                this.$('span.errors').removeClass('hidden').text(xabber.getString(\"groupchat_jid_already_exists\"));\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            });\n    },\n\n    addGroupChat: function (ev) {\n        if ($(ev.target).closest('.button-wrap').hasClass('non-active')) {\n            $(ev.target).blur();\n            return;\n        }\n        let xmpp_server = this.$('#new_chat_domain').val() || this.$('.xmpp-server-dropdown-wrap .property-value').text(),\n            input_value = this.$('input[name=chat_jid]').val();\n        if (this.$('input[name=chat_name]').val() == \"\") {\n            this.$('span.errors').text(xabber.getString(\"group_is_empty\")).removeClass('hidden');\n            this.$('input[name=\"chat_name\"]').addClass('invalid');\n        } else {\n            if ((input_value == \"\")||((input_value.search(/[А-яЁё]/) == -1)&&(input_value.search(/\\s/) == -1)&&(input_value != \"\"))) {\n                this.$('span.errors').text('').addClass('hidden');\n                this.$('input').removeClass('invalid');\n                let iq = $iq({type: 'get', to: xmpp_server}).c('query', {xmlns: Strophe.NS.DISCO_INFO}),\n                    group_chats_support;\n                this.account.sendIQFast(iq, (iq) => {\n                    $(iq).children('query').children('feature').each((elem, item) => {\n                        if ($(item).attr('var') == Strophe.NS.GROUP_CHAT)\n                            group_chats_support = true;\n                    });\n                    if (group_chats_support)\n                        this.createGroupChat();\n                    else {\n                        this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_server_does_not_support\")}`);\n                        this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                    }\n                }, (response) => {\n                    this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_invalid_domain\")}`); // !!!!!!!!!!!!!!!!!! :::::\n                    this.$('input[name=\"chat_domain\"]').addClass('invalid');\n                });\n            }\n            else {\n                this.$('span.errors').removeClass('hidden').text(`${xabber.getString(\"groupchat_add__alert_localpart_invalid\")}`);\n                this.$('input[name=\"chat_jid\"]').addClass('invalid');\n            }\n        }\n    }\n});\n\nxabber.ChatsView = xabber.SearchPanelView.extend({\n    className: 'recent-chats-container container',\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n    main_container: '.chat-list',\n    template: templates.chats_panel,\n\n    _initialize: function () {\n        this.active_chat = null;\n        this.model.on(\"add\", this.onChatAdded, this);\n        this.model.on(\"destroy\", this.onChatRemoved, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"change:unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:const_unread\", this.onChangedReadStatus, this);\n        this.model.on(\"change:timestamp\", this.updateChatPosition, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        let wheel_ev = this.defineMouseWheelEvent();\n        this.$el.on(wheel_ev, this.onMouseWheel.bind(this));\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('.read-all-button').click(this.readAllMessages.bind(this));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        xabber.on(\"update_layout\", this.onWindowResized, this);\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (options.right === undefined)\n            this.active_chat = null;\n        this.$('.chat-list-wrap').switchClass('with-padding', xabber.toolbar_view.$('.toolbar-item.unread').length);\n        if (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'searched_messages' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search) {\n            this.clearSearch();\n            if (xabber.toolbar_view.$('.active').hasClass('all-chats')) {\n                this.showAllChats();\n            }\n        }\n    },\n\n    readAllMessages: function () {\n        let chats = this.model,\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (active_toolbar.hasClass('chats')) {\n            let private_chats = chats.filter(chat => chat.get('saved') || !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            private_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('all-chats')) {\n            let all_chats = chats.filter(chat => chat.get('saved') || chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            all_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        if (active_toolbar.hasClass('group-chats')) {\n            let group_chats = chats.filter(chat => chat.get('saved') || chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')));\n            group_chats.forEach((chat) => {\n                if (!chat.item_view.content)\n                    chat.item_view.content = new xabber.ChatContentView({chat_item: chat.item_view});\n                chat.item_view.content.readMessages();\n            });\n        }\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    onUpdatedScreen: function (name) {\n        this.$('.read-all-button').switchClass('hidden', !xabber.toolbar_view.$('.toolbar-item.active.unread').length);\n    },\n\n    // onWindowResized: function (options) {\n    //     options.size_changed && this.onScroll();\n    // },\n\n    defineMouseWheelEvent: function () {\n        if (!_.isUndefined(window.onwheel)) {\n            return \"wheel\";\n        } else if (!_.isUndefined(window.onmousewheel)) {\n            return \"mousewheel\";\n        } else {\n            return \"MozMousePixelScroll\";\n        }\n    },\n\n    onMouseWheel: function (ev) {\n        // if (ev.originalEvent.deltaY > 0)\n        //     this.onScroll();\n    },\n\n    hideChatsFeedback: function () {\n        clearTimeout(this._load_chats_timeout);\n        this.$('.load-chats-feedback').addClass('hidden');\n        this.updateScrollBar();\n        this._load_chats_timeout = null;\n    },\n\n    // onScroll: function () {\n    //     if (this.getScrollBottom() < 12 && !this._load_chats_timeout && this.isVisible()) {\n    //         this._load_chats_timeout = setTimeout(() => {\n    //             this.hideChatsFeedback();\n    //         }, 5000);\n    //         let accounts = xabber.accounts.connected.filter(account => !account.roster.conversations_loaded && account.connection && account.connection.do_synchronization);\n    //         if (accounts.length) {\n    //             this.$('.load-chats-feedback').text(xabber.getString(\"placeholder_loading\")).removeClass('hidden');\n    //             this.updateScrollBar();\n    //         }\n    //         accounts.forEach((account) => {\n    //             let options = {max: xabber.settings.mam_messages_limit};\n    //             account.roster.last_chat_msg_id && (options.after = account.roster.last_chat_msg_id);\n    //             account.roster.syncFromServer(options);\n    //         });\n    //     }\n    // },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    onChatAdded: function (chat) {\n        this.addChild(chat.id, chat.item_view);\n        this.updateChatPosition(chat);\n    },\n\n    onChatRemoved: function (chat, options) {\n        if (this.active_chat === this.child(chat.id)) {\n            this.active_chat = null;\n            xabber.body.setScreen(null, {chat_item: null},\n                    {silent: !xabber.body.isScreen('all-chats')});\n        }\n        this.removeChild(chat.id, options);\n        this.updateScrollBar();\n    },\n\n    onChangedActiveStatus: function (chat) {\n        if (chat.get('active')) {\n            let previous_chat = this.active_chat;\n            this.active_chat = this.child(chat.id);\n            previous_chat && previous_chat.model.set('active', false);\n        }\n    },\n\n    onChangedReadStatus: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (!active_toolbar.hasClass('unread') || (active_toolbar.hasClass('unread') && (item.get('unread') || item.get('const_unread'))))\n            return;\n        view.detach();\n        if (!this.$('.chat-item').length && active_toolbar.hasClass('unread')) {\n            active_toolbar.click();\n        }\n    },\n\n    replaceChatItem: function (item, chats, pinned_chats) {\n        let view = this.child(item.id);\n        if (view && item.get('pinned') && item.get('pinned') !== '0' && pinned_chats ){\n            pinned_chats = pinned_chats.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            let index = pinned_chats.indexOf(item);\n            if (index === 0) {\n                this.$('.pinned-chat-list').prepend(view.$el);\n            } else {\n                let $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                while (!$chat_item.length && index > 0) {\n                    index--;\n                    $chat_item = this.$('.pinned-chat-list .chat-item').eq(index - 1);\n                }\n                $chat_item.after(view.$el);\n            }\n        }\n        else if (view && (item.get('timestamp') || item.get('saved'))) {\n            view.$el.detach();\n            let index = chats.indexOf(item);\n            if (index === 0) {\n                this.$('.chat-list').prepend(view.$el);\n            } else {\n                this.$('.chat-list .chat-item').eq(index - 1).after(view.$el);\n            }\n        }\n    },\n\n    updateChatPosition: function (item) {\n        let view = this.child(item.id),\n            active_toolbar = xabber.toolbar_view.$('.active');\n        if (!view)\n            return;\n        if (active_toolbar.hasClass('unread') && !(item.get('unread') || item.get('const_unread')))\n            return;\n        active_toolbar.hasClass('group-chats') && (view.model.get('saved') || view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('chats') && (view.model.get('saved') || !view.contact.get('group_chat')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.contact.get('group_chat') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('all-chats') && (view.model.get('saved') || !view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n        active_toolbar.hasClass('archive-chats') && (view.model.get('saved') || view.model.get('archived')) && this.replaceChatItem(item, this.model.filter(chat => chat.get('saved') || chat.get('archived')));\n        active_toolbar.hasClass('account-item') && (view.model.get('saved') || (view.account.get('jid') === active_toolbar.attr('data-jid'))) && this.replaceChatItem(item, this.model.filter(chat => (chat.get('saved') || chat.account.get('jid') === (active_toolbar.attr('data-jid')) && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned'))), this.model.filter(chat => (chat.get('saved') || chat.account.get('jid') === (active_toolbar.attr('data-jid')) && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned')));\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = this.child(selection.data('id'));\n                view && view.open();\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.getChat(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')));\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            view = this.child(selection.data('id'));\n            view && view.open();\n        }\n    },\n\n    openChat: function (view, options) {\n        if (!view.content)\n            view.content = new xabber.ChatContentView({chat_item: view});\n        options = options || {};\n        this.$('.list-item.active').removeClass('active');\n        view.updateActiveStatus();\n        let scrolled_top = xabber.chats_view.getScrollTop();\n        options.clear_search && this.clearSearch();\n        if (view.contact && !view.contact.get('in_roster') && (view.model.get('is_accepted') == false)) {\n            view.model.set('display', true);\n            view.model.set('active', true);\n            xabber.body.setScreen('all-chats', {right: 'group_invitation', contact: view.contact });\n        }\n        else {\n            if (xabber.toolbar_view.$('.active').hasClass('contacts'))\n                this.updateScreenAllChats();\n            if (!view.model.get('history_loaded') && (view.model.messages.length < 20)) {\n                view.content.loadPreviousHistory();\n            }\n            if (!view.model.get('displayed_sent') && view.model.messages.length) {\n                let last_msg = view.model.messages.models[view.model.messages.length - 1];\n                if (last_msg)\n                    if (!last_msg.isSenderMe() && (view.model.get('unread') || view.model.get('const_unread'))) {\n                        view.model.sendMarker(last_msg.get('msgid'), 'displayed', last_msg.get('stanza_id'), last_msg.get('contact_stanza_id'));\n                        view.model.set('displayed_sent', true);\n                    }\n            }\n            if (xabber.body.screen.get('right_contact') && (xabber.body.screen.get('right') === 'chat' || xabber.body.screen.get('right') === 'message_context' )) {\n                if (view.model.get('saved'))\n                    xabber.body.setScreen((options.screen || 'all-chats'), {right_contact: ''});\n                else if(xabber.right_contact_panel_saveable)\n                    view.contact.showDetailsRight('all-chats', {right_saved: true, encrypted: view.model.get('encrypted')});\n                else\n                    view.contact.showDetailsRight('all-chats', {right_saved: false});\n            }\n            xabber.body.setScreen((options.screen || 'all-chats'), {\n                right: 'chat',\n                clear_search: options.clear_search,\n                chat_item: view,\n                blocked: view.model.get('blocked')\n            },{right_contact_save: options.right_contact_save} );\n            if (view.contact && (!view.contact.get('vcard_updated') || (view.contact.get('group_chat') && !view.contact.get('group_info')) || (view.contact.get('vcard_updated') && !moment(view.contact.get('vcard_updated')).startOf('hour').isSame(moment().startOf('hour'))))) {\n                view.contact.getVCard();\n            }\n        }\n        xabber.chats_view.scrollTo(scrolled_top);\n    },\n\n    showGroupChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            group_chats = [],\n            group_chats_pinned = [];\n        if (is_unread) {\n            group_chats = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => chat.contact && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!group_chats.length && !group_chats_pinned.length) {\n            group_chats = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            group_chats_pinned = chats.filter(chat => !chat.get('saved') && chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        group_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (group_chats_pinned) {\n            group_chats_pinned = group_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            group_chats_pinned.forEach((chat) => {\n                let index = group_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            private_chats = [],\n            private_chats_pinned = [];\n        if (is_unread) {\n            private_chats = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => chat.contact && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.last_message && !chat.last_message.get('invite') && (chat.get('unread') || chat.get('const_unread')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!private_chats.length && !private_chats_pinned.length) {\n            private_chats = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            private_chats_pinned = chats.filter(chat => !chat.get('saved') && !chat.contact.get('group_chat') && chat.get('timestamp') && !chat.get('archived') && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        private_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (private_chats_pinned) {\n            private_chats_pinned = private_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            private_chats_pinned.forEach((chat) => {\n                let index = private_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showChatsByAccount: function (account) {\n        xabber.body.setScreen('all-chats');\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            account_chats = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && (chat.get('pinned') === '0' || !chat.get('pinned'))),\n            account_chats_pinned = chats.filter(chat => ((chat.account.get('jid') === account.get('jid')) && (chat.get('saved') || chat.get('timestamp') && !chat.get('archived'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        this.$(`.omemo-item:not([data-id=\"${account.get('jid')}\"])`).addClass('hidden');\n        account_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (account_chats_pinned) {\n            account_chats_pinned = account_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            account_chats_pinned.forEach((chat) => {\n                let index = account_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    showArchiveChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            archive_chats = chats.filter(chat => !chat.get('saved') && chat.get('archived'));\n        archive_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n    },\n\n    showAllChats: function () {\n        this.$('.chat-item').detach();\n        let chats = this.model,\n            is_unread = xabber.toolbar_view.$('.active.unread').length,\n            all_chats = [],\n            all_chats_pinned = [];\n        if (is_unread) {\n            all_chats = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && (chat.get('pinned') === '0' || !chat.get('pinned')) );\n            all_chats_pinned = chats.filter(chat => chat.contact && chat.get('timestamp') && !chat.get('archived') && chat.last_message && ((chat.get('unread') || chat.get('const_unread')) || (chat.contact.get('invitation') || (chat.contact.get('subscription_request_in') && chat.contact.get('subscription') != 'both'))) && chat.get('pinned') !== '0' && chat.get('pinned'));\n        }\n        if (!all_chats.length && !all_chats_pinned.length) {\n            all_chats = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && (chat.get('pinned') === '0' || !chat.get('pinned')));\n            all_chats_pinned = chats.filter(chat => (chat.get('saved') || chat.get('timestamp') && !chat.get('archived')) && chat.get('pinned') !== '0' && chat.get('pinned'));\n            xabber.toolbar_view.$('.toolbar-item.unread').removeClass('unread');\n            this.onUpdatedScreen();\n        }\n        all_chats.forEach((chat) => {\n            this.$('.chat-list').append(chat.item_view.$el);\n        });\n        if (all_chats_pinned) {\n            all_chats_pinned = all_chats_pinned.sort((a, b) => (a.get('pinned') > b.get('pinned')) ? 1 : -1)\n            all_chats_pinned.forEach((chat) => {\n                let index = all_chats_pinned.indexOf(chat);\n                if (index === 0) {\n                    this.$('.pinned-chat-list').prepend(chat.item_view.$el);\n                } else {\n                    this.$('.pinned-chat-list .chat-item').eq(index - 1).after(chat.item_view.$el);\n                }\n            });\n        }\n    },\n\n    updateScreenAllChats: function () {\n        xabber.toolbar_view.$('.toolbar-item').removeClass('active')\n            .filter('.all-chats').addClass('active');\n        this.showAllChats();\n    }\n});\n\n  xabber.MessageItemView = xabber.BasicView.extend({\n      className: 'message-item list-item',\n      template: templates.message_item,\n      avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n      events: {\n          'click': 'openByClick'\n      },\n\n      _initialize: function () {\n          this.contact = this.model.contact;\n          this.account = this.contact ? this.contact.account : this.model.account;\n          this.$el.attr('data-id', this.model.id + '-' + this.cid);\n          this.$el.attr('data-contact-jid', this.contact.get('jid'));\n          this.updateName();\n          this.updateLastMessage();\n          this.updateAvatar();\n          this.updateColorScheme();\n          this.updateGroupChats();\n          this.updateIcon();\n          this.updateStatus();\n          this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n          this.contact.on(\"change:status\", this.updateStatus, this);\n          this.contact.on(\"change:name\", this.updateName, this);\n      },\n\n      updateName: function () {\n          this.$('.chat-title').text(this.contact.get('name'));\n      },\n\n      updateAvatar: function () {\n          let image = this.contact.cached_image;\n          this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n      },\n\n      updateStatus: function () {\n          let status = this.contact.get('status'),\n              status_message = this.contact.getStatusMessage();\n          this.$('.contact-status').attr('data-status', status);\n          this.$('.chat-icon').attr('data-status', status);\n          this.model.get('blocked') ? this.$('.contact-status-message').text(xabber.getString(\"action_contact_blocked\")) : this.$('.contact-status-message').text(status_message);\n      },\n\n      updateGroupChats: function () {\n          let is_group_chat = this.contact.get('group_chat');\n          this.$('.status').hideIf(is_group_chat);\n          this.updateIcon();\n          if (is_group_chat) {\n              this.$el.addClass('group-chat');\n              this.$('.chat-title').css('color', '#424242');\n              this.model.set('group_chat', true);\n          }\n      },\n\n      updateIcon: function () {\n          this.$('.chat-icon').addClass('hidden');\n          let ic_name = this.contact.getIcon();\n          ic_name && this.$('.chat-icon').removeClass('hidden').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n      },\n\n      updateColorScheme: function () {\n          let color = this.account.settings.get('color');\n          this.$el.attr('data-color', color);\n      },\n\n      updateLastMessage: function (msg) {\n          msg || (msg = this.model);\n          if (!msg)\n              return;\n          let msg_time = msg.get('time'),\n              timestamp = msg.get('timestamp'),\n              forwarded_message = msg.get('forwarded_message'),\n              msg_files = msg.get('files') || [],\n              msg_images = msg.get('images') || [],\n              msg_locations = msg.get('locations') || [],\n              msg_text = (forwarded_message) ? (msg.get('message') || xabber.getQuantityString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText(),\n              msg_user_info = msg.get('user_info') || msg.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes || {}, msg_from = \"\";\n          msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n          this.model.set({timestamp: timestamp});\n          if (this.model.get('group_chat'))\n              msg_from = msg_user_info.nickname || msg_user_info.jid || (msg.isSenderMe() ? this.account.get('name') : msg.get('from_jid')) || \"\";\n          if (msg_files.length || msg_images.length || msg_locations.length) {\n              let $colored_span = $('<span class=\"text-color-500\"/>');\n              if (msg_files.length && msg_images.length)\n                  msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n              else {\n                  if (msg_files.length == 1 && (msg_files[0].is_audio || msg_files[0].voice))\n                      msg_text = $colored_span.text(`${xabber.getString(\"voice_message\")}, ` + utils.pretty_duration(msg_files[0].duration));\n                  else if (msg_files.length > 0) {\n                      let total_size = 0;\n                      msg_files.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_images.length > 0) {\n                      let total_size = 0;\n                      msg_images.forEach((f) => {total_size+=Number(f.size)});\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                  }\n                  if (msg_locations.length > 0) {\n                      msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                  }\n              }\n              this.$('.last-msg').html(\"\").append(msg_from).append(msg_text);\n          }\n          else {\n              this.$('.last-msg').text(\"\").append(msg_text);\n              if (msg_from)\n                  this.$('.last-msg').prepend($('<span class=text-color-700>' + msg_from + ': ' + '</span>'));\n          }\n          this.$el.emojify('.last-msg', {emoji_size: 16}).hyperlinkify({decode_uri: true});\n          this.$('.last-msg-date').text(utils.pretty_short_datetime_recent_chat(msg_time))\n              .attr('title', pretty_datetime(msg_time));\n          this.$('.msg-delivering-state').showIf(msg.isSenderMe() && (msg.get('state') !== constants.MSG_ARCHIVED))\n              .attr('data-state', msg.getState());\n      },\n\n      openByClick: function () {\n          let chat = this.account.chats.getChat(this.contact);\n          this.$el.closest('.left-panel-list-wrap').find('.list-item').removeClass('active');\n          this.$el.addClass('active');\n          xabber.chats_view.openChat(chat.item_view, {right_contact_save: true, clear_search: false});\n          xabber.body.setScreen(xabber.body.screen.get('name'), {right: 'message_context', model: chat });\n          if (xabber.right_contact_panel_saveable && xabber.body.screen.get('right_contact') && xabber.body.screen.get('right') === 'message_context') {\n              if (xabber.right_contact_panel_saveable)\n                  chat.contact.showDetailsRight('all-chats', {right_saved: true});\n              else\n                  chat.contact.showDetailsRight('all-chats', {right_saved: false});\n          }\n          this.model.get('unique_id') && chat.getMessageContext(this.model.get('unique_id'), {message: true});\n      }\n  });\n\n\n  xabber.ForwardPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal forward-panel-modal',\n    template: templates.forward_panel,\n    ps_selector: '.chat-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    open: function (messages, account) {\n        this.messages = messages;\n        this.account = account;\n        this.$('.chat-list-wrap').html(\"\");\n        this.saved_chat = false;\n        xabber.chats_view.$('.chat-list-wrap .chat-item').each((idx, item) => {\n            let id = $(item).data('id'),\n                chat = this.account.chats.get(id);\n            if (chat) {\n                if (id == `${this.account.get('jid')}:saved`) {\n                    let $cloned_item = $(item).clone().removeClass('hidden');\n                    $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n                    this.saved_chat = true;\n                    this.$('.chat-list-wrap').prepend($cloned_item);\n                } else\n                    this.$('.chat-list-wrap').append($(item).clone().removeClass('hidden'));\n            }\n        });\n        if (!this.saved_chat) {\n            let saved_chat = this.account.chats.getSavedChat(),\n                $cloned_item = saved_chat.item_view.$el.clone();\n            $cloned_item.find('.last-msg').text(xabber.getString(\"saved_messages__hint_forward_here\"));\n            this.$('.chat-list-wrap').prepend($cloned_item);\n        }\n        this.$('.chat-list-wrap').prepend($('<div/>', { class: 'forward-panel-list-title recent-chats-title hidden'}).text(xabber.getString(\"category_recent_chats\")));\n        this.$('.chat-list-wrap').append($('<div/>', { class: 'forward-panel-list-title contacts-title hidden'}).text(xabber.getString(\"category_title_contacts\")));\n        this.$('.chat-item').removeClass('active');\n        this.clearSearch();\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n            this.$el.detach();\n            this.data.set('visible', false);\n            deferred.resolve();\n        }});\n        return deferred.promise();\n    },\n\n    onClickItem: function (ev) {\n        let $target = $(ev.target).closest('.list-item');\n        this.onEnterPressed($target);\n    },\n\n    search: function (query) {\n        let jid, name, is_match = false, has_matches_chats = false, has_matches_contacts = false;\n        query = query.toLowerCase();\n        this.$('.roster-contact.list-item').remove();\n        query && this.account.roster.forEach((contact) => {\n            let jid = contact.get('jid'),\n                chat_id = contact.hash_id,\n                name = contact.get('name').toLowerCase(),\n                is_match = (name.indexOf(query) < 0 && jid.indexOf(query) < 0) ? true : false;\n            if (!is_match) {\n                if (!this.$('.chat-list-wrap .chat-item[data-id=\"' + chat_id + '\"]').length) {\n                    let contact_list_item = xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-contact[data-jid=\"${jid}\"]`).first().clone();\n                    contact_list_item.find('.muted-icon').hide();\n                    this.$('.chat-list-wrap').append(contact_list_item);\n                }\n                else\n                    is_match = true;\n            }\n            !is_match && (has_matches_contacts = true);\n        });\n        this.$('.contacts-title').switchClass('hidden', !has_matches_contacts);\n        this.$('.chat-item').each((idx, item) => {\n            let chat = this.account.chats.get($(item).data('id'));\n            if (!chat) {\n                $(item).addClass('hidden');\n                return;\n            }\n            jid = chat.get('jid');\n            name = (chat.contact ? chat.contact.get('name') : chat.get('name'));\n            if (name)\n                name = name.toLowerCase();\n            is_match = (!name || name && (name.indexOf(query) < 0 && jid.indexOf(query) < 0)) ? false : true;\n            $(item).hideIf(!is_match);\n            is_match && (has_matches_chats = true);\n        });\n        this.$('.recent-chats-title').switchClass('hidden', !has_matches_chats);\n        this.$('.modal-content .error').showIf(!has_matches_contacts && !has_matches_chats);\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.roster-contact.list-item').remove();\n        this.$('.contacts-title').addClass('hidden');\n        this.$('.recent-chats-title').addClass('hidden');\n    },\n\n    onEnterPressed: function (selection) {\n        let chat_item;\n        if (selection.hasClass('roster-contact'))\n            chat_item = this.account.chats.getChat(this.account.contacts.get(selection.data('jid'))).item_view;\n        if (selection.hasClass('chat-item'))\n            chat_item = xabber.chats_view.child(selection.data('id'));\n        chat_item && this.forwardTo(chat_item);\n    },\n\n    forwardTo: function (chat_item) {\n        if (chat_item.model.get('saved')) {\n            this.messages.forEach((message) => {\n                chat_item.content.onSubmit(\"\", [message]);\n            });\n        }\n        else {\n            if (!chat_item.content)\n                chat_item.content = new xabber.ChatContentView({chat_item: chat_item});\n            chat_item.content.bottom.setForwardedMessages(this.messages);\n        }\n        this.messages = [];\n        this.close().done(() => {\n            chat_item.open({clear_search: true});\n        });\n    }\n});\n\nxabber.InvitationPanelView = xabber.SearchView.extend({\n    className: 'modal dialog-modal add-user-group-chat',\n    template: templates.group_chats.invitation_panel_view,\n    ps_selector: '.contacts-list-wrap',\n    ps_settings: {theme: 'item-list'},\n\n    _initialize: function () {\n        this.registerClickEvents();\n    },\n\n    open: function (account, contact) {\n        this.selected_contacts = [];\n        this.account = account;\n        this.contact = contact;\n        this.clearPanel();\n        xabber.contacts_view.$(`.account-roster-wrap[data-jid=\"${this.account.get('jid')}\"] .roster-group`).each((idx, item) => {\n            let group_node = $(item).clone();\n            $(group_node).find('.list-item').each((i, list_item) => {\n                let contact_node = this.account.contacts.get($(list_item).attr('data-jid'));\n                if (contact_node.get('group_chat'))\n                        list_item.remove();\n            });\n            if (group_node.children('.list-item').length) {\n                this.$('.contacts-list-wrap').append(group_node);\n                group_node.find('.arrow').click((ev) => {\n                    this.toggleContacts(ev);\n                });\n                group_node.find('.group-head').click((ev) => {\n                    this.selectAllGroup(ev);\n                });\n            }\n        });\n        this.data.set('visible', true);\n        this.$el.openModal({\n            ready: () => {\n                this.updateScrollBar();\n                this.$('.search-input').focus();\n            },\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                this.selected_contacts = [];\n            }\n        });\n    },\n\n    addSelectedUsers: function () {\n        if (!this.selected_contacts.length) {\n            this.$('.modal-footer button').blur();\n            return;\n        }\n        let selected_users_count = this.selected_contacts.length,\n            _dfd_invitations = new $.Deferred(), invitations_count = 0;\n        _dfd_invitations.done((count) => {\n            let toast_text;\n            if (count == selected_users_count)\n                toast_text = xabber.getQuantityString(\"groupchat__toast__invitations_sent\", selected_users_count);\n            else\n                toast_text = xabber.getQuantityString(\"groupchat__toast_failed_to_sent_invitations\", selected_users_count);\n            utils.callback_popup_message(toast_text, 2000);\n            this.contact.trigger('invitations_send')\n        });\n        $(this.selected_contacts).each((idx, item) => {\n            this.sendInvite(item, () => {\n                invitations_count++;\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            }, () => {\n                if (idx == selected_users_count - 1)\n                    _dfd_invitations.resolve(invitations_count);\n            });\n        });\n        this.close();\n    },\n\n    clearPanel: function () {\n        this.$('.modal-footer .errors').text('');\n        this.$('.counter').text('');\n        this.$('.contacts-list-wrap').empty();\n        this.clearSearch();\n    },\n\n    registerClickEvents: function () {\n        this.$('.btn-cancel').click(() => {\n            this.close();\n        });\n        this.$('.btn-add').click(() => {\n            this.addSelectedUsers();\n        });\n    },\n\n    addUser: function (ev) {\n        let $target = $(ev.target).closest('.list-item'),\n            contact_jid = $target.attr('data-jid');\n        $target.toggleClass('click-selected');\n        let itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        else\n            this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n    },\n\n    sendInvite: function (contact_jid, callback, errback) {\n        let iq = $iq({type: 'set', to: (this.contact.get('full_jid') || this.contact.get('jid'))})\n                .c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`})\n                .c('jid').t(contact_jid).up()\n                .c('send').t('false').up()\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [contact_jid]));\n        this.account.sendIQFast(iq, () => {\n            this.sendInviteMessage(contact_jid);\n            this.close();\n            callback && callback();\n        }, (iq) => {\n            this.onInviteError(iq);\n            errback && errback();\n        });\n    },\n\n    onInviteError: function (iq) {\n        let err_text;\n        if ($(iq).find('not-allowed').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\");\n        }\n        if ($(iq).find('conflict').length > 0) {\n            err_text = $(iq).find('text').text() || xabber.getString(\"groupchat__invitation__error_already_invited\", [$(iq).find('invite').find('jid').text()]);\n        }\n        this.$('.modal-footer .errors').removeClass('hidden').text(err_text);\n    },\n\n    sendInviteMessage: function(jid_to) {\n        let body = xabber.getString(\"groupchat_legacy_invitation_body\", [this.contact.get('jid')]),\n            stanza = $msg({\n                to: jid_to,\n                type: 'chat',\n                id: uuid()\n            }).c('invite', {xmlns: `${Strophe.NS.GROUP_CHAT}#invite`, jid: this.contact.get('jid')})\n                .c('reason').t((this.contact.get('group_info').privacy === 'incognito') ? xabber.getString(\"groupchat__incognito_group__text_invitation\") : xabber.getString(\"groupchat__public_group__text_invitation\", [jid_to])).up().up()\n                .c('x', {xmlns: Strophe.NS.GROUP_CHAT})\n                .c('privacy').t(this.contact.get('group_info').privacy).up().up()\n                .c('body').t(body).up();\n        this.account.sendMsg(stanza);\n    },\n\n    search: function (query) {\n        query = query.toLowerCase();\n        query && this.$('.list-item').each((idx, item) => {\n            let jid = $(item).attr('data-jid'),\n                name = this.account.contacts.get(jid).get('name').toLowerCase(),\n                hide_clone = (this.$(`.list-item[data-jid=\"${jid}\"]`).length > 1) && (!this.$(`.list-item[data-jid=\"${jid}\"]`).first().is($(item)));\n            $(item).hideIf((name.indexOf(query) < 0 && jid.indexOf(query) < 0) || hide_clone);\n        });\n        this.$('.group-head').addClass('hidden');\n        this.$('.modal-content .error').switchClass('hidden', !(this.$('.list-item').length === this.$('.list-item.hidden').length));\n        this.scrollToTop();\n    },\n\n    onEmptyQuery: function () {\n        this.$('.list-item').removeClass('hidden');\n        this.$('.group-head').removeClass('hidden');\n    },\n\n    onClickItem: function (ev) {\n        this.addUser(ev);\n    },\n\n    onEnterPressed: function (selection) {\n        let contact_jid = selection.attr('data-jid'),\n            itemIdx = this.selected_contacts.indexOf(contact_jid);\n        if (itemIdx > -1)\n            this.selected_contacts.splice(itemIdx, 1);\n        this.selected_contacts.push(contact_jid);\n        this.updateCounter();\n        this.addSelectedUsers();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    toggleContacts: function (ev) {\n        let is_visible = $(ev.target).hasClass('mdi-chevron-down');\n        if (is_visible) {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).addClass('hidden');\n            });\n        }\n        else\n        {\n            let group_roster = $(ev.target).closest('.roster-group');\n            group_roster.find('.list-item').each((idx, item) => {\n                $(item).removeClass('hidden');\n            });\n        }\n        $(ev.target).switchClass('mdi-chevron-right', is_visible);\n        $(ev.target).switchClass('mdi-chevron-down', !is_visible);\n        this.updateScrollBar();\n    },\n\n    selectAllGroup: function (ev) {\n        if ($(ev.target).hasClass('arrow'))\n            return;\n       let group_roster = $(ev.target).closest('.roster-group');\n       if (group_roster.hasClass('click-selected')) {\n           group_roster.removeClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1) {\n                   this.selected_contacts.splice(itemIdx, 1);\n                   $(item).removeClass('click-selected');\n               }\n           });\n       }\n       else\n       {\n           group_roster.addClass('click-selected');\n           group_roster.find('.list-item').each((idx, item) => {\n               let contact_jid = $(item).attr('data-jid'),\n                   itemIdx = this.selected_contacts.indexOf(contact_jid);\n               if (itemIdx > -1)\n                   return;\n               else\n                   this.selected_contacts.push(contact_jid);\n               $(item).addClass('click-selected');\n           });\n       }\n        this.updateCounter();\n    },\n\n    updateCounter: function () {\n        let selected_counter = this.$('.list-item.click-selected').length;\n        (selected_counter) ? this.$('.counter').removeClass('hidden').text(selected_counter) : this.$('.counter').text('');\n    }\n\n});\n\n  xabber.SavedChatHeadView = xabber.BasicView.extend({\n      className: 'chat-head-wrap saved-chat',\n      template: templates.saved_chat_head,\n      events: {\n          \"click .contact-name\": \"showSettings\",\n          \"click .circle-avatar\": \"showSettings\",\n          \"click .btn-chat-pin\": \"pinSavedChat\",\n          \"click .btn-delete-chat\": \"deleteChat\",\n          \"click .btn-set-status\": \"setStatus\",\n          \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n          \"click .btn-next-plyr\": \"nextPlyr\",\n          \"click .btn-previous-plyr\": \"previousPlyr\",\n          \"click .btn-stop-plyr\": \"stopPlyr\",\n          \"click .btn-popup-plyr\": \"popupPlyr\",\n          \"click .btn-jingle-message\": \"openJingleMessage\",\n          \"click .btn-search-messages\": \"renderSearchPanel\"\n      },\n\n      _initialize: function (options) {\n          this.content = options.content;\n          this.contact = this.content.contact;\n          this.model = this.content.model;\n          clearInterval(this._update_oneliner_interval);\n          this.updateOneLiner();\n          this._update_oneliner_interval = setInterval(() => {\n              this.updateOneLiner();\n          }, 1000*60*2);\n          this.account = this.model.account;\n          this.$el.find('.circle-avatar:not(.voice-message-player-avatar)').html(env.templates.svg['saved-messages']());\n          this.model.on(\"close_chat\", this.closeChat, this);\n          xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n          xabber.on('update_layout', this.updatePlyrTitle, this);\n          xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n          xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n      },\n\n      render: function () {\n          this.$('.tooltipped').tooltip({delay: 50});\n          this.$('.btn-more').dropdown({\n              inDuration: 100,\n              outDuration: 100,\n              hover: false\n          });\n          this.$('.chat-head-menu').hide();\n          this.updatePlyrControls();\n          this.updatePlyrTime();\n          this.updateJingleButton();\n          return this;\n      },\n\n      updateOneLiner: function () {\n          let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n              one_liner = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n          if (!one_liner) {\n              this.updateOneLiner();\n              return;\n          }\n          this.$('.one-liner').text(one_liner);\n      },\n\n      closeChat: function () {\n          this.model.set({'opened': false, 'display': false, 'active': false});\n          xabber.chats_view.clearSearch();\n      },\n\n      showSettings: function () {\n          this.account.showSettings();\n      },\n\n      deleteChat: function () {\n          let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n          utils.dialogs.ask(xabber.getString(\"dialog_delete_saved_messages__header\"), xabber.getString(\"dialog_delete_saved_messages__confirm\") +\n              (rewrite_support ? \"\" : (\"\\n\" + xabber.getString(\"dialog_delete_saved_messages__confirm\", [this.account.domain]).fontcolor('#E53935'))), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n              if (result) {\n                  if (this.account.connection && this.account.connection.do_synchronization) {\n                      this.model.deleteFromSynchronization();\n                  }\n                  if (rewrite_support) {\n                      this.model.retractAllMessages(false);\n                  }\n                  else {\n                      let all_messages = this.model.messages.models;\n                      $(all_messages).each((idx, item) => {\n                          this.content.removeMessage(item);\n                      });\n                  }\n                  this.closeChat();\n                  this.model.set('timestamp', 0);\n              }\n          });\n      },\n\n      pinSavedChat: function () {\n          let pinned = this.model.get('pinned'),\n              is_pinned = pinned && pinned !== '0' ? true : false,\n              pinned_value = is_pinned ? '0' : + new Date(),\n              conversation_options = {\n                  jid: this.account.get('jid'),\n                  pinned: pinned_value,\n                  type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n              },\n              iq = $iq({type: 'set', to: this.account.get('jid')})\n                  .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                  .c('conversation', conversation_options);\n          this.account.sendIQFast(iq);\n          this.model.set('pinned', pinned_value);\n      },\n\n      renderSearchPanel: function () {\n          let visible_view;\n          if (this.content.isVisible())\n              visible_view = this.content;\n          this.model.messages_view && this.model.messages_view.isVisible() && (visible_view = this.model.messages_view);\n          visible_view && visible_view.$search_form.slideToggle(200, () => {\n              if (visible_view.$search_form.css('display') !== 'none')\n                  visible_view.$search_form.find('input').focus();\n          });\n      },\n\n      playPausePlyr: function () {\n          if (!xabber.current_plyr_player)\n              return;\n          if (xabber.current_plyr_player.$audio_elem){\n              if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                  let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                  $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                  xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n              } else {\n                  xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n              }\n          } else\n              xabber.current_plyr_player.togglePlay();\n          xabber.trigger('plyr_player_updated');\n      },\n\n      stopPlyr: function () {\n          if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n              return;\n          xabber.plyr_players.forEach((item) => {\n              if (item.$audio_elem){\n                  if (item.$audio_elem.voice_message)\n                      item.$audio_elem.voice_message.stopTime();\n              }\n          });\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.closePopup();\n          else {\n              xabber.current_plyr_player = null;\n              xabber.trigger('plyr_player_updated');\n          }\n      },\n\n      popupPlyr: function () {\n          if (xabber.plyr_player_popup)\n              xabber.plyr_player_popup.minimizePopup();\n      },\n\n      nextPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n              let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n              if (!next_item.$audio_elem.voice_message){\n                  let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  next_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n          }\n      },\n\n      previousPlyr: function () {\n          let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n          if (player_index === -1 && xabber.current_plyr_player.player_item)\n              player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n          if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n              return;\n          if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n              let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n              if (!prev_item.$audio_elem.voice_message){\n                  let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                  $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                  prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n              } else {\n                  prev_item.$audio_elem.voice_message.play()\n              }\n          } else{\n              if (!xabber.plyr_player_popup){\n                  xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                  xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n              } else\n                  xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n          }\n      },\n\n      updatePlyrControls: function () {\n          this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n          this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              if (xabber.current_plyr_player.$audio_elem.voice_message){\n                  let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                  this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                  this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                  // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                  this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                  let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                  this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                  this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n                  this.$('.voice-message-player-avatar').removeClass('hidden');\n                  this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                  this.updatePlyrTitle();\n                  let duration = Math.round(voice_message.getDuration());\n                  this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                  let timerId = setInterval(function() {\n                      let cur_time = Math.round(voice_message.getCurrentTime());\n                      if (voice_message.isPlaying())\n                          this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                      else\n                          clearInterval(timerId);\n                  }, 100);\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                  (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n              }\n          }\n          else if (xabber.current_plyr_player) {\n              this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n              this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n              this.updatePlyrTitle();\n              let poster = xabber.current_plyr_player.poster;\n              if (poster){\n                  this.$('.mdi-player-type-icon').addClass('hidden');\n                  this.$('.player-poster').removeClass('hidden');\n                  this.$('.player-poster').attr(\"src\", poster);\n              } else {\n                  this.$('.mdi-player-type-icon').removeClass('hidden');\n                  this.$('.player-poster').addClass('hidden');\n              }\n              this.$('.voice-message-player-avatar').addClass('hidden');\n              if (xabber.current_plyr_player.provider != 'html5')\n                  this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n              else\n                  this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n              this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n              this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n              // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n              this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n              let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n              this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n              this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n              (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n          }\n      },\n\n      updatePlyrTime: function () {\n          if (xabber.current_plyr_player){\n              if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n              }\n              else if (!isNaN(xabber.current_plyr_player.currentTime))\n                  this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n          }\n      },\n\n      updatePlyrTitle: function () {\n          if (!xabber.current_plyr_player)\n              return\n          let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n              title;\n          if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n              title = xabber.current_plyr_player.author;\n          else if (xabber.current_plyr_player)\n              title = xabber.current_plyr_player.config.title ?\n                  xabber.current_plyr_player.config.title :\n                  xabber.current_plyr_player.provider === 'html5' ?\n                      xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                      : xabber.getString(\"chat_message_video\");\n          $title_elem.text(title);\n          if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n              $title_elem.addClass('active-animation-player-title');\n              $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n          } else\n              $title_elem.removeClass('active-animation-player-title');\n\n      },\n\n      updateJingleButton: function () {\n          this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n          if (xabber.current_voip_call){\n              this.$('.btn-jingle-message').removeClass('hidden');\n              let voip_status = xabber.current_voip_call.get('status');\n              if (voip_status)\n                  this.$('.btn-jingle-message').attr('data-state', voip_status);\n              else\n                  this.$('.btn-jingle-message').attr('data-state', '');\n              if (voip_status === 'disconnected')\n                  this.$('.btn-jingle-message').removeClass('active-call');\n          } else\n              this.$('.btn-jingle-message').addClass('hidden');\n      },\n\n      openJingleMessage: function () {\n          if (xabber.current_voip_call) {\n              xabber.current_voip_call.modal_view.collapse();\n              return;\n          }\n      },\n  });\n\n  xabber.ChatHeadView = xabber.BasicView.extend({\n    className: 'chat-head-wrap',\n    template: templates.chat_head,\n    avatar_size: constants.AVATAR_SIZES.CHAT_HEAD,\n\n    events: {\n        \"click .chat-head-wrap\": \"showContactDetailsRight\",\n        \"click .chat-head-details\": \"showContactDetailsRight\",\n        \"click .contact-name\": \"showContactDetailsRight\",\n        \"click .circle-avatar\": \"showContactDetailsRight\",\n        \"click .contact-status-message.resource-hover\": \"showContactResources\",\n        \"click .contact-status-message.members-hover\": \"showMembersDetails\",\n        \"click .btn-contact-details\": \"showContactDetails\",\n        \"click .btn-clear-history\": \"clearHistory\",\n        \"click .btn-invite-users\": \"inviteUsers\",\n        \"click .btn-delete-chat\": \"deleteChat\",\n        \"click .btn-delete-contact\": \"deleteContact\",\n        \"click .btn-block-contact\": \"blockContact\",\n        \"click .btn-unblock-contact\": \"unblockContact\",\n        \"click .btn-export-history\": \"exportHistory\",\n        \"click .btn-show-fingerprints\": \"showFingerprints\",\n        \"click .btn-start-encryption\": \"startEncryptedChat\",\n        \"click .btn-open-encrypted-chat\": \"openEncryptedChat\",\n        \"click .btn-open-regular-chat\": \"openRegularChat\",\n        \"click .btn-chat-pin\": \"pinChat\",\n        \"click .btn-archive-chat\": \"archiveChat\",\n        \"click .btn-call-attention\": \"callAttention\",\n        \"click .btn-search-messages\": \"renderSearchPanel\",\n        \"click .btn-jingle-message\": \"sendJingleMessage\",\n        \"click .btn-mute-dropdown\": \"muteChat\",\n        \"click .btn-notifications.muted\": \"unmuteChat\",\n        \"click .btn-set-status\": \"setStatus\",\n        \"click .btn-play-pause-plyr\": \"playPausePlyr\",\n        \"click .btn-next-plyr\": \"nextPlyr\",\n        \"click .btn-previous-plyr\": \"previousPlyr\",\n        \"click .btn-stop-plyr\": \"stopPlyr\",\n        \"click .btn-popup-plyr\": \"popupPlyr\",\n    },\n\n    _initialize: function (options) {\n        this.content = options.content;\n        this.contact = this.content.contact;\n        this.model = this.content.model;\n        this.account = this.model.account;\n        this.resources_view = new xabber.ContactResourcesRightView({model: this.contact.resources});\n        this.updateName();\n        this.updateStatus();\n        this.updateEncrypted();\n        this.updateAvatar();\n        this.updateNotifications();\n        this.updateArchived();\n        this.updatePinned();\n        this.model.on(\"change:encrypted\", this.updateEncrypted, this);\n        this.model.on(\"close_chat\", this.closeChat, this);\n        this.model.on(\"pinned\", this.pinChat, this);\n        this.model.on(\"change:muted\", this.updateNotifications, this);\n        this.model.on(\"change:archived\", this.updateArchived, this);\n        this.model.on(\"change:pinned\", this.updatePinned, this);\n        this.contact.on(\"change\", this.onContactChanged, this);\n        this.contact.on(\"archive_chat\", this.archiveChat, this);\n        this.contact.on(\"change:name\", this.updateName, this);\n        this.contact.on(\"change:status\", this.updateStatus, this);\n        this.contact.on(\"change:status_updated\", this.updateStatus, this);\n        this.contact.on(\"change:image\", this.updateAvatar, this);\n        this.contact.on(\"change:blocked\", this.onChangedBlocked, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChatHead, this);\n        this.contact.on(\"change:subscription\", this.updateMenu, this);\n        this.contact.on(\"change:in_roster\", this.updateMenu, this);\n        this.contact.on(\"update_trusted\", this.updateEncryptedColor, this);\n        xabber.on('change:audio', this.updateGroupChatHead, this);\n        xabber.on('plyr_player_updated', this.updatePlyrControls, this);\n        xabber.on('update_layout', this.updatePlyrTitle, this);\n        xabber.on('plyr_player_time_updated', this.updatePlyrTime, this);\n        xabber.on(\"update_jingle_button\", this.updateJingleButton, this);\n    },\n\n    render: function (options) {\n        this.$('.tooltipped').tooltip('remove');\n        this.$('.tooltipped').tooltip({delay: 50});\n        this.$('.btn-more').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: false\n        });\n        this.$('.btn-notifications').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            hover: true, // Activate on hover\n            belowOrigin: true, // Displays dropdown below the button\n        });\n        this.$('.chat-head-menu').hide();\n        this.updateStatusMsg();\n        this.updateGroupChatHead();\n        if (this.contact.get('group_chat'))\n            this.$('.contact-status-message').addClass('members-hover')\n        else\n            this.$('.contact-status-message').addClass('resource-hover')\n        this.updatePlyrControls();\n        this.updatePlyrTime();\n        this.updateJingleButton();\n        return this;\n    },\n\n    updateEncrypted: function () {\n        this.$el.switchClass('encrypted', this.model.get('encrypted'));\n    },\n\n    updateEncryptedColor: function (encrypted) {\n        this.$el.attr('data-trust', encrypted);\n    },\n\n    updateName: function () {\n        this.$('.contact-name').text(this.contact.get('name'));\n    },\n\n    updateStatus: function () {\n        let status = this.contact.get('status'),\n            status_message = this.contact.getStatusMessage();\n        this.$('.contact-status').attr('data-status', status);\n        this.$('.chat-icon').attr('data-status', status);\n        this.model.get('blocked') ? this.$('.contact-status-message').text('Contact blocked') : this.$('.contact-status-message').text(status_message);\n    },\n\n    updateStatusMsg: function () {\n        this.$('.contact-status-message').text(this.contact.getStatusMessage());\n    },\n\n    updateAvatar: function () {\n        let image = this.contact.cached_image;\n        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    onContactChanged: function () {\n        let changed = this.contact.changed;\n        if (_.has(changed, 'subscription_request_in') || _.has(changed, 'subscription_request_out') || _.has(changed, 'subscription') || _.has(changed, 'status_message'))\n            this.updateStatusMsg();\n        if (_.has(changed, 'private_chat') || _.has(changed, 'incognito_chat') || _.has(changed, 'invitation'))\n            this.updateIcon();\n    },\n\n    onChangedBlocked: function () {\n        this.updateMenu();\n        this.updateStatusMsg();\n        this.updateIcon();\n    },\n\n    updateMenu: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.$('.btn-invite-users').showIf(is_group_chat && !this.contact.get('private_chat') && this.contact.get('subscription') == 'both');\n        this.$('.btn-call-attention').hideIf(is_group_chat || this.model.get('encrypted'));\n        this.$('.btn-clear-history').hideIf(is_group_chat);\n        this.$('.btn-start-encryption').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && !this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-encrypted-chat').showIf(!is_group_chat && this.account.omemo && !this.model.get('encrypted') && this.account.chats.get(`${this.contact.hash_id}:encrypted`));\n        this.$('.btn-open-regular-chat').showIf(this.model.get('encrypted'));\n        this.$('.btn-show-fingerprints').showIf(!is_group_chat && this.account.omemo && this.model.get('encrypted'));\n        this.$('.btn-retract-own-messages').showIf(is_group_chat);\n        this.$('.btn-block-contact').hideIf(this.contact.get('blocked'));\n        this.$('.btn-unblock-contact').showIf(this.contact.get('blocked'));\n        this.$('.btn-delete-contact').showIf(this.contact.get('in_roster') && !is_group_chat);\n        this.$('.btn-notifications').hideIf(this.contact.get('blocked'));\n        this.$('.btn-jingle-message').hideIf((this.contact.get('blocked') || is_group_chat) && xabber.current_voip_call);\n    },\n\n    renderSearchPanel: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'search'});\n    },\n\n    showContactDetails: function () {\n        this.contact.showDetails('all-chats');\n    },\n\n    showContactDetailsRight: function () {\n        this.contact.showDetailsRight('all-chats', {encrypted: this.model.get('encrypted')});\n    },\n\n    showContactResources: function () {\n        this.resources_view.open();\n    },\n\n    showMembersDetails: function () {\n        this.contact.showDetailsRight('all-chats', {type: 'members'});\n    },\n\n    updatePinned: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false;\n        if (is_pinned)\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_unpin\"))\n        else\n            this.$('.btn-chat-pin .one-line').text(xabber.getString(\"chat_action_pin\"))\n    },\n\n    updateNotifications: function () {\n        if (this.model.isMuted()) {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_unmute\"));\n            this.$('.btn-notifications').addClass('muted');\n        }\n        else {\n            this.$('.btn-notifications .one-line').text(xabber.getString(\"chat_action_mute\"));\n            this.$('.btn-notifications').removeClass('muted');\n        }\n        this.$('.btn-mute-dropdown').hideIf(this.model.isMuted());\n        this.$('.btn-unmute-dropdown').hideIf(!this.model.isMuted());\n    },\n\n      muteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          let mute_type = $(ev.target).closest('.btn-mute-dropdown').data('mute'),\n              muted_seconds;\n          if (mute_type === 'minutes15')\n              muted_seconds = 900\n          if (mute_type === 'hours1')\n              muted_seconds = 3600\n          if (mute_type === 'hours2')\n              muted_seconds = 7200\n          if (mute_type === 'day')\n              muted_seconds = 86400\n          if (mute_type === 'forever')\n              muted_seconds = 0\n          this.model.muteChat(muted_seconds);\n      },\n\n      unmuteChat: function (ev) {\n          if (this.contact.get('blocked'))\n              return;\n          this.model.muteChat('');\n      },\n\n    callAttention: function (ev) {\n        let msg = $msg({type: 'headline', to: this.contact.get('jid')})\n            .c('attention', {xmlns: Strophe.NS.ATTENTION});\n        this.account.sendMsg(msg);\n        this.model.messages.createSystemMessage({\n            from_jid: this.account.get('jid'),\n            message: xabber.getString(\"action_attention_called\")\n        });\n    },\n\n\n    updateArchived: function () {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!is_archived)\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_unarchive\"))\n        else\n            this.$('.btn-archive-chat .one-line').text(xabber.getString(\"chat_action_archive\"))\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-up', !is_archived);\n        this.$('.btn-archive-chat .mdi').switchClass('mdi-package-down', is_archived);\n        if (this.model.item_view && archived){\n            !this.model.messages.length && this.model.item_view.updateLastMessage();\n            this.account.chat_settings.updateArchiveChatsList(this.contact.get('jid'), archived);\n            if (this.model.get('active')) {\n                xabber.chats_view.updateScreenAllChats();\n            }\n        }\n    },\n\n    archiveChat: function (ev, no_iq) {\n        let archived = !this.model.get('archived'),\n            is_archived = archived ? true : false;\n        if (!no_iq) {\n            let is_archived_status = is_archived ? 'archived' : 'active',\n                conversation_options = {\n                    jid: this.contact.get('jid'),\n                    status: is_archived_status,\n                    type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n                },\n                iq = $iq({type: 'set', to: this.account.get('jid')})\n                    .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                    .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('archived', archived);\n        }\n    },\n\n    pinChat: function () {\n        let pinned = this.model.get('pinned'),\n            is_pinned = pinned && pinned !== '0' ? true : false,\n            pinned_value = is_pinned ? '0' : + new Date(),\n            conversation_options = {\n                jid: this.contact.get('jid'),\n                pinned: pinned_value,\n                type: this.model.get('sync_type') ? this.model.get('sync_type') : this.model.getConversationType(this.model)\n            },\n            iq = $iq({type: 'set', to: this.account.get('jid')})\n                .c('query', {xmlns: Strophe.NS.SYNCHRONIZATION})\n                .c('conversation', conversation_options);\n            this.account.sendIQFast(iq);\n            this.model.set('pinned', pinned_value);\n    },\n\n    sendJingleMessage: function () {\n        if (xabber.current_voip_call) {\n            xabber.current_voip_call.modal_view.collapse();\n            return;\n        }\n        xabber.chats_view.scrollToTop();\n        xabber.chats_view.clearSearch();\n        !this.contact.get('group_chat') && this.content.initJingleMessage();\n    },\n\n    setStatus: function () {\n        let set_status_view = new xabber.SetGroupchatStatusView();\n        set_status_view.open(this.contact);\n    },\n\n    playPausePlyr: function () {\n        if (!xabber.current_plyr_player)\n            return;\n        if (xabber.current_plyr_player.$audio_elem){\n            if (!xabber.current_plyr_player.$audio_elem.voice_message){\n                let f_url = $(xabber.current_plyr_player.$audio_elem).find('.file-link-download').attr('href');\n                $(xabber.current_plyr_player.$audio_elem).find('.mdi-play').removeClass('no-uploaded')\n                xabber.current_plyr_player.$audio_elem.voice_message = this.content.renderVoiceMessage($(xabber.current_plyr_player.$audio_elem).find('.file-container')[0], f_url);\n            } else {\n                xabber.current_plyr_player.$audio_elem.voice_message.playPause()\n            }\n        } else\n            xabber.current_plyr_player.togglePlay();\n        xabber.trigger('plyr_player_updated');\n    },\n\n    stopPlyr: function () {\n        if (!xabber.current_plyr_player && xabber.plyr_player_popup)\n            return;\n        xabber.plyr_players.forEach((item) => {\n            if (item.$audio_elem){\n                if (item.$audio_elem.voice_message)\n                    item.$audio_elem.voice_message.stopTime();\n            }\n        });\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.closePopup();\n        else {\n            xabber.current_plyr_player = null;\n            xabber.trigger('plyr_player_updated');\n        }\n    },\n\n    popupPlyr: function () {\n        if (xabber.plyr_player_popup)\n            xabber.plyr_player_popup.minimizePopup();\n    },\n\n    nextPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1].$audio_elem){\n            let next_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1];\n            if (!next_item.$audio_elem.voice_message){\n                let f_url = $(next_item.$audio_elem).find('.file-link-download').attr('href');\n                $(next_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                next_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(next_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                next_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index + 1]});\n        }\n    },\n\n    previousPlyr: function () {\n        let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n        if (player_index === -1 && xabber.current_plyr_player.player_item)\n            player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n        if (!xabber.current_plyr_player || !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0))\n            return;\n        if (xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1].$audio_elem){\n            let prev_item = xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1];\n            if (!prev_item.$audio_elem.voice_message){\n                let f_url = $(prev_item.$audio_elem).find('.file-link-download').attr('href');\n                $(prev_item.$audio_elem).find('.mdi-play').removeClass('no-uploaded');\n                prev_item.$audio_elem.voice_message = xabber.current_plyr_player.chat_item.content.renderVoiceMessage($(prev_item.$audio_elem).find('.file-container')[0], f_url, xabber.current_plyr_player.chat_item.model);\n            } else {\n                prev_item.$audio_elem.voice_message.play()\n            }\n        } else{\n            if (!xabber.plyr_player_popup){\n                xabber.plyr_player_popup = new xabber.PlyrPlayerPopupView({});\n                xabber.plyr_player_popup.show({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n            } else\n                xabber.plyr_player_popup.showNewVideo({player: xabber.current_plyr_player.chat_item.model.plyr_players[player_index - 1]});\n        }\n    },\n\n    updatePlyrControls: function () {\n        this.$('.chat-tool-player').showIf(xabber.current_plyr_player);\n        this.$el.switchClass('chat-head-player-enabled', xabber.current_plyr_player);\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            if (xabber.current_plyr_player.$audio_elem.voice_message){\n                let voice_message = xabber.current_plyr_player.$audio_elem.voice_message;\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_voice\"))\n                this.$('.btn-play-pause-plyr .mdi-play').hideIf(voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!voice_message.isPlaying());\n                this.$('.btn-play-pause-plyr').switchClass('active-plyr', voice_message.isPlaying());\n                // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', voice_message.isPlaying());\n                this.$('.btn-previous-plyr').switchClass('before-active-plyr', voice_message.isPlaying());\n                let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player);\n                this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n                this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n                this.$('.voice-message-player-avatar').removeClass('hidden');\n                this.$('.voice-message-player-avatar').setAvatar(xabber.current_plyr_player.contact_avatar, 32);\n                this.updatePlyrTitle();\n                let duration = Math.round(voice_message.getDuration());\n                this.$('.chat-head-player-total-time').text(utils.pretty_duration(duration));\n                let timerId = setInterval(function() {\n                    let cur_time = Math.round(voice_message.getCurrentTime());\n                    if (voice_message.isPlaying())\n                        this.$('.chat-head-player-current-time').text(utils.pretty_duration(cur_time));\n                    else\n                        clearInterval(timerId);\n                }, 100);\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.addClass('hidden2');\n                (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).addClass('hidden2');\n            }\n        }\n        else if (xabber.current_plyr_player) {\n            this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n            this.$('.chat-head-player-total-time').text(utils.pretty_duration(parseInt(xabber.current_plyr_player.duration)));\n            this.updatePlyrTitle();\n            let poster = xabber.current_plyr_player.poster;\n            if (poster){\n                this.$('.mdi-player-type-icon').addClass('hidden');\n                this.$('.player-poster').removeClass('hidden');\n                this.$('.player-poster').attr(\"src\", poster);\n            } else {\n                this.$('.mdi-player-type-icon').removeClass('hidden');\n                this.$('.player-poster').addClass('hidden');\n            }\n            this.$('.voice-message-player-avatar').addClass('hidden');\n            if (xabber.current_plyr_player.provider != 'html5')\n                this.$('.chat-head-player-type').text(xabber.current_plyr_player.provider)\n            else\n                this.$('.chat-head-player-type').text(xabber.getString(\"chat_message_video\"))\n            this.$('.btn-play-pause-plyr .mdi-play').hideIf(xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr .mdi-pause').hideIf(!xabber.current_plyr_player.playing);\n            this.$('.btn-play-pause-plyr').switchClass('active-plyr', xabber.current_plyr_player.playing);\n            // this.$('.btn-play-pause-plyr').switchClass('ground-color-500', xabber.current_plyr_player.playing);\n            this.$('.btn-previous-plyr').switchClass('before-active-plyr', xabber.current_plyr_player.playing);\n            let player_index = xabber.current_plyr_player.chat_item.model.plyr_players.indexOf(xabber.current_plyr_player.player_item);\n            this.$('.btn-next-plyr').switchClass('disabled', !(player_index >= 0 && player_index < xabber.current_plyr_player.chat_item.model.plyr_players.length - 1));\n            this.$('.btn-previous-plyr').switchClass('disabled', !(player_index <= xabber.current_plyr_player.chat_item.model.plyr_players.length && player_index > 0));\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.removeClass('hidden2');\n            (xabber.plyr_player_popup) && xabber.plyr_player_popup.$el.closest('#modals').siblings('#' + xabber.plyr_player_popup.$el.data('overlayId')).removeClass('hidden2');\n        }\n    },\n\n    updatePlyrTime: function () {\n        if (xabber.current_plyr_player){\n            if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem) {\n            }\n            else if (!isNaN(xabber.current_plyr_player.currentTime))\n                this.$('.chat-head-player-current-time').text(utils.pretty_duration(isNaN(xabber.current_plyr_player.currentTime) ? 0 : parseInt(xabber.current_plyr_player.currentTime)));\n        }\n    },\n\n    updatePlyrTitle: function () {\n        if (!xabber.current_plyr_player)\n            return\n        let $title_elem = this.$('.chat-head-player-title .chat-head-player-title-text'),\n            title;\n        if (xabber.current_plyr_player && xabber.current_plyr_player.$audio_elem)\n            title = xabber.current_plyr_player.author;\n        else if (xabber.current_plyr_player)\n            title = xabber.current_plyr_player.config.title ?\n                xabber.current_plyr_player.config.title :\n                xabber.current_plyr_player.provider === 'html5' ?\n                    xabber.current_plyr_player.source.substring(xabber.current_plyr_player.source.lastIndexOf('/')+1)\n                    : xabber.getString(\"chat_message_video\");\n        $title_elem.text(title);\n        if (this.$('.chat-head-player-title')[0] && utils.isOverflownWidth(this.$('.chat-head-player-title')[0])){\n            $title_elem.addClass('active-animation-player-title');\n            $title_elem.text(title + ' ⚫︎︎ ⚫︎︎ ⚫︎︎ ' + title);\n        } else\n            $title_elem.removeClass('active-animation-player-title');\n\n    },\n\n\n    updateJingleButton: function () {\n        this.$('.btn-jingle-message').switchClass('active-call', xabber.current_voip_call);\n        if (xabber.current_voip_call){\n            this.contact.get('group_chat') && this.$('.btn-jingle-message').removeClass('hidden');\n            let voip_status = xabber.current_voip_call.get('status');\n            if (voip_status)\n                this.$('.btn-jingle-message').attr('data-state', voip_status);\n            else\n                this.$('.btn-jingle-message').attr('data-state', '');\n            if (voip_status === 'disconnected')\n                this.$('.btn-jingle-message').removeClass('active-call');\n        } else if (this.contact.get('group_chat'))\n            this.$('.btn-jingle-message').addClass('hidden');\n    },\n\n    getActiveScreen: function () {\n        let active_screen = xabber.toolbar_view.$('.active');\n        this.$('.omemo-item').removeClass('hidden');\n        if (active_screen.hasClass('archive-chats')) {\n            xabber.toolbar_view.showArchive();\n            return;\n        }\n        if (active_screen.hasClass('all-chats')) {\n            xabber.toolbar_view.showAllChats();\n            return;\n        }\n        if (active_screen.hasClass('chats')) {\n            xabber.toolbar_view.showChats();\n            return;\n        }\n        if (active_screen.hasClass('group-chats')) {\n            xabber.toolbar_view.showGroupChats();\n            return;\n        }\n        if (active_screen.hasClass('account-item')) {\n            xabber.toolbar_view.showChatsByAccount();\n            return;\n        }\n    },\n\n    updateGroupChatHead: function () {\n        let is_group_chat = this.contact.get('group_chat');\n        this.updateIcon();\n        this.$('.btn-jingle-message').showIf(!is_group_chat && xabber.get('audio') || xabber.current_voip_call);\n        this.$('.contact-status').hideIf(is_group_chat);\n        this.updateMenu();\n    },\n\n    updateIcon: function () {\n        this.$('.chat-icon').addClass('hidden');\n        let ic_name = this.contact.getIcon();\n        ic_name && this.$('.chat-icon').removeClass('hidden group-invite blocked').switchClass(ic_name, (ic_name == 'group-invite' || ic_name == 'server' || ic_name == 'blocked')).html(env.templates.svg[ic_name]());\n    },\n\n    inviteUsers: function () {\n        if (!xabber.invite_panel)\n            xabber.invite_panel = new xabber.InvitationPanelView({ model: xabber.opened_chats });\n        xabber.invite_panel.open(this.account, this.contact);\n    },\n\n    clearHistory: function () {\n        this.content.clearHistory();\n        xabber.chats_view.clearSearch();\n    },\n\n    leaveGroupChat: function () {\n        this.contact.declineSubscription();\n        this.contact.removeFromRoster();\n        this.contact.set('in_roster', false);\n    },\n\n    closeChat: function () {\n        this.model.set({'opened': false, 'display': false, 'active': false});\n        xabber.chats_view.clearSearch();\n    },\n\n    deleteChat: function () {\n        if (this.contact.get('group_chat')) {\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"dialog_group_remove__confirm\"), null, { ok_button_text: xabber.getString(\"delete\")}).done((result) => {\n                if (result) {\n                    (this.account.connection && this.account.connection.do_synchronization) && this.model.deleteFromSynchronization();\n                    this.leaveGroupChat();\n                    this.closeChat();\n                }\n            });\n        }\n        else {\n            let rewrite_support = this.account.server_features.get(Strophe.NS.REWRITE);\n            utils.dialogs.ask(xabber.getString(\"delete_chat\"), xabber.getString(\"delete_chat_dialog_message\") +\n            (rewrite_support ? \"\" : `\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`), null, { ok_button_text: rewrite_support? xabber.getString(\"delete\") : xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((result) => {\n                if (result) {\n                    if (rewrite_support) {\n                        this.model.retractAllMessages(false);\n                    }\n                    if (this.account.connection && this.account.connection.do_synchronization) {\n                        this.model.deleteFromSynchronization();\n                    }\n                    else {\n                        let all_messages = this.model.messages.models;\n                        $(all_messages).each((idx, item) => {\n                            this.content.removeMessage(item);\n                        });\n                    }\n                    this.closeChat();\n                }\n            });\n        }\n    },\n\n    deleteContact: function () {\n        this.contact.deleteWithDialog();\n    },\n\n    blockContact: function () {\n        this.contact.blockWithDialog();\n    },\n\n    unblockContact: function () {\n        this.contact.unblockWithDialog();\n    },\n\n    exportHistory: function () {\n\n    },\n\n    showFingerprints: function () {\n        if (!this.account.omemo)\n            return;\n        let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n        peer.fingerprints.open();\n    },\n\n    startEncryptedChat: function () {\n        this.account.chats.openChat(this.contact, {encrypted: true});\n        let chat = this.account.chats.get(this.contact.hash_id + ':encrypted');\n        chat.set('timestamp', moment.now());\n        chat.item_view.updateLastMessage();\n    },\n\n    openEncryptedChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact, {encrypted: true});\n    },\n\n    openRegularChat: function () {\n        this.model.set('opened', true);\n        this.account.chats.openChat(this.contact);\n    }\n});\n\n\n  xabber.SendMediaView = xabber.BasicView.extend({\n      className: 'modal main-modal avatar-picker background-panel',\n      template: templates.send_media,\n      ps_selector: '.modal-content',\n      ps_settings: {theme: 'item-list'},\n\n      events: {\n          \"click .menu-btn\": \"updateActiveMenu\",\n          \"click .library-wrap .image-item\": \"setActiveImage\",\n          'change input[type=\"file\"]': \"onFileInputChanged\",\n          'keyup input.url': \"onInputChanged\",\n          \"click .btn-add\": \"addMedia\",\n          \"click .btn-cancel\": \"close\"\n      },\n\n      _initialize: function () {\n          this.$('input.url')[0].onpaste = this.onPaste.bind(this);\n      },\n\n      render: function (options) {\n          this.model = options.model;\n          this.parent = options.parent;\n          this.createLibrary();\n          this.$('.menu-btn').removeClass('active');\n          this.$('.menu-btn[data-screen-name=\"upload\"]').addClass('active');\n          this.$('.modal-header span').text(xabber.getString(\"chat_bottom__tooltip_add_media\"));\n          this.$el.openModal({\n              ready: () => {\n                  this.$('.modal-content').perfectScrollbar({theme: 'item-list'});\n              },\n              complete: this.close.bind(this)\n          });\n          let draggable = this.$('.upload-wrap');\n          draggable[0].ondragenter = function (ev) {\n              ev.preventDefault();\n              draggable.addClass('file-drop');\n          };\n          draggable[0].ondragover = function (ev) {\n              ev.preventDefault();\n          };\n          draggable[0].ondragleave = function (ev) {\n              if ($(ev.relatedTarget).closest('.upload-wrap').length)\n                  return;\n              ev.preventDefault();\n              draggable.removeClass('file-drop');\n          };\n          draggable[0].ondrop = (ev) => {\n              ev.preventDefault();\n              ev.stopPropagation();\n              draggable.removeClass('file-drop');\n              let files = ev.dataTransfer.files || [];\n              this.parent.view.addFileMessage(files);\n              this.close();\n          };\n      },\n\n      onPaste: function (ev) {\n          let url = ev.clipboardData.getData('text').trim();\n          this.$('.image-preview img')[0].onload = () => {\n              this.$('.image-preview img').removeClass('hidden');\n              this.updateActiveButton();\n          };\n          this.$('.image-preview img').addClass('hidden')[0].src = url;\n          this.updateActiveButton();\n      },\n\n      updateActiveMenu: function (ev) {\n          let screen_name = ev.target.getAttribute('data-screen-name');\n          this.$('.menu-btn').removeClass('active');\n          this.$(`.menu-btn[data-screen-name=\"${screen_name}\"]`).addClass('active');\n          this.updateScreen(screen_name);\n      },\n\n      updateScreen: function (name) {\n          this.$('.screen-wrap').addClass('hidden');\n          this.$(`.screen-wrap[data-screen=\"${name}\"]`).removeClass('hidden');\n          this.scrollToTop();\n          this.updateActiveButton();\n      },\n\n      updateActiveButton: function () {\n          let $active_screen = this.$('.screen-wrap:not(.hidden)'),\n              non_active = true;\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video') {\n              $active_screen.find('div.active').length && (non_active = false);\n          } else {\n              $active_screen.find('img:not(.hidden)').length && (non_active = false);\n          }\n          this.$('.modal-footer .btn-add').switchClass('non-active', non_active);\n      },\n\n      renderFiles: function (response) {\n          this.$(`.library-wrap[data-screen=\"${response.type}\"] .preloader-wrapper`).remove()\n          if (response.items.length){\n              response.items.forEach((item) => {\n                  let img = $(`<div class=\"image-item\"/>`);\n                  img.css('background-image', `url(\"${item.thumbnail.url}\")`);\n                  img.attr('data-src', item.file);\n                  img.attr('data-name', item.name);\n                  this.$(`.library-wrap[data-screen=\"${response.type}\"]`).append(img);\n              });\n          }\n      },\n\n      createLibrary: function () {\n          this.model.testGalleryTokenExpire(() => {\n              if (this.model.get('gallery_token') && this.model.get('gallery_url')) {\n                  this.$('.library-wrap').html(env.templates.contacts.preloader())\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      data: {obj_per_page: 50, order_by: '-id', type: 'image'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'image'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"image\"] .preloader-wrapper').remove()\n                      }\n                  });\n                  $.ajax({\n                      type: 'GET',\n                      headers: {\"Authorization\": 'Bearer ' + this.model.get('gallery_token')},\n                      url: this.model.get('gallery_url') + 'v1/files/',\n                      dataType: 'json',\n                      data: {obj_per_page: 50, order_by: '-id', type: 'video'},\n                      success: (response) => {\n                          console.log(response)\n                          response.type = 'video'\n                          this.renderFiles(response)\n                      },\n                      error: (response) => {\n                          this.model.handleCommonGalleryErrors(response)\n                          console.log(response)\n                          this.$('.library-wrap[data-screen=\"video\"] .preloader-wrapper').remove()\n                      }\n                  });\n              }\n          });\n      },\n\n      setActiveImage: function (ev) {\n          let $target = $(ev.target),\n              $active_screen = this.$('.screen-wrap:not(.hidden)');\n          if ($target.hasClass('active'))\n              $target.removeClass('active');\n          else {\n              this.$('.library-wrap>div').removeClass('active');\n              $target.addClass('active');\n          }\n          this.updateActiveButton();\n      },\n\n      onFileInputChanged: function (ev) {\n          let target = ev.target,\n              files = [];\n          for (let i = 0; i < target.files.length; i++) {\n              files.push(target.files[i]);\n          }\n\n          if (files && files.length) {\n              this.parent.view.addFileMessage(files);\n              $(target).val('');\n              this.close();\n          }\n      },\n\n      onInputChanged: function (ev) {\n          if (ev.target.value.trim() == this.$('.image-preview img')[0].src)\n              return;\n          if (ev.target.value.trim() && ev.keyCode !== constants.KEY_CTRL && ev.keyCode !== constants.KEY_SHIFT && ev.keyCode !== constants.KEY_ARROW_UP && ev.keyCode !== constants.KEY_ARROW_DOWN && ev.keyCode !== constants.KEY_ARROW_RIGHT && ev.keyCode !== constants.KEY_ARROW_LEFT) {\n              let url = ev.target.value.trim();\n              this.$('.image-preview img')[0].onload = () => {\n                  this.$('.image-preview img').removeClass('hidden');\n                  this.updateActiveButton();\n              };\n              this.$('.image-preview img').addClass('hidden')[0].src = url;\n              this.updateActiveButton();\n          } else {\n              this.$('.image-preview img').addClass('hidden')[0].src = \"\";\n              this.updateActiveButton();\n          }\n      },\n\n      addMedia: function () {\n          if (this.$('.btn-add').hasClass('non-active'))\n              return;\n          let file, filename, dfd = new $.Deferred(), $active_screen = this.$('.screen-wrap:not(.hidden)');\n          dfd.done((resolved_file) => {\n              this.parent.view.addFileMessage([resolved_file])\n              this.close();\n          });\n          this.$('.modal-preloader-wrap').html(env.templates.contacts.preloader());\n          this.$('.btn-add').addClass('hidden-disabled');\n          if ($active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' || $active_screen.attr('data-screen') == 'web-address') {\n              file = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-src') :\n                  $active_screen.find('img:not(.hidden)')[0].src;\n              filename = $active_screen.attr('data-screen') == 'image' || $active_screen.attr('data-screen') == 'video' ?\n                  $active_screen.find('div.active').attr('data-name') : '';\n\n              this.createFileFromURL(file, filename).then((file) => {\n                  dfd.resolve(file);\n              })\n          } else\n              dfd.resolve(this.current_file);\n      },\n\n      createFileFromURL: async function (url, filename) {\n          let response = await fetch(url);\n          let data = await response.blob();\n          let metadata = {\n              type: data.type\n          };\n          let file = new File([data], filename || url.split('#').shift().split('?').shift().split('/').pop() || 'file', metadata);\n          return file\n      },\n\n      close: function () {\n          this.$el.closeModal({ complete: () => {\n                  this.$el.detach();\n                  this.data.set('visible', false);\n              }\n          });\n      }\n  });\n\nxabber.ChatLocationView = xabber.BasicView.extend({\n    className: 'modal main-modal chat-location ',\n    template: templates.location_popup,\n\n    events: {\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-apply\": \"sendLocation\",\n        \"click #map canvas\": \"closeLocationName\",\n        \"click .nominatim.ol-search input\": \"initializeScrollbar\",\n        \"focusout .nominatim.ol-search input\": \"destroyScrollbar\",\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.account = this.view.account;\n\n    },\n\n    render: function () {\n        this.$el.openModal({\n            ready: () => {\n                this.initMap();\n                Materialize.updateTextFields();\n            },\n            complete: this.hide.bind(this)\n        });\n    },\n\n    initMap: function () {\n        import('ol-local').then(ol => {\n            ol = ol.default ? ol.default : ol;\n            this.$el.find('.modal-content').switchClass('popup', xabber.popup_coordinates);\n\n            let layers = [ new ol.layer.Tile({ source: new ol.source.OSM() }) ],\n                coordinates = xabber.popup_coordinates ? ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857') : [-9639318.435625363, 1667475.03690917],\n                zoom = xabber.popup_coordinates ? 15 : 0,\n                placemark = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"48px\" height=\"48px\" viewBox=\"0 0 24 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#000000\" fill-rule=\"nonzero\"></path></g></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                }),\n                placemark_my_location = new ol.Overlay.Placemark ({\n                    // backgroundColor : 'yellow',\n                    contentColor: '#000',\n                    autoPan: true,\n                    html: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"36px\" height=\"36px\"><circle class=\"outer\" cx=\"20\" cy=\"20\" r=\"16\" stroke=\"none\" stroke-width=\"1.5\" fill=\"none\" style=\"opacity: 0.6;\"></circle><circle class=\"inner\" cx=\"20\" cy=\"20\" r=\"8\" stroke=\"white\" stroke-width=\"1.5\" fill=\"none\"></circle></svg>',\n                    anchor: false,\n                    autoPanAnimation: { duration: 250 }\n                });\n\n            let map = new ol.Map\n            ({\ttarget: 'map',\n                view: new ol.View\n                ({\tzoom: zoom,\n                    center: coordinates\n                }),\n                interactions: ol.interaction_defaults({ altShiftDragRotate:false, pinchRotate:false }),\n                layers: layers,\n                overlays: [placemark, placemark_my_location]\n            });\n\n            let getCurrentPositionControl = function (e) {\n                navigator.geolocation.getCurrentPosition(success, error, options);\n            };\n\n            let options = {\n                enableHighAccuracy: true,\n                timeout: 5000,\n                maximumAge: 0\n            };\n\n            function success(pos) {\n                let crd = pos.coords;\n                map.getView().setCenter(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                placemark_my_location.show(ol.proj.transform([crd.longitude, crd.latitude], 'EPSG:4326', 'EPSG:3857'));\n                map.getView().setZoom(17);\n                button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-gps\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M12,8 C14.209139,8 16,9.790861 16,12 C16,14.209139 14.209139,16 12,16 C9.790861,16 8,14.209139 8,12 C8,9.790861 9.790861,8 12,8 M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13400675,5 5,8.13400675 5,12 C5,15.8659932 8.13400675,19 12,19 C15.8659932,19 19,15.8659932 19,12 C19,8.13400675 15.8659932,5 12,5 L12,5 Z\" id=\"mdi:crosshairs-gps\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n            };\n\n            function error(err) {\n                console.warn(`ERROR(${err.code}): ${err.message}`);\n            };\n\n            let button_geoposition = document.createElement('button');\n            button_geoposition.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/crosshairs-question\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"22\" height=\"22\"></rect><path d=\"M3.05,13 L1,13 L1,11 L3.05,11 C3.5,6.83 6.83,3.5 11,3.05 L11,1 L13,1 L13,3.05 C17.17,3.5 20.5,6.83 20.95,11 L23,11 L23,13 L20.95,13 C20.5,17.17 17.17,20.5 13,20.95 L13,23 L11,23 L11,20.95 C6.83,20.5 3.5,17.17 3.05,13 M12,5 C8.13,5 5,8.13 5,12 C5,15.87 8.13,19 12,19 C15.87,19 19,15.87 19,12 C19,8.13 15.87,5 12,5 M11.13,17.25 L12.88,17.25 L12.88,15.5 L11.13,15.5 L11.13,17.25 M12,6.75 C10.07,6.75 8.5,8.32 8.5,10.25 L10.25,10.25 C10.25,9.28 11.03,8.5 12,8.5 C12.97,8.5 13.75,9.28 13.75,10.25 C13.75,12 11.13,11.78 11.13,14.63 L12.88,14.63 C12.88,12.66 15.5,12.44 15.5,10.25 C15.5,8.32 13.93,6.75 12,6.75 Z\" id=\"mdi:crosshairs-question\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n            button_geoposition.addEventListener('click', getCurrentPositionControl, false);\n\n            let custom_element_position = document.createElement('div');\n\n            if (xabber.popup_coordinates) {\n                custom_element_position.className = 'geoposition placemark-exist ol-control ol-unselectable';\n            }\n            else {\n                custom_element_position.className = 'geoposition ol-control ol-unselectable';\n            }\n            custom_element_position.appendChild(button_geoposition);\n\n            let geoposition = new ol.control.Control({\n                className: 'myControl',\n                element: custom_element_position,\n                target: document.getElementById(\"myCustomControl\")\n            });\n\n            map.addControl(geoposition);\n\n            if (xabber.popup_coordinates) {\n                placemark.show(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                $('.ol-zoom.ol-unselectable.ol-control').addClass('placemark-exist');\n                let getPlacemarkPositionControl = function (e) {\n                    map.getView().setCenter(ol.proj.transform(xabber.popup_coordinates, 'EPSG:4326', 'EPSG:3857'));\n                    map.getView().setZoom(15);\n                    $('.ol-location').show()\n\n                };\n\n                let button_placemark_position = document.createElement('button');\n                button_placemark_position.innerHTML = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><svg width=\"22px\" height=\"22px\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"icon/material/map-marker\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><rect id=\"ViewBox\" fill-rule=\"nonzero\" x=\"0\" y=\"0\" width=\"36\" height=\"36\"></rect><path d=\"M12,11.5 C10.6192881,11.5 9.5,10.3807119 9.5,9 C9.5,8.33695878 9.7633921,7.70107399 10.232233,7.23223305 C10.701074,6.7633921 11.3369588,6.5 12,6.5 C13.3807119,6.5 14.5,7.61928813 14.5,9 C14.5,9.66304122 14.2366079,10.298926 13.767767,10.767767 C13.298926,11.2366079 12.6630412,11.5 12,11.5 M12,2 C8.13400675,2 5,5.13400675 5,9 C5,14.25 12,22 12,22 C12,22 19,14.25 19,9 C19,5.13400675 15.8659932,2 12,2 Z\" id=\"mdi:map-marker\" fill=\"#9E9E9E\" fill-rule=\"nonzero\"></path></g></svg>';\n\n\n                button_placemark_position.addEventListener('click', getPlacemarkPositionControl, false);\n\n                let custom_element_placemark_position = document.createElement('div');\n                custom_element_placemark_position.className = 'placemark-position ol-control ol-unselectable';\n                custom_element_placemark_position.appendChild(button_placemark_position);\n\n                let placemark_position = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_placemark_position,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(placemark_position);\n\n                let custom_element_show_location_name = document.createElement('div');\n                custom_element_show_location_name.innerHTML = xabber.location_name || '';\n\n\n                custom_element_show_location_name.className = 'ol-location ol-control ol-unselectable';\n\n                let show_location_name = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_show_location_name,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(show_location_name);\n\n            }\n\n            if (!xabber.popup_coordinates) {\n\n                let send_buttom = document.createElement('button');\n                send_buttom.className = 'btn-apply mdi mdi-28px mdi-send';\n\n                let send_address_div = document.createElement('div');\n                send_address_div.setAttribute(\"id\", \"send_address\");\n                send_address_div.className = 'ol-send-address';\n\n                let send_div = document.createElement('div');\n                send_div.setAttribute(\"id\", \"send_text\");\n                send_div.className = 'ol-send-text';\n\n                let custom_element_send = document.createElement('div');\n                custom_element_send.className = 'ol-send ol-control ol-unselectable';\n                custom_element_send.appendChild(send_address_div);\n                custom_element_send.appendChild(send_div);\n                custom_element_send.appendChild(send_buttom);\n\n                let send = new ol.control.Control({\n                    className: 'myControl',\n                    element: custom_element_send,\n                    target: document.getElementById(\"myCustomControl\")\n                });\n\n                map.addControl(send);\n\n                let sLayer = new ol.layer.Vector({\n                    source: new ol.source.Vector(),\n                    style: new ol.style.Style({\n                        image: new ol.style.Circle({\n                            radius: 5,\n                            stroke: new ol.style.Stroke ({\n                                color: 'rgb(255,165,0)',\n                                width: 3\n                            }),\n                            fill: new ol.style.Fill({\n                                color: 'rgba(255,165,0,.3)'\n                            })\n                        }),\n                        stroke: new ol.style.Stroke ({\n                            color: 'rgb(255,165,0)',\n                            width: 3\n                        }),\n                        fill: new ol.style.Fill({\n                            color: 'rgba(255,165,0,.3)'\n                        })\n                    })\n                });\n\n                map.addLayer(sLayer);\n\n                let search = new ol.control.SearchNominatim (\n                    {\t//target: $(\".options\").get(0),\n                        polygon: $(\"#polygon\").prop(\"checked\"),\n                        reverse: true,\n                        position: true\t// Search, with priority to geo position\n                    });\n\n                map.addControl (search);\n\n                search.on('select', function(e){\n                    sLayer.getSource().clear();\n                    // Check if we get a geojson to describe the search\n                    if (e.search.geojson) {\n                        let format = new ol.format.GeoJSON();\n                        let f = format.readFeature(e.search.geojson, { dataProjection: \"EPSG:4326\", featureProjection: map.getView().getProjection() });\n                        sLayer.getSource().addFeature(f);\n                        let view = map.getView();\n                        let resolution = view.getResolutionForExtent(f.getGeometry().getExtent(), map.getSize());\n                        let zoom = view.getZoomForResolution(resolution);\n                        let center = ol.extent.getCenter(f.getGeometry().getExtent());\n                        // redraw before zoom\n                        setTimeout(function(){\n                            view.animate({\n                                center: center,\n                                zoom: Math.min (zoom, 16)\n                            });\n                        }, 100);\n                    }\n                    else {\n                        map.getView().animate({\n                            center:e.coordinate,\n                            zoom: Math.max (map.getView().getZoom(),16)\n                        });\n                    }\n                });\n\n                function reverseGeocode(json) {\n                    if (!json[0].error) {\n                        let house_number = json[0].address.house_number ? ' ' + json[0].address.house_number : '',\n                            road = json[0].address.road ? json[0].address.road + house_number + ', ' : '',\n                            state = json[0].address.state ? json[0].address.state + ', ' : '',\n                            neighbourhood = json[0].address.neighbourhood ? json[0].address.neighbourhood + ', ' : '',\n                            allotments = json[0].address.allotments ? json[0].address.allotments + ', ' : '',\n                            village = json[0].address.village ? json[0].address.village + ', ' : '',\n                            city = json[0].address.city ? json[0].address.city + ', ' : '',\n                            country = json[0].address.country ? state + json[0].address.country : '',\n                            final_text = ''\n                        if ( !road ){\n                            final_text = neighbourhood + allotments + village + city + country\n                        }\n                        else {\n                            final_text = road + neighbourhood + allotments + village + city + state.replace(', ','')\n                        }\n                        $('#send_address').text(final_text);\n                    }\n                    else {\n                        $('#send_address').text(xabber.getString(\"location_fragment__address_error__title\"));\n                    }\n                }\n\n                map.on('click', function(e) {\n                    placemark.show(e.coordinate);\n                    search.reverseGeocode(e.coordinate, reverseGeocode);\n                    let coordinates = ol.proj.transform(e.coordinate, map.getView().getProjection(), 'EPSG:4326');\n                    $('.ol-control.ol-send').show();\n                    $('#send_text').text(coordinates[1].toFixed(6) + ':' + coordinates[0].toFixed(6));\n                    $('#output').text('geo:' + coordinates[1] + ',' + coordinates[0]);\n                    $('#lat').text(coordinates[1]);\n                    $('#lon').text(coordinates[0]);\n                });\n            }\n            window.setTimeout(function () { map.updateSize(); }, 200)\n        });\n    },\n\n    sendLocation: function (e) {\n        if (this.$('#output').val()) {\n            let body = this.$('#output').val(),\n                legacy_body = '',\n                start_idx = legacy_body.length,\n                end_idx = (body + legacy_body).length,\n                lat = this.$('#lat').val(),\n                lon = this.$('#lon').val(),\n                locations = [{\n                        lat: lat,\n                        lon: lon\n                    }],\n                mutable_content = [{\n                    start: start_idx,\n                    end: end_idx,\n                    type: 'geolocation'\n                    }],\n                attrs = {\n                    from_jid: this.account.get('jid'),\n                    locations: locations,\n                    mutable_content: mutable_content,\n                    message: this.$('#output').val(),\n                    begin: start_idx,\n                    end: end_idx\n                },\n                message = this.model.messages.create(attrs),\n                msg_id = message.get('msgid'),\n                stanza = $msg({\n                    to: this.model.get('jid'),\n                    type: 'chat',\n                    id: msg_id\n                });\n            stanza.c('markable').attrs({'xmlns': Strophe.NS.CHAT_MARKERS}).up();\n            stanza.c('origin-id', {id: msg_id, xmlns: 'urn:xmpp:sid:0'}).up();\n            stanza.c('reference', {\n                xmlns: Strophe.NS.REFERENCE,\n                type: 'mutable',\n                begin: start_idx,\n                end: end_idx\n            }).c('geoloc', {\n                xmlns: Strophe.NS.GEOLOC,\n            }).c('lat').t(lat).up().c('lon').t(lon).up().up().up();\n            stanza.c('body').t(body).up();\n            if (this.model.get('encrypted') && this.account.omemo) {\n                stanza.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n                if ($(stanza.tree()).children('body').length) {\n                    stanza.cnode($(stanza.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                    $(stanza.tree()).children('body').detach()\n                }\n                if ($(stanza.tree()).children('reference').length) {\n                    $(stanza.tree()).children('reference').each((idx, reference) => {\n                        stanza.cnode($(stanza.tree()).children('reference')[idx]).up()\n                    });\n                    $(stanza.tree()).children('reference').detach()\n                }\n                stanza.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n                stanza.c('from', {jid: this.account.get('jid')}).up().up()\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.omemo.encrypt(this.model.contact, stanza).then((msg) => {\n                    if (msg) {\n                        stanza = msg.message;\n                        message.set('trusted', msg.is_trusted);\n                    }\n                    this.account.sendMsg(stanza);\n                });\n            } else {\n                message.set({xml: $(stanza.tree()).clone()[0]});\n                this.account.sendMsg(stanza);\n            }\n        }\n        this.close();\n    },\n\n    closeLocationName: function (e) {\n        this.$el.find('.ol-location').hide()\n    },\n\n    onHide: function () {\n        this.$el.detach();\n    },\n\n    close: function () {\n        this.$el.closeModal({ complete: this.hide.bind(this) });\n    },\n\n    initializeScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar(\n            _.extend(this.ps_settings || {}, xabber.ps_settings)\n        );\n    },\n\n    destroyScrollbar: function () {\n        this.ps_container = this.$('.nominatim.ol-search');\n        this.ps_container.perfectScrollbar('destroy');\n    },\n});\n\nxabber.ChatBottomView = xabber.BasicView.extend({\n    className: 'chat-bottom-wrap',\n    ps_selector: '.message-reference-preview-container',\n    template: templates.chat_bottom,\n    avatar_size: constants.AVATAR_SIZES.CHAT_BOTTOM,\n    mention_avatar_size: constants.AVATAR_SIZES.MENTION_ITEM,\n\n    events: {\n        \"click\": \"onClickBottom\",\n        \"click .ql-editor\": \"focusOnInput\",\n        \"click .my-avatar\": \"showAccountSettings\",\n        \"keyup .input-message .rich-textarea\": \"keyUp\",\n        \"keydown .input-message .rich-textarea\": \"keyDown\",\n        \"change .attach-file input\": \"onFileInputChanged\",\n        \"click .attach-location\": \"showLocationPopup\",\n        \"click .attach-media\": \"showMediaPopup\",\n        \"mouseup .message-input-panel\": \"stopWritingVoiceMessage\",\n        \"mousedown .attach-voice-message\": \"writeVoiceMessage\",\n        \"click .chat-mention\": \"onMentionButtonClick\",\n        \"click .close-forward\": \"unsetForwardedMessages\",\n        \"click .close-attachments\": \"removeAttachments\",\n        \"click .send-message\": \"submit\",\n        \"click .markup-text\": \"onShowMarkupPanel\",\n        \"click .reply-message\": \"replyMessages\",\n        \"click .forward-message\": \"forwardMessages\",\n        \"click .pin-message\": \"pinMessage\",\n        \"click .copy-message\": \"copyMessages\",\n        \"click .edit-message\": \"showEditPanel\",\n        \"click .delete-message\": \"deleteMessages\",\n        \"click .close-message-panel\": \"resetSelectedMessages\",\n        \"click .mention-item\": \"inputMention\",\n        \"click .format-text\": \"updateMarkupPanel\",\n        \"click .link-message-reference .mdi-close\": \"removeLinkReference\",\n        \"click .preview-preloader-container .preview-cancel-preloader\": \"stopLoadingLinkReference\",\n        \"click .message-reference-preview-item-file .mdi-close\": \"removeFileSnippet\",\n        \"click .btn-manage-devices\": \"openDevicesWindow\"\n    },\n\n    _initialize: function (options) {\n        this.view = options.content;\n        this.model = this.view.model;\n        this.click_counter = 0;\n        let rich_textarea_wrap = this.$('.rich-textarea-wrap');\n        let bindings = {\n            enter: {\n                key: 13,\n                handler: function(range) {\n                    if (xabber.settings.hotkeys !== \"enter\")\n                        this.quill.insertText(range.index, \"\\n\");\n                }\n            },\n            arrow_up: {\n                key: constants.KEY_ARROW_UP,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length)  {\n                            let $prev_elem = active_item.prev('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$prev_elem.length) {\n                                $prev_elem = this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                                this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            }\n                            $prev_elem.addClass('active');\n                            if ($prev_elem.length && ($prev_elem[0].offsetTop <= this.$('.mentions-list')[0].scrollTop))\n                                this.$('.mentions-list')[0].scrollTop = $prev_elem[0].offsetTop;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = this.$('.mentions-list')[0].scrollHeight;\n                            this.$('.mentions-list').children('.mention-item').last().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_down: {\n                key: constants.KEY_ARROW_DOWN,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none') {\n                        let active_item = this.$('.mentions-list').children('.active.mention-item');\n                        if (active_item.length) {\n                            let $next_elem = active_item.next('.mention-item');\n                            active_item.removeClass('active');\n                            if (!$next_elem.length) {\n                                $next_elem = this.$('.mentions-list').children('.mention-item').first();\n                                this.$('.mentions-list')[0].scrollTop = 0;\n                            }\n                            $next_elem.addClass('active');\n                            if ($next_elem.length && ($next_elem[0].offsetTop + $next_elem[0].clientHeight >= this.$('.mentions-list')[0].scrollTop + this.$('.mentions-list')[0].clientHeight))\n                                this.$('.mentions-list')[0].scrollTop = $next_elem[0].offsetTop - this.$('.mentions-list')[0].clientHeight + $next_elem[0].clientHeight;\n                        }\n                        else {\n                            this.$('.mentions-list')[0].scrollTop = 0;\n                            this.$('.mentions-list').children('.mention-item').first().addClass('active');\n                        }\n                        return false;\n                    }\n                    else\n                        return true;\n                }\n            },\n            arrow_left: {\n                key: constants.KEY_ARROW_LEFT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            },\n            arrow_right: {\n                key: constants.KEY_ARROW_RIGHT,\n                handler: (range) => {\n                    if (this.$('.mentions-list').css('display') !== 'none')\n                        return false;\n                    else\n                        return true;\n                }\n            }\n        };\n        this.quill = new Quill(rich_textarea_wrap[0], {\n            modules: {\n                keyboard: {\n                    bindings: bindings\n                },\n                toolbar: [\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    this.model.get('group_chat') ? ['mention'] : [],\n                    ['clean']\n                ]\n            },\n            formats: ['bold', 'italic', 'underline', 'strike', 'blockquote', 'clean', 'emoji', 'mention'],\n            placeholder: xabber.getString(this.model.get('encrypted') ? \"chat_bottom__hint_default_encrypted\" : \"chat_bottom__hint_default\"),\n            scrollingContainer: '.rich-textarea',\n            theme: 'snow'\n        });\n        this.quill.container.firstChild.classList.add('rich-textarea');\n        this.$('.ql-mention').prop('disabled', true);\n        this.$('.ql-mention').append('<div class=\"chat-mention\" =\"\">@</div>');\n        this.contact = this.view.contact;\n        this.account = this.view.account;\n        this.fwd_messages = [];\n        this.edit_message = null;\n        this.stopped_loading_link_reference = false;\n        this.link_references = [];\n        this.link_reference_exempted = [];\n        this.currently_loaded_link_references = [];\n        this.attached_files = [];\n        this.loading_link_reference = false;\n        this.$('.account-jid').text(this.account.get('jid'));\n        this.updateAvatar();\n        this.quill.on(\"text-change\", this.onChangedText, this);\n        this.account.on(\"change:image\", this.updateAvatar, this);\n        this.account.on('trusting_updated', this.updateEncrypted, this);\n        if (this.contact) {\n            this.contact.on(\"change:blocked\", this.onBlockedUpdate, this);\n            this.contact.on('update_my_info', this.updateInfoInBottom, this);\n        }\n        this.model.on(\"reply_selected_messages\", this.replyMessages, this);\n        this.model.on(\"forward_selected_messages\", this.forwardMessages, this);\n        this.model.on(\"copy_selected_messages\", this.copyMessages, this);\n        this.model.on(\"delete_selected_messages\", this.deleteMessages, this);\n        this.model.on(\"edit_selected_message\", this.showEditPanel, this);\n        this.model.on(\"pin_selected_message\", this.pinMessage, this);\n        this.model.on(\"reset_selected_messages\", this.resetSelectedMessages, this);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            rich_textarea = $rich_textarea[0],\n            $rich_textarea_wrap = $rich_textarea.parent('.rich-textarea-wrap'),\n            $placeholder = $rich_textarea.siblings('.placeholder');\n        rich_textarea.onpaste = this.onPaste.bind(this);\n        rich_textarea.oncut = this.onCut.bind(this);\n        rich_textarea.ondragenter = (ev) => {\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__drag_and_drop__text_drop_files_here\"));\n            $rich_textarea_wrap.addClass('file-drop');\n        };\n        rich_textarea.ondragover = (ev) => {\n            ev.preventDefault();\n        };\n        rich_textarea.ondragleave = (ev) => {\n            if ($(ev.relatedTarget).closest('.rich-textarea').length)\n                return;\n            ev.preventDefault();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n        };\n        rich_textarea.ondrop = (ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            $placeholder.text(xabber.getString(\"chat_bottom__hint_default\"));\n            $rich_textarea_wrap.removeClass('file-drop');\n            let files = ev.dataTransfer.files || [];\n            this.view.addFileMessage(files);\n        };\n        let $insert_emoticon = this.$('.insert-emoticon'),\n            $emoji_panel_wrap = this.$('.emoticons-panel-wrap'),\n            $emoji_panel = this.$('.emoticons-panel'),\n            _timeout;\n\n        let onloaded_sprites = 0,\n            i = 0,\n            all_sprites = Object.keys(Emoji.all).length;\n        for (let emoji_list in Emoji.all) {\n            let $emoji_list_wrap = $(`<div class=\"emoji-list-wrap\"/>`);\n            $(`<div id=${emoji_list} class=\"emoji-list-header\">${xabber.getString(constants.EMOJI_LIST_NAME(emoji_list))}</div>`).appendTo($emoji_list_wrap);\n            _.each(Emoji.all[emoji_list], function (emoji) {\n                $('<div class=\"emoji-wrap\"/>').html(\n                    emoji.emojify({emoji_size: 24, sprite: emoji_list})\n                ).appendTo($emoji_list_wrap);\n            });\n            $emoji_list_wrap.appendTo($emoji_panel);\n            $emoji_panel.siblings('.emoji-menu').append(Emoji.all[emoji_list][0].emojify({href: emoji_list, title: xabber.getString(constants.EMOJI_LIST_NAME(emoji_list)), tag_name: 'a', emoji_size: 20}));\n            let img = new Image();\n            img.onload = () => {\n                onloaded_sprites++;\n                (onloaded_sprites === all_sprites) && $emoji_panel_wrap.find('.uploading-emoticons').detach();\n            };\n            img.src = './assets/images/emoji/spritesheet' + i++ + '.png';\n        }\n        let window_onclick = function (ev) {\n            if ($(ev.target).closest('.emoticons-panel-wrap').length || $(ev.target).closest('.insert-emoticon').length)\n                return;\n            $emoji_panel_wrap.removeClass('opened');\n            window.removeEventListener(\"click\" , window_onclick);\n        };\n        $emoji_panel.perfectScrollbar(\n                _.extend({theme: 'item-list'}, xabber.ps_settings));\n        this.$('.emoji-menu .emoji').click((ev) => {\n            $emoji_panel[0].scrollTop = this.$('.emoji-list-wrap ' + ev.target.attributes.href.value)[0].offsetTop - 4;\n        });\n        $insert_emoticon.click((ev) => {\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if ($emoji_panel_wrap.hasClass('opened')) {\n                $emoji_panel_wrap.removeClass('opened');\n                window.removeEventListener( \"click\" , window_onclick);\n            }\n            else {\n                $emoji_panel_wrap.addClass('opened');\n                window.addEventListener( \"click\" , window_onclick);\n            }\n            $emoji_panel.perfectScrollbar('update');\n        });\n        $emoji_panel_wrap.hover(null, (ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout) {\n                clearTimeout(_timeout);\n            }\n            _timeout = setTimeout(() => {\n                $emoji_panel_wrap.removeClass('opened');\n            }, 200);\n        });\n        $emoji_panel_wrap.mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (_timeout)\n                clearTimeout(_timeout);\n            if (ev.button)\n                return;\n            let $target = $(ev.target),\n                $target_emoji = $target.closest('.emoji-wrap').find('.emoji');\n            if ($target.closest('.emoji-menu').length)\n                return;\n            $target_emoji.length && this.typeEmoticon($target_emoji.data('emoji'));\n        });\n        this.renderLastEmoticons();\n    },\n\n    render: function (options) {\n        this.$('.message-input-panel').hideIf(options.blocked);\n        this.$('.blocked-msg').showIf(options.blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', options.blocked);\n        this.updateAvatar();\n        this.updateEncrypted();\n        let http_upload = this.account.server_features.get(Strophe.NS.HTTP_UPLOAD);\n        this.content_view = (this.view.data.get('visible') ? this.view : this.model.messages_view) || this.view;\n        this.messages_arr = this.content_view.$el.hasClass('participant-messages-wrap') && this.account.participant_messages || this.content_view.$el.hasClass('messages-context-wrap') && this.account.context_messages || this.model.messages;\n        this.renderLastEmoticons();\n        this.$('.attach-file').showIf(http_upload);\n        this.$('.attach-location').showIf(xabber.settings.mapping_service);\n        this.$('.attach-media').showIf(this.account.get('gallery_token') && this.account.get('gallery_url'));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left', !xabber.settings.mapping_service || !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        this.$('.ql-toolbar.ql-snow').switchClass('ql-moved-left-extra', !xabber.settings.mapping_service && !(this.account.get('gallery_token') && this.account.get('gallery_url')));\n        if (this.model.get('group_chat')) {\n            this.updateInfoInBottom();\n        }\n        else {\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n        this.focusOnInput();\n        this.manageSelectedMessages();\n        xabber.chat_body.updateHeight();\n        return this;\n    },\n\n    setButtonsWidth: function () {\n        let widths = [];\n        this.$('.message-actions-panel .button-wrap').each((i, button) => {widths.push(button.clientWidth)});\n        this.$('.message-actions-panel .button-wrap').css('width', `${Math.max.apply(null, widths)}px`);\n    },\n\n    updateEncrypted: function () {\n        this.$el.children('.preloader-wrapper').detach();\n        this.$el.children('.omemo-disabled').detach();\n        this.view.$el.removeClass('encrypted');\n        this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('encryption-warning').html(\"\");\n        this.$el.attr('data-trust', null);\n        this.$el.attr('data-contact-trust', null);\n        this.$el.find('.warning-wrap').detach();\n        if (!this.model.get('encrypted'))\n            return;\n        if (this.account.omemo) {\n            this.$el.addClass('loading');\n            this.$el.prepend(env.templates.contacts.preloader());\n            this.account.omemo.checkOwnFingerprints().then((is_trusted) => {\n                if (is_trusted == 'none' || is_trusted == 'error') {\n                    let is_scrolled_bottom = this.view.isScrolledToBottom();\n                    this.$el.attr('data-trust', is_trusted);\n                    this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_trusted);\n                    this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_trusted);\n                    this.view.$el.attr('data-trust', is_trusted);\n                    this.$el.removeClass('loading');\n                    this.$el.children('.preloader-wrapper').detach();\n                    if (is_trusted == 'none')\n                        this.$el.prepend(templates.encryption_warning({color: 'amber', message: xabber.getString(\"omemo__alert_new_device_yours__text_new_device\")}));\n                    else\n                        this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_yours__text_keys_changed\")}));\n                    xabber.chat_body.updateHeight();\n                    is_scrolled_bottom && this.view.scrollToBottom();\n                    this.account.omemo.checkContactFingerprints(this.contact);\n                    (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                } else {\n                    this.account.omemo.checkContactFingerprints(this.contact).then((is_contact_trusted) => {\n                        let is_scrolled_bottom = this.view.isScrolledToBottom();\n                        this.$el.removeClass('loading');\n                        this.$el.children('.preloader-wrapper').detach();\n                        if (is_contact_trusted === 'nil') {\n                            this.$el.prepend($(`<div class=\"warning-wrap no-fingerprints\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            return;\n                        }\n                        if (is_contact_trusted === 'error') {\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                            this.$el.prepend(templates.encryption_warning({color: 'red', message: xabber.getString(\"omemo__alert_keys_changed_partner__text_keys_changed\")}));\n                        } else {\n                            if (is_contact_trusted === 'none') {\n                                this.view.$el.addClass('encrypted');\n                                this.view.$('.chat-notification').removeClass('hidden').addClass('encryption-warning').html(templates.content_encryption_warning({message: xabber.getString(\"omemo__alert_new_device_partner__text_new_device\")}));\n                            }\n                            this.$el.attr('data-contact-trust', is_contact_trusted);\n                        }\n                        this.view.$el.attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-message:not([data-trust=untrusted])').attr('data-trust', is_contact_trusted);\n                        this.view.$('.chat-day-indicator:not(.fixed-day-indicator-wrap)').attr('data-trust', is_contact_trusted);\n                        xabber.chat_body.updateHeight();\n                        is_scrolled_bottom && this.view.scrollToBottom();\n                        (this.model.get('active') && this.model.get('display')) && this.focusOnInput();\n                    });\n                }\n            });\n        } else {\n            this.$el.addClass('loading');\n            this.$el.prepend($('<div class=\"omemo-disabled warning-wrap\"/>').text(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\")));\n        }\n    },\n\n    openDevicesWindow: function () {\n        if (this.account.omemo) {\n            if (this.$el.attr('data-trust') !== undefined) {\n                if (!this.omemo_devices)\n                    this.omemo_devices = new xabber.Fingerprints({model: this.account.omemo});\n                this.omemo_devices.open();\n            } else if (this.$el.attr('data-contact-trust') !== undefined) {\n                let peer = this.account.omemo.getPeer(this.contact.get('jid'));\n                peer.fingerprints.open();\n            }\n        } else\n            utils.dialogs.error(xabber.getString(\"omemo__chat__placeholder_encryption_disabled\"));\n    },\n\n    onBlockedUpdate: function () {\n        if (!this.isVisible())\n            return;\n        let is_blocked = this.model.get('blocked');\n        this.$('.message-input-panel').hideIf(is_blocked);\n        this.$('.blocked-msg').showIf(is_blocked);\n        this.$el.switchClass('chat-bottom-blocked-wrap', is_blocked);\n    },\n\n    onClickBottom: function (ev) {\n        (this.$el.hasClass('chat-bottom-blocked-wrap') && !$(ev.target).closest('.message-actions-panel').length) && this.contact.showDetails(xabber.body.screen.get('name'));\n        if ($(ev.target).closest('.ql-editor.rich-textarea').length) {\n            if (!this.quill.getText().trim().length) {\n                if (++this.click_counter === 3) {\n                    this.click_counter = 0;\n                    this.setOneLiner();\n                }\n            }\n        }\n    },\n\n    updateInfoInBottom: function () {\n        if (this.contact && this.contact.my_info) {\n            let nickname = this.contact.my_info.get('nickname'),\n                badge = this.contact.my_info.get('badge'),\n                avatar = this.contact.my_info.get('b64_avatar'),\n                role = this.contact.my_info.get('role');\n            if (nickname) {\n                this.$('.account-jid').hide();\n                this.$('.account-nickname').show().text(nickname);\n            }\n            else\n                this.$('.account-nickname').hide();\n            if (badge)\n                this.$('.account-badge').show().text(badge);\n            else\n                this.$('.account-badge').hide();\n            if (role && role != 'member')\n                this.$('.account-role').show().text(utils.pretty_name(role));\n            else\n                this.$('.account-role').hide();\n            this.$('.input-toolbar').emojify('.account-badge', {emoji_size: 16});\n            if (!avatar && this.contact.my_info.get('avatar_url'))\n                avatar = this.contact.my_info.get('avatar_url');\n            if (!avatar && this.account.cached_image)\n                avatar = this.account.cached_image;\n            !avatar && (avatar = Images.getDefaultAvatar(nickname));\n            this.$('.my-avatar.circle-avatar').setAvatar(avatar, this.avatar_size);\n        }\n        else {\n            this.$('.account-jid').show();\n            this.$('.account-nickname').hide();\n            this.$('.account-badge').hide();\n            this.$('.account-role').hide();\n        }\n    },\n\n    updateAvatar: function () {\n        let image;\n        if (this.contact && this.contact.get('group_chat')) {\n            if (this.contact.my_info){\n                if (this.contact.my_info.get('b64_avatar'))\n                    image = this.contact.my_info.get('b64_avatar');\n                if (!image && this.contact.my_info.get('avatar_url'))\n                    image = this.contact.my_info.get('avatar_url');\n                if (!image && this.account.cached_image)\n                    image = this.account.cached_image;\n            }\n            !image && (image = Images.getDefaultAvatar(this.contact.my_info && this.contact.my_info.nickname || this.account.get('jid')));\n        }\n        else\n            image = this.account.cached_image;\n        this.$('.my-avatar.circle-avatar').setAvatar(image, this.avatar_size);\n    },\n\n    focusOnInput: function () {\n        if (!xabber.body.$el.siblings('#modals').children('.open:not(.collapsed):not(.plyr-player-popup-view)').length){\n            this.quill.enable();\n            this.quill.focus();\n        } else {\n            this.quill.blur();\n            this.quill.disable();\n        }\n        return this;\n    },\n\n    moveCursorToEnd: function () {\n        let range = document.createRange(),\n            sel = window.getSelection(),\n            target = this.quill.root;\n        range.selectNodeContents(target);\n        range.collapse(false);\n        sel.removeAllRanges();\n        sel.addRange(range);\n        target.focus();\n        range.detach(); // optimization\n        target.scrollTop = target.scrollHeight;\n    },\n\n    keyDown: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') ||\n                ev.keyCode === constants.KEY_BACKSPACE ||\n                ev.keyCode === constants.KEY_DELETE) {\n            return;\n        }\n        if (ev.keyCode === constants.KEY_ENTER || ev.keyCode === 10) {\n            if (this.$('.mentions-list').css('display') !== 'none') {\n                let active_item = this.$('.mentions-list').children('.active.mention-item');\n                active_item.length && active_item.click();\n                ev.preventDefault();\n                return;\n            }\n            let send_on_enter = xabber.settings.hotkeys === \"enter\";\n            if ((send_on_enter && ev.keyCode === constants.KEY_ENTER && !ev.shiftKey) ||\n                    (!send_on_enter && ev.ctrlKey)) {\n                ev.preventDefault();\n                this.submit();\n                return;\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().trim() && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n    },\n\n    displayMicrophone: function () {\n        this.$('.mdi-send').addClass('hidden');\n        this.$('.attach-voice-message').removeClass('hidden');\n    },\n\n    displaySend: function () {\n        this.$('.mdi-send').removeClass('hidden');\n        this.$('.attach-voice-message').addClass('hidden');\n    },\n\n    updateMarkupPanel: function (ev) {\n        let $ic_markup = $(ev.target).closest('.format-text');\n        $ic_markup.toggleClass('active');\n        if ($ic_markup.hasClass('active')) {\n            this.$('.ql-toolbar.ql-snow').show();\n            this.$('.last-emoticons').hide();\n        }\n        else {\n            this.$('.ql-toolbar.ql-snow').hide();\n            this.$('.last-emoticons').show();\n        }\n    },\n\n    setOneLiner: function () {\n        let rand_idx = _.random(0, xabber.getOneLiners().length - 1),\n            placeholder = xabber.getOneLiners()[rand_idx].replace(/\\\\n/, \"\");\n        if (!placeholder) {\n            this.setOneLiner();\n            return;\n        }\n        this.updatePlaceholder(placeholder);\n    },\n\n    setDefaultPlaceholder: function () {\n        let placeholder = this.model.get('encrypted') ? xabber.getString(\"chat_bottom__hint_default_encrypted\") : xabber.getString(\"chat_bottom__hint_default\");\n        this.updatePlaceholder(placeholder);\n    },\n\n    updatePlaceholder: function (placeholder) {\n        this.quill.root.setAttribute('data-placeholder', placeholder);\n    },\n\n    changeEncryption: function () {\n        this.model.set('encrypted', !this.model.get('encrypted'));\n    },\n\n    getParticipantsList: function () {\n        let list = [];\n        this.contact.participants.each((participant) => {\n            list.push(participant.get('nickname') || participant.get('jid') || participant.get('id'));\n        });\n        return list.join(', ');\n    },\n\n    onChangedText: function () {\n        let current_height = this.$el.height();\n        if (current_height !== this.bottom_height) {\n            this.bottom_height = current_height;\n            this.view.scrolled_to_bottom = this.view.isScrolledToBottom();\n        }\n        clearTimeout(this._timeout_textchange);\n        this._timeout_textchange = setTimeout(() => {\n            this.updateOpenGraphReference(this.quill.getText())\n        }, 500);\n    },\n\n    updateMentionsList: function (mention_text) {\n        mention_text = (mention_text || \"\").toLowerCase();\n        this.contact.searchByParticipants(mention_text, (participants) => {\n            if (participants.length || xabber.getString(\"chat_bottom__mentions_list__item_everyone\").toLowerCase().indexOf(mention_text) > -1 || mention_text === \"*\" || 'all'.indexOf(mention_text) > -1 || 'все'.indexOf(mention_text) > -1) {\n                this.$('.mentions-list').html(\"\").show().perfectScrollbar({theme: 'item-list'});\n                this.$('.mentions-list')[0].scrollTop = 0;\n                participants.forEach((participant) => {\n                    let attrs = _.clone(participant.attributes);\n                    if (!attrs.id)\n                        return;\n                    attrs.nickname = attrs.nickname ? Strophe.xmlescape(attrs.nickname) : attrs.id;\n                    let mention_item = $(templates.group_chats.mention_item(attrs));\n                    mention_item.find('.circle-avatar').setAvatar(participant.get('b64_avatar') || utils.images.getDefaultAvatar(participant.get('nickname') || participant.get('jid') || participant.get('id')), this.mention_avatar_size);\n                    mention_item.find('.nickname').text().replace(mention_text, mention_text.bold());\n                    this.$('.mentions-list').append(mention_item);\n                });\n                let mention_all = $(templates.group_chats.mention_item({jid: \"\", nickname: xabber.getString(\"chat_bottom__mentions_list__item_everyone\"), id: \"\"}));\n                mention_all.find('.circle-avatar').setAvatar(this.contact.cached_image, this.mention_avatar_size);\n                mention_all.find('.one-line.jid').text(this.getParticipantsList());\n                this.$('.mentions-list').append(mention_all);\n                this.$('.mentions-list').children('.mention-item').first().addClass('active');\n            } else\n                this.$('.mentions-list').html(\"\").hide();\n        });\n    },\n\n    onMentionButtonClick: function () {\n        if (this.$('.ql-mention').hasClass('ql-active')){\n            this.$('.ql-mention').prop('disabled', false);\n            this.$('.ql-mention').click();\n            this.$('.ql-mention').prop('disabled', true);\n\n            return;\n        }\n        let selection = this.quill.getSelection() ? this.quill.getSelection().index : (this.quill.getLength() - 1);\n        this.quill.insertText(selection, ' @ ', 'user')\n        this.quill.setSelection(selection + 2, 0)\n        let mention_text = \"\";\n        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n            this.updateMentionsList(mention_text);\n        } else {\n            this.contact.participants.participantsRequest({version: 0}, () => {\n                this.updateMentionsList(mention_text);\n            });\n        }\n\n    },\n\n    inputMention: function (ev) {\n        ev && ev.preventDefault();\n        let $rich_textarea = this.$('.rich-textarea'),\n            $participant_item = $(ev.target).closest('.mention-item'),\n            nickname = $participant_item.data('nickname'),\n            id = $participant_item.data('id') || \"\",\n            jid = !this.contact.get('incognito_chat') && $participant_item.data('jid') || \"\",\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\"),\n            caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n            mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n            mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n            to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji(),\n            mentions_at = to_caret_text && Array.from(to_caret_text.matchAll(mention_at_regexp)) || [],\n            mentions_plus = to_caret_text && Array.from(to_caret_text.matchAll(mention_plus_regexp)) || [],\n            at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n            plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n            mention_position = Math.max(at_position, plus_position),\n            mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\");\n        (mention_text.length && mention_text[0].match(/\\s/)) && mention_position++;\n        mention_text = mention_text.replace(/\\s?(@|[+])/, \"\");\n        this.$('.mentions-list').hide();\n        this.quill.deleteText(mention_position, (mention_text.length + 1));\n        if (!nickname.length) {\n            if (id.length)\n                nickname = id;\n            else\n                return;\n        }\n        this.insertMention({jid: jid, id: id, nickname: nickname, position: mention_position});\n        this.focusOnInput();\n    },\n\n    insertMention: function (options) {\n        if (!options)\n            return;\n        let id = options.id, jid = options.jid, nickname = options.nickname,\n            is_me = !id && !jid || this.account.get('jid') === jid || this.contact.my_info && this.contact.my_info.get('id') === id,\n            attrs = {jid: jid, id: id, nickname: Strophe.xmlescape(nickname), is_me: is_me},\n            position = options.position;\n        this.quill.insertEmbed(position, 'mention', JSON.stringify(attrs));\n        this.quill.pasteHTML(position + nickname.length, '<text> </text>');\n        this.quill.setSelection(position + nickname.length + 1, 0);\n    },\n\n    showAccountSettings: function () {\n        if (this.contact.get('group_chat')) {\n            if (this.contact.my_info && this.contact.my_rights) {\n                this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n            } else\n                this.contact.getMyInfo(() => {\n                    this.contact.showDetailsRight('all-chats', {type: 'participant'});\n                    this.contact.details_view_right.participants.participant_properties_panel.open(this.contact.my_info, this.contact.my_rights);\n                });\n        } else {\n            this.account.showSettings();\n        }\n    },\n\n    keyUp: function (ev) {\n        let $rich_textarea = $(ev.target).closest('.rich-textarea'),\n            text = $rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\");\n        if (text) {\n            this.click_counter = 0;\n            this.setDefaultPlaceholder();\n        }\n        if (ev.keyCode === constants.KEY_ARROW_UP) {\n            if (!text) {\n                let $msg = this.view.$(`.chat-message[data-from=\"${this.account.get('jid')}\"]`).last();\n                (!$msg.length && this.contact.participants) && ($msg = this.view.$(`.chat-message[data-from=\"${this.contact.participants.find(m => m.get('jid') === this.account.get('jid')).get('id')}\"]`).last());\n                let edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n                this.edit_message = edit_msg;\n                this.setEditedMessageAttachments(edit_msg);\n                this.setEditedMessage(edit_msg);\n            }\n        }\n        if ((!text || text == \"\\n\") && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length))\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact') && !this.edit_message) {\n            ev.preventDefault();\n            this.unsetForwardedMessages();\n            if (this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0) {\n                let $elem = this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').last();\n                if ($elem.hasClass('link-message-reference')){\n                    let url = $elem.attr('data-original-url');\n                    if (url) {\n                        $elem.remove();\n                        this.removeLinkReferenceByUrl(url);\n                    }\n                } else {\n                    let id = $elem.attr('data-id');\n                    if (id) {\n                        $elem.remove();\n                        this.removeFileSnippetById(id);\n                    }\n                }\n\n            }\n            this.unsetForwardedMessages();\n        } else {\n            if (ev.keyCode === constants.KEY_ARROW_UP || ev.keyCode === constants.KEY_ARROW_DOWN) {\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_ARROW_LEFT || ev.keyCode === constants.KEY_ARROW_RIGHT) && this.$('.mentions-list').css('display') !== 'none') {\n                this.$('.mentions-list').hide();\n                return;\n            }\n            if ((ev.keyCode === constants.KEY_BACKSPACE || ev.keyCode === constants.KEY_DELETE) && !this.edit_message && !(this.attached_files && this.attached_files.length) && !(this.link_references && this.link_references.length)) {\n                if (!text || text == \"\\n\") {\n                    if (this.$('.fwd-messages-preview').hasClass('hidden'))\n                        this.displayMicrophone();\n                    else\n                        this.displaySend();\n                    $rich_textarea.flushRichTextarea();\n                }\n            }\n            if (ev.keyCode === constants.KEY_SPACE) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replaceEmoji();\n                if (to_caret_text[caret_position - 2] && to_caret_text[caret_position - 2].match(/@|[+]/)) {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n            }\n            if (this.model.get('group_chat')) {\n                let caret_position = this.quill.selection.lastRange && this.quill.selection.lastRange.index,\n                    mention_at_regexp = /(^|\\s)@(\\w+)?/g,\n                    mention_plus_regexp = /(^|\\s)[+](\\w+)?/g,\n                    to_caret_text = Array.from(text).slice(0, caret_position).join(\"\").replace(/\\n$/, \"\").replaceEmoji(),\n                    mentions_at = Array.from(to_caret_text.matchAll(mention_at_regexp)),\n                    mentions_plus = Array.from(to_caret_text.matchAll(mention_plus_regexp)),\n                    at_position = mentions_at.length ? mentions_at.slice(-1)[0].index : -1,\n                    plus_position = mentions_plus.length ? mentions_plus.slice(-1)[0].index : -1,\n                    mention_position = Math.max(at_position, plus_position);\n                if (this.quill.selection.lastRange && this.quill.getLeaf(this.quill.selection.lastRange.index)[0].parent.domNode.tagName.toLowerCase() === 'mention') {\n                    this.$('.mentions-list').hide();\n                    return;\n                }\n                if (!(caret_position > -1) || mention_position === -1) {\n                    this.$('.mentions-list').hide();\n                }\n                if (mention_position > -1) {\n                    let mention_text = Array.from(to_caret_text).slice(mention_position, caret_position).join(\"\").replace(/\\s?(@|[+])/, \"\");\n                        if (this.contact.participants.length && this.contact.participants.version > 0 && (this.contact.get('group_info') && this.contact.participants && this.contact.get('group_info').members_num == this.contact.participants.length)) {\n                            this.updateMentionsList(mention_text);\n                        } else {\n                            this.contact.participants.participantsRequest({version: 0}, () => {\n                                this.updateMentionsList(mention_text);\n                            });\n                        }\n                }\n                else\n                    this.$('.mentions-list').hide();\n            }\n        }\n        $rich_textarea.updateRichTextarea();\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onCut: function () {\n        if (this.$('.fwd-messages-preview').hasClass('hidden'))\n            this.displayMicrophone();\n        else {\n            this.displaySend();\n        }\n    },\n\n    onPaste: function (ev) {\n        ev.preventDefault();\n        let $rich_textarea = $(ev.target),\n            clipboard_data = ev.clipboardData;\n        if (clipboard_data) {\n            if (clipboard_data.files.length > 0) {\n                let image_from_clipboard = clipboard_data.files[clipboard_data.files.length - 1],\n                    blob_image = window.URL.createObjectURL(new Blob([image_from_clipboard])),\n                    options = { blob_image_from_clipboard: blob_image};\n                this.view.addFileMessage([image_from_clipboard]);\n                this.focusOnInput();\n            }\n            else if (clipboard_data.items.length > 0) {\n                let image_from_clipboard = clipboard_data.items[clipboard_data.items.length - 1];\n                if (image_from_clipboard.kind === 'file') {\n                    let blob = image_from_clipboard.getAsFile(),\n                        reader = new FileReader(), deferred = new $.Deferred();\n                    reader.onload = function(event){\n                        let options = { blob_image_from_clipboard: event.target.result};\n                        deferred.resolve();\n                        this.focusOnInput();\n                    };\n                    deferred.done(() => {\n                        blob.name = 'clipboard.png';\n                        this.view.addFileMessage([blob]);\n                    });\n                    reader.readAsDataURL(blob);\n                }\n                else {\n                    let text = _.escape(clipboard_data.getData('text')),\n                        arr_text = Array.from(text);\n                    arr_text.forEach((item, idx) => {\n                        if (item == '\\n')\n                            arr_text.splice(idx, 1, '</p><p>');\n                    });\n                    text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                    window.document.execCommand('insertHTML', false, text);\n                }\n            }\n            else {\n                let text = _.escape(clipboard_data.getData('text')),\n                    arr_text = Array.from(text);\n                arr_text.forEach((item, idx) => {\n                    if (item == '\\n')\n                        arr_text.splice(idx, 1, '</p><p>');\n                    if (item == ' ')\n                        arr_text.splice(idx, 1, '&nbsp');\n                });\n                text = \"<p>\" + arr_text.join(\"\").emojify({tag_name: 'span'}) + \"</p>\";\n                window.document.execCommand('insertHTML', false, text);\n            }\n        }\n        if ($rich_textarea.getTextFromRichTextarea().replace(/\\n$/, \"\") && !this.view.chat_state && !this.view.edit_message && xabber.settings.typing_notifications)\n            this.view.sendChatState('composing');\n        this.focusOnInput();\n        xabber.chat_body.updateHeight();\n    },\n\n    onFileInputChanged: function (ev) {\n        let target = ev.target,\n            files = [];\n        for (let i = 0; i < target.files.length; i++) {\n            files.push(target.files[i]);\n        }\n\n        if (files && files.length) {\n            this.view.addFileMessage(files);\n            $(target).val('');\n        }\n    },\n\n    updateOpenGraphReference: function (text) {\n        if (!(this.account.get('gallery_token') && this.account.get('gallery_url')))\n            return;\n        let url_regexp = /(((ftp|http|https):\\/\\/)|(www\\.))(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g,\n            list = text && text.match(url_regexp);\n        list = _.difference(list, this.link_reference_exempted)\n        list = _.difference(list, this.currently_loaded_link_references)\n        if (list && list.length){\n            this.stopped_loading_link_reference = false;\n            this.$('.preview-preloader-container').removeClass('hidden');\n            let request_count = 0;\n            this.link_reference_request_timestamp = Date.now();\n            let request_timestamp = this.link_reference_request_timestamp;\n            list.forEach((item, idx) => {\n                this.account.getOpenGraphData(item, (res) => {\n                    if (this.stopped_loading_link_reference || !(request_timestamp === this.link_reference_request_timestamp))\n                        return;\n                    if (this.currently_loaded_link_references.includes(item)){\n                        request_count++;\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        return;\n                    }\n                    let dfd = new $.Deferred();\n                    dfd.done(() => {\n                        request_count++;\n                        this.displaySend();\n                        this.$('.message-reference-preview').removeClass('hidden');\n                        if (request_count === list.length)\n                            this.$('.preview-preloader-container').addClass('hidden');\n                        res.original_text = item\n                        this.$('.message-reference-preview-container').append($(templates.messages.link_reference({\n                            item: res,\n                            domain: res.url ? utils.getDomainFromUrl(res.url) : res.site_name,\n                            url: null\n                        })));\n                        this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n                            type: 'image',\n                            closeOnContentClick: true,\n                            fixedContentPos: true,\n                            mainClass: 'mfp-no-margins mfp-with-zoom',\n                            image: {\n                                verticalFit: true,\n                                titleSrc: function(item) {\n                                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                                }\n                            },\n                            zoom: {\n                                enabled: true,\n                                duration: 300\n                            }\n                        });\n                        this.link_references = this.link_references.concat(res);\n                        this.currently_loaded_link_references = this.currently_loaded_link_references.concat([item]);\n                        xabber.chat_body.updateHeight();\n                        this.scrollToBottom();\n                    });\n                    if ((res.image_height && res.image_width) || !res.image){\n                        dfd.resolve()\n                    } else {\n                        let img = new Image();\n                        img.onload = (image) => {\n                            res.image_height = img.height;\n                            res.image_width = img.width;\n                            dfd.resolve()\n                        };\n                        img.onerror = img.onabort = (image) => {\n                            res.image = undefined;\n                            dfd.resolve()\n                        };\n                        img.src = res.image;\n                    }\n                }, (err) => {\n                    this.link_reference_exempted = this.link_reference_exempted.concat([item]);\n                    request_count++;\n                    if (request_count === list.length)\n                        this.$('.preview-preloader-container').addClass('hidden');\n                })\n\n            });\n        }\n    },\n\n    removeAttachments: function () {\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n    },\n\n    stopLoadingLinkReference: function () {\n        this.$('.preview-preloader-container').addClass('hidden');\n        this.stopped_loading_link_reference = true;\n    },\n\n    removeLinkReference: function (ev) {\n        let $elem = $(ev.target).closest('.link-message-reference'),\n            url = $elem.attr('data-original-url');\n        $elem.remove();\n        this.removeLinkReferenceByUrl(url);\n    },\n\n    removeLinkReferenceByUrl: function (url) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = this.link_references.filter(item => item.original_text != url);\n        this.currently_loaded_link_references = this.currently_loaded_link_references.filter(item => item != url);\n        this.link_reference_exempted = this.link_reference_exempted.concat([url]);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllLinkReferences: function () {\n        this.stopLoadingLinkReference();\n        this.$('.message-reference-preview-container .link-message-reference').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.link_references = [];//\n        this.currently_loaded_link_references = [];//\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    addFileSnippets: function (files) {\n        if (files && (this.attached_files.length + files.length) > 10){\n            utils.dialogs.error(xabber.getString(\"too_many_files_at_once\"));\n            return;\n        }\n        if (this.edit_message)\n            return;\n        files && files.length && this.$('.message-reference-preview').removeClass('hidden');\n        files && files.length && this.displaySend();\n        files.forEach((file) => {\n            let id = uuid();\n            file.uid = id;\n            this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                file: file,\n                uid: id,\n                blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                filesize: utils.pretty_size(file.size),\n                typeicon: utils.file_type_icon(file.type),\n                filetype: utils.pretty_file_type(file.type),\n            })));\n            file.image_prev && (delete file.image_prev);\n            this.attached_files = this.attached_files.concat([file]);\n            xabber.chat_body.updateHeight();\n            this.scrollToBottom();\n        });\n        files && files.length && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    removeFileSnippet: function (ev) {\n        let $elem = $(ev.target).closest('.message-reference-preview-item-file'),\n            id = $elem.attr('data-id');\n        $elem.remove();\n        this.removeFileSnippetById(id);\n    },\n\n    removeFileSnippetById: function (id) {\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = this.attached_files.filter(item => item.uid != id);\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    removeAllFileSnippets: function (ev) {\n        this.$('.message-reference-preview .message-reference-preview-item-file').remove();\n        if (!(this.$('.message-reference-preview-container').children('div.message-reference-preview-attached').length > 0))\n            this.$('.message-reference-preview').addClass('hidden');\n        this.attached_files = [];\n        xabber.chat_body.updateHeight();\n        this.scrollToBottom();\n    },\n\n    setEditedMessageAttachments: function (edit_msg, is_upload) {\n        !is_upload && this.$('.attach-file input').attr('disabled', true);\n        this.removeAllFileSnippets();\n        this.removeAllLinkReferences();\n        let files = edit_msg.get('files') || [],\n            images = edit_msg.get('images') || [],\n            videos = edit_msg.get('videos') || [],\n            link_references = edit_msg.get('link_references') || [];\n        files = files.concat(images).concat(videos);\n        if ((link_references && link_references.length) || (files && files.length)) {\n            this.$('.message-reference-preview').removeClass('hidden');\n            this.displaySend();\n        }\n        link_references.forEach((item) => {\n            this.link_references = this.link_references.concat([item]);\n            this.currently_loaded_link_references = this.currently_loaded_link_references.concat(item.original_text);\n            this.$('.message-reference-preview-container').prepend($(templates.messages.link_reference({\n                item: item,\n                domain: item.url ? utils.getDomainFromUrl(item.url) : item.site_name,\n                url: null\n            })));\n            xabber.chat_body.updateHeight();\n        });\n        files.forEach((file) => {\n            if (!file)\n                return;\n            let id = uuid();\n            file.uid = id;\n            this.attached_files = this.attached_files.concat([file]);\n            if (is_upload){\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: utils.isImageType(file.type) ? file.key ? file.image_prev.src : window.URL.createObjectURL(new Blob([file])) : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            } else{\n                this.$('.message-reference-preview-container').append($(templates.messages.attached_file({\n                    file: file,\n                    uid: id,\n                    blob: file.sources.length && file.sources[0] && utils.isImageType(file.type) ? file.sources[0] : null,\n                    filesize: utils.pretty_size(file.size),\n                    typeicon: utils.file_type_icon(file.type),\n                    filetype: utils.pretty_file_type(file.type),\n                })));\n            }\n            xabber.chat_body.updateHeight();\n        });\n        ((link_references && link_references.length) || (files && files.length)) && this.$('.attached-image').length && this.$('.attached-image').magnificPopup({\n            type: 'image',\n            closeOnContentClick: true,\n            fixedContentPos: true,\n            mainClass: 'mfp-no-margins mfp-with-zoom',\n            image: {\n                verticalFit: true,\n                titleSrc: function(item) {\n                    return '<a class=\"image-source-link\" href=\"'+item.el.attr('src')+'\" target=\"_blank\">' + item.name + '</a>';\n                }\n            },\n            zoom: {\n                enabled: true,\n                duration: 300\n            }\n        });\n    },\n\n    showLocationPopup: function (ev) {\n        if (!xabber.settings.mapping_service)\n            return;xabber\n        xabber.popup_coordinates = undefined;\n        xabber.location_name = undefined;\n        new xabber.ChatLocationView({content: this}).show(ev);\n    },\n\n    showMediaPopup: function (ev) {\n        if (this.edit_message)\n            return;\n        if (this.account.get('gallery_token') && this.account.get('gallery_url')) {\n            let media_view = new xabber.SendMediaView();\n            media_view.render({parent: this, model: this.account});\n        }\n    },\n\n    stopWritingVoiceMessage: function (ev) {\n        let $bottom_panel = this.$('.message-input-panel');\n        if ($bottom_panel.find('.recording').length > 0) {\n            $bottom_panel.find('.recording').removeClass('recording');\n            return;\n        }\n    },\n\n    writeVoiceMessage: function (ev) {\n        let $elem = $(ev.target);\n        if ($elem.hasClass('recording'))\n            $elem.removeClass('recording');\n        else {\n            $elem.addClass('recording ground-color-50');\n            if (!this.model.get('recording_voice_message'))\n                this.initAudio();\n        }\n    },\n\n    initAudio: function() {\n        navigator.getUserMedia = (navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.webkitGetUserMedia || navigator.getUserMedia);\n        if (navigator.getUserMedia) {\n            this.model.set('recording_voice_message', true)\n            let constraints = { audio: true, channelCount: 1 },\n                chunks = [],\n                $mic = this.$('.send-area .attach-voice-message'),\n                onSuccess = (stream) => {\n                if (!$mic.is(\":hover\")) {\n                    $mic.removeClass('recording ground-color-50');\n                    this.model.set('recording_voice_message', false)\n                    return;\n                }\n                let mediaRecorder = new MediaRecorder(stream),\n                    timer = 1, start_time, end_time,\n                    mic_hover = true;\n                    mediaRecorder.onstart = () => {\n                        if (xabber.settings.typing_notifications) {\n                            this.view.sendChatState('composing', 'voice');\n                            this._chatstate_send_timeout = setInterval(() => {\n                                this.view.sendChatState('composing', 'voice');\n                            }, constants.CHATSTATE_INTERVAL_COMPOSING_AUDIO);\n                        }\n                        start_time = moment.now();\n                        let $bottom_panel = this.$('.message-input-panel'),\n                            $timer_elem = this.$('.input-voice-message .timer'),\n                            $status_msg = this.$('.input-voice-message .voice-msg-status'),\n                            $voice_visualizer = this.$('.input-voice-message .voice-visualizer');\n                        $timer_elem.text('0:00');\n                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                        $bottom_panel.addClass('voice-message-recording');\n\n                        let timerId = setInterval(() => {\n                                if ($mic.hasClass('recording') && (timer < constants.VOICE_MSG_TIME)) {\n                                    if (timer%1 == 0)\n                                        $timer_elem.text(utils.pretty_duration(timer));\n                                    timer = (timer*10 + 2)/10;\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    if (!mic_hover)\n                                        $status_msg.css('color', '#D32F2F').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice_short\"));\n                                    else\n                                        $status_msg.css('color', '#9E9E9E').text(xabber.getString(\"chat_bottom__placeholder__cancel_write_voice\"));\n                                }\n                                else\n                                {\n                                    mic_hover = $bottom_panel.is(\":hover\");\n                                    mediaRecorder.stop();\n                                    $mic.removeClass('recording ground-color-50');\n                                    $bottom_panel.removeClass('voice-message-recording');\n                                    this.model.set('recording_voice_message', false)\n                                    clearInterval(timerId);\n                                }\n                            }, 200),\n                            flag = false,\n                            timerIdDot = setInterval(() => {\n                                if ($mic.hasClass('recording')) {\n                                    if (flag)\n                                        $voice_visualizer.css('background-color', '#FFF');\n                                    else\n                                        $voice_visualizer.css('background-color', '#D32F2F');\n                                    flag = !flag;\n                                }\n                                else\n                                    clearInterval(timerIdDot);\n                            }, 500);\n                    };\n\n                    mediaRecorder.start();\n\n                    mediaRecorder.onstop = () => {\n                    clearInterval(this._chatstate_send_timeout);\n                    (xabber.settings.typing_notifications) && this.view.sendChatState('paused');\n                    end_time = moment.now();\n                    if (mic_hover && ((end_time - start_time)/1000 >= 1.5)) {\n                        let audio_name = (\"voice message \" + moment().format('YYYY-MM-DD HH:mm:ss') + '.ogg'), audio_type = 'audio/ogg; codecs=opus',\n                            blob = new Blob(chunks, { 'type' : audio_type}),\n                            file = new File([blob], audio_name, {\n                                type: audio_type,\n                            });\n                        file.voice = true;\n                        file.duration = Math.round((end_time - start_time)/1000);\n                        this.view.addFileMessage([file], true);\n                    }\n                    chunks = [];\n                };\n\n                mediaRecorder.ondataavailable = (e) => {\n                    chunks.push(e.data);\n                    stream.getTracks().forEach(track => track.stop() );\n                };\n            };\n\n            let onError = (error) => {\n                console.log(xabber.getString(\"file_upload__error\", [error]));\n                $mic.removeClass('recording ground-color-50');\n            };\n\n            window.navigator.getUserMedia(constraints, onSuccess, onError);\n        }\n    },\n\n    typeEmoticon: function (emoji) {\n        if (typeof emoji == 'number')\n            emoji = Number(emoji).toString();\n        let caret_idx = -1;\n        if (this.quill.selection.lastRange)\n            caret_idx = this.quill.selection.lastRange.index;\n        else if (this.quill.selection.savedRange)\n            caret_idx = this.quill.selection.savedRange.index;\n        this.quill.focus();\n        if (!this.edit_message)\n            this.displaySend();\n        (!this.view.chat_state && xabber.settings.typing_notifications) && this.view.sendChatState('composing');\n        this.quill.insertEmbed(caret_idx, 'emoji', emoji);\n        if (this.quill.getFormat(caret_idx, 1).mention) {\n            this.quill.formatText(caret_idx, 1, 'mention', false);\n        }\n        this.quill.setSelection(caret_idx + 1);\n        xabber.chat_body.updateHeight();\n    },\n\n    renderLastEmoticons: function () {\n        let cached_last_emoji = this.account.chat_settings.getLastEmoji(),\n            $last_emoticons = this.$('.last-emoticons').empty(), emoji;\n        if (cached_last_emoji.length < 7) {\n            for (let idx = 0; idx < 7; idx++) {\n                emoji = Emoji.getByIndex(idx);\n                this.account.chat_settings.updateLastEmoji(emoji);\n            }\n        }\n        cached_last_emoji = this.account.chat_settings.getLastEmoji();\n        for (let idx = 0; idx < 7; idx++) {\n            $('<div class=\"emoji-wrap\"/>').html(\n                cached_last_emoji[idx] && cached_last_emoji[idx].emojify({tag_name: 'div', emoji_size: 20})\n            ).appendTo($last_emoticons);\n        }\n        $last_emoticons.find('.emoji-wrap').mousedown((ev) => {\n            if (ev && ev.preventDefault) { ev.preventDefault(); }\n            if (ev.button) {\n                return;\n            }\n            let $target = $(ev.target).closest('.emoji-wrap').find('.emoji');\n            this.typeEmoticon($target.data('emoji'));\n        });\n    },\n\n    submit: function (ev) {\n        let $rich_textarea = this.$('.input-message .rich-textarea'),\n            mentions = [],\n            markup_references = [],\n            blockquotes = [],\n            link_references = this.link_references,\n            attached_files = this.attached_files,\n            text = $rich_textarea.getTextFromRichTextarea();\n        this.$('.mentions-list').html(\"\").hide();\n        $rich_textarea.find('.emoji').each((idx, emoji_item) => {\n            let emoji = emoji_item.innerText;\n            this.account.chat_settings.updateLastEmoji(emoji);\n        });\n        let content_concat = [];\n        if (text.length >= constants.STANZA_MAX_SIZE) {\n            utils.dialogs.error(xabber.getString(\"message__error_big_stanza\"));\n            $rich_textarea.flushRichTextarea();\n            return;\n        }\n        if (text.length) {\n            this.quill.getContents().forEach((content) => {\n                if (content.attributes) {\n                    let content_attrs = [],\n                        start_idx = content_concat.length,\n                        end_idx = start_idx + ((content.insert && content.insert.emoji) ? 1 : _.escape(content.insert).length);\n                    for (let attr in content.attributes)\n                        (attr !== 'alt' && attr !== 'blockquote') && content_attrs.push(attr);\n                    if (content_attrs.indexOf('mention') > -1) {\n                        let mention_idx = content_attrs.indexOf('mention'),\n                            is_gc = this.contact.get('group_chat'),\n                            target = $($rich_textarea.find('mention')[mentions.length]).attr('data-target');\n                        content_attrs.splice(mention_idx, mention_idx + 1);\n                        target = is_gc ? ('xmpp:' + this.contact.get('jid') + target) : ('xmpp:' + target);\n                        mentions.push({\n                            start: start_idx,\n                            end: end_idx,\n                            target: target,\n                            is_gc: is_gc\n                        });\n                    }\n                    if (content.attributes.blockquote) {\n                        if (content_concat.length) {\n                            Array.from(content.insert).forEach((ins) => {\n                                let quote_start_idx = (content_concat.lastIndexOf('\\n') < 0) ? 0 : (content_concat.lastIndexOf('\\n') + 1),\n                                    quote_end_idx = content_concat.length;\n                                blockquotes.push({\n                                    marker: constants.QUOTE_MARKER,\n                                    start: quote_start_idx,\n                                    end: quote_end_idx + constants.QUOTE_MARKER.length\n                                });\n                                text = Array.from(_.escape(text));\n\n                                if (quote_start_idx === quote_end_idx) {\n                                    text[quote_start_idx - 1] += constants.QUOTE_MARKER;\n                                    content_concat[quote_start_idx] = constants.QUOTE_MARKER;\n                                }\n                                else {\n                                    text[quote_start_idx] = constants.QUOTE_MARKER + text[quote_start_idx];\n                                    content_concat[quote_start_idx] = constants.QUOTE_MARKER + content_concat[quote_start_idx];\n                                }\n                                (quote_end_idx > text.length) && (quote_end_idx = text.length);\n                                text[quote_end_idx - 1] += '\\n';\n\n                                text = _.unescape(text.join(\"\"));\n                                content_concat = Array.from(content_concat.join(\"\"));\n\n                                markup_references.forEach((markup_ref) => {\n                                    if (markup_ref.start >= quote_start_idx) {\n                                        markup_ref.start += constants.QUOTE_MARKER.length;\n                                        markup_ref.end += constants.QUOTE_MARKER.length;\n                                    }\n                                });\n\n                                content_concat = content_concat.concat(Array.from(_.escape(ins)));\n                            })\n                        }\n                    }\n                    content_attrs.length && markup_references.push({\n                        start: start_idx,\n                        end: end_idx,\n                        markup: content_attrs\n                    });\n                }\n                if (content.insert && content.insert.emoji) {\n                    content_concat = content_concat.concat(Array.from($(content.insert.emoji).data('emoji')));\n                }\n                else if (content.attributes && content.attributes.blockquote) {\n                }\n                else\n                    content_concat = content_concat.concat(Array.from(_.escape(content.insert)));\n            });\n        }\n        let start_length = text.length;\n        text = text.trimStart();\n        if (start_length > text.length) {\n            let delta = start_length - text.length;\n            mentions.forEach((mention) => {\n                mention.start -= delta;\n                mention.end -= delta;\n            });\n            markup_references.forEach((markup_reference) => {\n                markup_reference.start -= delta;\n                markup_reference.end -= delta;\n            });\n            blockquotes.forEach((blockquote) => {\n                blockquote.start -= delta;\n                blockquote.end -= delta;\n            });\n        }\n        if (link_references && link_references.length) {\n            link_references = link_references.filter(item => item.original_text);\n            link_references.forEach((link_reference) => {\n                if (link_reference && link_reference.original_text) {\n                    link_reference.start = text.indexOf(link_reference.original_text);\n                    if (link_reference.start != -1) {\n                        link_reference.start = 0;\n                        link_reference.end = 0;\n                    }\n                }\n            });\n        }\n        this.removeAllLinkReferences();\n        this.link_reference_exempted = [];\n        this.removeAllFileSnippets();\n        text = text.trimEnd();\n        $rich_textarea.flushRichTextarea();\n        this.quill.focus();\n        this.displayMicrophone();\n        if (this.edit_message) {\n            this.editMessage(text, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n            $rich_textarea.placeCaretAtEnd();\n            return;\n        }\n        if (text || this.fwd_messages.length || (attached_files && attached_files.length) || (link_references && link_references.length)) {\n            if (this.model.get('saved') && this.fwd_messages.length && !text)\n                this.fwd_messages.forEach((message) => {\n                    this.view.onSubmit(\"\", [message]);\n                });\n            else\n                this.view.onSubmit(text, this.fwd_messages, {mentions: mentions, markup_references: markup_references, link_references: link_references, attached_files: attached_files, blockquotes: blockquotes});\n        }\n        this.unsetForwardedMessages();\n        xabber.chats_view.clearSearch();\n        if (this.model.messages_view)\n            if (this.model.messages_view.data.get('visible'))\n                xabber.chats_view.openChat(this.model.item_view, {right_contact_save: true, clear_search: true, screen: xabber.body.screen.get('name')});\n        $rich_textarea.placeCaretAtEnd();\n    },\n\n    setEditedMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.$('.fwd-messages-preview').showIf(this.edit_message);\n        this.$('.fwd-messages-preview .msg-author').text(xabber.getString(\"edit_message__header\"));\n        this.$('.fwd-messages-preview .msg-text').html(Strophe.xmlescape(msg_text));\n        this.$('.fwd-messages-preview').emojify('.msg-text', {emoji_size: 18});\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setRedactedUploadMessage: function (message) {\n        this.click_counter = 0;\n        this.setDefaultPlaceholder();\n        let msg_text = message.get('message') || \"\";\n        this.displaySend();\n        xabber.chat_body.updateHeight();\n        let markup_body = utils.markupBodyMessage(message, 'mention'),\n            emoji_node = markup_body.emojify({tag_name: 'div'}),\n            arr_text = emoji_node.split('\\n');\n        arr_text.forEach((item, idx) => {\n            if (!item.includes('</blockquote>'))\n                arr_text[idx] = '<p>' + arr_text[idx] + '</p>';\n        });\n        emoji_node = arr_text.join(\"\");\n        this.quill.setText(\"\");\n        this.quill.root.innerHTML = emoji_node;\n        this.moveCursorToEnd();\n        this.focusOnInput();\n    },\n\n    setForwardedMessages: function (messages) {\n        this.fwd_messages = messages || [];\n        this.$('.fwd-messages-preview').showIf(messages.length);\n        if (messages.length) {\n            let msg = messages[0],\n                msg_author, msg_text, image_preview, $img_html_preview;\n            if (messages.length > 1) {\n                msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n            } else {\n                if (msg.get('forwarded_message')) {\n                    msg_text = xabber.getQuantityString(\"forwarded_messages_count\", messages.length);\n                }\n                else {\n                    msg_text = (msg.get('message') || msg.get('original_message')).emojify();\n                    let fwd_images = msg.get('images') || [],\n                        fwd_files = msg.get('files') || [],\n                        fwd_locations = msg.get('locations');\n                    msg.get('videos') && msg.get('videos').length && (fwd_files = fwd_files.concat(msg.get('videos')));\n                    if ((fwd_images && fwd_images.length) && (fwd_files && fwd_files.length)) {\n                        msg_text = fwd_images.length + fwd_files.length + ' attachments';\n                    }\n                    else {\n                        if (fwd_images && fwd_images.length) {\n                            if (fwd_images.length > 1) {\n                                msg_text =xabber.getQuantityString(\"recent_chat__last_message__images\", fwd_images.length);\n                            }\n                            else {\n                                image_preview = _.clone(msg.get('images')[0]);\n                                $img_html_preview = this.createPreviewImage(image_preview);\n                            }\n                        }\n                        if (fwd_files && fwd_files.length) {\n                            if (fwd_files.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__files\", fwd_files.length);\n                            }\n                            else {\n                                let filesize = fwd_files[0].size;\n                                msg_text = filesize ? fwd_files[0].name + \",   \" + filesize : fwd_files[0].name;\n                            }\n                        }\n                        if (fwd_locations && fwd_locations.length) {\n                            if (fwd_locations.length > 1) {\n                                msg_text = xabber.getQuantityString(\"recent_chat__last_message__locations\", fwd_locations.length);\n                            }\n                            else {\n                                msg_text = xabber.getString(\"recent_chat__last_message__locations_plural_0\");\n                            }\n                        }\n                    }\n                }\n            }\n            let from_jid = msg.get('from_jid');\n            if (msg.isSenderMe()) {\n                msg_author = this.account.get('name');\n            } else {\n                msg_author = (msg.get('user_info') && msg.get('user_info').nickname) || (this.account.contacts.get(from_jid) ? this.account.contacts.get(from_jid).get('name') : from_jid);\n            }\n            this.$('.fwd-messages-preview .msg-author').text(msg_author);\n            if (_.isUndefined(image_preview)) {\n                this.$('.fwd-messages-preview .msg-text').html(msg_text);\n            }\n            else {\n                this.$('.fwd-messages-preview .msg-text').html($img_html_preview);\n            }\n        }\n        xabber.chat_body.updateHeight();\n        this.displaySend();\n    },\n\n    onShowMarkupPanel: function (ev) {\n        let $clicked_icon = $(ev.target),\n            is_panel_opened = $clicked_icon.hasClass('opened');\n        this.$('.last-emoticons').showIf(is_panel_opened);\n        this.$('.markup-panel').showIf(!is_panel_opened);\n        $clicked_icon.switchClass('opened', !is_panel_opened);\n    },\n\n    createPreviewImage: function(image) {\n        let imgContent = new Image();\n            imgContent.src = image.sources[0];\n        $(imgContent).addClass('fwd-img-preview');\n        return imgContent;\n    },\n\n    unsetForwardedMessages: function (ev) {\n        ev && ev.preventDefault && ev.preventDefault();\n        let $rich_textarea = this.$('.input-message .rich-textarea');\n        this.fwd_messages = [];\n        if (this.edit_message) {\n            this.removeAllFileSnippets();\n            this.removeAllLinkReferences();\n            this.$('.attach-file input').attr('disabled', false);\n            $rich_textarea.flushRichTextarea();\n        }\n        this.edit_message = null;\n        this.$('.fwd-messages-preview').addClass('hidden');\n        let text = $rich_textarea.getTextFromRichTextarea();\n        if (!text || text == \"\\n\")\n            this.displayMicrophone();\n        else\n            this.displaySend();\n        xabber.chat_body.updateHeight();\n        this.focusOnInput();\n    },\n\n    resetSelectedMessages: function () {\n        this.content_view.$('.chat-message.selected').removeClass('selected');\n        this.manageSelectedMessages();\n    },\n\n    manageSelectedMessages: function () {\n        let $selected_msgs = this.content_view.$('.chat-message.selected'),\n            $input_panel = this.$('.message-input-panel'),\n            $message_actions = this.$('.message-actions-panel');\n            length = $selected_msgs.length;\n        $input_panel.hideIf(this.model.get('blocked') || length);\n        $message_actions.showIf(length);\n        this.model.get('blocked') && this.$('.blocked-msg').hideIf(length);\n        if (length) {\n            this.setButtonsWidth();\n            let my_msg = false;\n            if (length === 1) {\n                if ($selected_msgs.first().data('from') === this.account.get('jid'))\n                    my_msg = true;\n                if (this.contact && this.contact.my_info)\n                    if ($selected_msgs.first().data('from') === this.contact.my_info.get('id'))\n                        my_msg = true;\n                if ($selected_msgs.first().find('.mdi-play').length)\n                    my_msg = false;\n            }\n            $message_actions.find('.pin-message-wrap').showIf(this.model.get('group_chat')).switchClass('non-active', ((length !== 1) && this.model.get('group_chat')));\n            $message_actions.find('.reply-message-wrap').switchClass('non-active', this.model.get('blocked'));\n            $message_actions.find('.edit-message-wrap').switchClass('non-active', !((length === 1) && my_msg) || this.content_view.$('.chat-message.saved-main.selected').length || this.model.get('blocked'));\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').removeClass('hidden').addClass('msgs-counter').text(xabber.getQuantityString(\"chat_screen__bottom_panel__selected_messages__text\", length));\n        } else {\n            !this.view.$('.chat-notification').hasClass('encryption-warning') && this.view.$('.chat-notification').addClass('hidden').removeClass('msgs-counter').text(\"\");\n            this.focusOnInput();\n        }\n    },\n\n    pinMessage: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.pin-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            pinned_msg = this.messages_arr.get($msg.data('uniqueid')),\n            msg_id = pinned_msg.get('stanza_id');\n        this.resetSelectedMessages();\n        let iq = $iq({type: 'set', to: this.contact.get('full_jid') || this.contact.get('jid')})\n            .c('update', {xmlns: Strophe.NS.GROUP_CHAT})\n            .c('pinned-message').t(msg_id);\n        this.account.sendIQFast(iq, () => {},\n            (error) => {\n                if ($(error).find('not-allowed').length)\n                    utils.dialogs.error(xabber.getString(\"groupchat_you_have_no_permissions_to_do_it\"));\n            });\n    },\n\n    copyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n        });\n        this.resetSelectedMessages();\n        this.pushMessagesToClipboard(msgs);\n    },\n\n    editMessage: function (text, text_markups) {\n        let original_body = Array.from(Strophe.xmlescape(this.edit_message.get('original_message') || \"\")),\n            forwarded_body = \"\",\n            mutable_refs = this.edit_message.get('mutable_content'),\n            groupchat_ref = mutable_refs && mutable_refs.find(item => item.type === 'groupchat'),\n            stanza_id = this.edit_message.get('stanza_id'),\n            forward_ref = mutable_refs && mutable_refs.filter(item => item.type === 'forward'),\n            markups = text_markups.markup_references || [],\n            files = text_markups.attached_files || [],\n            link_references = text_markups.link_references || [],\n            blockquotes = text_markups.blockquotes || [],\n            mentions = text_markups.mentions || [],\n            iq = $iq({type: 'set', to: (this.contact && this.contact.get('group_chat')) ? this.contact.get('jid') : this.account.get('jid')}).c('replace', {xmlns: Strophe.NS.REWRITE, id: stanza_id}),\n            $message = $build('message').attrs({xmlns: undefined});\n        forward_ref && forward_ref.forEach((fwd, idx) => {\n            let fwd_msg = this.edit_message.get('forwarded_message')[idx],\n                gc_length = groupchat_ref && (groupchat_ref.start + groupchat_ref.end);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: (groupchat_ref ? (fwd.start - gc_length) : fwd.start), end: (groupchat_ref ? (fwd.end - gc_length) : fwd.end), type: 'mutable'})\n                .c('forwarded', {xmlns: Strophe.NS.FORWARD})\n                .c('delay', {\n                    xmlns: 'urn:xmpp:delay',\n                    stamp: fwd_msg.get('time')\n                }).up().cnode(fwd_msg.get('xml')).up().up().up();\n            forwarded_body += original_body.slice(fwd.start, fwd.end).join('');\n        });\n        markups.forEach((markup) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: markup.start + Array.from(forwarded_body).length, end: markup.end + Array.from(forwarded_body).length, type: 'decoration'});\n            for (let idx in markup.markup)\n                $message.c(markup.markup[idx], {xmlns: Strophe.NS.MARKUP}).up();\n            $message.up();\n        });\n        blockquotes.forEach((blockquote) => {\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: blockquote.start + Array.from(forwarded_body).length, end: blockquote.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('quote', {xmlns: Strophe.NS.MARKUP}).up().up();\n        });\n        mentions.forEach((mention) => {\n            let mention_attrs = {xmlns: Strophe.NS.MARKUP};\n            mention.is_gc && (mention_attrs.node = Strophe.NS.GROUP_CHAT);\n            $message.c('reference', {xmlns: Strophe.NS.REFERENCE, begin: mention.start + Array.from(forwarded_body).length, end: mention.end + Array.from(forwarded_body).length, type: 'decoration'})\n                .c('mention', mention_attrs).t(mention.target).up().up();\n        });\n\n        if (files && files.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'file')\n            files.forEach((file, idx) => {\n                (idx === 0) && (text += '\\n');\n                let legacy_body = file.sources[0] + ((idx != files.length - 1) ? '\\n' : \"\"),\n                    start_idx = Array.from(_.escape(text)).length + Array.from(forwarded_body).length,\n                    end_idx = start_idx + legacy_body.length;\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    type: 'mutable',\n                    begin: start_idx,\n                    end: end_idx\n                });\n                file.voice && $message.c('voice-message', {xmlns: Strophe.NS.VOICE_MESSAGE});\n                $message.c('file-sharing', {xmlns: Strophe.NS.FILES}).c('file');\n                file.type && $message.c('media-type').t(file.type).up();\n                file['id'] && $message.c('gallery-id').t(file['id']).up();\n                file.thumbnail && $message.c('thumbnail-uri').t(file.thumbnail).up();\n                file.created && $message.c('created').t(file.created).up();\n                file.name && $message.c('name').t(file.name).up();\n                file.size && $message.c('size').t(file.size).up();\n                file.height && $message.c('height').t(file.height).up();\n                file.width && $message.c('width').t(file.width).up();\n                file.duration && $message.c('duration').t(file.duration).up();\n                file.description && $message.c('desc').t(file.description).up();\n                $message.up().c('sources');\n                file.sources.forEach((u) => {\n                    if (file.key)\n                        u = u.replace(/^(https|http)/, 'aescbc') + '#' + utils.ArrayBuffertoBase64(file.key);\n                    $message.c('uri').t(u).up();\n                });\n                $message.up().up().up();\n                file.voice && $message.up();\n                text += legacy_body;\n                mutable_refs.push({start: start_idx, end: end_idx});\n            });\n        }\n\n        if (link_references && link_references.length) {\n            mutable_refs = mutable_refs.filter(item => item.type !== 'link_reference')\n            link_references.forEach((link_reference, idx) => {\n                if (link_reference.start === -1) {\n                    link_reference.start = Array.from(_.escape(text)).length + Array.from(forwarded_body).length;\n                    text = text + '\\n' + link_reference.original_text;\n                    link_reference.end = link_reference.start + link_reference.original_text.length + 1;\n                }\n                $message.c('reference', {\n                    xmlns: Strophe.NS.REFERENCE,\n                    begin: link_reference.start,\n                    end: link_reference.end,\n                    type: 'mutable',\n                }).c('ogp', { xmlns: Strophe.NS.OGP, url: link_reference.original_text });\n                link_reference.site && $message.c('meta', { property: 'og:site_name', content: link_reference.site}).up();\n                link_reference.type && $message.c('meta', { property: 'og:type', content: link_reference.type}).up();\n                link_reference.title && $message.c('meta', { property: 'og:title', content: link_reference.title}).up();\n                link_reference.url && $message.c('meta', { property: 'og:url', content: link_reference.url}).up();\n                link_reference.description && $message.c('meta', { property: 'og:description', content: link_reference.description}).up();\n                link_reference.image && $message.c('meta', { property: 'og:image', content: link_reference.image}).up();\n                link_reference.image_width && $message.c('meta', { property: 'og:image:width', content: link_reference.image_width}).up();\n                link_reference.image_height && $message.c('meta', { property: 'og:image:height', content: link_reference.image_height}).up();\n                link_reference.video_url && $message.c('meta', { property: 'og:video:url', content: link_reference.video_url}).up();\n                $message.up().up();\n                mutable_refs.push({start: link_reference.start, end: link_reference.end});\n            });\n        }\n        mutable_refs && mutable_refs.length && this.edit_message.set({mutable_content: mutable_refs});\n        if (!(Strophe.xmlunescape(forwarded_body) + text)){\n            this.deleteMessages(null, [this.edit_message]);\n            return;\n        }\n        $message.c('body').t(Strophe.xmlunescape(forwarded_body) + text).up();\n        this.unsetForwardedMessages();\n        if (this.model.get('encrypted')) {\n            let decrypted_msg = $message.tree().innerHTML;\n            $message.c('envelope', {xmlns: Strophe.NS.SCE}).c('content')\n            if ($($message.tree()).children('body').length) {\n                $message.cnode($($message.tree()).children('body')[0]).attrs({'xmlns': Strophe.NS.CLIENT}).up()\n                $($message.tree()).children('body').detach()\n            }\n            if ($($message.tree()).children('reference').length) {\n                $($message.tree()).children('reference').each((idx, reference) => {\n                    $message.cnode($($message.tree()).children('reference')[idx]).up()\n                });\n                $($message.tree()).children('reference').detach()\n            }\n            $message.up().c('rpad').t('0'.repeat(200).slice(1, Math.floor((Math.random() * 198) + 1))).up()\n            $message.c('from', {jid: this.account.get('jid')}).up().up()\n            this.account.omemo.encrypt(this.contact, $message).then((msg) => {\n                iq.cnode(msg.message.tree());\n                this.account.omemo.cached_messages.putMessage(this.contact, stanza_id, decrypted_msg);\n                this.account.sendIQFast(iq);\n            });\n        } else {\n            iq.cnode($message.tree());\n            this.account.sendIQFast(iq);\n        }\n    },\n\n    showEditPanel: function () {\n        if (!this.model.get('active'))\n            return;\n        if (this.$('.edit-message-wrap').hasClass('non-active'))\n            return;\n        let $msg = this.content_view.$('.chat-message.selected').first(),\n            edit_msg = this.messages_arr.get($msg.data('uniqueid'));\n        this.edit_message = edit_msg;\n        this.resetSelectedMessages();\n        this.setEditedMessageAttachments(edit_msg);\n        this.setEditedMessage(edit_msg);\n    },\n\n    deleteMessages: function (ev, messages) {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [],\n            my_msgs = 0,\n            dialog_options = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            msg && msgs.push(msg);\n            msg.isSenderMe() && my_msgs++;\n        });\n        messages && messages.forEach((item, idx) => {\n            msgs.push(item);\n            item.isSenderMe() && my_msgs++;\n        });\n        if (this.account.server_features.get(Strophe.NS.REWRITE) || this.model.get('group_chat')) {\n            let dfd = new $.Deferred();\n            dfd.done(() => {\n                utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), xabber.getQuantityString(\"delete_message_question\", msgs.length),\n                    dialog_options, {ok_button_text: xabber.getString(\"delete\")}).done((res) => {\n                    if (!res) {\n                        this._clearing_history = false;\n                        messages && messages.length && this.focusOnInput();\n                        return;\n                    }\n                    let symmetric = (this.model.get('group_chat')) ? true : (res.symmetric_deletion ? true : false);\n                    this.resetSelectedMessages();\n                    if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                        this.deleteFilesFromMessages(msgs);\n                    this.model.retractMessages(msgs, this.model.get('group_chat'), symmetric);\n                    messages && messages.length && this.unsetForwardedMessages();\n                });\n            });\n            if (!this.model.get('group_chat') && !this.model.get('saved') && my_msgs == $msgs.length && this.contact && this.contact.domain){\n                if (this.contact.get('server_has_rewrite')){\n                    dialog_options = [{\n                        name: 'symmetric_deletion',\n                        checked: false,\n                        text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                    }];\n                    dfd.resolve();\n                } else {\n                    this.account.connection.disco.info(this.contact.domain, null, (iq) => {\n                        let $rewrite = $(iq).find('feature[var=\"' + Strophe.NS.REWRITE + '\"]');\n                        if ($rewrite.length) {\n                            dialog_options = [{\n                                name: 'symmetric_deletion',\n                                checked: false,\n                                text: xabber.getString(\"dialog_clear_chat_history__option_delete_for_all\")\n                            }];\n                            this.contact.set('server_has_rewrite', true);\n                            dfd.resolve();\n                        } else {\n                            dfd.resolve();\n                        }\n                    });\n                }\n            } else\n                dfd.resolve();\n        }\n        else {\n            utils.dialogs.ask(xabber.getString(\"dialog_delete_messages__header\"), `${xabber.getQuantityString(\"delete_message_question\", msgs.length)}\\n${xabber.getString(\"dialog_clear_chat_history__warning_deletion_not_supported\", [this.account.domain]).fontcolor('#E53935')}`,\n                dialog_options, {ok_button_text: xabber.getString(\"dialog_clear_chat_history__button_delete_locally\")}).done((res) => {\n                if (!res) {\n                    this._clearing_history = false;\n                    messages && messages.length && this.focusOnInput();\n                    return;\n                }\n                this.resetSelectedMessages();\n                if (this.account.get('gallery_token') && this.account.get('gallery_url'))\n                    this.deleteFilesFromMessages(msgs);\n                msgs.forEach((item) => { this.view.removeMessage(item); })\n                messages && messages.length && this.unsetForwardedMessages();\n            });\n        }\n    },\n\n    deleteFilesFromMessages: function (messages) {\n        messages.forEach((item) => {\n            if (!item.isSenderMe())\n                return;\n            item.get('files') && _.isArray(item.get('files')) && item.get('files').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('images') && _.isArray(item.get('images')) && item.get('images').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n            item.get('videos') && _.isArray(item.get('videos')) && item.get('videos').forEach((item) => {\n                item && item.id && this.account.deleteFile(item.id,(response) => {\n                    item.id = null;\n                }, (err) => {\n                    item.id = null;\n                });\n            });\n        });\n    },\n\n    pushMessagesToClipboard: function (messages) {\n        let fwd_msg_indicator = \"\",\n            copied_messages = this.createTextMessage(messages, fwd_msg_indicator);\n        utils.copyTextToClipboard(_.unescape(copied_messages));\n    },\n\n    createTextMessage: function (messages, fwd_msg_indicator) {\n        let text_message = \"\";\n        for (let i = 0; i < messages.length; i++) {\n            let $msg = messages[i];\n            if (this.model.get('saved') && $msg.get('forwarded_message') && $msg.get('forwarded_message').length === 1 && !$msg.get('message'))\n                $msg = $msg.get('forwarded_message')[0];\n            let current_date = moment($msg.get('timestamp')).startOf('day'),\n                prev_date = (i) ? moment(messages[i - 1].get('timestamp')).startOf('day') : moment(0),\n                msg_sender = \"\";\n                if (prev_date.format('x') != current_date.format('x')) {\n                    text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + pretty_date(current_date) + '\\n';\n                }\n                msg_sender = $msg.isSenderMe() ? this.account.get('name') : ($msg.get('user_info') && $msg.get('user_info').nickname || (this.account.contacts.get($msg.get('from_jid')) ? this.account.contacts.get($msg.get('from_jid')).get('name') : $msg.get('from_jid')));\n                text_message += (fwd_msg_indicator.length ? fwd_msg_indicator + ' ' : \"\") + \"[\" + utils.pretty_time($msg.get('timestamp')) + \"] \" + msg_sender + \":\\n\";\n                fwd_msg_indicator.length && (text_message += fwd_msg_indicator);\n                let original_message = _.unescape(($msg.get('mutable_content') && $msg.get('mutable_content').find(ref => ref.type === 'groupchat')) ? $msg.get('original_message').slice($msg.get('mutable_content').find(ref => ref.type === 'groupchat').end) : $msg.get('original_message'));\n                fwd_msg_indicator.length && (original_message = original_message.replace(/\\n/g, '\\n&gt; '));\n                (fwd_msg_indicator.length && original_message.indexOf('&gt;') !== 0) && (text_message += ' ');\n                (original_message = _.unescape(original_message.replace(/\\n&gt; &gt;/g, '\\n&gt;&gt;')));\n                text_message += _.escape(original_message) + '\\n';\n        }\n        return text_message.trim();\n    },\n\n    replyMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        this.setForwardedMessages(msgs);\n    },\n\n    forwardMessages: function () {\n        if (!this.model.get('active'))\n            return;\n        let $msgs = this.content_view.$('.chat-message.selected'),\n            msgs = [];\n        $msgs.each((idx, item) => {\n            let msg = this.messages_arr.get(item.dataset.uniqueid);\n            if (msg) {\n                if (this.model.get('saved') && msg.get('forwarded_message') && msg.get('forwarded_message').length && !msg.get('message')) {\n                    msgs = msgs.concat(msg.get('forwarded_message'));\n                } else\n                    msgs.push(msg);\n            }\n        });\n        this.resetSelectedMessages();\n        if (!xabber.forward_panel)\n            xabber.forward_panel = new xabber.ForwardPanelView({ model: xabber.opened_chats });\n        xabber.forward_panel.open(msgs, this.account);\n    },\n\n    showChatNotification: function (message, is_colored) {\n        if (!this.view.$('.chat-notification').hasClass('msgs-counter') && !this.view.$('.chat-notification').hasClass('encryption-warning')) {\n            this.view.$('.chat-notification').switchClass('hidden', !message).text(message)\n                .switchClass('text-color-300', is_colored);\n        }\n    }\n});\n\nxabber.ChatHeadContainer = xabber.Container.extend({\n    className: 'chat-head-container panel-head noselect'\n});\n\nxabber.ChatBodyContainer = xabber.Container.extend({\n    className: 'chat-body-container',\n\n    // TODO: refactor CSS and remove this\n    updateHeight: function () {\n        let bottom_height = xabber.chat_bottom.$el.height() + parseInt(xabber.chat_bottom.$el.css('bottom'));\n        if (bottom_height) {\n            let current_bottom = parseInt(this.$el.css('bottom'));\n            this.$el.css({bottom: bottom_height});\n            if (this.view) {\n                this.view.updateScrollBar();\n                (bottom_height != current_bottom) && !this.view.isScrolledToBottom() && this.view.scrollTo(this.view.ps_container[0].scrollTop + (bottom_height - current_bottom));\n            }\n        }\n    }\n});\n\nxabber.NotificationsPlaceholder = xabber.BasicView.extend({\n    className: 'notifications-placeholder',\n    events: {\n        \"click .btn-request-notifications\": \"requestNotifications\",\n        \"click .mdi-close\": \"close\"\n    },\n\n    _initialize: function (options) {\n        this.$el.html(`${xabber.getString(\"desktop_notifications__alert_enable__text\", [constants.CLIENT_NAME])} <span class=\"btn-request-notifications\">${xabber.getString(\"desktop_notifications__alert_enable__link_text\")}</span><button class=\"btn-request-notifications btn-flat btn-dark btn-main\">${xabber.getString(\"chat_allow\")}</button>`);\n        this.$el.append($('<i/>').addClass('mdi mdi-22px mdi-close'));\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n    },\n\n    requestNotifications: function () {\n        window.Notification.requestPermission((permission) => {\n            xabber._cache.save({'notifications': (permission === 'granted'), 'ignore_notifications_warning': true});\n            this.close();\n        });\n    },\n\n    onUpdatedScreen: function () {\n        if (!xabber.notifications_placeholder)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    close: function () {\n        xabber._cache.save('ignore_notifications_warning', true);\n        this.remove();\n        xabber.notifications_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.ChatBottomContainer = xabber.Container.extend({\n    className: 'chat-bottom-container'\n});\n\nxabber.ChatPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap chat-placeholder-wrap noselect',\n    template: templates.chat_placeholder\n});\n\nxabber.ChatSettings = Backbone.ModelWithStorage.extend({\n    defaults: {\n        last_emoji: [],\n        muted: [],\n        archived: [],\n        group_chat: [],\n        cached_avatars: [],\n        group_chat_members_lists: []\n    },\n\n    getLastEmoji: function () {\n        return _.clone(this.get('last_emoji'));\n    },\n\n    updateLastEmoji: function (emoji) {\n        let last_emoji_icons = _.clone(this.get('last_emoji'));\n        if (last_emoji_icons.length > 0) {\n            let index = last_emoji_icons.indexOf(emoji);\n            if (index != -1)\n                last_emoji_icons.splice(index, 1);\n            last_emoji_icons.push(emoji);\n            while (last_emoji_icons.length > 7)\n                last_emoji_icons.shift();\n        }\n        else\n            last_emoji_icons.push(emoji);\n        this.save('last_emoji', last_emoji_icons);\n    },\n\n    updateMutedList: function (jid, muted) {\n        let muted_list = _.clone(this.get('muted')),\n            index = muted_list.indexOf(jid);\n        if (muted && index < 0) {\n            muted_list.push(jid);\n        }\n        if (!muted && index >= 0) {\n            muted_list.splice(index, 1);\n        }\n        this.save('muted', muted_list);\n    },\n\n    updateArchiveChatsList: function (jid, archived) {\n        let archived_list = _.clone(this.get('archived')),\n            index = archived_list.indexOf(jid);\n        if (archived && index < 0) {\n            archived_list.push(jid);\n        }\n        if (!archived && index >= 0) {\n            archived_list.splice(index, 1);\n        }\n        this.save('archived', archived_list);\n    },\n\n    updateGroupChatsList: function (jid, group_chat) {\n        let group_chat_list = _.clone(this.get('group_chat')),\n            index = group_chat_list.indexOf(jid);\n        if (group_chat && index < 0) {\n            group_chat_list.push(jid);\n        }\n        if (!group_chat && index >= 0) {\n            group_chat_list.splice(index, 1);\n        }\n        this.save('group_chat', group_chat_list);\n    },\n\n    updateCachedAvatars: function (id, hash, avatar) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            member = avatar_list.indexOf(avatar_list.find(member => member.id === id));\n        if (member != -1) {\n            avatar_list.splice(member, 1);\n        }\n        avatar_list.push({id: id, avatar_hash: hash, avatar_b64: avatar});\n        this.save('cached_avatars', avatar_list);\n    },\n\n    getAvatarInfoById: function (id) {\n        let avatar_list = _.clone(this.get('cached_avatars')),\n            result = avatar_list.find(member => member.id === id);\n        return result;\n    },\n\n    getB64Avatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_b64;\n        else\n            return;\n    },\n\n    getHashAvatar: function (id) {\n        let result = this.getAvatarInfoById(id);\n        if (result)\n            return result.avatar_hash;\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    this.chat_settings = new xabber.ChatSettings({id: 'chat-settings'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + this.get('jid'),\n        fetch: 'after'\n    });\n    this.messages = new xabber.Messages(null, {account: this});\n    this.forwarded_messages = new xabber.Messages(null, {account: this});\n    this.pinned_messages = new xabber.Messages(null, {account: this});\n\n    this.chats = new xabber.AccountChats(null, {account: this});\n});\n\nxabber.Account.addConnPlugin(function () {\n    let timestamp = this.last_msg_timestamp || this.disconnected_timestamp;\n    this.chats.registerMessageHandler();\n    this.chats.each((chat) => {\n        if (!this.connection.do_synchronization) {\n            if (chat.messages.length)\n                chat.trigger('get_missed_history', timestamp);\n            else\n                chat.trigger('load_last_history');\n        }\n    });\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.sendPresence();\n\n    this.connection.deleteTimedHandler(this._get_msg_handler);\n    this._get_msg_handler = this.connection.addTimedHandler(60000, () => {\n        if (this.connection && !this.connection.handlers.find(h => !h.ns && !h.options.encrypted && h.name === 'message')) {\n            let last_msg_timestamp = this.last_msg_timestamp;\n            this.chats.registerMessageHandler();\n            this.roster && this.roster.syncFromServer({stamp: last_msg_timestamp * 1000}, false, true);\n        }\n        return true;\n    });\n    if (_.isUndefined(this.settings.get('omemo')) && !this.omemo_enable_placeholder) {\n        this.omemo_enable_placeholder = new xabber.OMEMOEnablePlaceholder({account: this});\n    }\n}, true, true);\n\nxabber.Account.addFastConnPlugin(function () {\n    this.getVCard();\n    if (!(this.auth_view && this.auth_view.data.get('authentication')))\n        this.trigger('ready_to_get_roster');\n}, true, true);\n\nxabber.once(\"start\", function () {\n    [\"keydown\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return !((e.ctrlKey || e.metaKey) && e.keyCode == constants.KEY_SHIFT || e.shiftKey && e.keyCode == constants.KEY_CTRL || e.keyCode == constants.KEY_SHIFT);\n            }\n        });\n    });\n    [\"keyup\"].forEach((event) => {\n        window.addEventListener(event, (e) => {\n            document.onselectstart = function() {\n                return true;\n            }\n        });\n    });\n    this.chats = new this.Chats;\n    this.chats.addCollection(this.opened_chats = new this.OpenedChats);\n    this.chats.addCollection(this.closed_chats = new this.ClosedChats);\n    this.chats.registerQuillEmbeddedsTags();\n\n    this.chats_view = this.left_panel.addChild('chats',\n            this.ChatsView, {model: this.opened_chats});\n    this.chat_head = this.right_panel.addChild('chat_head',\n            this.ChatHeadContainer);\n    this.chat_body = this.right_panel.addChild('chat_body',\n            this.ChatBodyContainer);\n    this.chat_bottom = this.right_panel.addChild('chat_bottom',\n            this.ChatBottomContainer);\n    this.chat_placeholder = this.right_panel.addChild('chat_placeholder',\n            this.ChatPlaceholderView);\n\n    this.on(\"add_group_chat\", function (attrs) {\n        if (!this.add_group_chat_view)\n            this.add_group_chat_view = new this.AddGroupChatView();\n        this.add_group_chat_view.show(attrs);\n    }, this);\n\n    this.on(\"change:focused\", function () {\n        if (this.get('focused')) {\n            let view = this.chats_view.active_chat;\n            if (view && view.model.get('display')) {\n                view.content.readMessages();\n                if (view.model.get('is_accepted') !== false)\n                    view.content.bottom.focusOnInput();\n            }\n        }\n    }, this);\n\n    this.on(\"show_group_chats\", function () {\n        this.chats_view.showGroupChats();\n    }, this);\n\n    this.on(\"show_chats\", function () {\n        this.chats_view.showChats();\n    }, this);\n\n    this.on(\"show_all_chats\", function () {\n        this.chats_view.showAllChats();\n    }, this);\n\n    this.on(\"show_account_chats\", function (ev, account) {\n        this.chats_view.showChatsByAccount(account);\n    }, this);\n\n    this.on(\"show_archive_chats\", function () {\n        this.chats_view.showArchiveChats();\n    }, this);\n\n    this.on(\"clear_search\", function () {\n        this.contacts_view.clearSearch();\n        this.chats_view.clearSearch();\n    }, this);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.searching,\n    utils = env.utils,\n    $ = env.$,\n    $iq = env.$iq,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images;\n\nxabber.DiscoveringView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.searching_wide,\n    ps_selector: '.chats-list-wrap',\n    ps_settings: {\n        wheelPropagation: true,\n        theme: 'existing-chats-list'\n    },\n\n    avatar_size: constants.AVATAR_SIZES.SYNCHRONIZE_ACCOUNT_ITEM,\n\n    events: {\n        \"click .account-field .dropdown-content\": \"selectAccount\",\n        \"click .btn-cancel\": \"close\",\n        \"click .btn-search\": \"search\",\n        \"click .existing-chat-wrap\": \"getChatProperties\",\n        \"keyup .search-input\": \"keyUp\"\n    },\n\n    _initialize: function () {\n        this.data.on(\"change:color\", this.colorUpdated, this);\n        this.$('.searching-properties-field .dropdown-button').on('click', () => {\n            this.toggleProperties();\n        });\n    },\n\n    render: function (options) {\n        this.endDiscovering();\n        this.data.set('color','#9E9E9E');\n        options || (options = {});\n        let accounts = xabber.accounts.connected,\n            jid = options.jid || '';\n        this.$('.single-acc').showIf(accounts.length === 1);\n        this.$('.multiple-acc').hideIf(accounts.length === 1);\n        this.$('.account-field .dropdown-content').empty();\n        _.each(accounts, (account) => {\n            this.$('.account-field .dropdown-content').append(\n                this.renderAccountItem(account));\n        });\n        if (accounts.length)\n            this.bindAccount(accounts[0]);\n        this.$('#select-searching-properties .account-field .dropdown-button').dropdown({\n            inDuration: 100,\n            outDuration: 100,\n            constrainWidth: false,\n            hover: false,\n            alignment: 'left'\n        });\n        return this;\n    },\n\n    toggleProperties: function () {\n        let is_visible = this.isPropertiesVisible();\n        this.$('#select-searching-properties').slideToggle(\"fast\");\n        this.$('.arrow').switchClass('mdi-chevron-up', !is_visible);\n        this.$('.arrow').switchClass('mdi-chevron-down', is_visible);\n    },\n\n    isPropertiesVisible: function () {\n        if (this.$('#select-searching-properties').css('display') === 'none')\n            return false;\n        else\n            return true;\n    },\n\n    discover: function () {\n        let domain = _.escape(this.$('.search-input.simple-input-field').val());\n        if (domain) {\n            if (this.isPropertiesVisible())\n                this.toggleProperties();\n            this.$('.searching-more').html(\"\");\n            let searching_title = this.$('#searching_property_title').val(),\n                searching_sort_by = this.$('#searching_property_sort_by').val();\n            this.$('.searching-result-wrap .preloader-wrapper').show();\n            this.searchExistingGroupChats(domain);\n        }\n    },\n\n    setColor: function () {\n        if (this.account) {\n            let color = this.account.settings.get('color');\n            this.data.set('color', color);\n        }\n    },\n\n    colorUpdated: function () {\n        let color = this.data.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    keyUp: function (ev) {\n        if (this.$('.search-input').val() === \"\")\n            this.$('.btn-search').addClass('none-active');\n        else\n            this.$('.btn-search').removeClass('none-active');\n        if (ev.keyCode === constants.KEY_ENTER)\n            this.discover();\n    },\n\n    searchExistingGroupChats: function (domain) {\n        this.account.connection.disco.items((domain), null, this.getGroupchatService.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    onDiscoveringError: function (error) {\n        this.endDiscovering();\n        this.$('.chats-list').html(\"\");\n        this.$('.result-string').text(xabber.getString(\"discover__no_matches\", [$(error).attr('from')]));\n    },\n\n    endDiscovering: function () {\n        this.$('.searching-result-wrap .preloader-wrapper').hide();\n    },\n\n    getGroupchatService: function (stanza) {\n        $(stanza).find('query item').each((idx, item) => {\n            if ($(item).attr('node') === Strophe.NS.GROUP_CHAT) {\n                let jid = $(item).attr('jid');\n                this.getGroupchatFeatures(jid);\n            }\n        });\n        this.endDiscovering();\n    },\n\n    getGroupchatFeatures: function (jid) {\n        let iq = $iq({type: 'get', to: jid})\n            .c('query', {xmlns: Strophe.NS.DISCO_INFO, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, this.getServerInfo.bind(this), this.onDiscoveringError.bind(this));\n    },\n\n    getServerInfo: function (stanza) {\n        $(stanza).find('query identity').each((idx, item) => {\n            let $item = $(item);\n            if (($item.attr('category') === 'conference') && ($item.attr('type') === 'server')) {\n                let jid = $(stanza).attr('from');\n                this.getChatsFromSever(jid);\n            }\n        });\n    },\n\n    getChatsFromSever: function (jid) {\n        let iq = $iq({type: 'get', to: jid}).c('query', {xmlns: Strophe.NS.DISCO_ITEMS, node: Strophe.NS.GROUP_CHAT});\n        this.account.sendIQFast(iq, (stanza) => {\n            this.$('.chats-list').html(\"\");\n            $(stanza).find('query item').each((idx, item) => {\n                let $item = $(item),\n                    name = $item.attr('name'),\n                    jid = $item.attr('jid'),\n                    $chat_item_html = $(templates.existing_groupchat_item({name: name, jid: jid, color: this.account.settings.get('color')})),\n                    avatar = Images.getDefaultAvatar(name);\n                $chat_item_html.find('.circle-avatar').setAvatar(avatar, 32);\n                $chat_item_html.appendTo(this.$('.searching-result-wrap .chats-list'));\n            });\n            this.$('.result-string').text(xabber.getString(\"discover__text_discovered_groups\", [$(stanza).find('query item').length, this.account.get('jid')]));\n        });\n    },\n\n    bindAccount: function (account) {\n        this.account = account;\n        this.$('.account-field .dropdown-button .account-item-wrap')\n            .replaceWith(this.renderAccountItem(account));\n        this.setColor();\n    },\n\n    renderAccountItem: function (account) {\n        let $item = $(templates.searching_account_item({jid: account.get('jid')}));\n        return $item;\n    },\n\n    selectAccount: function (ev) {\n        let $item = $(ev.target).closest('.account-item-wrap'),\n            account = xabber.accounts.get($item.data('jid'));\n        this.bindAccount(account);\n    },\n\n    getChatProperties: function (ev) {\n        let $target = $(ev.target).closest('.existing-chat-wrap'),\n            jid = $target.data('jid'),\n            name = $target.data('name'),\n            request_iq = $iq({type: 'get', to: jid})\n                .c('query', {xmlns: Strophe.NS.DISCO_INFO});\n        this.account.sendIQFast(request_iq, (iq_response) => {\n            let $iq_response = $(iq_response),\n                description = $iq_response.find('field[var=\"description\"] value').text(),\n                privacy = $iq_response.find('field[var=\"anonymous\"] value').text(),\n                membership = $iq_response.find('field[var=\"model\"] value').text(),\n                chat_properties = {jid: jid, name: name, privacy: privacy, description: description, membership: membership};\n            this.more_info_view = this.addChild('groupchat_properties', xabber.MoreInfoView,\n                {model: this, chat_properties: chat_properties, el: this.$('.searching-more')[0]})\n        });\n    }\n});\n\nxabber.MoreInfoView = xabber.BasicView.extend({\n    className: 'searching-main noselect',\n    template: templates.existing_groupchat_details_view,\n\n    events: {\n        \"click .btn-join-chat\": \"joinChat\"\n    },\n\n    _initialize: function (options) {\n        this.account = this.model.account;\n        this.chat_properties = options.chat_properties;\n        this.$el.html(this.template(this.chat_properties));\n    },\n\n    render: function (options) {\n\n    },\n\n    joinChat: function () {\n        let contact = this.account.contacts.mergeContact(this.chat_properties.jid);\n        contact.set('group_chat', true);\n        contact.acceptRequest();\n        contact.pushInRoster(null, () => {\n            contact.askRequest();\n            contact.getMyInfo();\n            contact.sendPresent();\n        });\n        contact.trigger(\"open_chat\", contact);\n    }\n});\n\nxabber.Searching = Backbone.Model.extend({\n\n    initialize: function (options) {\n        this.account = options.account;\n    },\n\n    getSearchingFields: function () {\n        let this_domain = 'xabber.com',//this.account.connection && this.account.connection.domain,\n            iq_get = $iq({type: 'get', to: 'index.' + this_domain}).c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'});\n        this.account.sendIQFast(iq_get, this.parseSearchingFields);\n    },\n\n    parseSearchingFields: function (iq_result) {\n        let $result = $(iq_result),\n            $fields = $result.find(`x[xmlns = \"${Strophe.NS.XDATA}\"] field`),\n            supported_fields = [];\n        $fields.each((idx, field) => {\n            let $field = $(field);\n            if ($field.attr('type') !== 'hidden')\n                supported_fields.push({var: $field.attr('var'), label: $field.attr('label')});\n        });\n    },\n});\n\nxabber.LocalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n    }\n});\n\nxabber.GlobalSearchingView = xabber.BasicView.extend({\n    className: '',\n    // template:,\n\n    events: {\n\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.indexed_chats = [];\n    },\n\n    render: function () {\n\n    },\n\n    search: function (query) {\n        this.indexed_chats = [];\n        let iq_search = $iq({to:'index.xabber.com', type: 'set'})\n            .c('query', {xmlns: Strophe.NS.INDEX + '#groupchat'})\n            .c('x', {xmlns: Strophe.NS.XDATA, type: 'form'})\n            .c('field', {var: 'FORM_TYPE', type:'hidden'})\n            .c('value').t(Strophe.NS.INDEX + '#groupchat').up().up();\n        if (query.description)\n            iq_search.c('field', {var: 'description'})\n                .c('value').t(query.description).up().up();\n        if (query.name)\n            iq_search.c('field', {var: 'name'})\n                .c('value').t(query.name).up().up();\n        if (query.model)\n            iq_search.c('field', {var: 'model'})\n                .c('value').t(query.model).up().up();\n        if (query.anywhere)\n            iq_search.c('field', {var: 'anywhere'})\n                .c('value').t(query.anywhere).up().up();\n        this.account.sendIQFast(iq_search, this.onSearched.bind(this));\n    },\n\n    onSearched: function (result) {\n        let $result = $(result),\n            $chats = $($result.find('query item groupchat'));\n        $chats.each((idx, chat) => {\n            let $chat = $(chat),\n                chat_jid = $chat.attr('jid'),\n                attrs = {jid: chat_jid},\n                $properties = $chat.children();\n            $properties.each((idx, property) => {\n                let $property = $(property),\n                    property_name = $property[0].tagName.replace(/-/g, '_'),\n                    property_value = $property.text();\n                _.extend(attrs, {[property_name]: property_value});\n            });\n            this.indexed_chats.push(attrs);\n        });\n    }\n});\n\nxabber.once(\"start\", function () {\n    this.discovering = this.wide_panel.addChild('discovering_main',\n        this.DiscoveringView);\n    /*this.local_searching = new xabber.LocalSearching;\n    this.global_searching = new xabber.GlobalSearching;*/\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nlet env = xabber.env,\n    constants = env.constants,\n    templates = env.templates.mentions,\n    utils = env.utils,\n    $ = env.$,\n    Strophe = env.Strophe,\n    _ = env._,\n    Images = utils.images,\n    pretty_datetime = (timestamp) => { return utils.pretty_datetime(timestamp, (xabber.settings.language == 'ru-RU' || xabber.settings.language == 'default' && xabber.get(\"default_language\") == 'ru-RU') && 'D MMMM YYYY HH:mm:ss')};\n\n\nxabber.Mention = Backbone.Model.extend({\n    defaults: {\n        active: false,\n        display: false,\n        timestamp: 0\n    },\n\n    initialize: function (attrs, options) {\n        this.contact = options.contact;\n        this.message = options.message;\n        this.id = this.message.get('unique_id');\n        this.set('timestamp', this.message.get('timestamp'));\n        this.account = this.contact.account;\n        this.item_view = new xabber.MentionItemView({model: this});\n        this.contact.on(\"destroy\", this.destroy, this);\n        this.message.on(\"change:last_replace_time\", this.onMessageUpdated, this);\n    },\n\n    onMessageUpdated: function () {\n        if (this.message.get('mentions') && this.message.get('mentions').length) {\n            this.message.get('mentions').forEach((mention) => {\n                let mention_target = mention.target || \"\",\n                    id = mention_target.match(/\\?id=\\w*/),\n                    jid = mention_target.match(/\\?jid=.*/);\n                if (id)\n                    mention_target = id[0].slice(4);\n                else if (jid)\n                    mention_target = jid[0].slice(5);\n                else\n                    mention_target = \"\";\n                if (id) {\n                    if (this.contact.my_info) {\n                        if (mention_target === this.contact.my_info.get('id'))\n                            this.item_view.updateLastMessage();\n                        else\n                            this.destroy();\n                    }\n                    else if (this.contact.get('group_chat')) {\n                        if (this._pending_my_info) {\n                            this._pending_my_info.done(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info = null;\n                            });\n                        }\n                        else {\n                            this._pending_my_info = new $.Deferred();\n                            this.contact.getMyInfo(() => {\n                                if (mention_target === this.contact.my_info.get('id'))\n                                    this.item_view.updateLastMessage();\n                                else\n                                    this.destroy();\n                                this._pending_my_info.resolve();\n                            });\n                        }\n                    }\n                } else if (jid && mention_target === this.account.get('jid')) {\n                    this.item_view.updateLastMessage();\n                }\n                else\n                    this.destroy();\n            });\n        } else\n            this.destroy();\n    }\n});\n\nxabber.MentionsBase = Backbone.Collection.extend({\n    model: xabber.Mention\n});\n\nxabber.AccountMentions = xabber.MentionsBase.extend({\n    initialize: function (models, options) {\n        this.account = options.account;\n        this.on(\"add\", this.onMentionAdded, this)\n    },\n\n    onMentionAdded: function (mention) {\n        xabber.mentions.add(mention);\n    }\n});\n\nxabber.Mentions = xabber.MentionsBase.extend({\n    comparator: 'timestamp',\n    initialize: function () {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.MentionsView = xabber.SearchPanelView.extend({\n    className: 'mentions-container container',\n    ps_selector: '.mentions-list-wrap',\n    main_container: '.mentions-list',\n    ps_settings: {theme: 'item-list'},\n    template: templates.mentions_panel,\n\n    _initialize: function () {\n        this.active_mention = null;\n        this.keyup_timeout = null;\n        this.model.on(\"add\", this.onMentionAdded, this);\n        this.model.on(\"change:active\", this.onChangedActiveStatus, this);\n        this.model.on(\"destroy\", this.onMentionRemoved, this);\n        xabber.accounts.on(\"list_changed\", this.updateLeftIndicator, this);\n        this.ps_container.on(\"ps-scroll-y\", this.onScrollY.bind(this));\n        this.$('input').on('input', this.updateSearch.bind(this));\n    },\n\n    render: function (options) {\n        if (!options.right && this.active_mention) {\n            this.active_mention.model.set('active', false);\n            this.active_mention = null;\n        }\n        (options.right !== 'chat' && options.right !== 'contact_details' && options.right !== 'message_context' && options.right !== 'participant_messages' || options.clear_search && options.right === 'chat') && this.clearSearch();\n    },\n\n    onMentionAdded: function (mention) {\n        this.addChild(mention.id, mention.item_view);\n        this.updateMentionPosition(mention);\n    },\n\n    onMentionRemoved: function (mention, options) {\n        options = options || {};\n        if (this.active_mention === this.child(mention.id)) {\n            this.active_mention = null;\n        }\n        this.removeChild(mention.id, options);\n        this.updateScrollBar();\n    },\n\n    selectItem: function (id) {\n        this.clearSearchSelection();\n        let $selection = this.$('.list-item[data-id=\"'+id+'\"]');\n        if ($selection.length) {\n            this.selection_id = id;\n        } else {\n            $selection = this.$('.list-item:visible').first();\n            this.selection_id = $selection.data('id');\n        }\n        $selection.find('.mention-info-wrap').addClass('selected');\n    },\n\n    clearSearchSelection: function (ev) {\n        this.selection_id = null;\n        this.$('.list-item.selected').removeClass('selected');\n        this.$('.list-item .selected').removeClass('selected');\n    },\n\n    onEnterPressed: function (selection) {\n        let view;\n        if (selection.closest('.searched-lists-wrap').length) {\n            this.clearSearch();\n            this.$('.list-item.active').removeClass('active');\n            if (selection.hasClass('chat-item')) {\n                view = xabber.chats_view.child(selection.data('id'));\n                view && view.open({screen: xabber.body.screen.get('name'), clear_search: false});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('roster-contact')) {\n                view = xabber.accounts.get(selection.data('account')).chats.get(xabber.accounts.get(selection.data('account')).contacts.get(selection.data('jid')).hash_id);\n                view && (view = view.item_view);\n                view && xabber.chats_view.openChat(view, {clear_search: false, screen: xabber.body.screen.get('name')});\n                selection.addClass('active');\n            }\n            if (selection.hasClass('message-item')) {\n                selection.click();\n            }\n        }\n        else {\n            selection.find('.mention-info-wrap').click();\n        }\n    },\n\n    replaceMentionItem: function (item, mentions) {\n        let view = this.child(item.id);\n        if (view && item.get('timestamp')) {\n            view.$el.detach();\n            let index = mentions.indexOf(item);\n            if (index === 0) {\n                this.$('.mentions-list').append(view.$el);\n            } else {\n                this.$('.mention-item').eq(-index).before(view.$el);\n            }\n            let $prev_el = view.$el.prev('.mention-item'),\n                $next_el = view.$el.next('.mention-item'),\n                contact_jid = view.$el.data('contact-jid');\n                if ($prev_el.length) {\n                    let prev_contact_jid = $prev_el.data('contact-jid');\n                    if (prev_contact_jid !== contact_jid)\n                        view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n                if ($next_el.length) {\n                    let next_contact_jid = $next_el.data('contact-jid');\n                    if (next_contact_jid === contact_jid) {\n                        $next_el.find('.group-chat-title-wrap').addClass('hidden');\n                    }\n                    else\n                        $next_el.find('.group-chat-title-wrap').removeClass('hidden');\n                }\n                else\n                    view.$el.find('.group-chat-title-wrap').removeClass('hidden');\n        }\n    },\n\n    readAllMentions: function () {\n        xabber.accounts.connected.forEach((account) => {\n            let mentions = _.clone(account.unread_mentions.models);\n            _.each(mentions, ((mention) => {\n                let msgid = mention.message.get('msgid'),\n                    archive_id = mention.message.get('archive_id'),\n                    contact_archive_id = mention.message.get('contact_archive_id'),\n                    chat = account.chats.getChat(mention.contact);\n                mention.message.set('is_unread', false);\n                chat.sendMarker(msgid, 'displayed', archive_id, contact_archive_id);\n            }));\n        });\n    },\n\n    updateLeftIndicator: function (accounts) {\n        this.$el.attr('data-indicator', accounts.connected.length > 1);\n    },\n\n    updateMentionPosition: function (item) {\n        let view = this.child(item.id);\n        if (!view)\n            return;\n        this.replaceMentionItem(item, this.model);\n    },\n\n    onChangedActiveStatus: function (mention) {\n        if (mention.get('active')) {\n            let previous_mention = this.active_mention;\n            this.active_mention = this.child(mention.id);\n            previous_mention && previous_mention.model.set('active', false);\n        }\n    }\n});\n\nxabber.MentionItemView = xabber.BasicView.extend({\n    className: 'mention-item list-item',\n    template: templates.mention_item,\n    avatar_size: constants.AVATAR_SIZES.CHAT_ITEM,\n\n    events: {\n        'click .mention-info-wrap': 'openByClick'\n    },\n\n    _initialize: function () {\n        this.account = this.model.account;\n        this.contact = this.model.contact;\n        this.$el.attr('data-id', this.model.id);\n        this.$el.attr('data-contact-jid', this.contact.get('jid'));\n        this.updateContactName();\n        this.updateGroupChat();\n        this.updateName();\n        this.updateLastMessage();\n        this.updateAvatar();\n        this.updateColorScheme();\n        this.updateCounter();\n        this.updateIcon();\n        this.model.on(\"change:active\", this.updateActiveStatus, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.contact.on(\"change:name\", this.updateContactName, this);\n        this.contact.on(\"change:group_chat\", this.updateGroupChat, this);\n        this.model.message.on(\"change:is_unread\", this.updateCounter, this);\n    },\n\n    updateName: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            contact_name = this.contact.get('name');\n        if (user_info)\n            contact_name = user_info.nickname || user_info.jid || user_info.id || this.model.message.get('from_jid');\n        this.$('.chat-title').text(contact_name);\n    },\n\n    updateIcon: function () {\n        this.$('.contact-icon .group-chat-icon').hideIf(!this.contact.get('group_chat') && this.contact.get('jid') === this.account.domain);\n        this.$('.contact-icon .server-icon').hideIf(this.contact.get('jid') !== this.account.domain);\n    },\n\n    updateContactName: function () {\n        let contact_name = this.contact.get('name');\n        this.$('.group-chat-name').text(contact_name);\n        if (!this.contact.get('group_chat')) {\n            this.updateName();\n            if (!this.contact.get('photo_hash')) {\n                let default_avatar = Images.getDefaultAvatar(contact_name);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n    },\n\n    updateGroupChat: function () {\n        this.updateIcon();\n    },\n\n    updateCounter:function () {\n        let unread = this.model.message.get('is_unread');\n        this.$('.msg-counter').switchClass('hidden', !unread);\n        if (unread)\n            this.account.unread_mentions.add(this.model);\n        else\n            this.account.unread_mentions.remove(this.model);\n        xabber.toolbar_view.recountAllMessageCounter();\n    },\n\n    updateLastMessage: function () {\n        let msg = this.model.message;\n        if (!msg)\n            return;\n        let msg_time = msg.get('time'),\n            timestamp = msg.get('timestamp'),\n            forwarded_message = msg.get('forwarded_message'),\n            msg_files = msg.get('files') || [],\n            msg_images = msg.get('images') || [],\n            msg_locations = msg.get('locations') || [],\n            msg_text = (forwarded_message) ? (msg.get('message') || xabber.getString(\"forwarded_messages_count\", forwarded_message.length).italics()) : msg.getText();\n        msg.get('videos') && msg.get('videos').length && (msg_files = msg_files.concat(msg.get('videos')));\n        this.model.set({timestamp: timestamp});\n        if (msg_files.length || msg_images.length || msg_locations.length) {\n            let $colored_span = $('<span class=\"text-color-500\"/>');\n            if (msg_files.length && msg_images.length)\n                msg_text = $colored_span.text(xabber.getString(\"recent_chat__last_message__attachments\", [msg_files.length + msg_images.length]));\n            else {\n                if (msg_files.length > 0) {\n                    let total_size = 0;\n                    msg_files.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__files\", msg_files.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_images.length > 0) {\n                    let total_size = 0;\n                    msg_images.forEach((f) => {total_size+=Number(f.size)});\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__images\", msg_images.length) + (total_size > 0 ? `, ${utils.pretty_size(total_size)}` : \"\"));\n                }\n                if (msg_locations.length > 0) {\n                    msg_text = $colored_span.text(xabber.getQuantityString(\"recent_chat__last_message__locations\", msg_locations.length));\n                }\n            }\n            this.$('.last-msg').text(\"\").append(msg_text);\n        }\n        else {\n            this.$('.last-msg').text(msg_text);\n        }\n        this.$el.emojify('.last-msg', {emoji_size: 16});\n        this.$('.last-msg-date').text(utils.pretty_short_datetime(msg_time))\n            .attr('title', pretty_datetime(msg_time));\n    },\n\n    updateActiveStatus: function () {\n        this.$el.find('.mention-info-wrap').switchClass('active', this.model.get('active'));\n    },\n\n    updateAvatar: function () {\n        let message = this.model.message,\n            user_info = message.get('user_info') || message.isSenderMe() && this.contact.my_info && this.contact.my_info.attributes,\n            image;\n        if (user_info) {\n            if (user_info.avatar) {\n                image = user_info.b64_avatar || this.account.chat_settings.getB64Avatar(user_info.id);\n                if (image) {\n                    this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                }\n                else {\n                    let node = Strophe.NS.PUBSUB_AVATAR_DATA + '#' + user_info.id;\n                    this.contact.getAvatar(user_info.avatar, node, (data_avatar) => {\n                        image = data_avatar;\n                        this.account.chat_settings.updateCachedAvatars(user_info.id, user_info.avatar, data_avatar);\n                        this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n                    }, () => {\n                        let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                        this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n                    });\n                }\n            }\n            else {\n                let default_avatar = Images.getDefaultAvatar(user_info.nickname || user_info.jid || user_info.id);\n                this.$('.circle-avatar').setAvatar(default_avatar, this.avatar_size);\n            }\n        }\n        else {\n            image = this.contact.cached_image;\n            this.$('.circle-avatar').setAvatar(image, this.avatar_size);\n        }\n    },\n\n    openByClick: function () {\n        let message = this.model.message,\n            chat = this.account.chats.getChat(this.contact);\n        this.model.message.set('is_unread', false);\n        chat.sendMarker(message.get('origin_id'), 'displayed', message.get('stanza_id'), message.get('contact_stanza_id'));\n        this.model.set('active', true);\n        this.contact.trigger(\"open_mention\", this.contact, message.get('unique_id'));\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    }\n\n});\n\nxabber.MentionsPlaceholderView = xabber.BasicView.extend({\n    className: 'placeholder-wrap mentions-placeholder-wrap noselect',\n    template: templates.mentions_placeholder\n});\n\nxabber.Account.addInitPlugin(function () {\n   this.mentions = new xabber.AccountMentions(null, {account: this});\n   this.unread_mentions = new xabber.Mentions(null, {account: this});\n});\n\nxabber.once(\"start\", function () {\n    this.mentions = new this.Mentions;\n    this.mentions_view = this.left_panel.addChild('mentions',\n        this.MentionsView, {model: this.mentions});\n    this.mentions_placeholder = this.right_panel.addChild('mentions_placeholder',\n        this.MentionsPlaceholderView);\n}, xabber);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    $ = env.$;\n\nxabber.once(\"start\", function () {\n    $(window).on(\"keydown\", (ev) => {\n        if ((ev.ctrlKey || ev.metaKey) && ev.keyCode == constants.KEY_SHIFT || ev.shiftKey && ev.keyCode == constants.KEY_CTRL) {\n            this.shift_pressed = null;\n            this.shiftctrl_pressed = true;\n            ev.preventDefault();\n        } else if (ev.keyCode == constants.KEY_SHIFT) {\n            this.shift_pressed = true;\n            ev.preventDefault();\n        }\n        let attrs = xabber.body.screen.attributes;\n        if (ev.keyCode === constants.KEY_ESCAPE && !xabber.body.screen.get('right_contact')) {\n            if (xabber.body.$el.siblings('#modals').children('.open').length)\n                return;\n            if (attrs.name === 'all-chats' && attrs.right === 'contact_details')\n                attrs.contact.trigger('open_chat', attrs.contact);\n        }\n        if (attrs.chat_item && (attrs.name === 'mentions' || attrs.name === 'contacts' || attrs.name === 'all-chats') && (attrs.right === 'chat' || attrs.right === 'participant_messages' || attrs.right === 'message_context' || attrs.right === 'searched_messages')) {\n            if (!window.$('.message-actions-panel').hasClass('hidden')) {\n                if (!ev.ctrlKey && !ev.metaKey) {\n                    switch (ev.keyCode) {\n                        case 67:\n                            attrs.chat_item.model.trigger('copy_selected_messages');\n                            break;\n                        case 68:\n                            attrs.chat_item.model.trigger('delete_selected_messages');\n                            break;\n                        case 69:\n                            attrs.chat_item.model.trigger('edit_selected_message');\n                            break;\n                        case 70:\n                            attrs.chat_item.model.trigger('forward_selected_messages');\n                            break;\n                        case 80:\n                            attrs.chat_item.model.trigger('pin_selected_message');\n                            break;\n                        case 82:\n                            attrs.chat_item.model.trigger('reply_selected_messages');\n                            break;\n                        case constants.KEY_ESCAPE:\n                            if (!xabber.body.screen.get('right_contact'))\n                                attrs.chat_item.model.trigger('reset_selected_messages');\n                            break;\n                    }\n                    ev.preventDefault();\n                }\n            }\n        }\n        });\n    $(window).on(\"keyup\", (ev) => {\n        if (!(ev.shiftKey && ev.ctrlKey))\n            this.shiftctrl_pressed = null;\n        if (ev.shiftKey && !ev.ctrlKey)\n            this.shift_pressed = true;\n        if (!ev.shiftKey)\n            this.shift_pressed = null;\n    });\n\n    this.updateLayout = function (options) {\n        options || (options = {});\n        if (this.roster_view.isVisible()) {\n            this.updateRosterLayout(options);\n        }\n        xabber.trigger('update_css', options);\n        this.body.$('.ps-container').perfectScrollbar('update');\n    };\n\n    this.updateRosterLayout = function (options) {\n        let width = this.body.$el.width(),\n            is_wide = width >= constants.WIDTH_MEDIUM,\n            is_narrow = width < constants.WIDTH_MEDIUM,\n            is_tiny = width < constants.WIDTH_TINY,\n            expanded = this.roster_view.data.get('expanded'),\n            pinned = this.roster_view.data.get('pinned');\n        this.roster_view.$('.collapsed-wrap').hideIf(expanded);\n        this.roster_view.$('.expanded-wrap').showIf(expanded);\n        this.roster_view.$('.btn-pin').hide();\n        if (is_narrow && pinned) {\n            this.roster_view.data.set({expanded: false, pinned: false});\n            return;\n        }\n        let roster_width,\n            panel_width,\n            left_panel_width,\n            right_panel_width,\n            right_contact_panel_width,\n            chat_bottom_panel_width,\n            toolbar_width = 50,\n            right_contact_panel_styles = {};\n        if (is_wide || !(is_narrow || pinned)) {\n            panel_width = 1536;\n            roster_width = 300;\n        } else if (is_narrow) {\n            panel_width = width - toolbar_width - 20 - 44;\n            roster_width = 250;\n        } else {\n            panel_width = (width - toolbar_width - 20) * 7 / 9;\n            roster_width = (width - toolbar_width - 20) * 2 / 9;\n        }\n        if (!expanded) {\n            roster_width = is_wide ? 48 : 44;\n        }\n        left_panel_width = right_contact_panel_width = 384;\n        right_panel_width = panel_width - (left_panel_width + right_contact_panel_width);\n        chat_bottom_panel_width = '100%';\n        if (is_narrow){\n            right_contact_panel_width = left_panel_width = (panel_width * 0.264) < 288 ? 288 : panel_width * 0.264;\n\n        }\n        if (right_panel_width < 512 ){\n            right_panel_width = panel_width - left_panel_width;\n            this.right_contact_panel_saveable = false;\n            right_contact_panel_styles = {\n                position : 'absolute',\n                right : 0,\n                'z-index' : 499,\n            };\n            if ((right_panel_width - 384) < 128) {\n                right_contact_panel_width = right_panel_width;\n                this.right_contact_panel.$el.removeClass('background-click')\n            }\n            else {\n                right_contact_panel_width = 384\n                this.right_contact_panel.$el.addClass('background-click')\n            }\n        }\n        else {\n            this.right_contact_panel_saveable = true;\n            right_contact_panel_styles = {\n                position : 'static',\n                'z-index' : 0,\n            };\n            this.right_contact_panel.$el.removeClass('background-click')\n\n        }\n        this.right_contact_panel_width = right_contact_panel_width;\n\n        if (!this.body.screen.get('right_contact')) {\n            right_contact_panel_width = 0;\n            right_panel_width = panel_width - left_panel_width;\n        }\n        if (right_panel_width < 768) {\n            chat_bottom_panel_width = right_panel_width;\n        }\n\n        let panel_gap = (width - panel_width) / 2,\n            left_gap = panel_gap - toolbar_width,\n            right_gap = panel_gap - roster_width;\n        this.roster_view.$('.expanded-wrap').switchClass('solid',\n                (!pinned && (!is_wide || right_gap < 0)));\n        right_contact_panel_styles.width = right_contact_panel_width;\n        this.chat_head.$el.switchClass('chat-head-ultra-narrow', right_panel_width <= 650);\n        this.chat_head.$el.switchClass('chat-head-narrow', right_panel_width < 750);\n        this.chat_head.$el.switchClass('chat-head-normal', (right_panel_width < 850 && right_panel_width >= 750));\n        this.chat_head.$el.switchClass('chat-head-normal-wide', (right_panel_width < 1000 && right_panel_width >= 850));\n        this.chat_head.$el.switchClass('chat-head-wide', right_panel_width > 1000);\n        this.main_panel.setCustomCss({\n            width: panel_width,\n        });\n        this.left_panel.setCustomCss({\n            width: left_panel_width,\n        });\n        this.right_panel.setCustomCss({\n            width: right_panel_width,\n        });\n        this.right_contact_panel.setCustomCss(right_contact_panel_styles);\n        this.chat_bottom.setCustomCss({\n            width: chat_bottom_panel_width,\n        });\n        this.roster_view.setCustomCss({width: roster_width});\n    };\n\n    this.on(\"update_layout\", this.updateLayout, this);\n\n    this.body.addScreen('blank', {});\n\n    this.body.addScreen('login', {\n        login: { xmpp_login: null }\n    });\n\n    this.body.addScreen('settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { settings: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('add_account', {\n        blur_overlay: null,\n        toolbar: null,\n        login: null\n    });\n\n    this.body.addScreen('about', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { about: null },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    let path_acc_settings_left = new this.ViewPath('account.settings_left'),\n        path_acc_settings_right = new this.ViewPath('account.settings_right'),\n        path_acc_vcard_edit = new this.ViewPath('account.vcard_edit');\n\n    this.body.addScreen('account_settings', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: {\n                account_settings: {\n                    left: path_acc_settings_left,\n                    right: path_acc_settings_right\n                }\n            },\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.account_settings.patchTree = function (tree, options) {\n        if (options.right === 'vcard_edit') {\n            return {\n                left: path_acc_settings_left,\n                right: path_acc_vcard_edit\n            };\n        }\n    };\n\n\n    let path_chat_head = new this.ViewPath('chat_item.content.head'),\n        path_chat_body = new this.ViewPath('chat_item.content'),\n        path_chat_bottom = new this.ViewPath('chat_item.content.bottom'),\n        path_group_invitation = new this.ViewPath('contact.invitation'),\n        path_enable_view = new this.ViewPath('omemo_item.account.omemo_enable_view'),\n        path_contact_details = new this.ViewPath('contact.details_view'),\n        path_contact_details_right = new this.ViewPath('contact.details_view_right'),\n        path_contact_details_right_encrypted = new this.ViewPath('contact.details_view_right_encrypted'),\n        path_participant_messages = new this.ViewPath('model.messages_view'),\n        path_details_participants = new this.ViewPath('contact.details_view.participants');\n\n    this.body.addScreen('contacts', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { contacts: null },\n            right: { contact_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('search', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            wide: { discovering_main: null},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('mentions', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { mentions: null },\n            right: { mentions_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n    this.body.addScreen('all-chats', {\n        blur_overlay: null,\n        toolbar: null,\n        main: {\n            left: { chats: null },\n            right: { chat_placeholder: null },\n            right_contact: {},\n            placeholders: null\n        },\n        roster: null\n    });\n\n\n    this.right_panel.patchTree = function (tree, options) {\n        if (options.right === undefined)\n            return;\n        if ((options.right === 'message_context') || (options.right === 'participant_messages') || (options.right === 'searched_messages')) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_participant_messages,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'group_invitation') {\n            return { details: path_group_invitation };\n        }\n        if (options.right === 'contact_details') {\n            return { details: path_contact_details };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n        if (options.chat_item) {\n            return {\n                chat_head: path_chat_head,\n                chat_body: path_chat_body,\n                chat_bottom: path_chat_bottom\n            };\n        }\n        if (options.right === 'enable_encryption' || options.omemo_item) {\n            return { details: path_enable_view };\n        }\n    };\n\n\n    this.right_contact_panel.patchTree = function (tree, options) {\n        if (options.right_contact === undefined)\n            return;\n        if (options.right_contact === 'contact_details') {\n            return { details: path_contact_details_right };\n        }\n        if (options.right_contact === 'contact_details_encrypted') {\n            return { details: path_contact_details_right_encrypted };\n        }\n        if (options.details_content === 'participants')\n            return { details_content: path_details_participants };\n    };\n\n    this.body.setScreen('blank');\n\n    // initial synchronization\n    if (this.api_account) {\n        this.api_account.once(\"settings_result\", function (result) {\n            if (result === null && !this.accounts.length) {\n                this.body.setScreen('login');\n            } else if (this.body.isScreen('blank')) {\n                this.body.setScreen('all-chats');\n            }\n        }, this);\n\n        this.api_account.ready.then(this.api_account.start.bind(this.api_account));\n    } else {\n        if (!this.accounts.length)\n            this.body.setScreen('login');\n        else if (this.body.isScreen('blank'))\n            this.body.setScreen('all-chats');\n        xabber.trigger(\"bind_xmpp_accounts\");\n    }\n\n}, xabber);\n\nexport default xabber;","import xabber from \"xabber-core\";\n\nlet env = xabber.env,\n    constants = env.constants,\n    utils = env.utils,\n    $ = env.$,\n    templates = env.templates.base,\n    Strophe = env.Strophe,\n    _ = env._,\n    KeyHelper = env.libsignal.KeyHelper,\n    SignalProtocolAddress = env.libsignal.SignalProtocolAddress,\n    SessionBuilder = env.libsignal.SessionBuilder,\n    SessionCipher = env.libsignal.SessionCipher;\n\nxabber.Peer = Backbone.Model.extend({\n    idAttribute: 'jid',\n\n    initialize: function (attrs, options) {\n        attrs = attrs || {};\n        this.account = options.account;\n        this.devices = {};\n        this.store = this.account.omemo.store;\n        this.fingerprints = new xabber.Fingerprints({model: this});\n        this.updateDevices(attrs.devices);\n        this.set({\n            jid: attrs.jid\n        });\n    },\n\n    updateDevices: function (devices) {\n        if (!devices)\n            return;\n        for (let d in this.devices) {\n            if (!devices[d]) {\n                this.account.omemo.removeSession('session' + this.devices[d].address.toString());\n                delete this.devices[d];\n            }\n        }\n        for (let d in devices) {\n            let device = this.getDevice(d),\n                label = devices[d].label;\n            label && device.set('label', label);\n        }\n    },\n\n    getDevicesNode: async function () {\n        if (!this._pending_devices) {\n            this._pending_devices = true;\n            this._dfd_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getDevicesNode(this.get('jid'), (cb) => {\n                    this.updateDevices(this.account.getConnectionForIQ().omemo.parseUserDevices($(cb)));\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                }, () => {\n                    this._pending_devices = false;\n                    this._dfd_devices.resolve();\n                    resolve();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    encrypt: async function (message) {\n        let enc_promises = [],\n            aes = await utils.AES.encrypt(message),\n            is_trusted = true;\n\n        if (!_.keys(this.devices).length)\n            await this.getDevicesNode();\n        for (let device in this.devices) {\n            enc_promises.push(this.devices[device].encrypt(aes.keydata));\n        }\n\n        for (let device in this.account.omemo.own_devices) {\n            enc_promises.push(this.account.omemo.own_devices[device].encrypt(aes.keydata));\n        }\n\n        let keys = await Promise.all(enc_promises);\n\n        keys = keys.filter(key => key !== null);\n\n        for (let device_id in this.devices) {\n            let device = this.devices[device_id];\n            if (device.get('ik') === null)\n                continue;\n            if (device.get('trusted') === null)\n                is_trusted = 'error';\n            if (is_trusted && device.get('trusted') === undefined)\n                is_trusted = 'none';\n        }\n\n        return {\n            keys: keys,\n            payload: aes.payload,\n            is_trusted: is_trusted\n        };\n    },\n\n    decrypt: async function (deviceId, ciphertext, preKey) {\n        let device = this.getDevice(deviceId);\n\n        return device.decrypt(ciphertext, preKey);\n    },\n\n    getDevice: function (id) {\n        if (!this.devices[id]) {\n            this.devices[id] = new xabber.Device({jid: this.get('jid'), id: id }, { account: this.account, store: this.store});\n        }\n\n        return this.devices[id];\n    }\n});\n\nxabber.Peers = Backbone.Collection.extend({\n    model: xabber.Peer,\n\n    initialize: function (models, options) {\n        this.collections = [];\n        this.on(\"add\", _.bind(this.updateInCollections, this, 'add'));\n        this.on(\"change\", _.bind(this.updateInCollections, this, 'change'));\n    },\n\n    addCollection: function (collection) {\n        this.collections.push(collection);\n    },\n\n    updateInCollections: function (event, contact) {\n        _.each(this.collections, function (collection) {\n            collection.update(contact, event);\n        });\n    }\n});\n\nxabber.Fingerprints = xabber.BasicView.extend({\n    className: 'modal main-modal fingerprints-wrap',\n    template: templates.fingerprints,\n    ps_selector: '.fingerprints-content',\n    ps_settings: {theme: 'item-list'},\n\n    events: {\n        'click .btn-trust': \"trustDevice\",\n        'click .btn-ignore': \"ignoreDevice\",\n        'click .btn-delete': \"deleteDevice\",\n        \"click .set-label + div\": \"editLabel\",\n        'click .btn-cancel': \"close\"\n    },\n\n    _initialize: function () {\n        if (this.model.own_devices) {\n            this.account = this.model.account;\n            this.omemo = this.model;\n            this.jid = this.account.get('jid');\n            this.is_own_devices = true;\n        } else {\n            this.account = this.model.account;\n            this.omemo = this.account.omemo;\n            this.jid = this.model.get('jid');\n        }\n    },\n\n    open: function () {\n        this.omemo = this.account.omemo;\n        let name = \"\";\n        if (this.is_own_devices)\n            name = this.account.get('name');\n        else {\n            let contact = this.account.contacts.get(this.jid);\n            name = contact ? contact.get('name') : this.jid;\n        }\n        this.$('.header').text(xabber.getString('omemo__dialog_fingerprints__header', [name]));\n        this.data.set('visible', true);\n        this.show();\n        this.$('div.fingerprints-content').html(env.templates.contacts.preloader());\n        if (this.is_own_devices)\n            this.renderOwnDevices();\n        else\n            this.renderDevices();\n    },\n\n    renderDevices: function () {\n        this.model.getDevicesNode().then(() => {\n            let devices_count = _.keys(this.model.devices).length;\n            this.updateFingerprints(this.model.devices);\n        });\n        this.updateOwnFingerprint();\n    },\n\n    renderOwnDevices: function () {\n        this.omemo.getMyDevices().then(() => {\n            let devices_count = _.keys(this.model.own_devices).length;\n            this.updateFingerprints(this.model.own_devices);\n            this.updateOwnFingerprint();\n        });\n    },\n\n    render: function () {\n        this.$el.openModal({\n            complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n            }\n        });\n    },\n\n    editLabel: function () {\n        this.$('.set-label').removeClass('hidden');\n        this.$('.set-label').focus();\n        let saveLabel = (ev) => {\n            let label = ev.target.value.trim();\n            this.saveLabel(label);\n        };\n        this.$('.set-label')[0].onblur = saveLabel;\n        this.$('input.set-label')[0].onkeydown = (ev) => {\n            if (ev.keyCode == constants.KEY_ENTER)\n                saveLabel(ev);\n        };\n    },\n\n    saveLabel: function (label) {\n        this.$('.set-label').addClass('hidden');\n        if (label == this.account.settings.get('device_label_text'))\n            return;\n        this.account.settings.save('device_label_text', label);\n        this.account.getConnectionForIQ().omemo.publishDevice(this.omemo.get('device_id'), label, () => {\n            this.updateOwnFingerprint();\n        });\n    },\n\n    updateFingerprints: async function (devices) {\n        let counter = 0,\n            devices_count = _.keys(devices).length,\n            dfd = new $.Deferred(),\n            $container = this.$('div.fingerprints-content');\n        dfd.done((f_count) => {\n            if (!f_count)\n                $container.html($(`<div class=\"empty-table\">${xabber.getString(\"omemo__dialog_fingerprints__text_no_fingerprints\")}</div>`));\n            else\n                this.$('.dropdown-button').dropdown({\n                    inDuration: 100,\n                    outDuration: 100,\n                    constrainWidth: false,\n                    hover: false,\n                    container: this.$('.fingerprints-content')[0],\n                    alignment: 'left'\n                });\n            this.jid == this.account.get('jid') && f_count++;\n            this.$('.additional-info').text(xabber.getQuantityString(\"omemo__dialog_fingerprints__text_devices_count\", f_count, [this.jid, f_count]));\n            $container.find('.preloader-wrapper').detach();\n        });\n        for (let device_id in devices) {\n            if (device_id == this.omemo.get('device_id')) {\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n                continue;\n            }\n            let device = devices[device_id];\n            if (device.get('ik')) {\n                let options = {},\n                    f = device.generateFingerprint(),\n                    fing = (this.omemo.get('fingerprints')[this.jid] || [])[device_id],\n                    is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                counter++;\n                if (devices_count == counter)\n                    dfd.resolve($container.find('div.row').length);\n            }\n            else {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: device.jid, id: device.id}, async (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${device.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        ik = $bundle.find(`ik`).text();\n                    if (ik) {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let options = {},\n                            f = device.generateFingerprint(),\n                            fing = (this.omemo.get('fingerprints')[this.jid] || [])[device.id],\n                            is_trusted = fing ? (fing.fingerprint != f ? 'error' : (fing.trusted ? 'trust' : 'ignore')) : 'unknown';\n                        is_trusted === 'error' && (options.old_fingerprint = fing.fingerprint);\n                        $container.append(this.addRow(device.id, device.get('label'), is_trusted, f, options));\n                    }\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                }, () => {\n                    counter++;\n                    if (devices_count == counter)\n                        dfd.resolve($container.find('div.row').length);\n                });\n            }\n        }\n    },\n\n    updateOwnFingerprint: async function () {\n        this.$('.this-device-content').html(\"\");\n        let omemo = this.account.omemo;\n        if (omemo) {\n            let device = omemo.own_devices[omemo.get('device_id')];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else if (device.get('ik')) {\n                    device.set('fingerprint', device.generateFingerprint());\n                    this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                } else {\n                    device.getBundle().then(({pk, spk, ik}) => {\n                        device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                        let fingerprint = device.generateFingerprint();\n                        if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                            device.set('fingerprint', fingerprint);\n                        this.$('.this-device-content').append(this.addRow(device.id, device.get('label'), null, device.get('fingerprint')));\n                    });\n                }\n            } else {\n                omemo.store.getIdentityKeyPair().then((ik) => {\n                    let pubKey = ik.pubKey;\n                    if (pubKey.byteLength == 33)\n                        pubKey = pubKey.slice(1);\n                    let fingerprint = Array.from(new Uint8Array(pubKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n                    this.$('.this-device-content').append(this.addRow(omemo.get('device_id'), this.account.settings.get('device_label_text'), null, fingerprint));\n                });\n            }\n\n        }\n    },\n\n    close: function () {\n        let deferred = new $.Deferred();\n        this.$el.closeModal({ complete: () => {\n                this.$el.detach();\n                this.data.set('visible', false);\n                deferred.resolve();\n            }});\n        return deferred.promise();\n    },\n\n    trustDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'trust');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'trust').text(xabber.getString('omemo__dialog_fingerprints__button_trust'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, true);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'trusted') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', true);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    ignoreDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            fingerprint = $target.find('.fingerprint').text().replace(/ /g, \"\"),\n            is_trusted = $target.children('.buttons[data-trust]').attr('data-trust'),\n            device_id = Number($target.find('div.device-id').text());\n        $target.children('.buttons[data-trust]').attr('data-trust', 'ignore');\n        $target.find('.trust-item-wrap').children().attr('data-value', 'ignore').text(xabber.getString('omemo__dialog_fingerprints__button_error'));\n        this.omemo.updateFingerprints(this.jid, device_id, fingerprint, false);\n        let device = this.is_own_devices ? this.account.omemo.own_devices[device_id] : this.model.devices[device_id];\n        if (device && is_trusted != 'ignore') {\n            if (is_trusted === 'error')\n                $target.find('.old-fingerprint').detach();\n            device.set('trusted', false);\n            device.is_session_initiated = false;\n            device.preKeys = null;\n            this.account.trigger('trusting_updated');\n        }\n    },\n\n    addRow: function (id, label, trust, fingerprint, options) {\n        options = options || {};\n        let delete_button = this.is_own_devices ? true : false,\n            edit_setting = id == this.omemo.get('device_id'),\n            old_fingerprint = options.old_fingerprint,\n            error;\n        if (fingerprint.match(/.{1,8}/g))\n            fingerprint = fingerprint.match(/.{1,8}/g).join(\" \");\n        else {\n            fingerprint = '';\n            error = xabber.getString(\"omemo__dialog_fingerprints__invalid_fingerprint\");\n            let device = this.is_own_devices ? this.account.omemo.own_devices[id] : this.model.devices[id];\n            if (device && trust != 'ignore') {\n                trust = 'ignore';\n                this.omemo.updateFingerprints(this.jid, id, fingerprint, false);\n                device.set('trusted', false);\n                device.is_session_initiated = false;\n                device.preKeys = null;\n                this.account.trigger('trusting_updated');\n            }\n        }\n        old_fingerprint && (old_fingerprint = old_fingerprint.match(/.{1,8}/g).join(\" \"));\n        let $row = templates.fingerprint_item({id,label,trust,fingerprint, delete_button, edit_setting, old_fingerprint, error});\n        return $row;\n    },\n\n    deleteDevice: function (ev) {\n        let $target = $(ev.target).closest('div.row'),\n            device_id = Number($target.find('div.device-id').text());\n        utils.dialogs.ask(xabber.getString(\"omemo__dialog_delete_device__header\"), xabber.getString(\"omemo__dialog_delete_device__text\", [device_id]), null, { ok_button_text: xabber.getString(\"omemo__dialog_delete_device__button_delete\")}).done((result) => {\n            if (result) {\n                $target.detach();\n                delete this.model.own_devices[device_id];\n                let conn = this.account.getConnectionForIQ();\n                if (conn && conn.omemo) {\n                    delete conn.omemo.devices[device_id];\n                    conn.omemo.publishDevice(null, null, () => {\n                        $target.detach();\n                    });\n                    conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n                }\n            }\n        });\n    },\n});\n\nxabber.Bundle = Backbone.Model.extend({\n    initialize: async function (attrs, options) {\n        this.preKeys = [];\n        this.model = options.model;\n        this.store = options.store;\n        if (this.model.get('identityKey'))\n            this.getIdentity();\n        else\n            await this.generateIdentity();\n       await this.getPreKeys();\n       if (this.model.get('resend_bundle')) {\n           this.model.publishBundle();\n           this.set('resend_bundle', false);\n       }\n    },\n\n    generateIdentity: function () {\n        return Promise.all([\n            KeyHelper.generateIdentityKeyPair(),\n            KeyHelper.generateRegistrationId(),\n        ]).then((result) => {\n            let identityKey = result[0],\n                registrationId = result[1];\n            this.store.put('identityKey', identityKey);\n            this.store.put('registrationId', registrationId);\n            this.cacheIdentity(identityKey, registrationId);\n        });\n    },\n\n    getIdentity: function () {\n        let identityKey = JSON.parse(this.model.get('identityKey')),\n            registrationId = this.model.get('registrationId'),\n            pubKey = utils.fromBase64toArrayBuffer(identityKey.pubKey),\n            privKey = utils.fromBase64toArrayBuffer(identityKey.privKey);\n        this.store.put('identityKey', {pubKey: pubKey, privKey: privKey});\n        this.store.put('registrationId', registrationId);\n    },\n\n    cacheIdentity: function (identityKey, registrationId) {\n        let pubKey = utils.ArrayBuffertoBase64(identityKey.pubKey),\n            privKey = utils.ArrayBuffertoBase64(identityKey.privKey);\n        this.model.save('identityKey', JSON.stringify({pubKey: pubKey, privKey: privKey}));\n        this.model.save('registrationId', registrationId);\n    },\n\n    generatePreKeys: async function () {\n        let preKeysPromises = [];\n        for (let i = 1; i <= constants.PREKEYS_COUNT; i++) {\n            preKeysPromises.push(this.generatePreKey(i));\n        }\n\n        preKeysPromises.push(this.generateSignedPreKey(1));\n\n        return await Promise.all(preKeysPromises);\n    },\n\n    getSignedPreKey: async function () {\n        let spk = this.model.get('signedPreKey');\n        if (spk) {\n            let pubKey = utils.fromBase64toArrayBuffer(spk.keyPair.pubKey),\n                privKey = utils.fromBase64toArrayBuffer(spk.keyPair.privKey),\n                signature = utils.fromBase64toArrayBuffer(spk.signature),\n                keyPair = {pubKey, privKey},\n                keyId = spk.keyId;\n            return {keyPair, keyId, signature};\n        }\n        else {\n            return await this.generateSignedPreKey(this.preKeys[0].keyId || 1);\n        }\n    },\n\n    getPreKeys: async function () {\n        let prekeys = this.model.prekeys.getAll();\n        if (Object.keys(prekeys).length >= constants.MIN_PREKEYS_COUNT) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    priv_pk = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pub_pk = utils.fromBase64toArrayBuffer(prekey.pubKey),\n                    key_pair = {pubKey: pub_pk, privKey: priv_pk};\n                this.preKeys.push({keyId: id, keyPair: key_pair});\n                this.store.storePreKey(id, key_pair);\n            }\n            this.getUsedPreKeys();\n            let spk = await this.getSignedPreKey();\n            this.preKeys.push(spk);\n            this.store.storeSignedPreKey(spk.keyId, spk.keyPair);\n        }\n        else {\n            this.generatePreKeys().then((prekeys) => {\n                this.preKeys = prekeys;\n                this.getUsedPreKeys();\n            });\n        }\n    },\n\n    getUsedPreKeys: function () {\n        let prekeys = this.model.own_used_prekeys.getAll();\n        if (Object.keys(prekeys).length) {\n            for (let p in prekeys) {\n                let pk = prekeys[p],\n                    id = pk.id,\n                    prekey = JSON.parse(pk.key),\n                    privKey = utils.fromBase64toArrayBuffer(prekey.privKey),\n                    pubKey = utils.fromBase64toArrayBuffer(prekey.pubKey);\n                this.store.storePreKey(id, {pubKey, privKey});\n            }\n        }\n    },\n\n    generatePreKey: async function (id) {\n        let preKey = await KeyHelper.generatePreKey(id);\n        this.store.storePreKey(id, preKey.keyPair);\n\n        return preKey;\n    },\n\n    generateSignedPreKey: async function (id) {\n        let identity = await this.store.getIdentityKeyPair();\n        let signedPreKey = await KeyHelper.generateSignedPreKey(identity, id);\n\n        this.store.storeSignedPreKey(id, signedPreKey.keyPair);\n        this.cacheSignedPreKey(signedPreKey);\n\n        return signedPreKey;\n    },\n\n    cacheSignedPreKey: function (spk) {\n        let pubKey = utils.ArrayBuffertoBase64(spk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(spk.keyPair.privKey),\n            signature = utils.ArrayBuffertoBase64(spk.signature),\n            keyPair = {pubKey, privKey},\n            keyId = spk.keyId,\n            converted_spk = {keyPair, keyId, signature};\n        this.model.save('signedPreKey', converted_spk);\n    }\n\n});\n\nxabber.Prekeys = Backbone.Model.extend({\n    initialize: function (options) {\n        this.name = options.name;\n        this.model = options.model;\n    },\n\n    get: function (id) {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys[id];\n    },\n\n    put: function (prekey) {\n        if (!prekey.id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        prekeys[prekey.id] = prekey;\n        this.model.save(this.name, prekeys);\n    },\n\n    getAll: function () {\n        let prekeys = _.clone(this.model.get(this.name));\n        return prekeys;\n    },\n\n    remove: function (id) {\n        if (!id)\n            return;\n        let prekeys = _.clone(this.model.get(this.name));\n        delete prekeys[id];\n        this.model.save(this.name, prekeys);\n    }\n});\n\nxabber.Device = Backbone.Model.extend({\n    initialize: function (attrs, options) {\n        this.account = options.account;\n        this.id = attrs.id;\n        this.jid = attrs.jid;\n        this.store = options.store;\n        this.preKeys = null;\n        this.address = new SignalProtocolAddress(attrs.jid, attrs.id);\n    },\n\n    generateFingerprint: function () {\n        let identityKey = this.get('ik');\n        if (!identityKey)\n            return;\n        if (identityKey.byteLength == 33)\n            identityKey = identityKey.slice(1);\n        return Array.from(new Uint8Array(identityKey)).map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    },\n\n    closeSession: function (reason) {\n        this.account.getConnectionForIQ().omemo.sendOptOut({\n            to: this.jid,\n            reason: reason\n        }, () => {});\n    },\n\n    getBundle: async function () {\n        if (!this._pending_bundle) {\n            this._pending_bundle = true;\n            this._dfd_bundle = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.jid, id: this.id}, (iq) => {\n                    let $iq = $(iq),\n                        $bundle = $iq.find(`item[id=\"${this.id}\"] bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`),\n                        $spk = $bundle.find('spk'),\n                        spk = {id: $spk.attr('id'), key: $spk.text(), signature: $bundle.find('spks').text()},\n                        ik = $bundle.find(`ik`).text();\n                    this.preKeys = [];\n                    if (!ik)\n                        this.set('ik', null);\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        this.preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    this._pending_bundle = false;\n                    let pk = this.getRandomPreKey();\n                    if (!pk) {\n                        this._dfd_bundle.reject();\n                        reject();\n                    }\n                    else {\n                        this._dfd_bundle.resolve({pk, spk, ik});\n                        resolve({pk, spk, ik});\n                    }\n                }, () => {\n                    this.set('ik', null);\n                    this.preKeys = [];\n                    this._dfd_bundle.reject();\n                    this._pending_bundle = false;\n                    reject();\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_bundle.done(({pk, spk, ik}) => {\n                    resolve({pk, spk, ik});\n                });\n                this._dfd_bundle.fail(() => {\n                    reject();\n                });\n            });\n        }\n    },\n\n    getRandomPreKey: function () {\n        let min = 0,\n            max = this.preKeys.length - 1,\n            i = Math.floor(min + Math.random() * (max + 1 - min));\n        return this.preKeys[i];\n    },\n\n    decrypt: async function (cipherText, preKey) {\n        try {\n            let sessionCipher = new SessionCipher(this.store, this.address), plainText;\n\n            if (preKey)\n                plainText = await sessionCipher.decryptPreKeyWhisperMessage(cipherText, 'binary');\n            else {\n                if (!this.store.hasSession(this.address.toString())) {\n                    let session = this.getCachedSession();\n                    if (session)\n                        await this.store.storeSession(this.address.toString(), session);\n                }\n                plainText = await sessionCipher.decryptWhisperMessage(cipherText, 'binary');\n            }\n\n            return plainText;\n        }\n        catch (e) {\n            return null;\n        }\n    },\n\n    getPreKey: function () {\n        let pk = this.account.omemo.used_prekeys.get(String(this.id));\n        return pk;\n    },\n\n    getCachedSession: function () {\n        return this.account.omemo.getSession('session' + this.address.toString());\n    },\n\n    encrypt: async function (plainText) {\n        try {\n            if (this.get('trusted') === false && (this.id != this.account.omemo.get('device_id')))\n                return null;\n            if (!this.store.hasSession(this.address.toString()) || !this.is_session_initiated) { // this.preKeys ??\n                if (this.preKeys && !this.preKeys.length)\n                    return null;\n                this.is_session_initiated = true;\n                let s = await this.initSession();\n                if (!s)\n                    return null;\n            }\n\n            let session = this.getSession(),\n                ciphertext = await session.encrypt(plainText);\n\n            return {\n                preKey: ciphertext.type === 3,\n                ciphertext: ciphertext,\n                deviceId: this.address.getDeviceId()\n            };\n        } catch (e) {\n            console.log('Error:', e);\n            console.warn('Could not encrypt data for device with id ' + this.address.getDeviceId());\n\n            return null;\n        }\n    },\n\n    initSession: async function () {\n        let {pk, spk, ik} = await this.getBundle(),\n            cached_pk = this.getPreKey(),\n            id = this.id;\n        if (cached_pk) {\n            if (!spk || spk && JSON.stringify(spk) == JSON.stringify(cached_pk.spk) && JSON.stringify(ik) == JSON.stringify(cached_pk.ik))\n                pk = cached_pk.pk;\n            else\n                this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        }\n        else\n            this.account.omemo.used_prekeys.put({id, pk, spk, ik});\n        this.set({'pk': utils.fromBase64toArrayBuffer(pk.key), 'ik': utils.fromBase64toArrayBuffer(ik)});\n        this.fingerprint = this.generateFingerprint();\n        let trusted = this.account.omemo.isTrusted(this.jid, id, this.fingerprint);\n        this.set('trusted', trusted);\n        if ((this.id != this.account.omemo.get('device_id')) && trusted === false)\n            return false;\n        this.processPreKey({\n            registrationId: Number(id),\n            identityKey: utils.fromBase64toArrayBuffer(ik),\n            signedPreKey: {\n                keyId: Number(spk.id),\n                publicKey: utils.fromBase64toArrayBuffer(spk.key),\n                signature: utils.fromBase64toArrayBuffer(spk.signature)\n            },\n            preKey: {\n                keyId: Number(pk.id),\n                publicKey: utils.fromBase64toArrayBuffer(pk.key)\n            }\n        });\n        return true;\n    },\n\n    processPreKey: function (preKeyBundle) {\n        this.session = new SessionBuilder(this.store, this.address);\n        return this.session.processPreKey(preKeyBundle);\n    },\n\n    removeSession: function () {\n        this.store.removeSession(this.address.toString());\n        this.sessionCipher = null;\n    },\n\n    getSession: function () {\n        if (!this.sessionCipher) {\n            this.sessionCipher = new SessionCipher(this.store, this.address);\n        }\n        return this.sessionCipher;\n    }\n});\n\nxabber.Omemo = Backbone.ModelWithStorage.extend({\n    defaults: {\n        sessions: {},\n        fingerprints: {},\n        prekeys: {},\n        retract_version: 0,\n        used_prekeys: {},\n        own_used_prekeys: {},\n        device_id: \"\"\n    },\n\n    _initialize: function (attrs, options) {\n        this.on(\"change:device_id\", this.onDeviceIdUpdated, this);\n        this.on(\"destroy\", this.onOmemoDestroyed, this);\n        this.own_devices = {};\n        this.account = options.account;\n        this.peers = new xabber.Peers();\n        if (!this.get('device_id'))\n            this.set('device_id', this.generateDeviceId());\n        this.store = new xabber.SignalProtocolStore();\n        this.account.on('device_published', this.publishBundle, this);\n        this.account.on(\"devices_updated\", this.onOwnDevicesUpdated, this);\n        this.store.on('prekey_removed', this.removePreKey, this);\n        this.store.on('session_stored', this.cacheSession, this);\n    },\n\n    storeSessions: function () {\n        let sessions = this.get('sessions');\n        for (let session_id in sessions) {\n            let session = sessions[session_id];\n            session && this.store.put(session_id, session);\n        }\n    },\n\n    onOmemoDestroyed: function () {\n        if (this.own_devices && Object.keys(this.own_devices).length != 0)\n            this.deleteOwnDevice();\n        this.account.connection.deleteHandler(this._msg_handler);\n    },\n\n    deleteOwnDevice: function () {\n        let device_id = this.get('device_id');\n        delete this.own_devices[device_id];\n        let conn = this.account.getConnectionForIQ();\n        if (conn && conn.omemo) {\n            delete conn.omemo.devices[device_id];\n            conn.omemo.publishDevice(null, null, () => {});\n            conn.omemo.removeItemFromNode(`${Strophe.NS.OMEMO}:bundles`, device_id);\n        }\n    },\n\n    onConnected: function () {\n        this.prekeys = new xabber.Prekeys({name: 'prekeys', model: this});\n        this.used_prekeys = new xabber.Prekeys({name: 'used_prekeys', model: this});\n        this.own_used_prekeys = new xabber.Prekeys({name: 'own_used_prekeys', model: this});\n        this.cached_messages = new xabber.DecryptedMessages({id: 'decrypted-messages'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-decrypted-messages-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        this.bundle = new xabber.Bundle(null, {store: this.store, model: this});\n        this.connection = this.account.connection;\n        this.registerMessageHandler();\n        this.addDevice();\n    },\n\n    getMyDevices: async function () {\n        if (!this._pending_own_devices) {\n            this._pending_own_devices = true;\n            this._dfd_own_devices = new $.Deferred();\n            return new Promise((resolve, reject) => {\n                let conn = this.account.getConnectionForIQ();\n                if (conn) {\n                    if (conn.omemo) {\n                        conn.omemo.getDevicesNode(null, (cb) => {\n                            conn.omemo.devices = conn.omemo.parseUserDevices($(cb));\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        }, function () {\n                            this._pending_own_devices = false;\n                            this._dfd_own_devices.resolve();\n                            resolve();\n                        });\n                    } else\n                        this._pending_own_devices = false;\n                } else\n                    this._pending_own_devices = false;\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                this._dfd_own_devices.done(() => {\n                    resolve();\n                });\n            });\n        }\n    },\n\n    updateFingerprints: function (contact, device_id, fingerprint, trusted) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[contact])\n            fingerprints[contact] = {};\n        let contact_fingerprints = fingerprints[contact];\n        if (_.isArray(contact_fingerprints))\n            contact_fingerprints = {};\n        contact_fingerprints[device_id] = {fingerprint, trusted};\n        fingerprints[contact] = contact_fingerprints;\n        this.save('fingerprints', fingerprints);\n    },\n\n    isTrusted: function (jid, device_id, fingerprint) {\n        let fingerprints = _.clone(this.get('fingerprints'));\n        if (!fingerprints[jid])\n            return;\n        if (!fingerprints[jid][device_id])\n            return;\n        let fing = fingerprints[jid][device_id];\n        if (fing) {\n            if (fing.fingerprint == fingerprint) {\n                if (fing.trusted === undefined)\n                    return;\n                else\n                    return fing.trusted;\n            }\n            else\n                return null;\n        }\n    },\n\n    cacheRetractVersion: function (version) {\n        console.log('version ' + version)\n        this.save('retract_version', version);\n    },\n\n    getRetractVersion: function () {\n        return this.get('retract_version');\n    },\n\n    addDevice: function () {\n        let device_id = this.get('device_id');\n        if (this.connection) {\n            let omemo = this.account.getConnectionForIQ().omemo;\n            if (Object.keys(omemo.devices).length) {\n                let device = omemo.devices[device_id];\n                if (!device || device && (device.label || this.account.settings.get('device_label_text')) && device.label != this.account.settings.get('device_label_text')) {\n                    let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                    omemo.publishDevice(device_id, label, () => {\n                        this.account.trigger('device_published');\n                    });\n                }\n                else\n                    this.account.trigger('device_published');\n            }\n            else\n                omemo.getDevicesNode(null, (cb) => {\n                    this.account.getConnectionForIQ().omemo.devices = omemo.parseUserDevices($(cb));\n                    for (let dev_id in this.account.getConnectionForIQ().omemo.devices) {\n                        if (!this.own_devices[dev_id])\n                            this.own_devices[dev_id] = new xabber.Device({jid: this.account.get('jid'), id: dev_id}, { account: this.account, store: this.store});\n                    }\n                    let device = omemo.devices[device_id];\n                    if (!device || device && (device.label || this.account.settings.get('device_label_text')) && device.label != this.account.settings.get('device_label_text')) {\n                        let label = this.account.settings.get('device_label_text') || `PC, ${utils.getOS()}, ${env.utils.getBrowser()}`;\n                        omemo.publishDevice(device_id, label, () => {\n                            this.account.trigger('device_published');\n                        });\n                    }\n                    else\n                        this.account.trigger('device_published');\n                });\n        }\n    },\n\n    onDeviceIdUpdated: function () {\n        this.save('device_id', this.get('device_id'));\n    },\n\n    generateDeviceId: function () {\n        if (this.account.get('x_token') && this.account.get('x_token').token_uid && this.account.get('x_token').token_uid.length >= 8 && Number(this.account.get('x_token').token_uid.slice(0,8)))\n            return Number(this.account.get('x_token').token_uid.slice(0,8));\n        let min = 1,\n            max = Math.pow(2, 31) - 1,\n            rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    },\n\n    updateMessage: function (attrs, contact) {\n        if (!this.cached_messages)\n            return;\n        this.cached_messages.updateMessage(attrs, contact);\n    },\n\n    registerMessageHandler: function () {\n        this.account.connection.deleteHandler(this._msg_handler);\n        this._msg_handler = this.account.connection.addHandler((message) => {\n            this.receiveMessage(message);\n            return true;\n        }, null, 'message', null, null, null, {'encrypted': true});\n    },\n\n    encrypt: function (contact, message) {\n        let peer = this.getPeer(contact.get('jid')),\n            $msg = $(message.tree()),\n            origin_id = $msg.children('origin-id').attr('id'),\n            plaintext = Strophe.serialize($msg.children('envelope')[0]) || \"\";\n\n        origin_id && this.cached_messages.putMessage(contact, origin_id, plaintext);\n\n        return peer.encrypt(plaintext).then((encryptedMessage) => {\n\n            let encryptedElement = $build('encrypted', {xmlns: Strophe.NS.OMEMO})\n                .c('header', {\n                    sid: this.get('device_id'),\n                    label: this.account.settings.get('device_label_text')\n                }),\n                myKeys = $build('keys', {jid: this.account.get('jid')});\n\n            encryptedElement.c('keys', { jid: contact.get('jid')});\n\n            for (let key of encryptedMessage.keys) {\n                let attrs = {\n                    rid: key.deviceId,\n                    kex: undefined\n                };\n                if (key.preKey) {\n                    attrs.kex = true;\n                }\n\n                if (peer.devices[key.deviceId])\n                    encryptedElement.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n                else\n                    myKeys.c('key', attrs).t(btoa(key.ciphertext.body)).up();\n\n            }\n            encryptedElement.up().cnode(myKeys.tree());\n\n            encryptedElement.up().up()\n                .c('payload').t(utils.ArrayBuffertoBase64(encryptedMessage.payload));\n\n            $(message.tree()).find('envelope').remove();\n\n            message.cnode(encryptedElement.tree());\n            message.up().c('store', {\n                xmlns: 'urn:xmpp:hints'\n            }).up()\n                .c('body').t('This message is encrypted using OMEMO end-to-end encryption.').up();\n\n            return {message: message, is_trusted: encryptedMessage.is_trusted};\n        }).catch((msg) => {\n        });\n    },\n\n    hasChanges: function (o1, o2) {\n        let obj1 = _.clone(o1), obj2 = _.clone(o2);\n        for (let d in obj1) {\n            delete obj2[d];\n        }\n        for (let d in obj2) {\n            delete obj1[d];\n        }\n        return Object.keys(obj1).length || Object.keys(obj2).length;\n    },\n\n    receiveHeadlineMessage: function (message) {\n        if (!this.account.omemo || (this.account.omemo && this.cid != this.account.omemo.cid))\n            return;\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')),\n            node = $message.find('items').attr('node');\n        if ($message.find('event[xmlns=\"' + Strophe.NS.PUBSUB + '#event\"]').length) {\n            if (node == `${Strophe.NS.OMEMO}:devices`) {\n                let devices = this.account.getConnectionForIQ().omemo.parseUserDevices($message);\n                if (from_jid === this.account.get('jid')) {\n                    let has_devices = this.own_devices && Object.keys(this.own_devices).length,\n                        has_changes = this.hasChanges(this.own_devices, devices);\n                    this.account.getConnectionForIQ().omemo.devices = devices;\n                    let device_id = this.get('device_id'),\n                        device = this.account.getConnectionForIQ().omemo.devices[device_id];\n                    if (has_changes) {\n                        this.account.trigger(\"devices_updated\");\n                    }\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                else {\n                    let peer = this.getPeer(from_jid),\n                        has_devices = peer.devices && Object.keys(peer.devices).length,\n                        has_changes = this.hasChanges(peer.devices, devices);\n                    peer.updateDevices(devices);\n                    if (has_devices && has_changes) {\n                        this.account.trigger('trusting_updated');\n                    }\n                }\n                return;\n            }\n            if (node == `${Strophe.NS.OMEMO}:bundles`) {\n                let $item = $message.find('items item').first(),\n                    device_id = $item.attr('id'),\n                    $bundle = $item.children(`bundle[xmlns=\"${Strophe.NS.OMEMO}\"]`), device;\n                if (from_jid === this.account.get('jid')) {\n                    let devices = this.account.getConnectionForIQ().omemo.devices\n                    if (devices && devices[device_id]) {\n                        if (!this.own_devices[device_id])\n                            this.own_devices[device_id] = new xabber.Device({jid: this.account.get('jid'), id: device_id}, { account: this.account, store: this.store});\n                        device = this.own_devices[device_id];\n                    }\n                } else {\n                    let peer = this.peers.get(from_jid);\n                    if (peer) {\n                        device = peer.devices[device_id];\n                    }\n                }\n                if (device) {\n                    let ik = $bundle.find(`ik`).text(),\n                        device_ik = device.get(`ik`), preKeys = [];\n                    if (!ik) {\n                        device.set('ik', null);\n                        return;\n                    }\n                    $bundle.find('prekeys pk').each((i, pk) => {\n                        let $pk = $(pk);\n                        preKeys.push({id: $pk.attr('id'), key: $pk.text()});\n                    });\n                    device.preKeys = preKeys;\n                    device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                    device.set('fingerprint', device.generateFingerprint());\n                    device_ik && (device_ik = utils.ArrayBuffertoBase64(device_ik));\n                    if (!_.isUndefined(device_ik) && device_ik != ik)\n                        this.account.trigger('trusting_updated');\n                }\n            }\n        }\n    },\n\n    receiveChatMessage: function (message, options, deferred) {\n        options = options || {};\n        let $message = $(message);\n        if ($message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).length) {\n            if ($message.find('result[xmlns=\"' + Strophe.NS.MAM + '\"]').length)\n                _.extend(options, {\n                    is_mam: true,\n                    is_archived: true\n                });\n            if ($message.find('[xmlns=\"' + Strophe.NS.CARBONS + '\"]').length)\n                options.carbon_copied = true;\n\n            let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n                jid = (Strophe.getBareJidFromJid($msg.attr('from')) === this.account.get('jid') ? Strophe.getBareJidFromJid($msg.attr('to')) : Strophe.getBareJidFromJid($msg.attr('from'))) || options.from_jid,\n                contact = this.account.contacts.get(options.conversation ? options.conversation : jid),\n                stanza_id = $msg.children(`stanza-id[by=\"${this.account.get('jid')}\"]`).attr('id'),\n                cached_msg = stanza_id && this.cached_messages.getMessage(contact, stanza_id);\n\n            if (Strophe.getBareJidFromJid($msg.attr('from')) != this.account.get('jid') && options.carbon_copied)\n                return;\n\n            if (cached_msg) {\n                if (!options.replaced) {\n                    options.encrypted = true;\n                    this.getTrusted($message).then((is_trusted) => {\n                        options.is_trusted = is_trusted;\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                        if (options.gallery && deferred)\n                            deferred.resolve($message);\n                        this.account.chats.receiveChatMessage($message[0], options);\n                    });\n                    return;\n                }\n                else if (options.replaced && $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"] header`).attr('sid') == this.get('device_id')) {\n                    options.encrypted = true;\n                    $message.find('body').remove();\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(cached_msg);\n                    let chat = this.account.chats.getChat(contact, 'encrypted');\n                    chat && chat.messages.createFromStanza($message, options);\n                    let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                    if (msg_item) {\n                        msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                        chat && chat.item_view.updateLastMessage(chat.last_message);\n                    }\n                    return;\n                }\n            }\n\n            if (options.replaced) {\n                this.decrypt(message.children('replace').children('message'), options).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                        $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                        let chat = this.account.chats.getChat(contact, 'encrypted');\n                        chat && chat.messages.createFromStanza($message, options);\n                        let msg_item = chat.messages.find(msg => msg.get('stanza_id') == stanza_id || msg.get('contact_stanza_id') == stanza_id);\n                        if (msg_item) {\n                            msg_item.set('last_replace_time', $message.find('replaced').attr('stamp'));\n                            chat && chat.item_view.updateLastMessage(chat.last_message);\n                        }\n                    }\n                });\n            } else {\n                this.getTrusted($message).then((is_trusted) => {\n                    options.is_trusted = is_trusted;\n                    return this.decrypt(message);\n                }).then((decrypted_msg) => {\n                    if (decrypted_msg) {\n                        options.encrypted = true;\n                        stanza_id && this.cached_messages.putMessage(contact, stanza_id, decrypted_msg);\n                        $message.find('body').remove();\n                    }\n                    else {\n                        if (decrypted_msg === null) {\n                            this.account.chats.getChat(contact, 'encrypted').item_view.updateLastMessage();\n                            return;\n                        }\n                        options.not_encrypted = true;\n                        delete options.is_trusted;\n                    }\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).replaceWith(decrypted_msg);\n                    if (options.gallery && decrypted_msg && deferred)\n                        deferred.resolve($message);\n                    else if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                }).catch(() => {\n                    if (options.synced_msg && !options.decryption_retry) {\n                        this.receiveChatMessage($message[0], _.extend(options, {decryption_retry: true}));\n                        return;\n                    }\n                    options.not_encrypted = true;\n                    delete options.is_trusted;\n                    $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).remove();\n                    if (options.gallery && deferred)\n                        deferred.reject();\n                    this.account.chats.receiveChatMessage($message[0], options);\n                });\n            }\n            if (options.gallery && deferred)\n                deferred.reject();\n        }\n        if (options.gallery && deferred)\n            deferred.reject();\n    },\n\n    checkOwnFingerprints: async function () {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                resolve(trust);\n            });\n            if (Object.keys(this.own_devices).length) {\n                counter = Object.keys(this.own_devices).length;\n                for (let device_id in this.own_devices) {\n                    let device = this.own_devices[device_id];\n                    if (device_id == this.get('device_id')) {\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                        continue;\n                    }\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        });\n                    }\n                }\n            }\n            else {\n                this.getMyDevices().then(() => {\n                    this.onOwnDevicesUpdated().then(() => {\n                        counter = Object.keys(this.own_devices).length;\n                        for (let device_id in this.own_devices) {\n                            if (device_id == this.get('device_id')) {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                                continue;\n                            }\n                            let device = this.own_devices[device_id];\n                            if (device.get('fingerprint')) {\n                                let trusted = this.isTrusted(this.account.get('jid'), device.id, device.get('fingerprint'));\n                                if (trusted === undefined && is_trusted !== null)\n                                    is_trusted = undefined;\n                                if (trusted === null)\n                                    is_trusted = null;\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            } else {\n                                counter--;\n                                !counter && dfd.resolve(is_trusted);\n                            }\n                        }\n                    });\n                });\n            }\n        });\n    },\n\n    checkContactFingerprints: function (contact) {\n        return new Promise((resolve, reject) => {\n            let is_trusted = true,\n                peer = this.getPeer(contact.get('jid')),\n                dfd = new $.Deferred(), counter = 0;\n            dfd.done((t) => {\n                let trust = t === null ? 'error' : (t === undefined ? 'none' : t);\n                contact.trigger('update_trusted', trust);\n                resolve(trust);\n            });\n            if (Object.keys(peer.devices).length) {\n                counter = Object.keys(peer.devices).length;\n                for (let device_id in peer.devices) {\n                    let device = peer.devices[device_id];\n                    if (device.get('fingerprint')) {\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else if (device.get('ik')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                        if (trusted === undefined && is_trusted !== null)\n                            is_trusted = undefined;\n                        if (trusted === null)\n                            is_trusted = null;\n                        counter--;\n                        !counter && dfd.resolve(is_trusted);\n                    } else {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null)\n                                is_trusted = null;\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                }\n            } else {\n                peer.getDevicesNode().then(() => {\n                    counter = Object.keys(peer.devices).length;\n                    !counter && dfd.resolve('nil');\n                    for (let device_id in peer.devices) {\n                        let device = peer.devices[device_id];\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            device.set('fingerprint', device.generateFingerprint());\n                            let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                            if (trusted === undefined && is_trusted !== null)\n                                is_trusted = undefined;\n                            if (trusted === null) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                else\n                                    is_trusted = null;\n                            }\n                            counter--;\n                            !counter && dfd.resolve(is_trusted);\n                        }).catch(() => {\n                            counter--;\n                            if (!counter) {\n                                if (Object.keys(peer.devices).length === 1)\n                                    is_trusted = 'nil';\n                                dfd.resolve(is_trusted);\n                            }\n                        });\n                    }\n                });\n\n            }\n        });\n    },\n\n    getTrusted: async function ($message) {\n        let $msg = $message.find(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`).parent(),\n            from_jid = Strophe.getBareJidFromJid($msg.attr('from')),\n            to_jid = Strophe.getBareJidFromJid($msg.attr('to')),\n            contact = this.account.contacts.mergeContact(from_jid === this.account.get('jid') ? to_jid : from_jid);\n\n        let own_trusted = await this.checkOwnFingerprints(),\n            contact_trusted = await this.checkContactFingerprints(contact);\n        if (own_trusted === 'error' || (own_trusted === 'none' && contact_trusted !== 'error')) {\n            return own_trusted;\n        } else if (contact_trusted === 'error' || contact_trusted === 'none') {\n            return contact_trusted;\n        } else {\n            let device_id = $message.find('encrypted header').attr('sid'),\n                peer = this.getPeer(contact.get('jid')),\n                device = peer.devices[device_id];\n            if (device) {\n                if (device.get('fingerprint')) {\n                    let trusted = this.isTrusted(contact.get('jid'), device.id, device.get('fingerprint'));\n                    if (trusted === false) {\n                        return 'untrusted';\n                    }\n                }\n            }\n            return true;\n        }\n    },\n\n    receiveMessage: function (message) {\n        let $message = $(message),\n            type = $message.attr('type');\n        if (type === 'headline') {\n            return this.receiveHeadlineMessage(message);\n        }\n    },\n\n    parseEncrypted: function ($encrypted) {\n        let $payload = $encrypted.children(`payload`),\n            $header = $encrypted.children('header'),\n            payload = utils.fromBase64toArrayBuffer($payload.text()),\n            sid = Number($header.attr('sid'));\n\n        let keys = $header.find(`key`).get().map(function(keyElement) {\n            return {\n                preKey: $(keyElement).attr('kex') === 'true',\n                ciphertext: utils.fromBase64toArrayBuffer($(keyElement).text()),\n                deviceId: parseInt($(keyElement).attr('rid'))\n            };\n        });\n\n        return {sid, keys, payload};\n    },\n\n    getPeer: function (jid) {\n        if (!this.peers.get(jid))\n            this.peers.create({jid}, {account:this.account});\n        return this.peers.get(jid);\n    },\n\n    decrypt: async function (message, options) {\n        let $message = $(message),\n            from_jid = Strophe.getBareJidFromJid($message.attr('from')) || options.from_jid,\n            $encrypted;\n\n        if ($message.find('result[xmlns=\"'+Strophe.NS.MAM+'\"]').length) {\n            let $m = $message.find('message').first();\n            from_jid = Strophe.getBareJidFromJid($m.attr('from'));\n            $encrypted = $message.children(`result`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else if ($message.find('[xmlns=\"'+Strophe.NS.CARBONS+'\"]').length){\n            $encrypted = $message.children(`[xmlns=\"${Strophe.NS.CARBONS}\"]`).children(`forwarded`).children(`message`).children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n        }\n        else\n            $encrypted = $message.children(`encrypted[xmlns=\"${Strophe.NS.OMEMO}\"]`);\n\n        let encryptedData = this.parseEncrypted($encrypted),\n            deviceId = this.get('device_id'),\n            ownPreKeysArr =  encryptedData.keys.filter(preKey => preKey.deviceId == deviceId),\n            ownPreKey = ownPreKeysArr[0];\n        if (!ownPreKey)\n            return null;\n        let peer = this.getPeer(from_jid),\n            exportedKey = await peer.decrypt(encryptedData.sid, ownPreKey.ciphertext, ownPreKey.preKey);\n        if (!exportedKey)\n            return;\n        let exportedMasterKey = exportedKey.slice(0, 32),\n            HMACData = exportedKey.slice(32);\n\n        return utils.AES.decrypt(exportedMasterKey, HMACData, encryptedData.payload);\n    },\n\n    toBase64: function (arrayBuffer) {\n        return btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n    },\n\n    publish: function (spk, ik, pks) {\n        if (!this.account.connection)\n            return;\n        let conn_omemo = this.account.getConnectionForIQ().omemo,\n            prekeys = [];\n        pks.forEach((pk) => {\n            let id = pk.keyId,\n                pubKey = utils.ArrayBuffertoBase64(pk.keyPair.pubKey),\n                privKey = utils.ArrayBuffertoBase64(pk.keyPair.privKey),\n                key = JSON.stringify({pubKey, privKey});\n            if (!pk.signature) {\n                prekeys.push({id: id, key: pubKey});\n                this.prekeys.put({id, key});\n            }\n        });\n        conn_omemo.configNode(() => {\n            conn_omemo.publishBundle({\n                spk: {id: spk.keyId, key: utils.ArrayBuffertoBase64(spk.keyPair.pubKey)},\n                spks: utils.ArrayBuffertoBase64(spk.signature),\n                ik:  utils.ArrayBuffertoBase64(ik),\n                pks: prekeys,\n                device_id: this.get('device_id')\n            });\n        });\n    },\n\n    removePreKey: async function (id) {\n        if (!this.account)\n            return;\n        let bundle = this.bundle,\n            removed_pk = this.bundle.preKeys.find(p => p.keyId === id && !p.signature);\n        if (!removed_pk)\n            return;\n        let pubKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.pubKey),\n            privKey = utils.ArrayBuffertoBase64(removed_pk.keyPair.privKey),\n            key = JSON.stringify({pubKey, privKey}),\n            idx = this.bundle.preKeys.indexOf(removed_pk);\n        bundle.preKeys.splice(idx, 1);\n        this.own_used_prekeys.put({id, key});\n        this.prekeys.remove(id);\n        if (bundle.preKeys.length && bundle.preKeys.length < constants.MIN_PREKEYS_COUNT) {\n            let missing_keys = constants.PREKEYS_COUNT - bundle.preKeys.length,\n                last_id = _.sortBy(xabber.accounts.connected[0].omemo.bundle.preKeys, 'keyId').last().keyId;\n            for (let i = ++last_id; last_id + missing_keys; i++)\n                await this.bundle.generatePreKey(i);\n            this.account.omemo.publishBundle();\n        }\n        else\n            this.account.omemo.publishBundle();\n    },\n\n    cacheSession: function (attrs) {\n        let id = attrs.id,\n            session = attrs.rec,\n            sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        sessions[id] = session;\n        this.save('sessions', sessions);\n    },\n\n    removeSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        _.isArray(sessions) && (sessions = {});\n        delete sessions[id];\n        this.save('sessions', sessions);\n    },\n\n    getSession: function (id) {\n        let sessions = _.clone(this.get('sessions'));\n        return sessions[id];\n    },\n\n    publishBundle: async function () {\n        if (!this.bundle)\n            return;\n        let spk = this.bundle.preKeys.find(pk => pk.signature),\n            ik = await this.store.getIdentityKeyPair(),\n            pks = this.bundle.preKeys;\n        if (!spk || !ik) {\n            this.set('resend_bundle', true);\n            return;\n        }\n        this.account.getConnectionForIQ().omemo.getBundleInfo({jid: this.account.get('jid'), id: this.get('device_id')}, () => {\n                this.publish(spk, ik.pubKey, pks);\n            }, (err) => {\n                if (($(err).find('error').attr('code') == 404))\n                    this.account.getConnectionForIQ().omemo.createBundleNode(() => {\n                        this.publish(spk, ik.pubKey, pks);\n                    });\n            });\n    },\n\n    onOwnDevicesUpdated: async function () {\n        return new Promise((resolve, reject) => {\n            let conn = this.account.getConnectionForIQ();\n            if (conn && conn.omemo && conn.omemo.devices) {\n                for (let d in this.own_devices) {\n                    if (!conn.omemo.devices[d]) {\n                        this.account.omemo.removeSession('session' + this.own_devices[d].address.toString());\n                        delete this.own_devices[d];\n                    }\n                }\n                let counter = Object.keys(conn.omemo.devices).length;\n                for (let device_id in conn.omemo.devices) {\n                    if (!this.own_devices[device_id])\n                        this.own_devices[device_id] = new xabber.Device({\n                            jid: this.account.get('jid'),\n                            id: device_id\n                        }, {account: this.account, store: this.store});\n                    let device = this.own_devices[device_id],\n                        label = conn.omemo.devices[device_id].label;\n                    if (!device.get('ik')) {\n                        if (device.get('ik') === null) {\n                            counter--;\n                            !counter && resolve();\n                            continue;\n                        }\n                        device.getBundle().then(({pk, spk, ik}) => {\n                            device.set('ik', utils.fromBase64toArrayBuffer(ik));\n                            let fingerprint = device.generateFingerprint();\n                            if (!device.get('fingerprint') || device.get('fingerprint') !== fingerprint)\n                                device.set('fingerprint', fingerprint);\n                            counter--;\n                            !counter && resolve();\n                        }).catch(() => {\n                            counter--;\n                            !counter && resolve();\n                        });\n                    } else if (!device.get('fingerprint')) {\n                        device.set('fingerprint', device.generateFingerprint());\n                        counter--;\n                        !counter && resolve();\n                    } else {\n                        counter--;\n                        !counter && resolve();\n                    }\n                    label && device.set('label', label);\n                }\n            }\n        });\n    }\n});\n\nxabber.DecryptedMessages = Backbone.ModelWithStorage.extend({\n    defaults: {\n        messages: {}\n    },\n\n    getMessage: function (contact, stanza_id) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        return contact_messages[stanza_id];\n    },\n\n    putMessage: function (contact, stanza_id, message) {\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        contact_messages[stanza_id] = message;\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    removeMessage: function (attrs, contact) {\n        let origin_id = attrs.origin_id;\n        let messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {};\n        delete contact_messages[origin_id];\n        messages[contact.get('jid')] = contact_messages;\n        this.save('messages', messages);\n    },\n\n    updateMessage: function (attrs, contact) {\n        let stanza_id = attrs.stanza_id,\n            origin_id = attrs.origin_id,\n            messages = _.clone(this.get('messages')),\n            contact_messages = messages[contact.get('jid')] || {},\n            message = contact_messages[origin_id];\n        if (origin_id)\n            this.removeMessage({origin_id}, contact);\n        if (stanza_id)\n            this.putMessage(contact, stanza_id, message);\n    }\n});\n\nxabber.SignalProtocolStore = Backbone.Model.extend({\n    initialize: function () {\n        this.Direction = {\n            SENDING: 1,\n            RECEIVING: 2\n        };\n        this.store = {};\n    },\n\n    getIdentityKeyPair: function () {\n        return Promise.resolve(this.get('identityKey'));\n    },\n\n    getLocalRegistrationId: function () {\n        return Promise.resolve(this.get('registrationId'));\n    },\n\n    put: function (key, value) {\n        if (key === undefined || value === undefined || key === null || value === null)\n            throw new Error(\"Tried to store undefined/null\");\n        this.store[key] = value;\n    },\n\n    get: function (key, defaultValue) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to get value for undefined/null key\");\n        if (key in this.store) {\n            return this.store[key];\n        } else {\n            return defaultValue;\n        }\n    },\n\n    remove: function (key) {\n        if (key === null || key === undefined)\n            throw new Error(\"Tried to remove value for undefined/null key\");\n        delete this.store[key];\n    },\n\n    isTrustedIdentity: function (identifier, identityKey, direction) {\n        if (identifier === null || identifier === undefined) {\n            throw new Error(\"tried to check identity key for undefined/null key\");\n        }\n        if (!(identityKey instanceof ArrayBuffer)) {\n            throw new Error(\"Expected identityKey to be an ArrayBuffer\");\n        }\n        let trusted = this.get('identityKey' + identifier);\n        if (trusted === undefined) {\n            return Promise.resolve(true);\n        }\n        return Promise.resolve(util.toString(identityKey) === util.toString(trusted));\n    },\n\n    loadIdentityKey: function (identifier) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to get identity key for undefined/null key\");\n        return Promise.resolve(this.get('identityKey' + identifier));\n    },\n\n    saveIdentity: function (identifier, identityKey) {\n        if (identifier === null || identifier === undefined)\n            throw new Error(\"Tried to put identity key for undefined/null key\");\n\n        let address = new SignalProtocolAddress.fromString(identifier);\n\n        let existing = this.get('identityKey' + address.getName());\n        this.put('identityKey' + address.getName(), identityKey);\n\n        if (existing && libsignal.toString(identityKey) !== libsignal.toString(existing)) {\n            return Promise.resolve(true);\n        } else {\n            return Promise.resolve(false);\n        }\n\n    },\n\n    /* Returns a prekeypair object or undefined */\n    loadPreKey: function (keyId) {\n        let res = this.get('25519KeypreKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storePreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeypreKey' + keyId, keyPair));\n    },\n\n    removePreKey: function (keyId) {\n        this.trigger('prekey_removed', keyId);\n        // return Promise.resolve(this.remove('25519KeypreKey' + keyId));\n    },\n\n    /* Returns a signed keypair object or undefined */\n    loadSignedPreKey: function (keyId) {\n        let res = this.get('25519KeysignedKey' + keyId);\n        if (res !== undefined) {\n            res = {pubKey: res.pubKey, privKey: res.privKey};\n        }\n        return Promise.resolve(res);\n    },\n\n    storeSignedPreKey: function (keyId, keyPair) {\n        return Promise.resolve(this.put('25519KeysignedKey' + keyId, keyPair));\n    },\n\n    removeSignedPreKey: function (keyId) {\n        return Promise.resolve(this.remove('25519KeysignedKey' + keyId));\n    },\n\n    loadSession: function (identifier) {\n        return Promise.resolve(this.get('session' + identifier));\n    },\n\n    hasSession: function (identifier) {\n        return !!this.get('session' + identifier)\n    },\n\n    storeSession: function (identifier, record) {\n        this.trigger('session_stored', {id: 'session' + identifier, rec: record});\n        return Promise.resolve(this.put('session' + identifier, record));\n    },\n\n    removeSession: function (identifier) {\n        return Promise.resolve(this.remove('session' + identifier));\n    },\n\n    getAllSessions: function (identifier) {\n        let sessions = [];\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                sessions.push({id: id, session: this.store[id]});\n            }\n        }\n        return Promise.resolve(sessions);\n    },\n\n    removeAllSessions: function (identifier) {\n        for (let id in this.store) {\n            if (id.startsWith('session' + identifier)) {\n                delete this.store[id];\n            }\n        }\n        return Promise.resolve();\n    }\n});\n\nxabber.OMEMOEnablePlaceholder = xabber.BasicView.extend({\n    className: 'omemo-enable-placeholder',\n\n    events: {\n        'click .btn-enable': 'enableOmemo',\n        'click .btn-escape': 'closeOmemoPlaceholder'\n    },\n\n    _initialize: function (options) {\n        this.account = options.account;\n        this.updateColorScheme();\n        this.$el.html(templates.omemo_enable({jid: this.account.get('jid')}));\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n        xabber.on(\"update_screen\", this.onUpdatedScreen, this);\n        this.account.session.on(\"change:connected\", this.updateConnected, this);\n        this.account.settings.on(\"change:color\", this.updateColorScheme, this);\n        this.account.settings.on(\"change:omemo\", this.onOmemoChange, this);\n    },\n\n    updateColorScheme: function () {\n        let color = this.account.settings.get('color');\n        this.$el.attr('data-color', color);\n    },\n\n    onUpdatedScreen: function () {\n        if (!this.account.omemo_enable_placeholder || this.account.omemo_enable_placeholder.cid !== this.cid)\n            return;\n        this.$el.detach();\n        xabber.placeholders_wrap.$el.append(this.$el);\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    },\n\n    updateConnected: function () {\n        if (!this.account.isConnected())\n            this.close();\n    },\n\n    enableOmemo: function () {\n        this.account.settings.save('omemo', true);\n        this.close();\n        this.account.omemo = new xabber.Omemo({id: 'omemo'}, {\n            account: this.account,\n            storage_name: xabber.getStorageName() + '-omemo-settings-' + this.account.get('jid'),\n            fetch: 'before'\n        });\n        setTimeout(() => {\n            this.account.omemo.onConnected();\n        }, 2000);\n    },\n\n    closeOmemoPlaceholder: function () {\n        this.account.settings.save('omemo', false);\n        this.close();\n    },\n\n    onOmemoChange: function () {\n        if (this.account.settings.get('omemo'))\n            this.close();\n    },\n\n    close: function () {\n        this.trigger('remove') && this.remove();\n        this.account.omemo_enable_placeholder = undefined;\n        xabber.main_panel.$el.css('padding-bottom', xabber.placeholders_wrap.$el.height());\n    }\n});\n\nxabber.Account.addInitPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo = new xabber.Omemo({id: 'omemo'}, {\n        account: this,\n        storage_name: xabber.getStorageName() + '-omemo-settings-' + this.get('jid'),\n        fetch: 'before'\n    });\n});\n\nxabber.Account.addConnPlugin(function () {\n    if (!this.settings.get('omemo'))\n        return;\n    this.omemo.onConnected();\n}, true, true);\n\nexport default xabber;\n","import xabber from \"xabber-core\";\nimport views from \"xabber-views\";\nimport api_service from \"xabber-api-service\";\nimport strophe from \"xabber-strophe\";\nimport vcard from \"xabber-vcard\";\nimport accounts from \"xabber-accounts\";\nimport discovery from \"xabber-discovery\";\nimport contacts from \"xabber-contacts\";\nimport chats from \"xabber-chats\";\nimport searching from \"xabber-searching\";\nimport mentions from \"xabber-mentions\";\nimport ui from \"xabber-ui\";\nimport omemo from \"xabber-omemo\";\n\nxabber.extendWith(views, api_service, strophe, vcard,\n    accounts, discovery, contacts, chats, searching, mentions, ui, omemo);\nglobal.xabber = xabber;\n\nexport default xabber;\n","var map = {\n\t\"./accounts/add_account.html\": 24109,\n\t\"./accounts/audio_file_waveform.html\": 56949,\n\t\"./accounts/avatars_gallery.html\": 47837,\n\t\"./accounts/change_password.html\": 34999,\n\t\"./accounts/change_status.html\": 33999,\n\t\"./accounts/current_token_item.html\": 86348,\n\t\"./accounts/emoji_panel.html\": 90231,\n\t\"./accounts/emoji_picker.html\": 25482,\n\t\"./accounts/emoji_picker_tabs.html\": 20458,\n\t\"./accounts/existing_groupchat_item.html\": 4870,\n\t\"./accounts/global_settings_item.html\": 98078,\n\t\"./accounts/media_gallery_account.html\": 1161,\n\t\"./accounts/media_gallery_account_file.html\": 39440,\n\t\"./accounts/resource.html\": 75216,\n\t\"./accounts/resource_right.html\": 255,\n\t\"./accounts/settings_left.html\": 35626,\n\t\"./accounts/settings_right.html\": 34987,\n\t\"./accounts/token_item.html\": 52509,\n\t\"./accounts/toolbar_item.html\": 54810,\n\t\"./accounts/webcam_panel.html\": 92797,\n\t\"./accounts/xmpp_login.html\": 64630,\n\t\"./api_service/add_xabber_account.html\": 64805,\n\t\"./api_service/linked_email_item.html\": 5398,\n\t\"./api_service/sync_settings.html\": 48881,\n\t\"./api_service/sync_settings_account_item.html\": 28522,\n\t\"./api_service/xabber_account.html\": 29674,\n\t\"./api_service/xabber_login.html\": 48755,\n\t\"./api_service/xabber_login_by_email.html\": 24864,\n\t\"./base/about.html\": 99288,\n\t\"./base/backgrounds_gallery.html\": 77428,\n\t\"./base/color_picker.html\": 51462,\n\t\"./base/color_scheme.html\": 83430,\n\t\"./base/dialog.html\": 62985,\n\t\"./base/fingerprint_item.html\": 75551,\n\t\"./base/fingerprints.html\": 5822,\n\t\"./base/input_widget.html\": 10596,\n\t\"./base/jingle_message_calling.html\": 62077,\n\t\"./base/omemo_enable.html\": 17661,\n\t\"./base/plyr_player_popup.html\": 14197,\n\t\"./base/settings.html\": 15887,\n\t\"./base/toolbar.html\": 45459,\n\t\"./chats/add_chat_account_item.html\": 56468,\n\t\"./chats/chat_bottom.html\": 74335,\n\t\"./chats/chat_content.html\": 10224,\n\t\"./chats/chat_content_contact.html\": 9031,\n\t\"./chats/chat_head.html\": 29317,\n\t\"./chats/chat_item.html\": 95370,\n\t\"./chats/chat_placeholder.html\": 5696,\n\t\"./chats/chats_panel.html\": 80026,\n\t\"./chats/checkbox.html\": 40433,\n\t\"./chats/content_encryption_warning.html\": 96249,\n\t\"./chats/encryption_warning.html\": 53318,\n\t\"./chats/forward_panel.html\": 83176,\n\t\"./chats/group_chats/add_group_chat.html\": 23118,\n\t\"./chats/group_chats/invitation_panel_view.html\": 1015,\n\t\"./chats/group_chats/mention_item.html\": 79011,\n\t\"./chats/group_chats/pinned_message_panel.html\": 68096,\n\t\"./chats/location_popup.html\": 21732,\n\t\"./chats/message_item.html\": 59170,\n\t\"./chats/messages/attached_file.html\": 97042,\n\t\"./chats/messages/audio_file.html\": 94382,\n\t\"./chats/messages/audio_file_waveform.html\": 74211,\n\t\"./chats/messages/auth_request.html\": 63576,\n\t\"./chats/messages/file.html\": 89256,\n\t\"./chats/messages/file_loading.html\": 83034,\n\t\"./chats/messages/file_upload.html\": 46311,\n\t\"./chats/messages/forwarded.html\": 19038,\n\t\"./chats/messages/group_request.html\": 29794,\n\t\"./chats/messages/hidden-template-for-2.html\": 15867,\n\t\"./chats/messages/hidden-template-for-3.html\": 87486,\n\t\"./chats/messages/hidden-template-for-4.html\": 19761,\n\t\"./chats/messages/hidden-template-for-5.html\": 20365,\n\t\"./chats/messages/hidden-template-for-6.html\": 57344,\n\t\"./chats/messages/images_details.html\": 13786,\n\t\"./chats/messages/link_reference.html\": 59840,\n\t\"./chats/messages/link_reference_chat.html\": 39475,\n\t\"./chats/messages/loading_circle.html\": 54301,\n\t\"./chats/messages/location.html\": 55127,\n\t\"./chats/messages/main.html\": 76510,\n\t\"./chats/messages/saved_main.html\": 18479,\n\t\"./chats/messages/searched.html\": 83228,\n\t\"./chats/messages/system.html\": 85046,\n\t\"./chats/messages/template-for-2.html\": 2861,\n\t\"./chats/messages/template-for-3.html\": 70423,\n\t\"./chats/messages/template-for-4.html\": 90719,\n\t\"./chats/messages/template-for-5.html\": 39125,\n\t\"./chats/messages/template-for-6.html\": 20129,\n\t\"./chats/messages/video.html\": 87795,\n\t\"./chats/messages/voice_message.html\": 43795,\n\t\"./chats/saved_chat_head.html\": 21385,\n\t\"./chats/send_media.html\": 34054,\n\t\"./chats/subscription_buttons.html\": 47725,\n\t\"./contacts/account_roster_left.html\": 69006,\n\t\"./contacts/account_roster_right.html\": 23643,\n\t\"./contacts/add_contact.html\": 24718,\n\t\"./contacts/add_contact_account_item.html\": 31238,\n\t\"./contacts/audio_file_waveform.html\": 49820,\n\t\"./contacts/contact_blocked_item.html\": 73253,\n\t\"./contacts/contact_details.html\": 62859,\n\t\"./contacts/contact_details_right.html\": 38624,\n\t\"./contacts/contact_left_item.html\": 24958,\n\t\"./contacts/contact_placeholder.html\": 19768,\n\t\"./contacts/contact_right_item.html\": 72055,\n\t\"./contacts/edit_contact.html\": 45078,\n\t\"./contacts/edit_group.html\": 4679,\n\t\"./contacts/group_chats/add_blocked_participant_form.html\": 37639,\n\t\"./contacts/group_chats/badge_edit_view.html\": 11868,\n\t\"./contacts/group_chats/default_restrictions.html\": 87004,\n\t\"./contacts/group_chats/default_restrictions_right.html\": 59115,\n\t\"./contacts/group_chats/description_input_widget.html\": 49080,\n\t\"./contacts/group_chats/file_item.html\": 79481,\n\t\"./contacts/group_chats/group_chat_details.html\": 69426,\n\t\"./contacts/group_chats/group_chat_details_right.html\": 18939,\n\t\"./contacts/group_chats/group_chat_properties.html\": 15159,\n\t\"./contacts/group_chats/group_chat_properties_edit.html\": 20904,\n\t\"./contacts/group_chats/group_chat_properties_right.html\": 69849,\n\t\"./contacts/group_chats/group_member_item.html\": 38114,\n\t\"./contacts/group_chats/group_member_item_right.html\": 53119,\n\t\"./contacts/group_chats/group_name_input_widget.html\": 82703,\n\t\"./contacts/group_chats/group_status.html\": 70569,\n\t\"./contacts/group_chats/group_status_right.html\": 27157,\n\t\"./contacts/group_chats/invitation.html\": 53464,\n\t\"./contacts/group_chats/invited_member_item.html\": 87824,\n\t\"./contacts/group_chats/participant_badge_input_widget.html\": 84939,\n\t\"./contacts/group_chats/participant_details_item.html\": 66493,\n\t\"./contacts/group_chats/participant_details_item_right.html\": 83326,\n\t\"./contacts/group_chats/participant_details_right.html\": 1593,\n\t\"./contacts/group_chats/participant_rights.html\": 76252,\n\t\"./contacts/group_chats/participants.html\": 93172,\n\t\"./contacts/group_chats/participants_right_panel.html\": 19295,\n\t\"./contacts/group_chats/pinned_message.html\": 54630,\n\t\"./contacts/group_chats/private_participant_details.html\": 15369,\n\t\"./contacts/group_chats/private_participant_details_item_right.html\": 79983,\n\t\"./contacts/group_chats/restriction_item.html\": 87050,\n\t\"./contacts/group_chats/right_expire_variants.html\": 54338,\n\t\"./contacts/group_chats/set_status.html\": 67065,\n\t\"./contacts/group_chats/status_item.html\": 27893,\n\t\"./contacts/group_left.html\": 57973,\n\t\"./contacts/group_right.html\": 95561,\n\t\"./contacts/group_settings.html\": 21612,\n\t\"./contacts/groups.html\": 62605,\n\t\"./contacts/groups_checkbox_list.html\": 54515,\n\t\"./contacts/groups_checkbox_list_contact.html\": 52661,\n\t\"./contacts/groups_list.html\": 58114,\n\t\"./contacts/groups_new_group.html\": 57713,\n\t\"./contacts/media_item.html\": 17905,\n\t\"./contacts/media_items_empty.html\": 23546,\n\t\"./contacts/preloader.html\": 4142,\n\t\"./contacts/roster_left.html\": 50869,\n\t\"./contacts/roster_right.html\": 22136,\n\t\"./contacts/roster_settings.html\": 54186,\n\t\"./mentions/mention_item.html\": 19253,\n\t\"./mentions/mentions_panel.html\": 50291,\n\t\"./mentions/mentions_placeholder.html\": 20103,\n\t\"./searching/existing_groupchat_details_view.html\": 31897,\n\t\"./searching/existing_groupchat_item.html\": 71655,\n\t\"./searching/searching_account_item.html\": 3103,\n\t\"./searching/searching_wide.html\": 43143,\n\t\"./svg/account-outline.html\": 20865,\n\t\"./svg/address-outline.html\": 66656,\n\t\"./svg/bell-off.html\": 14759,\n\t\"./svg/bell-sleep.html\": 11713,\n\t\"./svg/bell.html\": 55155,\n\t\"./svg/birthday-outline.html\": 23977,\n\t\"./svg/blocked-add.html\": 89768,\n\t\"./svg/blocked.html\": 33574,\n\t\"./svg/bot-variant.html\": 94862,\n\t\"./svg/bot.html\": 29568,\n\t\"./svg/call-outline.html\": 16938,\n\t\"./svg/call.html\": 9530,\n\t\"./svg/camera-retake.html\": 25430,\n\t\"./svg/cancel.html\": 80595,\n\t\"./svg/channel.html\": 40203,\n\t\"./svg/chevron-down.html\": 79353,\n\t\"./svg/chevron-left-variant.html\": 32011,\n\t\"./svg/chevron-right-variant.html\": 19297,\n\t\"./svg/circles.html\": 61265,\n\t\"./svg/clock-outline.html\": 93813,\n\t\"./svg/close.html\": 70874,\n\t\"./svg/crosshairs-gps.html\": 57197,\n\t\"./svg/crosshairs-question.html\": 40765,\n\t\"./svg/crosshairs.html\": 82823,\n\t\"./svg/description-outline.html\": 23373,\n\t\"./svg/devices.html\": 50832,\n\t\"./svg/edit-outline.html\": 96840,\n\t\"./svg/edit.html\": 22845,\n\t\"./svg/email-outline.html\": 66206,\n\t\"./svg/file-audio.html\": 3643,\n\t\"./svg/file-document.html\": 88700,\n\t\"./svg/file-pdf.html\": 3468,\n\t\"./svg/file-presentation.html\": 34417,\n\t\"./svg/file-video.html\": 98587,\n\t\"./svg/file-zip.html\": 89193,\n\t\"./svg/file.html\": 34058,\n\t\"./svg/fullname-outline.html\": 16109,\n\t\"./svg/fullname.html\": 12784,\n\t\"./svg/group-incognito.html\": 49703,\n\t\"./svg/group-invite.html\": 89411,\n\t\"./svg/group-private.html\": 81044,\n\t\"./svg/group-public.html\": 56403,\n\t\"./svg/history.html\": 35726,\n\t\"./svg/ic-at.html\": 81363,\n\t\"./svg/ic-jabber.html\": 9140,\n\t\"./svg/ic-searching.html\": 46476,\n\t\"./svg/id-outline.html\": 19324,\n\t\"./svg/image.html\": 90226,\n\t\"./svg/index.html\": 2612,\n\t\"./svg/information-outline.html\": 52973,\n\t\"./svg/invite-outline.html\": 34289,\n\t\"./svg/job-outline.html\": 31802,\n\t\"./svg/link.html\": 16205,\n\t\"./svg/map-marker-outline.html\": 83740,\n\t\"./svg/map-marker.html\": 70776,\n\t\"./svg/membership-outline.html\": 8872,\n\t\"./svg/message-bookmark-outline.html\": 6278,\n\t\"./svg/message-group.html\": 35529,\n\t\"./svg/minus.html\": 79092,\n\t\"./svg/mobile.html\": 33767,\n\t\"./svg/palette.html\": 43710,\n\t\"./svg/pause.html\": 58080,\n\t\"./svg/picture-in-picture-bottom-right.html\": 91421,\n\t\"./svg/picture-in-picture-minimize.html\": 42173,\n\t\"./svg/picture-in-picture-top-right.html\": 74578,\n\t\"./svg/pinned-circle-small.html\": 54052,\n\t\"./svg/pinned.html\": 9443,\n\t\"./svg/play.html\": 43069,\n\t\"./svg/player-float.html\": 30030,\n\t\"./svg/player-full.html\": 60259,\n\t\"./svg/player-mini-variant.html\": 70099,\n\t\"./svg/player-mini.html\": 77531,\n\t\"./svg/plus.html\": 85123,\n\t\"./svg/plyr.html\": 10410,\n\t\"./svg/qrcode.html\": 17943,\n\t\"./svg/restrictions-outline.html\": 89701,\n\t\"./svg/rss-variant.html\": 89657,\n\t\"./svg/rss.html\": 15645,\n\t\"./svg/saved-messages.html\": 11797,\n\t\"./svg/search.html\": 11146,\n\t\"./svg/server.html\": 71188,\n\t\"./svg/status-outline.html\": 52555,\n\t\"./svg/subscription-from.html\": 5414,\n\t\"./svg/subscription-to.html\": 8020,\n\t\"./svg/task.html\": 41835,\n\t\"./svg/translate.html\": 98431,\n\t\"./svg/video.html\": 98070,\n\t\"./svg/volume-high.html\": 87658,\n\t\"./svg/volume-off-variant.html\": 7962,\n\t\"./svg/volume-off.html\": 14032,\n\t\"./svg/xabber-offline.html\": 50033,\n\t\"./svg/xabber-online.html\": 74922,\n\t\"./svg/xmpp.html\": 92052,\n\t\"./vcard/vcard.html\": 73889,\n\t\"./vcard/vcard_edit.html\": 11803,\n\t\"./vcard/vcard_right.html\": 93047\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89293;","var map = {\n\t\"./accounts/emojis.txt\": 13034\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 62037;","let client_translation_progress = {\"en\":100,\"ar\":27,\"az\":2,\"be\":13,\"bg\":65,\"bs\":0,\"ca\":25,\"cs\":99,\"cy\":0,\"da\":0,\"de\":49,\"el\":29,\"es-ES\":34,\"es-latin\":7,\"et\":0,\"fa\":4,\"fi\":9,\"fil\":14,\"fr\":35,\"ga-IE\":0,\"he\":21,\"hi\":0,\"hr\":0,\"hu\":14,\"hy-AM\":8,\"id\":67,\"is\":0,\"it\":72,\"ja\":20,\"ka\":0,\"kmr\":0,\"ko\":1,\"ku\":2,\"ky\":5,\"la-LA\":0,\"lb\":0,\"lt\":4,\"me\":0,\"mk\":0,\"mn\":0,\"mr\":0,\"ms\":6,\"nb\":21,\"ne-NP\":0,\"nl\":20,\"no\":0,\"oc\":13,\"pa-IN\":0,\"pl\":66,\"pt-BR\":71,\"pt-PT\":15,\"qya-AA\":0,\"ro\":16,\"ru\":69,\"sat\":1,\"sco\":0,\"si-LK\":37,\"sk\":20,\"sl\":28,\"sq\":3,\"sr\":13,\"sr-Cyrl-ME\":0,\"sv-SE\":38,\"sw\":1,\"ta\":1,\"te\":0,\"tg\":0,\"tk\":0,\"tlh-AA\":0,\"tr\":66,\"uk\":27,\"uz\":0,\"vi\":13,\"yo\":0,\"zh-CN\":38,\"zh-TW\":11,\"zu\":0}; typeof define === \"function\" && define(() => { return client_translation_progress;});","var map = {\n\t\"./ar-rSA.js\": [\n\t\t53591,\n\t\t5629\n\t],\n\t\"./az-rAZ.js\": [\n\t\t81101,\n\t\t1101\n\t],\n\t\"./be-rBY.js\": [\n\t\t86953,\n\t\t6953\n\t],\n\t\"./bg-rBG.js\": [\n\t\t41428,\n\t\t1428\n\t],\n\t\"./bs-rBA.js\": [\n\t\t76101,\n\t\t6101\n\t],\n\t\"./ca-rES.js\": [\n\t\t80049,\n\t\t49\n\t],\n\t\"./cs-rCZ.js\": [\n\t\t30011,\n\t\t11\n\t],\n\t\"./cy-rGB.js\": [\n\t\t98146,\n\t\t8146\n\t],\n\t\"./da-rDK.js\": [\n\t\t22348,\n\t\t2348\n\t],\n\t\"./de-rDE.js\": [\n\t\t78961,\n\t\t8961\n\t],\n\t\"./el-rGR.js\": [\n\t\t292,\n\t\t292\n\t],\n\t\"./en.js\": [\n\t\t53832,\n\t\t3832\n\t],\n\t\"./es-rES.js\": [\n\t\t85895,\n\t\t5895\n\t],\n\t\"./es419.js\": [\n\t\t93575,\n\t\t3575\n\t],\n\t\"./et-rEE.js\": [\n\t\t14103,\n\t\t4103\n\t],\n\t\"./fa-rIR.js\": [\n\t\t15729,\n\t\t5729\n\t],\n\t\"./fi-rFI.js\": [\n\t\t35069,\n\t\t5069\n\t],\n\t\"./fil-rPH.js\": [\n\t\t43250,\n\t\t3250\n\t],\n\t\"./fr-rFR.js\": [\n\t\t52716,\n\t\t2716\n\t],\n\t\"./ga-rIE.js\": [\n\t\t17872,\n\t\t7872\n\t],\n\t\"./hi-rIN.js\": [\n\t\t11361,\n\t\t1361\n\t],\n\t\"./hr-rHR.js\": [\n\t\t42324,\n\t\t2324\n\t],\n\t\"./hu-rHU.js\": [\n\t\t70833,\n\t\t833\n\t],\n\t\"./hy-rAM.js\": [\n\t\t63000,\n\t\t3000\n\t],\n\t\"./in-rID.js\": [\n\t\t31879,\n\t\t1879\n\t],\n\t\"./is-rIS.js\": [\n\t\t55298,\n\t\t5298\n\t],\n\t\"./it-rIT.js\": [\n\t\t8182,\n\t\t8182\n\t],\n\t\"./iw-rIL.js\": [\n\t\t5945,\n\t\t5945\n\t],\n\t\"./ja-rJP.js\": [\n\t\t91587,\n\t\t1587\n\t],\n\t\"./ka-rGE.js\": [\n\t\t21337,\n\t\t1337\n\t],\n\t\"./kmr-rTR.js\": [\n\t\t57057,\n\t\t7057\n\t],\n\t\"./ko-rKR.js\": [\n\t\t88756,\n\t\t8756\n\t],\n\t\"./ku-rTR.js\": [\n\t\t33678,\n\t\t3678\n\t],\n\t\"./ky-rKG.js\": [\n\t\t28404,\n\t\t8404\n\t],\n\t\"./la-rLA.js\": [\n\t\t27089,\n\t\t7089\n\t],\n\t\"./lb-rLU.js\": [\n\t\t85752,\n\t\t5752\n\t],\n\t\"./lt-rLT.js\": [\n\t\t23097,\n\t\t3097\n\t],\n\t\"./me-rME.js\": [\n\t\t59023,\n\t\t9023\n\t],\n\t\"./mk-rMK.js\": [\n\t\t52499,\n\t\t2499\n\t],\n\t\"./mn-rMN.js\": [\n\t\t68721,\n\t\t8721\n\t],\n\t\"./mr-rIN.js\": [\n\t\t33591,\n\t\t3591\n\t],\n\t\"./ms-rMY.js\": [\n\t\t10922,\n\t\t922\n\t],\n\t\"./nb-rNO.js\": [\n\t\t54778,\n\t\t4778\n\t],\n\t\"./ne-rNP.js\": [\n\t\t4463,\n\t\t4463\n\t],\n\t\"./nl-rNL.js\": [\n\t\t36447,\n\t\t6447\n\t],\n\t\"./no-rNO.js\": [\n\t\t16813,\n\t\t6813\n\t],\n\t\"./oc-rFR.js\": [\n\t\t76102,\n\t\t6102\n\t],\n\t\"./pa-rIN.js\": [\n\t\t49081,\n\t\t9081\n\t],\n\t\"./pl-rPL.js\": [\n\t\t60419,\n\t\t419\n\t],\n\t\"./pt-rBR.js\": [\n\t\t9226,\n\t\t9226\n\t],\n\t\"./pt-rPT.js\": [\n\t\t10201,\n\t\t201\n\t],\n\t\"./qya-rAA.js\": [\n\t\t39460,\n\t\t9460\n\t],\n\t\"./ro-rRO.js\": [\n\t\t16292,\n\t\t6292\n\t],\n\t\"./ru-rRU.js\": [\n\t\t74391,\n\t\t4391\n\t],\n\t\"./sat-rIN.js\": [\n\t\t1905,\n\t\t1905\n\t],\n\t\"./sco-rGB.js\": [\n\t\t52323,\n\t\t2323\n\t],\n\t\"./si-rLK.js\": [\n\t\t79773,\n\t\t9773\n\t],\n\t\"./sk-rSK.js\": [\n\t\t51874,\n\t\t1874\n\t],\n\t\"./sl-rSI.js\": [\n\t\t97658,\n\t\t7658\n\t],\n\t\"./sq-rAL.js\": [\n\t\t80596,\n\t\t596\n\t],\n\t\"./sr-rCyrl-rME.js\": [\n\t\t33343,\n\t\t3343\n\t],\n\t\"./sr-rSP.js\": [\n\t\t75384,\n\t\t5384\n\t],\n\t\"./sv-rSE.js\": [\n\t\t50608,\n\t\t608\n\t],\n\t\"./sw-rKE.js\": [\n\t\t6802,\n\t\t6802\n\t],\n\t\"./ta-rIN.js\": [\n\t\t51796,\n\t\t1796\n\t],\n\t\"./te-rIN.js\": [\n\t\t49782,\n\t\t9782\n\t],\n\t\"./tg-rTJ.js\": [\n\t\t33689,\n\t\t3689\n\t],\n\t\"./tk-rTM.js\": [\n\t\t60130,\n\t\t130\n\t],\n\t\"./tlh-rAA.js\": [\n\t\t73739,\n\t\t3739\n\t],\n\t\"./tr-rTR.js\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./translation_progress.js\": [\n\t\t23297\n\t],\n\t\"./uk-rUA.js\": [\n\t\t88109,\n\t\t8109\n\t],\n\t\"./uz-rUZ.js\": [\n\t\t96886,\n\t\t6886\n\t],\n\t\"./vi-rVN.js\": [\n\t\t37216,\n\t\t7216\n\t],\n\t\"./yo-rNG.js\": [\n\t\t97045,\n\t\t7045\n\t],\n\t\"./zh-rCN.js\": [\n\t\t16806,\n\t\t6806\n\t],\n\t\"./zh-rTW.js\": [\n\t\t58545,\n\t\t8545\n\t],\n\t\"./zu-rZA.js\": [\n\t\t58810,\n\t\t8810\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8946;\nmodule.exports = webpackAsyncContext;","define(function () { return JSON.parse(\n'{\"version_number\":\"2.3.3.19\",\"version_description\":\"changed how kicked status of participant is checked\"}'\n)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"xabber.\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkxabber_web\"] = self[\"webpackChunkxabber_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [1216], () => (__webpack_require__(10019)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","constants","STORAGE_NAME","STORAGE_VERSION","CONTAINER_ELEMENT","FAVICON_DEFAULT","FAVICON_MESSAGE","BACKGROUND_IMAGE","WIDTH_MEDIUM","WIDTH_NARROW","WIDTH_TINY","LOG_LEVEL_NONE","LOG_LEVEL_ERROR","LOG_LEVEL_WARN","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","LOG_LEVEL","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ESCAPE","KEY_SPACE","KEY_ARROW_LEFT","KEY_ARROW_UP","KEY_ARROW_RIGHT","KEY_ARROW_DOWN","KEY_DELETE","KEY_FORWARD_SLASH","KEY_AT","VOICE_MSG_TIME","PASSWORD_DOT","String","fromCharCode","CONNECTION_URL","CONN_STATUSES","PREKEYS_COUNT","MIN_PREKEYS_COUNT","AES_KEY_LENGTH","AES_TAG_LENGTH","AES_EXTRACTABLE","BAD_CONN_STATUSES","RECONNECTION_TIMEOUTS","STATUS_WEIGHTS","chat","online","away","xa","dnd","offline","unavailable","PRESENT_INTERVAL","CHATSTATE_INTERVAL_COMPOSING_AUDIO","CHATSTATE_TIMEOUT_PAUSED","CHATSTATE_TIMEOUT_STOPPED","CHATSTATE_TIMEOUT_PAUSED_AUDIO","JINGLE_WAITING_TIME","SYNCHRONIZATION_RSM_MAX","REGISTRATION_DOMAINS","LOGIN_DOMAINS","TRUSTED_DOMAINS","RECOMMENDED_DOMAIN","REGISTRATION_BUTTON","REGISTRATION_CUSTOM_DOMAIN","LOGIN_CUSTOM_DOMAIN","TURN_SERVERS_LIST","url","credential","username","urls","JINGLE_MSG_PROPOSE","JINGLE_MSG_REJECT","JINGLE_MSG_ACCEPT","MSG_BLOCKED","MSG_ERROR","MSG_PENDING","MSG_SENT","MSG_DELIVERED","MSG_DISPLAYED","MSG_ARCHIVED","MSG_SAVED","RSM_ATTRIBUTES","MAM_ATTRIBUTES","GENERAL_GROUP_ID","NON_ROSTER_GROUP_ID","MATERIAL_COLORS","MAX_AVATAR_FILE_SIZE","AVATAR_PRIORITIES","VCARD_AVATAR","PUBSUB_AVATAR","EMAIL_FOR_JOIN_TRANSLATION","AVATAR_SIZES","TOOLBAR_ACCOUNT_ITEM","SETTINGS_ACCOUNT_ITEM","XABBER_ACCOUNT","SYNCHRONIZE_ACCOUNT_ITEM","MENTION_ITEM","ACCOUNT_SETTINGS_LEFT","ACCOUNT_VCARD_EDIT","ROSTER_RIGHT_ACCOUNT_ITEM","ROSTER_LEFT_ACCOUNT_ITEM","PARTICIPANT_DETAILS_ITEM","CONTACT_RIGHT_ITEM","GROUPCHAT_MEMBER_ITEM","CONTACT_LEFT_ITEM","CONTACT_BLOCKED_ITEM","CONTACT_DETAILS","GROUP_SETTINGS","CHAT_ITEM","CHAT_HEAD","CHAT_MESSAGE","CHAT_BOTTOM","XABBER_VOICE_CALL_VIEW","OMEMO_ENABLE_SETTING","SOUNDS","beep_up","tiny_noize","retro_game","pixel_beep","beep_positive","good_chime","cellular_click","bleep","mono_u","plop","ether","pop","computer_chime","beep_a","call","connecting","busy","attention","SYNC_WAY_DATA","no","tip","icon","from_server","to_server","delete","off_local","off_remote","SYNCED_STATUS_DATA","off","yes","EMOJI_LIST_NAME","emoji_list","QUOTE_MARKER","MARKUP_TAGS","BLANK_VIDEO","OGG","MP4","WEBM","MIME_TYPES","image","audio","video","document","pdf","table","archive","presentation","languages","languages_another_locales","PERSONAL_AREA_URL","XABBER_ACCOUNT_URL","API_SERVICE_URL","USE_SOCIAL_AUTH","REGISTER_XMPP_ACCOUNT","REGISTER_XMPP_ACCOUNT_URL","CHECK_VERSION","DEFAULT_LOGIN_SCREEN","GCM_SENDER_ID","GCM_API_KEY","MESSAGE_ARCHIVE_DB_NAME","STANZA_MAX_SIZE","Math","pow","BLUR_VALUE","VIGNETTING_VALUE","TRANSPARENCY_VALUE","MAIN_COLOR","CLIENT_NAME","SHORT_CLIENT_NAME","SHORT_CLIENT_DESCRIPTION","CLIENT_LOGO","TOOLBAR_LOGO","ENABLE_XABBER_ACCOUNT","SCREEN_ABOUT","CLIENT_URL","DEVELOPER_URL","CLIENT_GITHUB_URL","PROJECT_CROWDIN_URL","CLIENT_LICENSE_GITHUB_URL","JINGLE_MSG_STATE","MSG_STATE","MSG_VERBOSE_STATE","$","_","moment","WaveSurfer","Plyr","plyr","Quill","libsignal","slug","sha1","xabber_i18next","xabber_i18next_sprintf","sha256","magnificPopup","Strophe","evaluate","interpolate","templates","insertSvg","html","$html","find","each","$el","this","svg_name","data","removeClass","addClass","attr","svg","_addTemplate","name","options","path","split","tpl","join","default","tpl_name","res","is_svg","addTemplate","addSvgTemplate","addJSONTemplate","raw_data","code","x","y","getEmoji","offset","lead","trail","emoji_data","item","emoji","push","emoji_regexp","prototype","emojify","sprite","tag_name","emoji_size","href","title","replace","emoji_code","Number","toString","length","repeat","removeEmoji","replaceEmoji","selector","text","all","get","getByIndex","idx","hasher","_image_cache","COLORS","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","type","CachedImage","window","URL","createObjectURL","getCachedImage","isString","indexOf","isObject","getAccountColor","_name","trim","color_index","floor","getImageSize","size","max_size","width","height","fn","setAvatar","image_el","cached_image","img_size","$image_el","css","backgroundImage","backgroundSize","backgroundColor","setCss","getBlobImage","getDefaultAvatar","color","font","first_name","last_name","first_letter","second_letter","canvas","createElement","ctx","getContext","splitted_name","rect","fillStyle","fill","textAlign","textBaseline","fillText","toUpperCase","toDataURL","getAvatarFromFile","file","image_obj","Image","src","Deferred","onload","b64_image","hash","naturalWidth","naturalHeight","new_size","drawImage","revokeObjectURL","toBlob","blob","reader","FileReader","result","binary_file","bytes","resolve","bind","readAsDataURL","onerror","promise","getDefaultColor","getCachedBackground","base64","compressImage","file_type","file_name","File","lastModified","Date","now","modal_queue","appendTo","Modal","modal_constructor","$modal","Function","closed","getString","id","params","postProcess","sprintf","extend","open","use_queue","throw","setTimeout","addEventListener","clickHandler","prop","modal_options","omit","is_default_complete","complete_data","one","ev","detach","value","shift","_openModal","close","complete","isUndefined","_closeModal","removeEventListener","trigger","keyCode","click","preventDefault","openModal","closeModal","modal","clear_queue","dialogs","common","header","buttons","dialog_options","flag","modal_class","dialog","ok_button","cancel_button","optional_buttons","reverse","inverted_buttons","img_details","append","xabber","switchClass","hasClass","blob_image_from_clipboard","appendChild","bottom_text","escape_button","input_placeholder_value","input_value","val","option","target","$options","user_value_input","$item","user_value","warning","error","ask","ok_text","cancel_text","ok_button_text","cancel_button_text","ask_extended","optional_button","optional_button_text","ask_enter_value","resend_button","resend_to","resend_button_text","notify","placeCaretAtEnd","el","focus","getSelection","createRange","body","createTextRange","textRange","moveToElementText","collapse","select","range","selectNodeContents","sel","removeAllRanges","addRange","updateRichTextarea","getTextFromRichTextarea","flushRichTextarea","pasteHtmlAtCaret","getRangeAt","rangeCount","deleteContents","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","insertNode","cloneRange","setStartAfter","selection","pasteHTML","$div","replaceWith","$this","remove","klass","condition","arguments","showIf","hideIf","getHyperLink","prot","escaped_url","encodeURI","decodeURI","escape","e","hyperlinkify","obj","$obj","html_concat","url_regexp","childNodes","forEach","$node","outerHTML","tagName","nodeName","list","match","from","Set","decode_uri","replaceAll","RegExp","utils","uuid","c","r","random","utoa","str","btoa","unescape","encodeURIComponent","atou","decodeURIComponent","pretty_time","timestamp","format","pretty_date","pretty_datetime","pretty_short_datetime_recent_chat","startOf","isSame","subtract","pretty_short_datetime","datetime","day","year","pretty_short_month_date","isImageType","getDomainFromUrl","a","test","hostname","isVideoType","file_type_icon","mime_type","filetype","pretty_file_type","file_type_icon_svg","pretty_file_type_with_article","includes","pretty_size","isNaN","toFixed","pretty_duration","duration","trunc","pretty_name","substr","toLowerCase","getKeyByValue","object","Object","keys","key","slice_string","to","isNumber","slice_pretty_body","mutable_refs","filter","m","pretty_body","ref","start","end","markupBodyMessage","message","mention_tag","attrs","clone","attributes","mentions","markups","mutable_content","blockquotes","markup_body","original_message","muted","mention","start_idx","end_idx","is_gc","jid","me","markup","start_tags","end_tags","mark_up_style","uri","quote","child_idx","getOS","platform","navigator","os","isOverflownWidth","element","scrollWidth","clientWidth","isOverflownHeight","scrollHeight","clientHeight","render_data_form","data_form","$data_form","fields","field","$fixed_field","label","values","$input","var","copyTextToClipboard","callback_msg","errback_msg","clipboard","writeText","then","info_msg","callback_popup_message","time","$body","$popup_msg","count","openWindow","errback","win","clearSelection","empty","getCookie","matches","cookie","undefined","isMobile","Android","userAgent","BlackBerry","iOS","Opera","Windows","any","fromBase64toArrayBuffer","b64_string","buffer","ArrayBuffertoBase64","arrayBuffer","generateHOTPKey","async","secret","counter","Crypto","crypto","subtle","counterArray","padCounter","importKey","sign","ArrayBuffer","bView","DataView","bCounter","byte","byteValue","parseInt","setUint8","DT","HS","truncate","uKey","Sbits","generateHOTP","hmacSha256","stringToArrayBuffer","string","AES","ALGO_NAME","decoder","TextDecoder","encoder","TextEncoder","decrypt","masterKey","HMACData","payload","masterObj","hkdfCtrParams","salt","info","deriveBits","encryptionKey","authenticationKey","iv","generatedHMAC","byteLength","decryptedBuffer","decode","encrypt","plaintext","getRandomValues","encrypted","generateAESencryptedMessage","keydata","encryptOptions","encodedPlaintext","encode","arrayBufferConcat","joined","set","generateAESKey","algo","generateKey","getBrowser","userAgentString","chromeAgent","IExplorerAgent","firefoxAgent","safariAgent","operaAgent","images","modals","client_translation_progress","bc","BroadcastChannel","onmessage","event","disabled_client","postMessage","Backbone","Model","defaults","version_number","actual_version_number","client_id","substring","client_name","initialize","env","fetchURLParams","cleanUpStorage","initDefaultLanguage","detectMediaDevices","mediaDevices","ondevicechange","_settings","Settings","storage_name","getStorageName","fetch","settings","location","host","pathname","_cache","ModelWithStorage","cache","save","cacheFavicons","extendFunction","check_config","plyr_players","current_plyr_player","on","throwNewVersion","onQuit","_version_interval","setInterval","readActualVersion","console","log","lang","language","loadTranslations","Promise","reject","default_translation","translation","setLocale","translations","default_lang","_translations","use","init","lng","debug","pluralSeparator","resources","changeLanguage","locale","getFixedT","getOneLiners","exists","t","getQuantityString","services","pluralResolver","getRule","_count","compatibilityJSON","suffix","getSuffix","msg","warn","pretty_last_seen","seconds","calendar","rawFile","XMLHttpRequest","onreadystatechange","readyState","status","json","responseText","JSON","parse","version_description","send","trimStart","trimEnd","indexedDB","databases","db","deleteDatabase","accounts","acc","cached_roster","database","cached_sync_conversations","cached_server_features","full_storage_name","localStorage","startsWith","removeItem","getMediaDevices","media_devices","callback","enumerateDevices","devices","device","kind","catch","err","done","reload","max_connection_retries","notifications","notifications_private","notifications_group","notifications_volume","message_preview_private","message_preview_group","private_sound","group_sound","background","side_panel","theme","blur","transparency","appearance","vignetting","main_color","sound_on_private_message","sound_on_group_message","call_attention","load_media","typing_notifications","mapping_service","sound_on_call","sound_on_dialtone","sound_on_connection","sound_on_attention","sound_on_auth_request","hotkeys","avatar_shape","load_history","mam_requests_limit","mam_messages_limit_start","mam_messages_limit","ping_interval","reconnect_interval","configure","config","pick","log_level","PRIVACY_LOAD_MEDIA","PRIVACY_TYPING_NOTIFICATIONS","PRIVACY_MAPPING_SERVICE","isArray","ios_msg","android_msg","any_mobile_msg","self","useLocalStorage","ignore_localstorage_warning","ignore","requestNotifications","granted","splitted_url","splitted_url_anchor","url_params","param","history","pushState","STORAGE_NAME_ENDING","Notification","permission","ignore_notifications_warning","notifications_placeholder","NotificationsPlaceholder","extendWith","reduce","instance","module","base","applyTo","View","template","parent","vname","children","classlist","view","ps_selector","ps_container","perfectScrollbar","ps_settings","visible","onChangedVisibility","updateCSS","size_changed","windowResized","_initialize","__initialize","isVisible","show","onShow","apply","updateScrollBar","hide","onHide","render","child","addChild","constructor","removeChild","soft","removeChildren","view_id","setCustomCss","styles","removeCustomCss","removeAttr","saveScrollBarOffset","getScrollTop","scroll_top","scrollTo","scrollTop","scrollToTop","scrollToBottom","offsetHeight","scrollToChild","$child","prevAll","sum","getScrollBottom","getPercentScrolled","isScrolledToTop","isScrolledToBottom","tree","patchTree","has","className","new_view","events","keyUpOnSearch","stopPropagation","ids","map","toArray","$selection","getSelectedItem","selectNextItem","selectPreviousItem","onEnterPressed","clearSearch","updateSearch","selection_id","selectItem","arrow","clearSearchSelection","first","offsetTop","_update_search_timeout","query","search","onEmptyQuery","searchAll","keyUpOnSearchWithQuery","onClickItem","updateSearchWithMessages","search_messages","onScrollY","queryid","_loading_messages","_messages_loaded","query_id","account","first_message","searched_msgs_loaded","before","MAMRequest","query_text","messages","$message_item_view","message_from_stanza","chats","receiveChatMessage","is_searched","msg_idx","model","insertBefore","eq","onScroll","getSelectedItemWithQuery","selectNextItemWithQuery","selectPreviousItemWithQuery","selectItemWithQuery","main_container","clearTimeout","keyup_timeout","saved_chat","getSavedChat","item_view","updateLastMessage","query_chats","comparator","sort","contact","searched_by","chat_item","prepend","screen","contacts","hash_id","chat_id","item_list","getChat","clear_search","searchMessages","preloader","max","iq","$iq","xmlns","NS","MAM","DATAFORM","up","cnode","RSM","toXML","handler","connection","addHandler","sendIQFast","deleteHandler","$fin","field_type","input_widget","field_name","placeholder","$value","$btn","updateValue","input_mode","onChangedInputMode","bindModelEvents","model_field","showInput","keyDown","getValue","changeValue","keyUp","setValue","new_value","screen_map","update","onScreenMapChanged","updateBackground","updateMainColor","updateAvatarShape","insertAfter","addScreen","siblings","shape","background_settings","updateBoxShadow","updateBlur","setScreen","unbind","new_attrs","stamp","uniqueId","isScreen","right","right_contact","changed","screen_changed","toolbar","state","setAttribute","getAttribute","removeAttribute","onUpdatedScreen","onChangedAllMessageCounter","onChangedGroupMessageCounter","onChangedMentionsCounter","onChangedMessageCounter","msg_counter","group_msg_counter","all_msg_counter","mentions_counter","dropdown","inDuration","outDuration","constrainWidth","hover","alignment","updateColor","contains","showAllChats","closest","is_active","showChats","showGroupChats","showArchive","showChatsByAccount","right_contact_save","showSearch","showContacts","showMentions","showSettings","showAddContactView","showAddAccountView","showAddIncognitoGroupChatView","incognito","showAddPublicGroupChatView","public","showAbout","setAllMessageCounter","count_msg","count_all_msg","count_group_msg","isMuted","incoming_subscriptions","unread_mentions","msgs","all_msgs","group_msgs","recountAllMessageCounter","unread_messages","jingle_message_calling","avatar_size","onDestroy","updateCallingStatus","updateButtons","updateCollapsedWindow","updateName","updateStatusText","updateAccountJid","dismissible","ready","updateAvatar","pos1","pos2","pos3","pos4","mousedown","clientX","clientY","didDrag","onmouseup","onmousemove","top","left","setFullScreen","local_video","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullScreen","cancelFullScreen","exitFullscreen","fullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitCurrentFullScreenElement","msExitFullscreen","msFullscreenElement","shareScreen","isFullScreen","webkitFullscreenElement","accept","initSession","clickOnWindow","toggle","toggleClass","toggleMicrophone","videoCall","toggleVolume","cancel","plyr_player_popup","onVisibilityChange","updatePlyrControls","player","controls","youtube","disablekb","iv_load_policy","modestbranding","rel","showinfo","other","$audio_elem","voice_message","stopTime","detail","minimizePopup","showNewVideo","provider","updateColorScheme","player_item","message_unique_id","source","sources","video_src","once","$minimize_element_float","$minimize_element_full","$show_message_element_full","play","closePopup","visibility_state","hidePopup","floatPopup","fullPopup","nextPlyr","player_index","next_item","f_url","previousPlyr","prev_item","openMessage","showDetailsRight","right_saved","getMessageContext","togglePlay","content","renderVoiceMessage","toggleMute","checked","sound_private_value","sound_group_value","updateDescription","updateBackgroundSetting","updateSidePanelSetting","belowOrigin","blur_switched","vignetting_switched","material_color","variations","v","hex","tone","weight","side_panel_settings","transparency_switched","cid","jumpToBlock","$tab","$elem","setNotifications","$target","requestPermission","setPrivateNotifications","setGroupNotifications","setPrivateMessagePreview","setGroupMessagePreview","setCallAttention","setLoadMedia","setTypingNotifications","setMappingService","setPrivateSound","current_sound","pause","setGroupSound","setCallSound","setDialtoneSound","setAttentionSound","setBackground","setSidePanelTheme","setSidePanelBlur","changeBackgroundImage","openColorPicker","colorPicker","openMainColorPicker","mainColorPicker","changeBlur","switchTransparency","is_switched","changeNotificationsVolume","volume","sound","changeTransparency","changeVignetting","switchVignetting","switchBlur","setHotkeys","setAvatarShape","deleteAllAccounts","progress","progress_text","platform_text","color_scheme","min","setColor","materialColors","color_picker","$color_hex","updateInputField","keyUpInput","focusoutInputField","selectColor","color_name","backgrounds_gallery","onpaste","onPaste","createLibrary","draggable","ondragenter","ondragover","ondragleave","relatedTarget","ondrop","files","dataTransfer","addFile","loadMoreImages","getImagesFromXML","patterns_library","img_library","request","dataType","success","onGetPatternsCallback","onGetImagesCallback","ajax","img","thumbnail","$img","fs_img","clipboardData","getData","updateActiveButton","updateActiveMenu","screen_name","updateScreen","$active_screen","non_active","current_count","img_sources","setActiveImage","onFileInputChanged","image_prev","onInputChanged","addBackground","dfd","headers","about","onmousedown","onMouseDown","onMouseMove","onMouseUp","which","draghandle_elem","elem","resetElem","downX","pageX","downY","pageY","avatar","abs","createAvatar","coords","getCoords","shiftX","shiftY","startDrag","style","drop_elem","findDropElem","updateDropElem","querySelector","finishDrag","box","getBoundingClientRect","pageYOffset","pageXOffset","$avatar","old","parentNode","nextSibling","position","zIndex","avatar_cursor","cursor","draghandle_elem_cursor","rollback","hidden","elementFromPoint","old_drop_elem","modal_settings","in_duration","out_duration","opacity","minScrollbarLength","suppressScrollX","wheelSpeed","startBlinkingFavicon","_blink_interval","$icon","favicon","favicon_message","stopBlinkingFavicon","clearInterval","resetMessageCounter","onChangedFocusState","popupNotification","notification","playAudio","loop","filename","Audio","stopAudio","registerDOMEvents","innerWidth","innerHeight","focused","hasFocus","Materialize","modalSettings","drag_manager","DragManager","Body","login_page","NodeView","toolbar_view","ToolbarView","blur_overlay","main_panel","left_panel","right_panel","right_contact_panel","wide_panel","placeholders_wrap","settings_view","SettingsView","api_service","idAttribute","to_sync","synced","deleted","update_timestamp","update_settings","request_data","CollectionWithStorage","create_from_server","settings_item","create","token","sync_all","_attrs","settings_list","connected","sync_request","fcm_subscribe","fcm_unsubscribe","from_token","action","synchronize_main_settings","synchronize_order_settings","get_settings","social_auth","social_login","login_by_token","_call_method","method","context","textStatus","jqXHR","errorThrown","onAPIError","stringify","add_source","account_status","onUserData","onSettings","onSettingsFailed","delete_settings","where","settings_data","order_timestamp","order","order_data","fetch_from_server","deleted_list","order_list","order_map","max_order","order_item","response","responseJSON","reason","_login","credentials","password","login","onLogin","onLoginFailed","onLoginByToken","onLoginByTokenFailed","onSocialLogin","onSocialLoginFailed","revoke_token","storage","clear","xmpp_binding_jid","xmpp_binding","full_id","linked_email_list","email_list","linked_social","social_bindings","logout","delete_accounts","endpoint_key","$username_input","$password_input","onChangeAuthenticationState","onRender","authFeedback","updateTextFields","submit","errorFeedback","authentication","onChangeConnected","successFeedback","socialAuth","origin","xabber_login_by_email","auth","xabber_login","changeLoginType","openXmppLoginPanel","add_xabber_account","renderAccountItem","bindAccount","add_contact_account_item","selectAccount","loginXabberAccount","authXabberAccount","sync_settings","to_sync_map","accounts_map","deleted_map","settings_map","deleted_item","sync_way","sync_choose","acc1","acc2","addAccountHtml","updateSyncOptions","$account_el","sync_settings_account_item","updateAccountHtml","account_wrap","$account_wrap","account_item","mdiclass","$sync_icon","changeSyncAll","changeSyncOne","changeSyncWay","syncSettings","do_sync","xabber_account","updateForConnectedStatus","default_color","updateLastSyncInfo","updateSocialBindings","updateSyncButton","updateExpanded","changeExpanded","expanded","linked_emails","$social_item","email","email_id","email_address","is_verified","verified","linked_email_item","social","social_provider","social_name","linkSocial","mail","mail_data","openAccount","verifyEmail","unlinkSocial","$social_html","deleted_mail_index","splice","social_list","deleted_social_index","sync","last_sync","time_delta","fromNow","synchronize","onPasswordResetFailed","setPassword","verified_email","account_settings_list","AccountSettingsList","AccountsOrderTimestamp","api_account","APIAccount","xabber_login_panel","XabberLoginPanel","APIAccountView","add_api_account_view","AddAPIAccountView","email_auth_view","LogLevel","WARN","ERROR","addConnectionPlugin","_connection","conn","Status","addNamespace","REGIFAIL","REGISTER","REGISTERED","CONFLICT","NOTACCEPTABLE","disco","addFeature","addNode","items","reset","instructions","registered","connect_cb","_connect_cb","req","raw","_registering","_check_user","_register_cb_check_user","processed_features","_connect_cb_data","_register_cb","xmlInput","Connection","rawInput","auth_old","authenticate","matched","domain","authzid","getBareJidFromJid","authcid","getNodeFromJid","pass","connect_callback","connect","wait","hold","route","getDomainFromJid","connect_check_user","connect_change_password","registerSASLMechanisms","SASLAnonymous","SASLExternal","SASLMD5","SASLPlain","SASLSHA1","_callback","bodyWrap","_proto","_reqToData","strip","serialize","CONNFAIL","register","getElementsByTagName","mechanisms","_no_auth_received","_changeConnectStatus","_addSysHandler","_get_register_cb","stanza","getText","_submit_cb","error_text","SASLHOTP","SASLMechanism","onChallenge","out","len","charAt","utf16to8","hotp_pass","ConnectionManager","auth_type","registerSASLMechanism","_sasl_data","SASLXOAuth2","reconnect","_attemptSASLAuth","sortMechanismsByPriority","mechanism_found","_sasl_success_handler","_sasl_success_cb","_sasl_failure_handler","_sasl_failure_cb","_sasl_challenge_handler","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","$build","SASL","mechanism","isClientFirst","hotp_counter","_sasl_auth1_cb","features","do_bind","do_session","namespaceURI","AUTH_DEVICES","x_token_auth","SYNCHRONIZATION","server_features","do_synchronization","SUBSCRIPTION_PREAPPROVAL","x_token","expire","getXToken","expires_at","token_uid","_send_auth_bind","AUTHFAIL","_sasl_bind_cb","resource","getResourceFromJid","BIND","old_token","uniq_id","iqtype","Websocket","_onIdle","_conn","_data","paused","rawStanza","_buildStream","xmlOutput","rawOutput","socket","_pending_stanzas","xmlunescape","reg_exp","testRegexp","replaceRegexp","vcard","xmlToObject","$vcard","nickname","fullname","middle_name","birthday","job_title","role","description","jabber_id","org","photo","phone","address","group_info","anonymous","searchable","status_msg","members_num","$org","unit","$photo","number","work","home","mobile","pobox","extadd","street","locality","region","pcode","country","VCARD","sendIQ","objectToXml","getBlank","updateRefreshButton","getVCard","$info","$addr_info","show_addr_block","addr","onClickIcon","$target_value","copied_text","value_text","refresh","vcard_right","vcard_edit","pickadate","selectMonths","selectYears","autoOk","allowKeyboardControl","today","onClose","activeElement","weekday_display","date_display","navPrev","navNext","selected","buttonClear","buttonClose","evt","updateSaveButton","setData","changePlaceholder","nickname_placeholder","setVCard","$pres","Images","enabled","status_message","priority","auto_login_xa","account_unique_id","groupchat_servers_list","retraction_version","is_new","auth_view","is_invalid","last_msg_timestamp","collection","getLastOrder","deleteAccount","photo_hash","session","reconnected","ready_to_send","conn_retries","conn_feedback","_waiting_code","code_requests","gallery_code_requests","xabber_auth","onChangedConnected","websocket_connection_url","conn_manager","_added_pres_handlers","_pending_messages","dfd_presence","password_view","_init_plugins","plugin","xml","isOnline","getPassword","isConnected","sendMsg","authenticated","disconnecting","sendMsgPending","sendMsgFast","getConnectionForIQ","fast_connection","sendFast","nodeTree","is","pubAvatar","removeAvatar","http_avatar","avatar_hash","iq_pub_metadata","PUBSUB","PUBSUB_AVATAR_METADATA","thumbnails","PUBSUB_AVATAR_METADATA_THUMBNAIL","data_error","iq_pub_data","PUBSUB_AVATAR_DATA","uploaded","generated","uploadAvatar","getAvatar","iq_request_avatar","pubsub_avatar","is_iq","parseDataForm","$dataform","$field","field_var","field_label","field_value","field_options","$option","lbl","addDataFormToStanza","$stanza","field_attrs","sendPres","verifyXabberAccount","createFastConnection","token_invalidated","fast_conn_manager","disconnect","onFastConnected","reconnecting","auth_failed","restoreStatus","connectionCallback","is_fast","timeout","connFeedback","reconnectionCallback","loginCallback","conn_status","conn_condition","onConnectionConflict","CONNECTED","onTokenRevoked","onAuthFailed","DISCONNECTED","flush","connectXabberAccount","iq_private_storage","PRIVATE_STORAGE","requestPassword","api_jid","request_id","verifying_code","verifying_mess","idx_verifying_code","iq_send_auth_mark","msg_attrs","from_jid","is_archived","createMessageFromIQ","max_retries","registerCallback","$nickname_input","errorRegistrationFeedback","changePasswordCallback","settings_right","account_password_view","old_password","change_password_connection","change_password_connection_manager","CONNECTING","stepped_auth","resetAuthStepper","authStepperStart","endAuth","stepper_auth_error","CONNTIMEOUT","authStepperError","destroy","no_reconnect","old_device_token","getAllXTokens","tokens_list","tokens","$token","client","last_auth","ip_address","ip","x_tokens_list","updateXTokens","on_token_revoked","onReconnected","onConnected","onDisconnected","afterConnected","_after_connected_plugins","_after_fast_connected_plugins","_after_reconnected_plugins","sendPendingStanzas","sendPendingMessages","registerPresenceHandler","enableCarbons","getAllMessageRetractions","query_options","REWRITE","version","omemo","getRetractVersion","retractions_query","Builder","is_msg","b","msg_iq","unique_id","DELIVERY","disconnected_timestamp","last_stanza_timestamp","deactivate","CARBONS","is_callback","isFunction","vcard_updated","avatar_priority","vcardPhotoUpdated","getStatusMessage","setStatus","status_updated","status_prev","sendPresence","activate","getAvatarHash","from_avatar","decoded_raw","bin","VCARD_UPDATE","caps","createCapsNode","block_name","has_settings_right","settings_left","revokeXToken","token_num","revokeAllXTokens","show_settings","show_settings_after_delete","deleteDataBase","registerIQHandler","_stanza_handler","onGetIQ","registerSyncedIQHandler","_synced_stanza_handler","onSyncedIQ","_pres_handler","presence","onPresence","onSetIQResult","roster","syncConversations","request_code","$incoming_iq","$confirm","HTTP_AUTH","$session_availability","JINGLE_MSG","onAuthCode","$session_availability_response","session_id","testGalleryTokenExpire","currentTime","tokenExpireTime","initGalleryAuth","gallery_feature","handleCommonGalleryErrors","confirm_code","expires","prepareFiles","onloadend","b64","testFile","getStorageStats","uploadFile","formData","FormData","voice","processData","deleteFile","file_id","getOpenGraphData","site","ogp","image_height","image_width","video_url","mergeContact","$presence","bare_jid","$vcard_update","VCAD_UPDATE","resource_obj","$device","addInitPlugin","func","addConnPlugin","reconn","addFastConnPlugin","models","getEnabledList","getConnectedList","onAdd","onUpdatedOrder","onListChanged","onAccountDisconnected","onQuitAccounts","onSettingsAdded","last","used_colors","colors","moveBefore","index2","prev_order","at","_updateOrder","moveToBottom","index","toolbar_item","updateConnected","updateAuthState","updateStatus","setActive","filterChats","updateList","updateOneInList","onAccountRemoved","after","resource_right","Collection","r1","r2","p1","p2","requestInfo","$identity","attention_supported","isFeatureSupported","ATTENTION","ns","is_supported","renderByInit","onResourceAdded","onResourceRemoved","onReset","onPriorityChanged","updatePosition","showEditView","media_gallery_account","onUpdateAvatars","updateStorage","loading_files","current_page","total_pages","current_options","page","getFiles","after_deletion","after_avatar_update","used_storage","total","used","quota","videos","voices","tabs","filterType","sorting","order_by","getAvatars","onTabClick","sortFiles","sort_type","onClickFile","prev_audio_message","file_url","not_expanded_msg","$msg_element","audio_file_waveform","waveform_id","aud","createAudio","round","getDuration","unAll","timerId","cur_time","getCurrentTime","isPlaying","onchange","setVolume","container","scrollParent","barWidth","barHeight","cursorColor","autoCenter","normalize","hideScrollBar","progressColor","load","assign","obj_per_page","current_rendered_type","renderFiles","total_objects","tab","$gallery_file","media_gallery_account_file","svg_icon","media_type","filesize","closeOnContentClick","fixedContentPos","mainClass","verticalFit","titleSrc","zoom","deleteAvatar","deleteFilesFiltered","days","date","setDate","getDate","toISOString","date_lte","openStoragePanel","status_field","updateBlocks","updateGallery","updateNameCSS","$name","wrap_width","font_size","chooseAvatar","openEmojiPanel","openWebcamPanel","changeAvatar","openChangeStatus","gallery_view","vcard_view","updateView","showConnectionStatus","updateSynchronizationBlock","updateReconnectButton","updateSyncOption","updateDelSettingsButton","updateSyncState","updateEnabled","updateEnabledOmemo","updateEncryptedChatstates","dropdown_settings","showResources","resource_id","hideResources","renderAllXTokens","sortBy","pretty_token","findWhere","toJSON","$cur_token_html","current_token_item","$token_html","token_item","has_keys","omemo_enable_view","setEnabled","setEnabledOmemo","initOmemo","destroyOmemo","setTypingNotification","openDevicesWindow","omemo_devices","purgeKeys","device_id","bundle","preKeys","own_devices","ik","fingerprint","removeItemFromNode","OMEMO","showPasswordView","changeSyncSetting","deleteSettings","delete_account","changeColor","openBlockWindow","block","blockContact","unblockSelected","blocklist","deselectBlocked","global_settings_item","onDragTo","onMoveAccount","onMoveAccountToBottom","updateHtml","change_status","highlightStatus","restoreStatusMessageInput","changeStatus","do_change","clearStatusMessageInput","verbose_status","apply_to_all","changeApplyToAll","avatars_gallery","current_items","current_file","addAvatar","img_from_gallery","createFileFromURL","webcam_panel","registration","registration_view","streaming","startbutton","startupStream","srcObject","getTracks","track","stop","getUserMedia","stream","takePicture","clearPhoto","fillRect","globalCompositeOperation","beginPath","arc","PI","closePath","saveAvatar","member_details_avatar_size","emoji_panel","emoji_panel_view","openEmojiPicker","emoji_picker","readEmojisJSON","emojis","emoji_picker_tabs","pickEmojiTab","pickEmoji","change_password","is_login","getActionName","$old_password_input","$password_confirm_input","password_confirm","$jid_input","updateOptions","at_idx","registerFeedback","registration_success","authStepperShow","getWebsocketURL","DISABLE_LOOKUP_WS","protocol","socket_url","xmpp_login","$domain_input","handleRegistrationStep","stepped_auth_complete","updateDomains","updateAuthDomains","openButtonsMenu","keyUpNickname","openNextStep","keyUpJid","_check_user_timeout","setCustomDomainRegistration","regexp_local_part","regexp_domain","_registration_username","_registration_domain","auth_connection","handleRegisterStanza","auth_conn_manager","checkUserCallback","keyUpPassword","keyUpDomain","keyUpLogin","focusoutDomain","username_taken","_supports_check_user","class","user_success","_check_user_connection_timeout","_no_response","openPreviousStep","step","checkFeaturesStepper","successRegistrationFeedback","registerWithoutAvatar","logoutAndRegister","openRegisterForm","openLoginForm","all_servers","setCustomDomainAuth","$property_value","changePropertyValueRegistration","$property_item","changePropertyValueAuth","timeout_timer","HTTP_UPLOAD","first_features_received","auth_error","add_account","xmpp_login_panel","XmppLoginPanel","account_settings","acc_settings_left","Container","acc_settings_right","Accounts","ToolbarAccountsBlockView","SettingsAccountsBlockView","add_account_view","AddAccountView","onbeforeunload","login_screen","supports","addIdentity","LAST","CHATSTATES","BLOCKING","PING","CHAT_MARKERS","GEOLOC","ARCHIVE","GROUP_CHAT","namespace","verbose_name","feature","onFeatureAdded","getAllFromCachedFeatures","is_cached","onInfo","onItems","addItem","form_type_val","URLDISCO","media_gallery_url","MEDIAGALLERY","_var","client_feature","client_features","putInCachedFeatures","_last_stanza_handler","_pong_handler","ping","addPingHandler","pong","deleteTimedHandler","_ping_handler","addTimedHandler","downtime","last_fast_stanza_timestamp","_last_fast_stanza_handler","_fast_pong_handler","_fast_ping_handler","_onDiscoInfo","DISCO_INFO","_onDiscoItems","DISCO_ITEMS","Emoji","subscription","subscription_request_in","subscription_request_out","groups","group_chat","onChangedGroupchat","full_jid","server","roster_name","isBlocked","blocked","chat_settings","b64_sha1","updateCachedInfo","out_request","status_text","online_members_num","getSubscriptionStatuses","subscription_preapproved","in_request","status_description","status_out_color","status_in_color","status_out_text","status_in_text","status_out","status_in","getIcon","getFromRoster","cached_info","roster_info","in_roster","putInRoster","updateCounters","participants","getBlockedParticipants","getLastSeen","last_seen","getLastSeenStatus","getMyInfo","participantsRequest","properties","cached_avatar","getAvatarInfoById","createFromStanza","my_info","avatar_b64","my_rights","message_time","pres","pushInRoster","ROSTER","group","removeFromRoster","acceptRequest","askRequest","blockRequest","declineRequest","declineSubscription","declineSubscribe","deleteWithDialog","is_group","msg_text","bold","localpart","delete_history","retractAllMessages","deleteFromSynchronization","blockWithDialog","unblockWithDialog","unblock","sendPresent","_sending_present_interval","sendNotPresent","handlePresence","$group_chat_info","updateGroupChatsList","details_view","group_chat_info","parseGroupInfo","prev_group_info","$status_message","_reset_status_timeout","$group_chat","$model","privacy","$index","$description","pinned_message","prev_pinned_message","private_chat","$online_members_num","pinned_msg_elem","$pinned_message","getMessageByStanzaId","$message","parsePinnedMessage","getAllRights","iq_get_rights","iq_all_rights","all_permissions","all_restrictions","all_rights","permissions","restrictions","stanza_id","$msg","fast","is_groupchat","filter_image","filter_video","filter_voice","filter_files","opt_var","onStartedMAMRequest","callb","onCompletedMAMRequest","rsm","errb","getFilesFromStanza","references","REFERENCE","reference","$reference","$file_sharing","FILES","VOICE_MESSAGE","$file","file_attrs","HASH","uniqueid","created_at","has_encrypted_files","renderPinnedMessage","locations","fwd_message","fwd_msg_author","concat","user_info","chat_content","is_scrolled","pinned_msg","author","fwd_author","pinned_msg_html","group_chats","height_pinned_msg","resetStatus","searchByParticipants","participants_list","showDetails","scrolled_top_chats_view","scrolled_top_chat","details_view_right","details_view_right_encrypted","contact_searched_messages_view","hideSearch","showSearchMessages","set_status","getStatuses","updateIcons","ic_name","iq_get_properties","renderStatuses","f","$status_item","status_item","iq_set_status","interval_last","selectView","updateGroupChat","updateIcon","onBlocked","updateStatusMsg","lastSeenUpdated","new_status","is_group_chat","contact_right_item","showJid","hideJid","clickOnItem","contact_left_item","updateDisplayStatus","updateBlockedState","updateMutedState","onResourceUpdated","showVCard","hideVCard","contact_details","name_field","resources_view","edit_groups_view","updateJingleButtons","updateSubscriptions","setButtonsWidth","widths","button","is_blocked","is_server","showQRCode","qrcode","VanillaQR","noBorder","domElement","$label_outcoming","$label_incoming","prev","onChangedSubscription","openChat","voiceCall","initCall","initJingleMessage","deleteContact","unblockContact","changeNotifications","muteChat","addContact","requestAuthorization","contact_details_right","contact_edit_view","updateNotifications","updateChilds","updateIndicator","keydownHandler","hideEdit","isOpen","scrollToTopSmooth","animate","bottom_block_scroll","showEdit","muted_seconds","mute_type","unmuteChat","$search_form","changeList","list_name","scrollLeft","addList","_render","constructor_func","group_chat_details","member_avatar_size","group_chat_properties","group_chat_status","group_chat_properties_edit","default_restrictions_edit","is_owner","change_group","editProperties","editDefaultRestrictions","leaveGroupChat","inviteUser","getInvitations","deleteGroup","group_chat_details_right","default_restrictions_edit_right","hideRestrictions","showRestrictions","clearHistory","head","edit_view","group_status","group_status_right","$target_info","label_name","group_chat_properties_right","hideMoreDescription","all_fixed","saveChanges","has_changes","checked_inp","text_inp","textarea","field_idx","$result","err_text","$error","updateInvitations","user","$item_view","invited_member_item","showInviteButton","revokeInvitation","$member_item","member_jid","updateRemoveParticipantButton","revokeInvitationByElement","participant","temporary_items","all_messages_loaded","messagesFileRequest","updateMedia","active","last_rsm_message","loading_messages","loadMoreFiles","updateForParticipant","delegateEvents","filter_type","filterEncryptedFiles","encryptedFilesHandler","files_count","decryptFile","updateEncryptedMedia","is_loaded","true_voice","media_item","media_items_empty","messages_count","msg_items","fail","searched_message","gallery","parents","searched_messages","updateBlockedParticipants","showBlockButton","unblockUser","tag","unblockUserByElement","blockId","onParticipantsUpdated","updateParticipantsList","participant_properties_panel","updateParticipants","groupchat_settings","resetParticipantsList","resetParticipants","setParticipantsListVersion","updateVersion","renderParticipants","renderMemberItem","blockParticipant","kickParticipant","kick","badge","is_me","pretty_present","present","isValid","group_member_item","prependTo","updateMemberAvatar","member","getB64Avatar","getHashAvatar","avatar_url","updateCachedAvatars","showParticipantProperties","participant_item","participant_id","keyUpSearch","searchParticipant","participants_right_panel","onParticipantsChanged","kickParticipantDialog","group_member_item_right","showParticipantPropertiesEdit","showNamePanel","changeBackButton","participant_rights","onBadgeUpdated","new_avatar","$member_info_view","is_myself","is_blocked_contact","incognito_chat","private_participant_details","participant_details_item","participant_messages","actual_rights","setActualRights","new_nickname","updateNickname","updateRightsView","getMessages","messages_view","messagesRequest","changeTimerValue","$input_item","updateBadge","$member_item_nickname","xmlescape","editNickname","editBadge","edit_badge_panel","checkKeydown","checkKeyup","retractUserMessages","retractMessagesByUser","restriction_expire","restriction_item","right_expire_variants","right_name","expire_options","getPrivateChat","participant_jid","participant_in_roster","iq_response","group_jid","createSystemMessage","private_chat_jid","changeRights","$right_item","saveRights","member_id","$participant_avatar","nickname_value","changed_avatar","rights_changed","iq_changes","right_item","right_expire","iq_rights_changes","participant_details_right","private_participant_details_item_right","participant_details_item_right","participant_name_field","participant_badge_field","hidePanel","resetPanel","changeName","changeBadge","clickAvatarInput","setVisibility","$current_restriction","new_badge","badge_edit_view","typeEmoticon","_timeout","$insert_emoticon","$emoji_panel_wrap","$emoji_panel","$emoji_list_wrap","saveNewBadge","emoji_node","checkKey","default_restrictions","actual_default_restrictions","showDefaultRestrictions","restriction_name","restriction_expires","restriction","changeRestriction","changePropertyValue","iq_change_default_rights","has_new_default_restrictions","changeExpiresTime","expire_time_item","new_expire_time","$restriction_item","default_restrictions_right","getBase64Avatar","getParticipantsListVersion","getCachedParticipants","getParticipantsList","mergeParticipant","getRights","rights","pretty_rights","issued_time","expires_time","updatePinnedMessage","$response","removeParticipantFromList","photo_url","updateParticipant","participants_lists","all_participants_lists","participants_list_idx","participant_info","chat_participants","participant_idx","setParticipantsList","updated_participants_list","invitation","closeChat","readMessages","blockInvitation","contact_jid","iq_get_blocking","iq_unblocking","iq_set_blocking","iq_blocking_items","item_jid","getDefaultName","group_name_input_widget","force_reset","description_input_widget","changeDescription","onUpdate","args","all_groups","notSpecial","groups_checkbox_list","groups_list","groups_new_group","on_add","_update_template","removeGroup","group_name","removeLastGroup","editGroup","_hide_timeout","checkNewGroup","keyupAddNewGroup","addNewGroup","keydownAddNewGroup","focusinAddNewGroup","focusoutAddNewGroup","edit_contact","updateStatuses","statuses","status_out_class","status_in_class","requestSubscription","allowSubscription","cancelSubscriptionRequest","handleSubscriptionRequest","cancelSubscriptionOut","cancelSubscriptionIn","edit_group","group_name_field","group_description_field","restrictions_count","showMembershipProperty","showIndexProperty","showDescriptionProperty","hideProperty","invitations","actionSelectedParticipants","deselectParticipants","selectParticipant","is_selected","showPanel","original_data_form_values","data_form_index","findIndex","changeMembership","membership_text","membership","changeIndex","index_text","onContactChanged","contact1","contact2","s1","s2","sw1","sw2","sw1_offline","name1","name2","groups_settings","updateCounter","onContactRemoved","onChangedRosterSettings","isSpecial","renameGroup","new_name","removeContact","updateGroupIcon","updateMembersCounter","onContactAdded","updateContactItem","onChangedOfflineSetting","onChangedSortingSetting","mdi_icon","show_offline","roster_settings","group_settings","is_default_show_offline","is_offline","showSettingsIcon","showGroupSettings","group_right","group_left","setOffline","validateName","applySettings","name_error","onGroupAdded","acc_view","removeAllContacts","collections","updateInCollections","addCollection","hasOwnProperty","registerHandler","onBlockingIQ","getFromServer","roster_version","add","addContactToGroup","known_changed","in_roster_changed","groups_changed","groups_to_remove","getGroup","onRosterIQ","syncFromServer","synchronization_with_stamp","is_first_sync","request_attrs","onSyncIQ","last_version_sync","syncCachedConversations","conv_list","request_with_stamp","syncConversation","conversation","parseXML","saved","SYNCHRONIZATION_OLD_OMEMO","$sync_metadata","$group_metadata","is_incognito","is_private","SYNCHRONIZATION_OMEMO","current_call","$unread_messages","chat_timestamp","last_read_msg","last_delivered_msg","last_displayed_msg","unread_msgs_count","is_invite","msg_retraction_version","synced_msg","putInCachedConversations","account_conversation_type","updateEncryptedChat","updateMutedList","removeFromCachedConversations","$jingle_message","getCallingAvailability","sendReject","initIncomingCall","updateEmptyChat","is_unread","delay","messages_unread","isSenderMe","last_message","is_last_sync","sync_timestamp","sync_rsm_after","last_chat_msg_id","encrypted_retract_version","retract_version","conversations_loaded","last_sync_timestamp","getRoster","getAllFromCachedConversations","synced_conversations","request_ver","getAllFromRoster","roster_items","ver","new_roster_version","clearDataBase","onRosterItem","known","onGroupRenamed","onGroupRemoved","updateGroupPosition","group_view","old_name","account_roster_right","updateGlobalCounter","account_roster_left","hashes","hideTabs","selectUnblock","updateUnblockButton","unblockContactByJid","tab_name","hideEmptyContainers","tmp","contact_blocked_item","$domain_wrap","$desc","blocked_list","reg","blocked_contacts_desc","blocked_domains_desc","updateOneRosterView","updateRosterViews","removeRosterView","account_roster_view","roster_right","updateTheme","updateTransparency","updateLayout","pinned","expand","collaps","roster_state_changed","roster_left","updateLeftIndicator","getContactForItem","account_jid","roster_view","setOfflineSetting","setSortingSetting","$parent_el","contact_placeholder","add_contact","group_data","updateGroups","renderGroupsForAccount","stepForward","silent","groups_checkbox_list_contact","checkJid","custom_notifications","message_preview","clearStorage","general_group_name","non_roster_group_name","ModelWithDataBase","put","response_value","get_all","clear_database","delete_database","getFromCachedConversations","getFromCachedFeatures","removeFromCachedFeatures","objStoreName","primKey","roster_item","Boolean","_roster_settings","RosterSettings","roster_settings_view","RosterSettingsView","contacts_view","RosterLeftView","RosterRightView","contact_container","details_container","ContactPlaceholderView","add_contact_view","AddContactView","msgid","updateUniqueId","forwarded_message","getState","getVerboseState","createInvitationFromStanza","is_private_invitation","$delay","markable","archive_id","origin_id","$group_info","group_info_attributes","carbon_copied","is_forwarded","contact_stanza_id","synced_invitation_from_server","parent_chat","auth_request","invite","private_invite","is_accepted","replaced","forwarded","sid","context_message","participant_message","echo_msg","link_references","is_trusted","begin","MARKUP","$mention","child_ref","$geolocation","loc_attrs","lat","lon","OGP","$ogp","link_reference_attrs","original_text","getFileType","x_elem","$user","user_id","user_jid","groupchat_jid","is_sender","participants_version","WEBCHAT","addresses","ADDRESS","$address","only_emoji","synced_from_server","missed_history","missed_msg","pinned_messages","searched_in_contact_messages","context_messages","msg_contact","filereader","exportedMasterKey","enc_file","readAsArrayBuffer","getFilename","url_media","lastIndexOf","full_type","contact_full_jid","volume_on","video_in","video_screen","video_live","registerIqHandler","audio_notifiation","call_initiator","modal_view","RTCPeerConnection","iceServers","sdpSemantics","$remote_video_el","$remote_audio_el","$local_video","current_timer","onconnectionstatechange","onChangeConnectionState","onChangedMediaType","ontrack","remote_stream","streams","_waiting_timeout","onicecandidate","onIceCandidate","oniceconnectionstatechange","onChangeIceConnectionState","setEnabledAudioTrack","onChangedVideoValue","setEnabledVideoTrack","setEnabledScreenShareVideoTrack","onChangedRemoteVideo","onChangedVolume","iq_handler","onIQ","updateTimer","startTimer","call_timer","peer_conn","conn_state","connectionState","_timeout_failed","restartIce","ice","candidate","sendCandidate","iceConnectionState","incoming_video","local_stream","getAudioTracks","default_video","getSenders","sender","createVideoStream","getVideoTracks","stopTracks","createScreenShareVideoStream","video_state","sendVideoStreamState","getDisplayMedia","media_stream","addTrack","replaceTrack","$iq_video","$jingle_initiate","$jingle_accept","$jingle_info","$jingle_video","$result_iq","offer_sdp","JINGLE_RTP","setRemoteDescription","RTCSessionDescription","sdp","acceptSession","answer_sdp","addIceCandidate","RTCIceCandidate","sdpMLineIndex","sdpMid","startCall","createAudioStream","propose","video_track","initVideoTrack","removeTrack","$propose_msg","media","HINTS","$accept_msg","$reject_msg","call_attrs","initiator","p","getImageData","requestAnimationFrame","draw","putImageData","captureStream","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","$iq_offer_sdp","JINGLE","creator","JINGLE_SECURITY_STUB","$iq_candidate","JINGLE_TRANSPORTS_ICE","createAnswer","answer","$iq_answer_sdp","opened","display","displayed_sent","last_displayed_id","last_delivered_id","unread","const_unread","sync_created","onContactDestroyed","onChangedContact","onChangedTimestamp","recountUnread","resetUnread","sendDataForm","variable","setStanzaId","updateMessage","msg_to","endCall","receiveMessage","from_bare_jid","$marker","$receipt_request","RECEIPTS","$receipt_response","$jingle_msg_propose","$jingle_msg_accept","$jingle_msg_reject","iq_to","jingle_start","reject_contact_stanza_id","busy_audio","$stanza_id","$contact_stanza_id","marker_tag","is_mam","sendMarker","receiveMarker","receiveCarbonsMarker","sendDeliveryReceipt","receiveDeliveryReceipt","receiveNoTextMessage","last_blocking_timestamp","current_timestamp","has_blocking","blocking_timestamp","mention_context","stanza_id_context","$delivery_msg","msg_id","by","$displayed","$received","marked_msg_id","marked_stanza_id","msg_state","delivered_time","setMessagesDelivered","setMessagesDisplayed","enc_chat","undelivered_messages","unread_msg","delivered_origin_id","delivered_stanza_id","onRosterPush","retractMessages","symmetric","msgs_responses","num","iq_retraction","removeMessage","user_msgs","retract_attrs","all_messages","showBlockedRequestMessage","muted_value","conversation_options","mute","getConversationType","SYNCHRONIZATION_REGULAR_CHAT","message_counter","updatePinned","updateArchivedState","updateGroupChats","updateEncrypted","updateChatError","updateActiveStatus","onClosed","updateChatCard","onMessageRemoved","onChangedMessageState","updateIncomingSubscription","updateAcceptedStatus","removeInvite","updateEncryptedColor","new_message","updateTextClipping","error_msgs","indicators_count","is_pinned","archived","deletePlayersFromMessage","players","msg_time","is_empty","italics","msg_from","msg_files","msg_images","msg_locations","msg_user_info","$colored_span","is_audio","total_size","first_forwarded_msg","fwd_msg_files","fwd_msg_images","fwd_msg_locations","fwd_msg_txt","openByClick","bottom","click_counter","setDefaultPlaceholder","onChatRemoved","wheelPropagation","loading_history","history_loaded","first_msg_id","last_msg_id","_scrolltop","wheel_ev","defineMouseWheelEvent","onMouseWheel","backToBottom","onwheel","onmousewheel","keyupSearch","renderSearchPanel","onClickMessage","onClickLink","onClickLocationLink","onClickLocation","onHoverLocation","_prev_scrolltop","emptyChat","addMessageHTML","last_index","scrolled_from_top","scrolled_from_bottom","$next_message","nextAll","updateMessageInChat","initPopup","$history_feedback","addMessage","onUpdatePlyr","originalEvent","deltaY","first_history_loaded","last_history_loaded","_scrollbottom","showHistoryFeedback","hideHistoryFeedback","buildMessageHtml","findLastIndex","slideToggle","chat_content_contact","timer","loading_timestamp","loaded_messages","message_count","showMessageAuthor","member_nickname","subscription_buttons","hideElement","sendAndAskSubscription","current_day_indicator","_pending_avatars","updateContentColorScheme","onMessage","onChangedReadState","onChangedActiveStatus","loadLastHistory","requestMissedMessages","onChangedMessageTimestamp","onTrustedChanged","onSubscriptionChange","updateMyInfo","cancelSearch","updateContactStatus","updateWaveforms","getPeer","fingerprints","updateMyName","updateMyStatus","updateMyAvatar","trusted","_loading_history","loadPreviousHistory","backend","drawBuffer","sendChatState","showChatNotification","showDayIndicator","indicator_idx","opacity_value","$chatday_indicator","$messages","indicator","is_saved","connected_deferred","pending_deferred","connected_pending_deferred","_pending_time","_interval","getMessageArchive","previous_history","_load_history_timeout","last_history","last_msg","last_archive_id","is_error","_load_history_feedback_timeout","showPinnedMessage","unpinMessage","pinned_msg_modal","imageOnload","$image_container","$copy_link_icon","videoOnload","initPlyrEmbedPlayer","locationOnload","$copy_location_div","loadLocationInChat","ol","$map_element","Map","center","proj","transform","interactions","interaction_defaults","altShiftDragRotate","doubleClickZoom","keyboard","mouseWheelZoom","shiftDragZoom","dragPan","pinchRotate","pinchZoom","layers","layer","Tile","OSM","mapCanvas","getSize","mapContext","querySelectorAll","globalAlpha","matrix","CanvasRenderingContext2D","setTransform","Path2D","getComputedStyle","translate","msSaveBlob","msToBlob","getElementById","dataURL","setTarget","$chat_state","$subtype","showChatState","_chatstate_show_timeout","_current_composing_msg","updateMentions","mention_target","is_scrolled_to_bottom","startGalleryUploadFile","startUploadFile","notifyMessage","archiveChat","attentionMessage","_pending_my_info","decryptImages","force","fwd_msg","fwd_images","fwd_unique_id","$one_image","$collage_image","initMagnificPopup","initZoomGallery","getImagesInformation","servers","delegate","closeBtnInside","opener","$new_message","short_datetime","new_title","$message_in_chat","content_view","removeMessageFromDOM","next","manageSelectedMessages","_clearing_history","dialog_message","fontcolor","hideShowCursor","current_time","is_popup","createImageGrid","template_for_images","hidden_images","is_video","is_image","is_location","is_file","avatar_id","from_id","audio_player_list","verbose_state","short_time","classes","matching_markup","exec","saved_main","searched","file_upload","main","$img_html","createImage","img_content","createImageContainer","video_content","createVideoContainer","video_el","createVideo","template_for_file_content","copied_attrs","mdi_icon_class","audio_file","audio_player","contact_avatar","file_","upload_id","loading_circle","maxHeight","maxWidth","imgHeight","imgWidth","file_loading","template_for_location_content","location_attrs","template_for_link_reference_content","link_references_attrs","youtube_url_regexp","vimeo_url_regexp","link","site_name","link_reference_chat","$img_html_forward","is_image_forward","images_forward","is_forward_video","is_forward_file","is_forward_location","fwd_markup_body","$f_message","is_fwd_voice_message","fwd_messages_count","fwd_messages_link","img_content_forward","embed_video","getDateIndicator","day_date","msg_players","existing_player","message_id","hideMessageAuthor","pending_avatar","data_avatar","hideFwdMessageAuthor","showFwdMessageAuthor","$fwd_message","msg_elem","$prev_msg","fwd_msg_item","is_system","is_same_sender","is_same_date","$fwd_msg_item","$prev_fwd_message","notification_text","onclick","sendMessage","legacy_body","legacy_fwd_msg","createTextMessage","idx_begin","fwd","idx_end","mention_attrs","blockquote","all_files","created","u","link_reference","property","chat_hash_id","SCE","CLIENT","msg_sending_timestamp","msgCallback","was_reconnecting","saveForwardedMessage","forwarded_messages","onSubmit","fwd_messages","markup_references","attached_files","submitted_here","_dfd_info","new_fwd_messages","upload_service","addFileMessage","is_voice","new_files","file_counter","http_upload_service","deferred_all","addFileSnippets","encrypted_file","encryptFile","new_file","$slot","get_url","put_url","onFileNotUploaded","xhr","abort","onabort","upload","onprogress","percentage","loaded","onFileUploaded","cancelled_files_count","xhr_requests","msg_files_count","is_errored","arrayIndex","is_uploading","setEditedMessageAttachments","setRedactedUploadMessage","is_cancelled","setRequestHeader","response_text","statusText","files_","file_new_format","imgContent","error_type","deleteFilesFromMessages","_chatstate_timeout","_chatstate_send_timeout","chat_state","EXTENDED_CHATSTATES","$next_msg","$old_prev_msg","is_synced","onTouchMessage","files_links","location_links","download","$plyr","no_select_message","expanded_fwd_message","quill","caret_position","participant_attrs","insertMention","img_information","images_details","$imgs","processClick","$prev_selected","$all_msgs","nextUntil","location_name","display_name","retrySendMessage","removeFileErrorMessage","pinned_message_panel","onClickPinnedMessage","onClickExpandedMessageLocation","expandFwdMessage","registerQuillEmbeddedsTags","Inline","import","Mention","static","paramValue","super","classList","blotName","optimize","QuillEmoji","domNode","item1","item2","t1","t2","mam_requests","deferred_mam_requests","openMention","identifier","registerMessageHandler","_msg_handler","runMAMRequests","parsePubSubNode","is_member_id","receivePubsubMessage","photo_id","member_node","b64_avatar","avatar_attrs","$mam","receiveHeadlineMessage","receiveErrorMessage","$stanza_received","$echo_msg","origin_msg_id","pending_message","$token_revoke","token_idx","participant_version","msg_item","active_right_screen","participant_msg_item","is_encrypted","$retracted_msg","retracted_msg_id","cacheRetractVersion","retracted_user_id","receiveStanzaId","GROUP_CHAT_INVITE_HTTP","GROUP_CHAT_INVITE","$forwarded","to_jid","to_bare_jid","to_resource","stanza_ids","$carbons","carbon_direction","forwarded_msgs","FORWARD","forwarded_msg","$forwarded_msg","$forwarded_message","$forwarded_delay","not_encrypted","add_group_chat","ACCOUNT_ITEM","setDefaultSettings","showPlaceholder","$global_wrap","default_global_value","$membership_wrap","default_membership_value","setCustomDomain","add_chat_account_item","updateGroupJid","lower","textarea_is_empty","fixJid","createGroupChat","chat_jid","addGroupChat","xmpp_server","group_chats_support","chats_panel","active_chat","onChatAdded","onChangedReadStatus","updateChatPosition","readAllMessages","onWindowResized","active_toolbar","hideChatsFeedback","_load_chats_timeout","previous_chat","replaceChatItem","pinned_chats","$chat_item","scrolled_top","updateScreenAllChats","group_chats_pinned","private_chats","private_chats_pinned","account_chats","account_chats_pinned","showArchiveChats","all_chats","all_chats_pinned","message_item","forward_panel","$cloned_item","is_match","has_matches_chats","has_matches_contacts","contact_list_item","forwardTo","setForwardedMessages","invitation_panel_view","registerClickEvents","selected_contacts","clearPanel","group_node","list_item","toggleContacts","selectAllGroup","addSelectedUsers","selected_users_count","_dfd_invitations","invitations_count","toast_text","sendInvite","addUser","itemIdx","sendInviteMessage","onInviteError","jid_to","hide_clone","is_visible","group_roster","selected_counter","saved_chat_head","_update_oneliner_interval","updateOneLiner","updatePlyrTitle","updatePlyrTime","updateJingleButton","tooltip","rand_idx","one_liner","deleteChat","rewrite_support","pinSavedChat","pinned_value","visible_view","playPausePlyr","stopPlyr","popupPlyr","poster","$title_elem","voip_status","openJingleMessage","chat_head","updateArchived","pinChat","onChangedBlocked","updateGroupChatHead","updateMenu","showContactDetails","showContactDetailsRight","showContactResources","showMembersDetails","callAttention","updateArchiveChatsList","no_iq","is_archived_status","sendJingleMessage","getActiveScreen","active_screen","inviteUsers","exportHistory","showFingerprints","startEncryptedChat","openEncryptedChat","openRegularChat","send_media","addMedia","resolved_file","metadata","location_popup","initMap","coordinates","placemark","Overlay","Placemark","contentColor","autoPan","anchor","autoPanAnimation","placemark_my_location","overlays","enableHighAccuracy","maximumAge","pos","crd","getView","setCenter","longitude","latitude","setZoom","button_geoposition","geolocation","getCurrentPosition","custom_element_position","geoposition","control","Control","addControl","getPlacemarkPositionControl","button_placemark_position","custom_element_placemark_position","placemark_position","custom_element_show_location_name","show_location_name","send_buttom","send_address_div","send_div","custom_element_send","sLayer","Vector","Style","Circle","radius","stroke","Stroke","Fill","addLayer","SearchNominatim","polygon","reverseGeocode","house_number","road","neighbourhood","allotments","village","city","final_text","getSource","geojson","GeoJSON","readFeature","dataProjection","featureProjection","getProjection","resolution","getResolutionForExtent","getGeometry","getExtent","getZoomForResolution","extent","getCenter","coordinate","getZoom","updateSize","sendLocation","closeLocationName","initializeScrollbar","destroyScrollbar","chat_bottom","mention_avatar_size","rich_textarea_wrap","bindings","enter","insertText","arrow_up","active_item","$prev_elem","arrow_down","$next_elem","arrow_left","arrow_right","modules","formats","scrollingContainer","edit_message","stopped_loading_link_reference","link_reference_exempted","currently_loaded_link_references","loading_link_reference","onChangedText","onBlockedUpdate","updateInfoInBottom","replyMessages","forwardMessages","copyMessages","deleteMessages","showEditPanel","pinMessage","resetSelectedMessages","$rich_textarea","rich_textarea","$rich_textarea_wrap","$placeholder","oncut","onCut","onloaded_sprites","all_sprites","window_onclick","$target_emoji","renderLastEmoticons","http_upload","messages_arr","focusOnInput","checkOwnFingerprints","is_scrolled_bottom","encryption_warning","checkContactFingerprints","is_contact_trusted","content_encryption_warning","onClickBottom","setOneLiner","disable","enable","moveCursorToEnd","root","send_on_enter","shiftKey","ctrlKey","displayMicrophone","displaySend","updateMarkupPanel","$ic_markup","updatePlaceholder","changeEncryption","current_height","bottom_height","scrolled_to_bottom","_timeout_textchange","updateOpenGraphReference","updateMentionsList","mention_text","mention_item","mention_all","onMentionButtonClick","getLength","setSelection","inputMention","$participant_item","lastRange","to_caret_text","mentions_at","matchAll","mentions_plus","at_position","plus_position","mention_position","deleteText","insertEmbed","showAccountSettings","edit_msg","setEditedMessage","mention_at_regexp","mention_plus_regexp","getLeaf","unsetForwardedMessages","removeLinkReferenceByUrl","removeFileSnippetById","clipboard_data","image_from_clipboard","getAsFile","arr_text","execCommand","difference","request_count","link_reference_request_timestamp","request_timestamp","removeAttachments","removeAllFileSnippets","removeAllLinkReferences","stopLoadingLinkReference","removeLinkReference","uid","attached_file","typeicon","removeFileSnippet","is_upload","showLocationPopup","showMediaPopup","stopWritingVoiceMessage","$bottom_panel","writeVoiceMessage","initAudio","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","constraints","channelCount","chunks","$mic","onSuccess","start_time","end_time","mediaRecorder","MediaRecorder","mic_hover","onstart","$timer_elem","$status_msg","$voice_visualizer","timerIdDot","onstop","audio_name","audio_type","ondataavailable","onError","caret_idx","savedRange","getFormat","formatText","cached_last_emoji","getLastEmoji","$last_emoticons","updateLastEmoji","emoji_item","innerText","content_concat","getContents","content_attrs","insert","mention_idx","ins","quote_start_idx","quote_end_idx","marker","markup_ref","start_length","delta","markup_reference","editMessage","setText","msg_author","image_preview","$img_html_preview","fwd_files","fwd_locations","createPreviewImage","onShowMarkupPanel","$clicked_icon","is_panel_opened","$selected_msgs","$input_panel","$message_actions","my_msg","$msgs","dataset","pushMessagesToClipboard","text_markups","original_body","forwarded_body","groupchat_ref","forward_ref","gc_length","decrypted_msg","cached_messages","putMessage","my_msgs","symmetric_deletion","copied_messages","fwd_msg_indicator","text_message","current_date","msg_sender","is_colored","updateHeight","current_bottom","chat_placeholder","last_emoji","cached_avatars","group_chat_members_lists","last_emoji_icons","muted_list","archived_list","group_chat_list","avatar_list","_get_msg_handler","handlers","h","omemo_enable_placeholder","onselectstart","metaKey","Chats","opened_chats","OpenedChats","closed_chats","ClosedChats","chats_view","ChatsView","ChatHeadContainer","chat_body","ChatBodyContainer","ChatBottomContainer","ChatPlaceholderView","add_group_chat_view","AddGroupChatView","searching","searching_wide","colorUpdated","toggleProperties","endDiscovering","isPropertiesVisible","discover","searchExistingGroupChats","getGroupchatService","onDiscoveringError","getGroupchatFeatures","getServerInfo","getChatsFromSever","$chat_item_html","existing_groupchat_item","searching_account_item","getChatProperties","request_iq","$iq_response","chat_properties","more_info_view","existing_groupchat_details_view","joinChat","getSearchingFields","iq_get","INDEX","parseSearchingFields","iq_result","$fields","XDATA","supported_fields","indexed_chats","iq_search","anywhere","onSearched","$chat","$property","property_name","property_value","discovering","DiscoveringView","onMessageUpdated","onMentionAdded","mentions_panel","active_mention","onMentionRemoved","updateMentionPosition","replaceMentionItem","$prev_el","$next_el","readAllMentions","contact_archive_id","previous_mention","updateContactName","contact_name","default_avatar","mentions_placeholder","Mentions","mentions_view","MentionsView","MentionsPlaceholderView","shift_pressed","shiftctrl_pressed","updateRosterLayout","is_wide","is_narrow","roster_width","panel_width","left_panel_width","right_panel_width","right_contact_panel_width","chat_bottom_panel_width","right_contact_panel_styles","right_contact_panel_saveable","panel_gap","right_gap","wide","placeholders","path_acc_settings_left","ViewPath","path_acc_settings_right","path_acc_vcard_edit","path_chat_head","path_chat_body","path_chat_bottom","path_group_invitation","path_enable_view","path_contact_details","path_contact_details_right","path_contact_details_right_encrypted","path_participant_messages","path_details_participants","discovering_main","details","details_content","omemo_item","KeyHelper","SignalProtocolAddress","SessionBuilder","SessionCipher","store","updateDevices","d","removeSession","getDevice","getDevicesNode","_pending_devices","_dfd_devices","cb","parseUserDevices","enc_promises","aes","deviceId","ciphertext","preKey","is_own_devices","renderOwnDevices","renderDevices","updateFingerprints","updateOwnFingerprint","getMyDevices","editLabel","saveLabel","onblur","onkeydown","publishDevice","devices_count","$container","f_count","generateFingerprint","fing","old_fingerprint","addRow","getBundleInfo","getBundle","pk","spk","getIdentityKeyPair","pubKey","padStart","trustDevice","is_session_initiated","ignoreDevice","trust","delete_button","edit_setting","fingerprint_item","deleteDevice","getIdentity","generateIdentity","getPreKeys","publishBundle","generateIdentityKeyPair","generateRegistrationId","identityKey","registrationId","cacheIdentity","privKey","generatePreKeys","preKeysPromises","generatePreKey","generateSignedPreKey","getSignedPreKey","keyPair","signature","keyId","prekeys","getAll","prekey","priv_pk","key_pair","storePreKey","getUsedPreKeys","storeSignedPreKey","own_used_prekeys","identity","signedPreKey","cacheSignedPreKey","converted_spk","closeSession","sendOptOut","_pending_bundle","_dfd_bundle","$bundle","$spk","$pk","getRandomPreKey","cipherText","plainText","sessionCipher","decryptPreKeyWhisperMessage","hasSession","getCachedSession","storeSession","decryptWhisperMessage","getPreKey","used_prekeys","getSession","getDeviceId","cached_pk","isTrusted","processPreKey","publicKey","preKeyBundle","sessions","onDeviceIdUpdated","onOmemoDestroyed","peers","generateDeviceId","onOwnDevicesUpdated","removePreKey","cacheSession","storeSessions","deleteOwnDevice","addDevice","_pending_own_devices","_dfd_own_devices","contact_fingerprints","dev_id","rand","peer","encryptedMessage","encryptedElement","myKeys","rid","kex","hasChanges","o1","o2","obj1","obj2","has_devices","device_ik","cached_msg","getMessage","getTrusted","decryption_retry","own_trusted","contact_trusted","parseEncrypted","$encrypted","$payload","$header","keyElement","$m","encryptedData","ownPreKey","exportedKey","toBase64","publish","pks","conn_omemo","configNode","spks","removed_pk","missing_keys","last_id","rec","createBundleNode","contact_messages","Direction","SENDING","RECEIVING","getLocalRegistrationId","Error","defaultValue","isTrustedIdentity","direction","util","loadIdentityKey","saveIdentity","fromString","existing","getName","loadPreKey","loadSignedPreKey","removeSignedPreKey","loadSession","record","getAllSessions","removeAllSessions","omemo_enable","onOmemoChange","enableOmemo","closeOmemoPlaceholder","views","discovery","ui","g","webpackContext","webpackContextResolve","__webpack_require__","o","exports","webpackAsyncContext","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","amdO","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","getPrototypeOf","mode","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","miniCssF","globalThis","hmd","l","script","needAttach","scripts","s","charset","nc","onScriptComplete","doneFns","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}